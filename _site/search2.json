[
  
    {
      "title"    : "Python OpenCV 강좌 : 제 21강 - 윤곽선 검출",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-21/",
      "date"     : "2019-02-09 00:00:00 +0900",
  "content"   : "<h3 id=\"윤곽선-contour\">윤곽선 (Contour)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch21/1.png\"><img src=\"/assets/images/Python/opencv/ch21/1.png\" alt=\"1\" /></a>\n영상이나 이미지의 <code class=\"highlighter-rouge\">윤곽선(컨투어)을 검출</code>하기 위해 사용합니다. 영상이나 이미지에서 <code class=\"highlighter-rouge\">외곽과 내곽</code>의 <strong>윤곽선(컨투어)을 검출</strong> 할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/contours.png\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n\n<span class=\"n\">gray</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_RGB2GRAY</span><span class=\"p\">)</span>\n<span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">binary</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">threshold</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"mi\">127</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">THRESH_BINARY</span><span class=\"p\">)</span>\n<span class=\"n\">binary</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">bitwise_not</span><span class=\"p\">(</span><span class=\"n\">binary</span><span class=\"p\">)</span>\n\n<span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">hierachy</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">findContours</span><span class=\"p\">(</span><span class=\"n\">binary</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">RETR_CCOMP</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CHAIN_APPROX_NONE</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">contours</span><span class=\"p\">)):</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">drawContours</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">contours</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">putText</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">),</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">contours</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">FONT_HERSHEY_COMPLEX</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">hierachy</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">])</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"src\"</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">gray</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_RGB2GRAY</span><span class=\"p\">)</span>\n<span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">binary</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">threshold</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"mi\">127</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">THRESH_BINARY</span><span class=\"p\">)</span>\n<span class=\"n\">binary</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">bitwise_not</span><span class=\"p\">(</span><span class=\"n\">binary</span><span class=\"p\">)</span></code></pre></figure>\n\n<p>윤곽선(컨투어)를 검출하는 주된 요소는 <code class=\"highlighter-rouge\">하얀색</code>의 객체를 검출합니다. 그러므로 배경은 <code class=\"highlighter-rouge\">검은색</code>이며 검출하려는 물체는 <code class=\"highlighter-rouge\">하얀색</code>의 성질을 띄게끔 변형합니다. <code class=\"highlighter-rouge\">이진화</code> 처리 후, <code class=\"highlighter-rouge\">반전</code>시켜 검출하려는 물체를 <code class=\"highlighter-rouge\">하얀색</code>의 성질을 띄도록 변환합니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">hierachy</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">findContours</span><span class=\"p\">(</span><span class=\"n\">binary</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">RETR_CCOMP</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CHAIN_APPROX_NONE</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.findContours()</code>를 이용하여 <code class=\"highlighter-rouge\">이진화</code> 이미지에서 윤곽선(컨투어)를 검색합니다. <code class=\"highlighter-rouge\">cv2.findContours(이진화 이미지, 검색 방법, 근사화 방법)</code>을 의미합니다.</p>\n\n<p>반환 값으로 <strong>검출 이미지</strong>, <strong>윤곽선</strong>, <strong>계층 구조</strong>를 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">검출 이미지</code>는 검출을 시도한 <code class=\"highlighter-rouge\">binary</code>와 동일한 이미지가 담겨있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">윤곽선</code>은 Numpy 구조의 배열로 검출된 <code class=\"highlighter-rouge\">윤곽선의 지점</code>들이 담겨있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">계층 구조</code>는 윤곽선의 계층 구조를 의미합니다. 각 윤곽선에 해당하는 <code class=\"highlighter-rouge\">속성 정보</code>들이 담겨있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">contours</span><span class=\"p\">)):</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">drawContours</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">contours</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">putText</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">),</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">contours</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">FONT_HERSHEY_COMPLEX</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">hierachy</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">])</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"src\"</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><strong>반복문</strong>을 사용하여 검출된 윤곽선을 그리며 해당 윤곽선의 <strong>계층 구조</strong>를 표시합니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.drawContours()</code>을 이용하여 검출된 윤곽선을 그립니다. <code class=\"highlighter-rouge\">cv2.drawContours(이미지, [윤곽선], 윤곽선 인덱스, (B, G, R), 두께, 선형 타입)</code>을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">윤곽선</code>은 검출된 윤곽선들이 저장된 Numpy 배열입니다.</p>\n\n<p><code class=\"highlighter-rouge\">윤곽선 인덱스</code>는 검출된 윤곽선 배열에서 몇 번째 인덱스의 윤곽선을 그릴지를 의미합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>Tip : 윤곽선 인덱스를 0으로 사용할 경우 <code class=\"highlighter-rouge\">0 번째</code> 인덱스의 윤곽선을 그리게 됩니다. 하지만, 윤곽선 인수를 대괄호로 다시 묶을 경우, 0 번째 인덱스가 최댓값인 배열로 변경됩니다.</p>\n  </li>\n  <li>\n    <p>Tip : 동일한 방식으로 <code class=\"highlighter-rouge\">[윤곽선], 0</code>과 <code class=\"highlighter-rouge\">윤곽선, -1</code>은 동일한 의미를 갖습니다. (-1은 윤곽선 배열 모두를 의미)</p>\n  </li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"additional-information\">Additional Information</h3>\n<hr />\n\n<h4 id=\"검색-방법\">검색 방법</h4>\n\n<p><code class=\"highlighter-rouge\">cv2.RETR_EXTERNAL</code> : 외곽 윤곽선만 검출하며, 계층 구조를 구성하지 않습니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.RETR_LIST</code> : 모든 윤곽선을 검출하며, 계층 구조를 구성하지 않습니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.RETR_CCOMP</code> : 모든 윤곽선을 검출하며, 계층 구조는 2단계로 구성합니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.RETR_TREE</code> : 모든 윤곽선을 검출하며, 계층 구조를 모두 형성합니다. (Tree 구조)</p>\n\n<p><br /></p>\n\n<h4 id=\"근사화-방법\">근사화 방법</h4>\n\n<p><code class=\"highlighter-rouge\">cv2.CHAIN_APPROX_NONE</code> : 윤곽점들의 모든 점을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.CHAIN_APPROX_SIMPLE</code> :  윤곽점들 단순화 수평, 수직 및 대각선 요소를 압축하고 끝점만 남겨 둡니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.CHAIN_APPROX_TC89_L1</code> : 프리먼 체인 코드에서의 윤곽선으로 적용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.CHAIN_APPROX_TC89_KCOS</code> : 프리먼 체인 코드에서의 윤곽선으로 적용합니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"계층-구조\">계층 구조</h4>\n\n<p>계층 구조는 윤곽선을 <code class=\"highlighter-rouge\">포함 관계</code>의 여부를 나타냅니다. 즉 <strong>외곽 윤곽선</strong>, <strong>내곽 윤곽선</strong>, <strong>같은 계층 구조</strong>를 구별할 수 있습니다. 이 정보는 <code class=\"highlighter-rouge\">hierachy</code>에 담겨있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">hierachy</code>를 출력할 경우 다음과 같은 결과를 반환합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"p\">[[[</span> <span class=\"mi\">2</span> <span class=\"o\">-</span><span class=\"mi\">1</span>  <span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n  <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span>  <span class=\"mi\">0</span><span class=\"p\">]</span>\n  <span class=\"p\">[</span> <span class=\"mi\">4</span>  <span class=\"mi\">0</span>  <span class=\"mi\">3</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n  <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span>  <span class=\"mi\">2</span><span class=\"p\">]</span>\n  <span class=\"p\">[</span> <span class=\"mi\">6</span>  <span class=\"mi\">2</span>  <span class=\"mi\">5</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n  <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span>  <span class=\"mi\">4</span><span class=\"p\">]</span>\n  <span class=\"p\">[</span> <span class=\"mi\">8</span>  <span class=\"mi\">4</span>  <span class=\"mi\">7</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n  <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span>  <span class=\"mi\">6</span><span class=\"p\">]</span>\n  <span class=\"p\">[</span> <span class=\"mi\">9</span>  <span class=\"mi\">6</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n  <span class=\"p\">[</span><span class=\"mi\">10</span>  <span class=\"mi\">8</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n  <span class=\"p\">[</span><span class=\"mi\">11</span>  <span class=\"mi\">9</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n  <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"mi\">10</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]]]</span></code></pre></figure>\n\n<p>첫 번째 계층 구조는 <code class=\"highlighter-rouge\">[ 2 -1  1 -1]</code>의 값을 갖습니다. <code class=\"highlighter-rouge\">[다음 윤곽선, 이전 윤곽선, 내곽 윤곽선, 외곽 윤곽선]</code>에 대한 인덱스 정보를 포함하고 있습니다.</p>\n\n<p>인덱스 0의 윤곽선의 <code class=\"highlighter-rouge\">다음 윤곽선</code>은 <strong>인덱스 2의 윤곽선</strong>을 의미하며 <code class=\"highlighter-rouge\">이전 윤곽선</code>은 <strong>존재하지 않다</strong>는 것을 의미합니다.</p>\n\n<p><strong>내곽 윤곽선</strong>은 인덱스 1에 해당하는 윤곽선을 <strong>자식 윤곽선</strong>으로 두고 있다는 의미입니다. 즉, 인덱스 0 윤곽선 내부에 <code class=\"highlighter-rouge\">인덱스 1의 윤곽선이 포함</code>되어 있습니다.</p>\n\n<p><strong>외곽 윤곽선</strong>은 -1의 값을 갖고 있으므로 <code class=\"highlighter-rouge\">외곽 윤곽선</code>은 <strong>존재하지 않습니다.</strong></p>\n\n<p>다음 검출 결과를 통하여 쉽게 이해할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/opencv/ch21/2.png\"><img src=\"/assets/images/Python/opencv/ch21/2.png\" alt=\"2\" /></a></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"mi\">0</span> <span class=\"p\">[</span> <span class=\"mi\">2</span> <span class=\"o\">-</span><span class=\"mi\">1</span>  <span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"mi\">1</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span>  <span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"mi\">2</span> <span class=\"p\">[</span> <span class=\"mi\">4</span>  <span class=\"mi\">0</span>  <span class=\"mi\">3</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">print(i, hierachy[0][i])</code>을 통하여 3개의 윤곽선을 출력한 결과입니다.</p>\n\n<p>다음 윤곽선과 이전 윤곽선의 정보가 <code class=\"highlighter-rouge\">-1</code>의 값이 아니라면 서로 동등한 계층의 윤곽선입니다.</p>\n\n<p><strong>0번 인덱스의 윤곽선</strong>과 <code class=\"highlighter-rouge\">동등한 계층</code>에 있는 윤곽선은 <strong>2번 인덱스의 윤곽선</strong>입니다.</p>\n\n<p><strong>0번 인덱스의 윤곽선</strong>은 <strong>1번 인덱스의 윤곽선</strong>을 <code class=\"highlighter-rouge\">내부 윤곽선</code>으로 갖고 있습니다.</p>\n\n<p><strong>1번 인덱스의 윤곽선</strong>은 <code class=\"highlighter-rouge\">동등한 계층</code>에 있는 윤곽선이 없으므로 <code class=\"highlighter-rouge\">다음 윤곽선</code>과 <code class=\"highlighter-rouge\">이전 윤곽선</code>의 값이 <code class=\"highlighter-rouge\">-1</code>입니다.</p>\n\n<p><strong>1번 인덱스의 윤곽선</strong>은 내곽 윤곽선이 없으며, 외곽 윤곽선만 존재하여 <strong>0번 인덱스의 윤곽선</strong>을 외곽 윤곽선으로 반환합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>Tip : 해당 예제는 <code class=\"highlighter-rouge\">cv2.RETR_CCOMP</code>로 <code class=\"highlighter-rouge\">2 단계 계층 구조</code>로만 표시합니다.</p>\n  </li>\n  <li>\n    <p>Tip : <code class=\"highlighter-rouge\">계층 구조</code>를 사용하여 <strong>내곽, 외곽 윤곽선을 구분</strong>할 수 있습니다.</p>\n  </li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch21/3.png\"><img src=\"/assets/images/Python/opencv/ch21/3.png\" alt=\"3\" /></a></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"mi\">0</span> <span class=\"p\">[</span> <span class=\"mi\">2</span> <span class=\"o\">-</span><span class=\"mi\">1</span>  <span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"mi\">1</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span>  <span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"mi\">2</span> <span class=\"p\">[</span> <span class=\"mi\">4</span>  <span class=\"mi\">0</span>  <span class=\"mi\">3</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"mi\">3</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span>  <span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"mi\">4</span> <span class=\"p\">[</span> <span class=\"mi\">6</span>  <span class=\"mi\">2</span>  <span class=\"mi\">5</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"mi\">5</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span>  <span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"mi\">6</span> <span class=\"p\">[</span> <span class=\"mi\">8</span>  <span class=\"mi\">4</span>  <span class=\"mi\">7</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"mi\">7</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span>  <span class=\"mi\">6</span><span class=\"p\">]</span>\n<span class=\"mi\">8</span> <span class=\"p\">[</span> <span class=\"mi\">9</span>  <span class=\"mi\">6</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"mi\">9</span> <span class=\"p\">[</span><span class=\"mi\">10</span>  <span class=\"mi\">8</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"mi\">10</span> <span class=\"p\">[</span><span class=\"mi\">11</span>  <span class=\"mi\">9</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"mi\">11</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"mi\">10</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span></code></pre></figure>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 38강 - 추상",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-38/",
      "date"     : "2019-01-06 00:00:00 +0900",
  "content"   : "<h3 id=\"추상-abstract\">추상 (Abstract)</h3>\n<hr />\n<p>추상은 여러 <strong>파생 클래스에서 상속 받는 객체들을 표준화</strong>합니다.<code class=\"highlighter-rouge\"> 추상 클래스</code>는 <strong>선언만 존재하며 내용은 구현하지 않습니다.</strong> 스스로 객체를 생성할 수 없습니다. 상속 받는 경우, <code class=\"highlighter-rouge\">추상 메소드</code>를 반드시 구현해야합니다. 파생 클래스에서 기본적으로 공유할 수 있는 공통적인 정의를 생성하여 <strong>표준화</strong>합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span> <span class=\"k\">abstract</span> <span class=\"k\">class</span> <span class=\"nc\">Shape</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">;</span>\n    <span class=\"k\">public</span> <span class=\"k\">abstract</span> <span class=\"kt\">double</span> <span class=\"nf\">Area</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"k\">public</span> <span class=\"k\">class</span> <span class=\"nc\">Rect</span> <span class=\"p\">:</span> <span class=\"n\">Shape</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">private</span> <span class=\"kt\">int</span> <span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">Height</span><span class=\"p\">;</span>\n\n    <span class=\"k\">public</span> <span class=\"nf\">Rect</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">height</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">x</span><span class=\"p\">;</span>\n        <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"n\">y</span><span class=\"p\">;</span>\n        <span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"n\">width</span><span class=\"p\">;</span>\n        <span class=\"n\">Height</span> <span class=\"p\">=</span> <span class=\"n\">height</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"k\">override</span> <span class=\"kt\">double</span> <span class=\"nf\">Area</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"kt\">double</span> <span class=\"n\">area</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"n\">Height</span><span class=\"p\">)</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">;</span>\n        <span class=\"k\">return</span> <span class=\"n\">area</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">public</span> <span class=\"k\">class</span> <span class=\"nc\">Circle</span> <span class=\"p\">:</span> <span class=\"n\">Shape</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">private</span> <span class=\"kt\">int</span> <span class=\"n\">Radius</span><span class=\"p\">;</span>\n\n    <span class=\"k\">public</span> <span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">radius</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">x</span><span class=\"p\">;</span>\n        <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"n\">y</span><span class=\"p\">;</span>\n        <span class=\"n\">Radius</span> <span class=\"p\">=</span> <span class=\"n\">radius</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"k\">override</span> <span class=\"kt\">double</span> <span class=\"nf\">Area</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"kt\">double</span> <span class=\"n\">area</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"n\">Radius</span> <span class=\"p\">*</span> <span class=\"n\">Radius</span><span class=\"p\">)</span> <span class=\"p\">*</span> <span class=\"m\">3.14</span><span class=\"p\">;</span>\n        <span class=\"k\">return</span> <span class=\"n\">area</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<p><strong>추상 클래스</strong>는 <code class=\"highlighter-rouge\">abstract</code> 키워드를 사용하여 정의합니다.</p>\n\n<p><strong>추상 메소드</strong>는 선언만 존재하며 <code class=\"highlighter-rouge\">중괄호 ({})</code>를 사용하여 메소드를 구현하지 않습니다</p>\n\n<p><strong>파생 클래스</strong>는 <strong>추상 메소드</strong>를 반드시 구현해야하며, <code class=\"highlighter-rouge\">override</code> 키워드를 이용해 메소드를 구현합니다</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Rect</span> <span class=\"n\">rect</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Rect</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"nf\">Area</span><span class=\"p\">());</span>\n\n<span class=\"n\">Circle</span> <span class=\"n\">circle</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">circle</span><span class=\"p\">.</span><span class=\"nf\">Area</span><span class=\"p\">());</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Rect</code>와 <code class=\"highlighter-rouge\">Circle</code> 클래스의 <code class=\"highlighter-rouge\">Area</code> 메소드를 실행할 경우, <strong>면적</strong>이 계산되어 출력됩니다.</p>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 37강 - 다형성",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-37/",
      "date"     : "2019-01-01 00:00:00 +0900",
  "content"   : "<h3 id=\"다형성-polymorphism\">다형성 (Polymorphism)</h3>\n<hr />\n<p>다형성은 <strong>부모 클래스</strong>의 <code class=\"highlighter-rouge\">멤버</code>를 재정의하거나 <code class=\"highlighter-rouge\">메소드</code>를 재정의하지 않고 상속할 때 사용합니다. <strong>자식 클래스</strong>에서 재정의 하려면 <strong>부모 클래스</strong>에서 <code class=\"highlighter-rouge\">virtual</code> 또는 <code class=\"highlighter-rouge\">abstract</code>로 선언된 경우에만 재정의할 수 있습니다. <strong>자식 클래스</strong>에서는 <code class=\"highlighter-rouge\">override</code> 키워드를 통하여 <code class=\"highlighter-rouge\">오버라이드 (Override)</code>를 할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Shape</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n    <span class=\"k\">protected</span> <span class=\"kt\">int</span> <span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">Height</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n\n    <span class=\"k\">public</span> <span class=\"nf\">Shape</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">x</span><span class=\"p\">;</span>\n        <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"n\">y</span><span class=\"p\">;</span>\n        <span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"n\">x</span> <span class=\"p\">+</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n        <span class=\"n\">Height</span> <span class=\"p\">=</span> <span class=\"n\">y</span> <span class=\"p\">+</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"k\">virtual</span> <span class=\"kt\">int</span> <span class=\"nf\">Area</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">Width</span> <span class=\"p\">*</span> <span class=\"n\">Height</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Rect</span> <span class=\"p\">:</span> <span class=\"n\">Shape</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"nf\">Rect</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"k\">base</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Height</span> <span class=\"p\">=</span> <span class=\"n\">y</span> <span class=\"p\">+</span> <span class=\"m\">50</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"k\">override</span> <span class=\"kt\">string</span> <span class=\"nf\">ToString</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">String</span><span class=\"p\">.</span><span class=\"nf\">Format</span><span class=\"p\">(</span><span class=\"s\">\"{0}, {1}, {2}, {3}\"</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">Height</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Circle</span> <span class=\"p\">:</span> <span class=\"n\">Shape</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">private</span> <span class=\"kt\">int</span> <span class=\"n\">Radius</span><span class=\"p\">;</span>\n\n    <span class=\"k\">public</span> <span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"k\">base</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Radius</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"p\">+</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"p\">/</span> <span class=\"m\">4</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"k\">override</span> <span class=\"kt\">int</span> <span class=\"nf\">Area</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)(</span><span class=\"n\">Radius</span> <span class=\"p\">*</span> <span class=\"n\">Radius</span> <span class=\"p\">*</span> <span class=\"m\">3.14</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"k\">override</span> <span class=\"kt\">string</span> <span class=\"nf\">ToString</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">String</span><span class=\"p\">.</span><span class=\"nf\">Format</span><span class=\"p\">(</span><span class=\"s\">\"{0}, {1}, {2}\"</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">Radius</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<p><strong>부모 클래스</strong>에서 생성된 <code class=\"highlighter-rouge\">Area</code> 메소드를 <code class=\"highlighter-rouge\">virtual</code>로 선언하여 <strong>자식 클래스</strong>에서 수정이 가능하게끔 선언합니다.</p>\n\n<p><strong>자식 클래스</strong>인 <code class=\"highlighter-rouge\">Rect</code>는 <code class=\"highlighter-rouge\">ToString()</code> 메소드를 상속받아 변형합니다. <code class=\"highlighter-rouge\">ToString()</code> 메소드는 기본적으로 지원되는 메소드이므로, 상속할 수 있습니다.</p>\n\n<p><strong>자식 클래스</strong>인 <code class=\"highlighter-rouge\">Circle</code>은 <code class=\"highlighter-rouge\">Area</code> 메소드를 상속받아 반환 값을 변형합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Rect</span> <span class=\"n\">rect</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Rect</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"nf\">Area</span><span class=\"p\">());</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">());</span>\n\n<span class=\"n\">Circle</span> <span class=\"n\">circle</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">circle</span><span class=\"p\">.</span><span class=\"nf\">Area</span><span class=\"p\">());</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">circle</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">());</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Rect</code>와 <code class=\"highlighter-rouge\">Circle</code> 클래스의 <code class=\"highlighter-rouge\">Area</code> 메소드를 실행할 경우, <strong>면적</strong>이 계산되어 출력됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">Rect</code>와 <code class=\"highlighter-rouge\">Circle</code> 클래스의 <code class=\"highlighter-rouge\">ToString</code> 메소드를 실행할 경우, <strong>클래스의 멤버</strong>들이 출력됩니다.</p>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 36강 - 상속",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-36/",
      "date"     : "2018-12-30 00:00:00 +0900",
  "content"   : "<h3 id=\"상속-inheritance\">상속 (Inheritance)</h3>\n<hr />\n<p>상속은 <code class=\"highlighter-rouge\">부모 클래스 (기본 클래스)</code>의 데이터나 동작을 <strong>다시 사용하거나 확장, 재정의</strong>하여 <code class=\"highlighter-rouge\">자식 클래스 (파생 클래스)</code>에서 새롭게 정의하거나 활용할 수 있습니다. <code class=\"highlighter-rouge\">정적 생성자</code>, <code class=\"highlighter-rouge\">인스턴스 생성자</code>, <code class=\"highlighter-rouge\">종료자</code>는 상속되지 않습니다. <code class=\"highlighter-rouge\">public</code>, <code class=\"highlighter-rouge\">protected</code>, <code class=\"highlighter-rouge\">internal</code>으로 선언된 멤버만 상속할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Shape</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n    <span class=\"k\">protected</span> <span class=\"kt\">int</span> <span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">Height</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n\n    <span class=\"k\">public</span> <span class=\"nf\">Shape</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"Shape 클래스\"</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Inheritance</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"상속\"</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Rect</span> <span class=\"p\">:</span> <span class=\"n\">Shape</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"nf\">Rect</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">x</span><span class=\"p\">;</span>\n        <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"n\">y</span><span class=\"p\">;</span>\n        <span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"n\">x</span> <span class=\"p\">+</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n        <span class=\"n\">Height</span> <span class=\"p\">=</span> <span class=\"n\">x</span> <span class=\"p\">+</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"nf\">Information</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">base</span><span class=\"p\">.</span><span class=\"nf\">Inheritance</span><span class=\"p\">();</span>\n        <span class=\"k\">return</span> <span class=\"n\">String</span><span class=\"p\">.</span><span class=\"nf\">Format</span><span class=\"p\">(</span><span class=\"s\">\"{0}, {1}, {2}, {3}\"</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">Height</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Circle</span> <span class=\"p\">:</span> <span class=\"n\">Shape</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">private</span> <span class=\"kt\">int</span> <span class=\"n\">Radius</span><span class=\"p\">;</span>\n\n    <span class=\"k\">public</span> <span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">x</span><span class=\"p\">;</span>\n        <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"n\">y</span><span class=\"p\">;</span>\n        <span class=\"n\">Radius</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"p\">+</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"p\">/</span> <span class=\"m\">4</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"nf\">Information</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">base</span><span class=\"p\">.</span><span class=\"nf\">Inheritance</span><span class=\"p\">();</span>\n        <span class=\"k\">return</span> <span class=\"n\">String</span><span class=\"p\">.</span><span class=\"nf\">Format</span><span class=\"p\">(</span><span class=\"s\">\"{0}, {1}, {2}, {3}, {4}\"</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">Radius</span><span class=\"p\">,</span> <span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">Height</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<p><strong>부모 클래스</strong>인 <code class=\"highlighter-rouge\">Shape</code>에서 필드인 <code class=\"highlighter-rouge\">X</code>, <code class=\"highlighter-rouge\">Y</code>, <code class=\"highlighter-rouge\">Width</code>, <code class=\"highlighter-rouge\">Height</code>를 상속할 수 있습니다.</p>\n\n<p><strong>자식 클래스</strong>인 <code class=\"highlighter-rouge\">Rect</code>는 <code class=\"highlighter-rouge\">콜론 (:)</code>을 통하여 <code class=\"highlighter-rouge\">Shape</code>를 상속받습니다. 부모 클래스에서 사용된 <code class=\"highlighter-rouge\">X</code>, <code class=\"highlighter-rouge\">Y</code>, <code class=\"highlighter-rouge\">Width</code>, <code class=\"highlighter-rouge\">Height</code>를 상속받습니다.</p>\n\n<p><strong>자식 클래스</strong>인 <code class=\"highlighter-rouge\">Circle</code>도 <code class=\"highlighter-rouge\">콜론 (:)</code>을 통하여 <code class=\"highlighter-rouge\">Shape</code>를 상속받습니다. 부모 클래스에서 선언된 필드를 모두 사용하지 않아도 되며, 추가적인 필드인 <code class=\"highlighter-rouge\">Radius</code>를 생성하여 사용할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">base</code> 키워드를 사용하여 <strong>자식 클래스</strong>에서 <strong>부모 클래스</strong>의 메소드에 접근하여 호출 할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Rect</span> <span class=\"n\">rect</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Rect</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"nf\">Information</span><span class=\"p\">());</span>\n<span class=\"n\">Circle</span> <span class=\"n\">circle</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">circle</span><span class=\"p\">.</span><span class=\"nf\">Information</span><span class=\"p\">());</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Rect</code>와 <code class=\"highlighter-rouge\">Circle</code> 클래스의 <code class=\"highlighter-rouge\">Information</code> 메소드를 실행할 경우, 부모 클래스의 <code class=\"highlighter-rouge\">Console.WriteLine(\"Shape 클래스\");</code>도 같이 호출되어 실행됩니다.</p>\n\n<p><strong>생성자</strong>는 상속이 되지 않지만 <code class=\"highlighter-rouge\">new</code> 키워드를 사용하여 객체를 생성 시 부모 클래스의 <strong>생성자가 자동으로 호출됩니다.</strong></p>\n\n<p><br /></p>\n\n<h3 id=\"생성자-상속\">생성자 상속</h3>\n<hr />\n<p>상속은 <code class=\"highlighter-rouge\">생성자</code>도 상속하여 사용할 수 있습니다. <strong>부모 클래스</strong>의 메소드를 접근할 때 사용하는 <code class=\"highlighter-rouge\">base</code> 키워드를 이용하여 상속할 수 있습니다. 생성자를 상속 받아 <code class=\"highlighter-rouge\">필드</code>를 추가적으로 할당할 수 있습니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Shape</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n    <span class=\"k\">protected</span> <span class=\"kt\">int</span> <span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">Height</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n\n    <span class=\"k\">public</span> <span class=\"nf\">Shape</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">x</span><span class=\"p\">;</span>\n        <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"n\">y</span><span class=\"p\">;</span>\n        <span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"n\">x</span> <span class=\"p\">+</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n        <span class=\"n\">Height</span> <span class=\"p\">=</span> <span class=\"n\">y</span> <span class=\"p\">+</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Rect</span> <span class=\"p\">:</span> <span class=\"n\">Shape</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"nf\">Rect</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"k\">base</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"nf\">Information</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">String</span><span class=\"p\">.</span><span class=\"nf\">Format</span><span class=\"p\">(</span><span class=\"s\">\"{0}, {1}, {2}, {3}\"</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">Height</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Circle</span> <span class=\"p\">:</span> <span class=\"n\">Shape</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">private</span> <span class=\"kt\">int</span> <span class=\"n\">Radius</span><span class=\"p\">;</span>\n\n    <span class=\"k\">public</span> <span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"k\">base</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">x</span> <span class=\"p\">+</span> <span class=\"m\">50</span><span class=\"p\">;</span>\n        <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"n\">y</span> <span class=\"p\">+</span> <span class=\"m\">50</span><span class=\"p\">;</span>\n        <span class=\"n\">Radius</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"p\">+</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"p\">/</span> <span class=\"m\">4</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"nf\">Information</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">String</span><span class=\"p\">.</span><span class=\"nf\">Format</span><span class=\"p\">(</span><span class=\"s\">\"{0}, {1}, {2}, {3}, {4}\"</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">Radius</span><span class=\"p\">,</span> <span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">Height</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><strong>부모 클래스</strong>인 <code class=\"highlighter-rouge\">Shape</code>에서 필드인 <code class=\"highlighter-rouge\">X</code>, <code class=\"highlighter-rouge\">Y</code>, <code class=\"highlighter-rouge\">Width</code>, <code class=\"highlighter-rouge\">Height</code>를 상속할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">base(x, y) { }</code> 키워드를 사용하여 상속하며, 생성자를 작성하지 않더라도 <strong>동일한 기능을 하는 생성자</strong>가 생성됩니다.</p>\n\n<p><strong>자식 클래스</strong>인 <code class=\"highlighter-rouge\">Rect</code>는 <strong>부모 클래스</strong>와 동일한 생성자를 상속받습니다.</p>\n\n<p><strong>자식 클래스</strong>인 <code class=\"highlighter-rouge\">Circle</code>은 <code class=\"highlighter-rouge\">X</code>, <code class=\"highlighter-rouge\">Y</code>, <code class=\"highlighter-rouge\">Raidus</code>를 새로 할당하며, <code class=\"highlighter-rouge\">Width</code>와 <code class=\"highlighter-rouge\">Height</code>는 상속받습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Rect</span> <span class=\"n\">rect</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Rect</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"nf\">Information</span><span class=\"p\">());</span>\n\n<span class=\"n\">Circle</span> <span class=\"n\">circle</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">circle</span><span class=\"p\">.</span><span class=\"nf\">Information</span><span class=\"p\">());</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Rect</code>와 <code class=\"highlighter-rouge\">Circle</code> 클래스의 <code class=\"highlighter-rouge\">Information</code> 메소드를 실행할 경우, <code class=\"highlighter-rouge\">rect</code>는 <code class=\"highlighter-rouge\">X</code>, <code class=\"highlighter-rouge\">Y</code>, <code class=\"highlighter-rouge\">Width</code>, <code class=\"highlighter-rouge\">Height</code>를 출력하며, <code class=\"highlighter-rouge\">circle</code>은 <code class=\"highlighter-rouge\">X</code>, <code class=\"highlighter-rouge\">Y</code>, <code class=\"highlighter-rouge\">Radius</code>, <code class=\"highlighter-rouge\">Width</code>, <code class=\"highlighter-rouge\">Height</code>을 출력합니다.</p>\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 35강 - 중첩 생성자",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-35/",
      "date"     : "2018-12-30 00:00:00 +0900",
  "content"   : "<h3 id=\"중첩-생성자-overloaded-constructor\">중첩 생성자 (Overloaded Constructor)</h3>\n<hr />\n<p>클래스에서 <strong>new</strong> 키워드를 사용하여 개체를 만들 때, 인스턴스 멤버 변수를 <strong>생성하고 초기화</strong> 하는데 사용합니다. 중첩 생성자는 생성자를 <strong>오버로드 (Overload)</strong> 시켜 <strong>다양한 인스턴스 멤버 변수</strong>에 대해 <strong>대응</strong>할 수 있습니다. 클래스가 생성될 때 마다 인수에 맞는 <code class=\"highlighter-rouge\">인스턴스 생성자</code>를 호출하여 해당 인수를 <strong>필드의 값으로 초기화</strong>합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Position</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">private</span> <span class=\"kt\">int</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n\n    <span class=\"k\">public</span> <span class=\"nf\">Position</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">x</span><span class=\"p\">;</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"n\">y</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"nf\">Position</span><span class=\"p\">(</span><span class=\"kt\">double</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">double</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">x</span><span class=\"p\">;</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">y</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"nf\">Location</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"s\">$\"(</span><span class=\"p\">{</span><span class=\"n\">X</span><span class=\"p\">}</span><span class=\"s\">, </span><span class=\"p\">{</span><span class=\"n\">Y</span><span class=\"p\">}</span><span class=\"s\">)\"</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<p>이름이 중복되는 <code class=\"highlighter-rouge\">Position</code> 생성자를 정의하여 서로 다른 매개 변수를 <strong>인수</strong>로 받아 들어오는 형태에 따라 맞는 생성자로 진행하게 됩니다. 생성자가 2 개 이상이여도 <strong>하나의 생성자만 호출</strong>합니다.</p>\n\n<p><strong>매개 변수의 개수는 일치될 필요가 없으며, 서로 다른 데이터 형식을 사용할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Position</span> <span class=\"n\">position1</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Position</span><span class=\"p\">(</span><span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">position1</span><span class=\"p\">.</span><span class=\"nf\">Location</span><span class=\"p\">());</span>\n\n<span class=\"n\">Position</span> <span class=\"n\">position2</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Position</span><span class=\"p\">(</span><span class=\"m\">3.5</span><span class=\"p\">,</span> <span class=\"m\">2.0</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">position2</span><span class=\"p\">.</span><span class=\"nf\">Location</span><span class=\"p\">());</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">int</code> 형식의 값을 사용할 경우, 첫 번째 생성자로 사용됩니다.\n<code class=\"highlighter-rouge\">double</code> 형식의 값을 사용할 경우, 두 번째 생성자로 사용됩니다.</p>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 34강 - 정적 생성자",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-34/",
      "date"     : "2018-12-30 00:00:00 +0900",
  "content"   : "<h3 id=\"정적-생성자-static-constructor\">정적 생성자 (Static Constructor)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">정적 데이터</code>를 초기화하거나 한 번만 수행해야 하는 특정 작업을 수행할 때 사용합니다. <code class=\"highlighter-rouge\">정적 멤버</code>가 참조되기 전에 <strong>자동으로 호출</strong>됩니다. 정적 생성자는 직접 호출할 수 없으며, 실행되는 시기를 조절할 수 없습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Date</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">static</span> <span class=\"k\">readonly</span> <span class=\"n\">DateTime</span> <span class=\"n\">startTime</span><span class=\"p\">;</span>\n\n    <span class=\"k\">static</span> <span class=\"nf\">Date</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">startTime</span> <span class=\"p\">=</span> <span class=\"n\">DateTime</span><span class=\"p\">.</span><span class=\"n\">Now</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"nf\">RunTime</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"s\">$\"</span><span class=\"p\">{</span> <span class=\"n\">DateTime</span><span class=\"p\">.</span><span class=\"n\">Now</span> <span class=\"p\">-</span> <span class=\"n\">startTime</span><span class=\"p\">}</span><span class=\"s\">\"</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">static readonly</code> 형태의 <code class=\"highlighter-rouge\">startTime</code> 필드를 생성하고 <strong>정적 생성자</strong>를 통하여 현재 시간으로 값을 <code class=\"highlighter-rouge\">초기화</code>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">RunTime</code> 메소드를 생성하여 동일하게 <code class=\"highlighter-rouge\">현재 시간 - 현재 시간</code>으로 수식을 구성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Date</span> <span class=\"n\">date</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Date</span><span class=\"p\">();</span>\n<span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Threading</span><span class=\"p\">.</span><span class=\"n\">Thread</span><span class=\"p\">.</span><span class=\"nf\">Sleep</span><span class=\"p\">(</span><span class=\"m\">2000</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">date</span><span class=\"p\">.</span><span class=\"nf\">RunTime</span><span class=\"p\">());</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">쓰레드</code>를 잠시 <code class=\"highlighter-rouge\">2</code> 초간 <code class=\"highlighter-rouge\">Sleep</code>시킬 경우, <code class=\"highlighter-rouge\">RunTime</code> 메소드의 반환 값은 <code class=\"highlighter-rouge\">00:00:02.0028330</code> 의 형태로 값이 출력됩니다.</p>\n\n<p>현재 시간에서 현재 시간을 연산하는 수식이지만, 정적 생성자로 인하여 최초의 <code class=\"highlighter-rouge\">현재 시간</code>이 자동할당 되어 <code class=\"highlighter-rouge\">startTime</code> 필드에 저장됩니다.</p>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 33강 - 전용 생성자",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-33/",
      "date"     : "2018-12-30 00:00:00 +0900",
  "content"   : "<h3 id=\"전용-생성자-private-constructor\">전용 생성자 (Private Constructor)</h3>\n<hr />\n<p>전용 생성자는 <code class=\"highlighter-rouge\">특수 인스턴스 생성자</code>로 <strong>정적 멤버</strong>만 포함하는 클래스에서 사용됩니다. 클래스에서 <code class=\"highlighter-rouge\">public</code> 생성자가 사용되지 않고 <code class=\"highlighter-rouge\">private</code> 생성자만 사용될 때 사용합니다.  <code class=\"highlighter-rouge\">private</code> 한정자는 클래스를 <strong>인스턴스</strong>화 하여 사용할 수 없게합니다. 개체를 하나만 생성해야 할 때 주로 사용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Factor</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">private</span> <span class=\"nf\">Factor</span><span class=\"p\">()</span> <span class=\"p\">{</span> <span class=\"p\">}</span>\n    <span class=\"k\">public</span> <span class=\"k\">static</span> <span class=\"kt\">double</span> <span class=\"n\">factor</span> <span class=\"p\">=</span> <span class=\"m\">0.76923</span><span class=\"p\">;</span>\n    <span class=\"k\">public</span> <span class=\"k\">static</span> <span class=\"kt\">double</span> <span class=\"nf\">zero_factor</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">factor</span> <span class=\"p\">=</span> <span class=\"m\">0.0</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<p>생성자를 생성하지 않을 경우, <strong>기본 생성자</strong>가 생성됩니다. 그러므로 <code class=\"highlighter-rouge\">private Factor</code> 생성자를 생성합니다. <code class=\"highlighter-rouge\">private</code> 한정자를 사용하여 인스턴스화 할 수 없습니다.</p>\n\n<p><code class=\"highlighter-rouge\">public static</code>으로 사용하여 <code class=\"highlighter-rouge\">Factor</code> 클래스에서 해당 <strong>필드</strong>와 <strong>메소드</strong>를 접근가능하게 합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">Factor</span><span class=\"p\">.</span><span class=\"n\">factor</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">Factor</span><span class=\"p\">.</span><span class=\"nf\">zero_factor</span><span class=\"p\">());</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">Factor</span><span class=\"p\">.</span><span class=\"n\">factor</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">전용 생성자</code>로 인하여 생성자가 접근할 수 없기 때문에 <code class=\"highlighter-rouge\">new</code> 키워드를 통하여 생성할 수 없습니다.</p>\n\n<p><code class=\"highlighter-rouge\">Factor.*</code>의 형태로 <strong>필드</strong>와 <strong>메소드</strong>에 접근이 가능합니다.</p>\n\n<p>두 번째 구문부터는 <code class=\"highlighter-rouge\">factor</code>의 값을 <code class=\"highlighter-rouge\">0.0</code>으로 초기화하여 항상 <code class=\"highlighter-rouge\">factor</code>는 <code class=\"highlighter-rouge\">0.0</code>의 값을 가집니다.</p>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 32강 - 인스턴스 생성자",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-32/",
      "date"     : "2018-12-29 00:00:00 +0900",
  "content"   : "<h3 id=\"인스턴스-생성자-instance-constructor\">인스턴스 생성자 (Instance Constructor)</h3>\n<hr />\n<p>클래스에서 <code class=\"highlighter-rouge\">new</code> 키워드를 사용하여 개체를 만들 때, 인스턴스 멤버 변수를 <strong>생성하고 초기화</strong> 하는데 사용합니다. 클래스가 생성될 때 마다 <code class=\"highlighter-rouge\">인스턴스 생성자</code>를 호출하여 해당 인수를 <strong>필드의 값으로 초기화</strong>합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"기본-생성자\">기본 생성자</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Data</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">;</span>\n\n    <span class=\"k\">public</span> <span class=\"nf\">Data</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">Data</code>라는 클래스 안에 <code class=\"highlighter-rouge\">Data</code>라는 <strong>동일한 명칭</strong>의 생성자를 작성합니다. 인수를 사용하지 않을 경우 <code class=\"highlighter-rouge\">기본 생성자</code>라 합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Data</span> <span class=\"n\">data</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Data</span><span class=\"p\">();</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">$\"</span><span class=\"p\">{</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">}</span><span class=\"s\">, </span><span class=\"p\">{</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">}</span><span class=\"s\">\"</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>클래스에서 기본 생성자가 존재하지 않는 경우 ,<strong>기본 생성자</strong>가 자동으로 생성됩니다. <code class=\"highlighter-rouge\">필드</code>를 <strong>초기화</strong>하는데 사용됩니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"인스턴스-생성자\">인스턴스 생성자</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Data</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">private</span> <span class=\"kt\">int</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">;</span>\n\n    <span class=\"k\">public</span> <span class=\"nf\">Data</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">x</span><span class=\"p\">;</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"n\">y</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"nf\">Location</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"s\">$\"(</span><span class=\"p\">{</span><span class=\"n\">X</span><span class=\"p\">}</span><span class=\"s\">, </span><span class=\"p\">{</span><span class=\"n\">Y</span><span class=\"p\">}</span><span class=\"s\">)\"</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Data</code>라는 클래스 안에 <code class=\"highlighter-rouge\">Data</code>라는 <strong>동일한 명칭</strong>의 생성자를 작성합니다. 두 개의 인수를 사용하여 <code class=\"highlighter-rouge\">X</code>와 <code class=\"highlighter-rouge\">Y</code> 필드에 값을 할당합니다.</p>\n\n<p>동일한 명칭의 클래스 생성자를 생성할 경우, <code class=\"highlighter-rouge\">new</code> 키워드를 사용하여 값을 초기화할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Data</span> <span class=\"n\">data</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Data</span><span class=\"p\">(</span><span class=\"m\">30</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"nf\">Location</span><span class=\"p\">());</span></code></pre></figure>\n\n<p>new 키워드를 사용할 때, <code class=\"highlighter-rouge\">new Data(int x, int y)</code>를 사용하여 <code class=\"highlighter-rouge\">X</code>와 <code class=\"highlighter-rouge\">Y</code> 필드에 값을 할당 할 수 있습니다.</p>\n\n<p>클래스에서 <code class=\"highlighter-rouge\">X</code>, <code class=\"highlighter-rouge\">Y</code> 필드에 <code class=\"highlighter-rouge\">private</code> 한정자를 사용하여 더 이상 <code class=\"highlighter-rouge\">data.X</code>나 <code class=\"highlighter-rouge\">data.Y</code> 형태로 값을 할당하거나 호출 할 수 없습니다.</p>\n\n<p><code class=\"highlighter-rouge\">Location</code> 작성하여 값을 출력하는 <code class=\"highlighter-rouge\">메소드</code>를 생성하여 값을 출력합니다.</p>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 31강 - 속성",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-31/",
      "date"     : "2018-12-29 00:00:00 +0900",
  "content"   : "<h3 id=\"속성-property\">속성 (Property)</h3>\n<hr />\n<p>클래스에서 필드의 값을 읽거나 쓸 수 있게 제공하는 멤버입니다. 데이터를 <strong>손쉽게 접근</strong>하고 <strong>안전성</strong>과 <strong>데이터의 유효성</strong>을 검사할 수 있습니다. <code class=\"highlighter-rouge\">get</code>과 <code class=\"highlighter-rouge\">set</code> 접근자를 통해서 속성을 읽거나 쓸 수 있습니다. 속성은 <code class=\"highlighter-rouge\">public</code>, <code class=\"highlighter-rouge\">private</code>, <code class=\"highlighter-rouge\">internal</code>, <code class=\"highlighter-rouge\">protected</code>, <code class=\"highlighter-rouge\">protected internal</code>, <code class=\"highlighter-rouge\">private protected</code>로 표시할 수 있습니다. 접근 한정자는 <strong>속성에 접근하는 방법을 정의</strong>합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"getter--setter\">Getter &amp; Setter</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Data</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">private</span> <span class=\"kt\">int</span> <span class=\"n\">num</span> <span class=\"p\">=</span> <span class=\"m\">127</span><span class=\"p\">;</span>\n\n    <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">ByteNumber</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">get</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">return</span> <span class=\"n\">num</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">set</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">value</span> <span class=\"p\">&gt;=</span> <span class=\"m\">0</span> <span class=\"p\">&amp;&amp;</span> <span class=\"k\">value</span> <span class=\"p\">&lt;</span> <span class=\"m\">256</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">num</span> <span class=\"p\">=</span> <span class=\"k\">value</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">Data</code>라는 클래스 안에 <code class=\"highlighter-rouge\">ByteNumber</code>는 속성으로 사용됩니다. <code class=\"highlighter-rouge\">num</code> 필드는 속성 데이터를 <strong>백업할 저장소</strong>의 역할을 합니다.  해당 필드는 속성의 호출을 통해서 필드를 변경할 수 있도록 <code class=\"highlighter-rouge\">private</code>를 사용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">get</code> 접근자를 사용하여 <code class=\"highlighter-rouge\">num</code> 필드의 값을 읽습니다. 또한, <code class=\"highlighter-rouge\">set</code> 접근자를 사용하여 <code class=\"highlighter-rouge\">num</code> 필드의 값을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">set</code> 접근자 사용시 속성 형식인 <code class=\"highlighter-rouge\">value</code>라는 <strong>암시적 매개 변수</strong>를 사용하여 <code class=\"highlighter-rouge\">num</code> 필드에 값을 할당합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Data</span> <span class=\"n\">data</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Data</span><span class=\"p\">();</span>\n<span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">ByteNumber</span> <span class=\"p\">=</span> <span class=\"m\">33</span><span class=\"p\">;</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">ByteNumber</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>클래스를 선언하고 <code class=\"highlighter-rouge\">ByteNumber</code>에 접근하여 값을 할당할 수 있습니다. 호출할 경우에도 <code class=\"highlighter-rouge\">ByteNumber</code> 속성을 불러와 사용합니다.</p>\n\n<p>조건문 구문에 벗어날 경우, 값이 할당되지 않으며 <strong>초기화</strong>한 값이나 가장 <strong>마지막에 할당된 값</strong>으로 유지됩니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"자동-구현-속성\">자동 구현 속성</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Data</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">IntNumber</span> <span class=\"p\">{</span> <span class=\"k\">get</span><span class=\"p\">;</span> <span class=\"k\">set</span><span class=\"p\">;</span> <span class=\"p\">}</span>\n    <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"n\">Name</span> <span class=\"p\">{</span> <span class=\"k\">get</span><span class=\"p\">;</span> <span class=\"k\">set</span><span class=\"p\">;</span> <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<p>속성에 <strong>특별한 논리나 조건이 필요하지 않을 경우</strong>, <code class=\"highlighter-rouge\">자동 구현 속성</code>을 이용하여 속성 선언을 간단하게 진행할 수 있습니다.</p>\n\n<p>내부에서 자동적으로 <code class=\"highlighter-rouge\">필드</code>를 구현합니다. 앞의 코드와 동일하게 속성 사용시 <code class=\"highlighter-rouge\">IntNumber</code>나 <code class=\"highlighter-rouge\">Name</code> 속성을 사용하여 값을 할당하거나 호출 할 수 있습니다.</p>\n\n"
    } ,
  
    {
      "title"    : "Computer Vision Theory : 움직임 추적",
      "category" : "",
      "tags"     : "Computer Vision",
      "url"      : "/posts/ComputerVision-12/",
      "date"     : "2018-12-27 00:00:00 +0900",
  "content"   : "<h3 id=\"움직임-추적-motion-tracking\">움직임 추적 (Motion Tracking)</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch12/1.jpg\"><img src=\"/assets/images/ComputerVision/ch12/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">움직임 추적 (Motion Tracking)</code>은 비디오의 연속된 이미지 (프레임)에서 특정 객체를 찾는 것을 의미합니다. <strong>배경(Background)</strong>에서 객체의 <strong>움직임</strong>, <strong>누적 경로</strong>, <strong>예상 경로</strong>, <strong>속도</strong>, <strong>속력</strong> 등을 확인할 수 있습니다. 주요한 추적 방식은 움직이는 객체의 특징점을 찾는 <code class=\"highlighter-rouge\">Point Tracking</code>, 일정 영역 내부의 있는 움직임을 찾는 <code class=\"highlighter-rouge\">Kernel based Tracking</code>, 복잡한 형태를 단순화(실루엣) 시켜 움직임을 찾는 <code class=\"highlighter-rouge\">Silhouette based Tracking</code>이 있습니다.</p>\n\n<p>대표적으로 <code class=\"highlighter-rouge\">광학 흐름(Optical Flow)</code>, <code class=\"highlighter-rouge\">칼만 필터링 (Kalman Filtering)</code>, <code class=\"highlighter-rouge\">에고 모션 (Ego Motion)</code> 등이 있습니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"광학-흐름optical-flow\">광학 흐름(Optical Flow)</h4>\n\n<p><code class=\"highlighter-rouge\">광학 흐름(Optical Flow)</code>은 <strong>카메라와 피사체의 상대 운동에 의하여 피사체의 운동에 대한 패턴</strong>을 의미합니다. 밝기 변화가 거의 없고 일정 블록 내의 모든 픽셀이 모두 같은 운동을 한다 가정하여 움직임을 추정합니다. 또 다른 방식으로는 특정점만을 사용하여 광학흐름을 찾거나 일정 블록 내의 움직임을 판단하여 감지합니다. 주로 <strong>동작 감지</strong>, <strong>물체 추적</strong>, <strong>구조 분석</strong> 등에 이용합니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"칼만-필터링-kalman-filtering\">칼만 필터링 (Kalman Filtering)</h4>\n\n<p><code class=\"highlighter-rouge\">칼만 필터링 (Kalman Filtering)</code>은 노이즈가 포함되어 있는 선형 역학계의 상태를 추적하는 <strong>재귀 필터</strong>입니다. <strong>이전 프레임의 움직임 정보</strong>를 기반으로 움직이는 물체의 위치를 ​​예측하는데 사용되는 신호 처리 알고리즘입니다. 추적을 위한 효과적인 계산 알고리즘이며 <strong>노이즈 측정에 관한 피드백</strong>을 제공합니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"에고-모션-ego-motion\">에고 모션 (Ego Motion)</h4>\n\n<p><code class=\"highlighter-rouge\">에고 모션 (Ego Motion)</code>은 카메라가 이미지를 사용하여 <strong>카메라의 모션</strong>을 결정합니다. <strong>깊이 지도 (Depth Map)</strong>와 <strong>시차 지도 (Parallax Map)</strong>을 생성하여 움직임을 추정합니다. 대표적으로 <strong>시각적 주행 측정법 (Visual Odometry)</strong>으로 사용할 수 있습니다. 카메라의 이미지를 분석하여 위치와 방향을 확인하거나 결정할 수 있습니다. 액추에이터 (Actuator)의 움직임 데이터를 활용할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<ul>\n  <li>Writer by : 윤대희</li>\n</ul>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "Computer Vision Theory : 이미지 인식",
      "category" : "",
      "tags"     : "Computer Vision",
      "url"      : "/posts/ComputerVision-11/",
      "date"     : "2018-12-23 00:00:00 +0900",
  "content"   : "<h3 id=\"이미지-인식-image-recognition\">이미지 인식 (Image Recognition)</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch11/1.jpg\"><img src=\"/assets/images/ComputerVision/ch11/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">이미지 인식 (Image Recognition)</code>은 <strong>객체 (Object)</strong>, <strong>장소 (Place)</strong>, <strong>얼굴 (Face)</strong>, <strong>문자 (Character)</strong> 등을 인식하기 위한 방법입니다. <code class=\"highlighter-rouge\">인공신경망 (Artificial Neural Network)</code>을 사용하여 통계적으로 <strong>높은 확률</strong>을 지니는 값을 찾는 학습 알고리즘입니다. 특정 커널 안의 데이터가 <strong>일정 패턴</strong>을 보이거나 <strong>회귀 분석</strong>을 통한 데이터, 일련의 <strong>함수 형태와 일치</strong>하는 형태 등의 형식을 지니는 이미지를 찾습니다.</p>\n\n<p>대표적으로 <code class=\"highlighter-rouge\">객체 인식 (Object Recognition)</code>, <code class=\"highlighter-rouge\">문자 인식 (Character Recognition)</code>, <code class=\"highlighter-rouge\">얼굴 인식 (Face Recognition)</code> 등이 있습니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"객체-인식-object-recognition\">객체 인식 (Object Recognition)</h4>\n\n<p><code class=\"highlighter-rouge\">객체 인식 (Object Recognition)</code>은 <strong>머신 러닝 (Machine Learning)</strong>과 <strong>딥 러닝(Deep Learning)</strong> 기반의 특징 추출을 기반으로 합니다. <strong>Haar</strong>, <strong>HOG</strong>, <strong>SIFT</strong>, <strong>SURF</strong> 등을 사용하여 전처리 과정을 거치며, <strong>가장자리 검출 (Edge Detection)</strong> 등 을 통하여 <strong>분류 (Classification)</strong>를 진행하게 됩니다. 해당 객체와 배경 등의 수 천개 이상의 데이터를 통하여 학습을 진행합니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"문자-인식-character-recognition\">문자 인식 (Character Recognition)</h4>\n\n<p><code class=\"highlighter-rouge\">문자 인식 (Character Recognition)</code>은 <strong>CNN (Convolutional Neural Network)</strong>, <strong>RNN (Recurrent Neural Network)</strong>이나 <strong>SVM (Support Vector Machines)</strong> 등의 알고리즘을 통하여 학습을 진행합니다. 문자를 더 단순화하여 2 차원 벡터 좌표의 값을 계산합니다. <strong>윤곽 (Contours)</strong> 등을 검출하여 진행하기도 합니다. <strong>문자 영역 (Character Localization)</strong>을 검출한 뒤, 여러 문자들을 정합하여 <strong>문자 인식 (Character Recongnition)</strong>을 진행합니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"얼굴-인식-face-recognition\">얼굴 인식 (Face Recognition)</h4>\n\n<p><code class=\"highlighter-rouge\">얼굴 인식 (Facial Recognition)</code>은 사람의 얼굴마다 고유한 특징을 비교하여 특정 인물에 대한 값을 반환합니다. <strong>눈의 크기</strong>, <strong>코의 길이</strong>, <strong>얼굴형</strong> 등을 구분하여 특정 인물의 특징을 찾아냅니다. 기본적으로 <strong>얼굴 검출 (Face Detection)</strong>을 통하여 얼굴이 존재하는 위치를 검출한 후, 해당 얼굴의 <strong>특정 위치 (Land Mark)</strong>들을 찾아 해당 위치들이 어떤 패턴을 가지는지로 여러 얼굴을 구분합니다. 특정 위치들이 어떤 형태를 지니는지로 <strong>표정</strong>이나 <strong>상태</strong> 등도 구분할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<ul>\n  <li>Writer by : 윤대희</li>\n</ul>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "Computer Vision Theory : 유사성 검출",
      "category" : "",
      "tags"     : "Computer Vision",
      "url"      : "/posts/ComputerVision-10/",
      "date"     : "2018-12-15 00:00:00 +0900",
  "content"   : "<h3 id=\"유사성-검출-similarity-detection\">유사성 검출 (Similarity Detection)</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch10/1.jpg\"><img src=\"/assets/images/ComputerVision/ch10/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">유사성 검출 (Similarity Detection)</code>은 이미지 내의 주요한 <code class=\"highlighter-rouge\">유사 영역</code>을 검출하는 방법입니다.  해당 비슷한 영역이 존재하는 위치를 알려주거나 해당 유사 영역을 부각시킵니다. 이미지에서 검출하려는 오브젝트의 <strong>유사성</strong>을 기준으로 검출을 진행합니다. 감지할 이미지와 유사한 이미지인 <strong>Positive Image</strong>와 전혀 다른 이미지인 <strong>Negative Image</strong>로 훈련된 모델 (Model)을 사용하거나 검출하려는 이미지를 <strong>특정 크기로 변경</strong>시켜 이미지에서 <strong>일치하는 영역이 높은 영역</strong>을 찾습니다. 또한 <strong>특정 범위 내</strong>에 있는 객체를 검출합니다.</p>\n\n<p>대표적으로 <code class=\"highlighter-rouge\">얼굴 검출 (Face Detection)</code>, <code class=\"highlighter-rouge\">피부색 검출 (Skin Color Detection)</code>, <code class=\"highlighter-rouge\">템플릿 매칭 (Template Matching)</code> 등이 있습니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"얼굴-검출-face-detection\">얼굴 검출 (Face Detection)</h4>\n\n<p><code class=\"highlighter-rouge\">얼굴 검출 (Face Detection)</code>은 이미지 상에서 얼굴을 검출하기 위한 알고리즘입니다. 수만 수천개의 <strong>Postive Image</strong>와 <strong>Negative Image</strong>로 교육된 모델을 사용하여 검출을 진행합니다. 얼굴에서의 특징점인 <strong>눈</strong>이나 <strong>코</strong>, <strong>입술</strong> 등에서 밝고 어두운 정도의 특징점을 사용하여 검출을 진행합니다. 해당 특징점들이 모두 존재하는 위치를 찾습니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"피부색-검출-skin-color-detection\">피부색 검출 (Skin Color Detection)</h4>\n\n<p><code class=\"highlighter-rouge\">피부색 검출 (Skin Color Detection)</code>은 이미지 내의 피부색을 검출을 위한 알고리즘입니다. 피부색으로 간주할 수 있는 색상에 대해 <strong>하위 임계값</strong>과 <strong>상위 임계값</strong>을 두어 피부색과 유사한 색상을 피부색으로 간주합니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"템플릿-매칭-template-matching\">템플릿 매칭 (Template Matching)</h4>\n\n<p><code class=\"highlighter-rouge\">템플릿 매칭 (Template Matching)</code>은 이미지에서 <strong>유사성이</strong> 가장 높은 이미지를 검출합니다. 원본 이미지와 검출하려는 템플릿 이미지를 변형시킨 뒤 서로가 얼마나 비슷한지 <strong>대조</strong>하여 검출을 진행합니다. 서로를 대조하였을 때** 가장 높은 일치점**을 찾아 결과로 반환합니다.</p>\n\n<p><br />\n<br /></p>\n\n<ul>\n  <li>Writer by : 윤대희</li>\n</ul>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "Computer Vision Theory : 특징 검출",
      "category" : "",
      "tags"     : "Computer Vision",
      "url"      : "/posts/ComputerVision-9/",
      "date"     : "2018-12-12 00:00:00 +0900",
  "content"   : "<h3 id=\"특징-검출-feature-detection\">특징 검출 (Feature Detection)</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch9/1.jpg\"><img src=\"/assets/images/ComputerVision/ch9/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">특징 검출 (Feature Detection)</code>은 이미지 내의 주요한 <code class=\"highlighter-rouge\">특징점</code>을 검출하는 방법입니다.  해당 특징점이 존재하는 위치를 알려주거나 해당 특징점을 부각시킵니다.\n픽셀의 <strong>색상 강도</strong>, <strong>연속성</strong>, <strong>변화량</strong>, <strong>의존성</strong>, <strong>유사성</strong>, <strong>임계점</strong> 등을 사용하여 특징을 파악합니다. 특징 검출을 사용하여 다양한 패턴의 객체를 검출할 수 있습니다.</p>\n\n<p>대표적으로 <code class=\"highlighter-rouge\">가장자리 (Edge)</code>. <code class=\"highlighter-rouge\">윤곽 (Contours)</code>, <code class=\"highlighter-rouge\">모서리 (Corner)</code>, <code class=\"highlighter-rouge\">선 (Line)</code>, <code class=\"highlighter-rouge\">원 (Circle)</code> 등이 있습니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"가장자리-edge\">가장자리 (Edge)</h4>\n\n<p><code class=\"highlighter-rouge\">가장자리 (Edge)</code> 검출은 이미지 내의 가장자리 검출을 위한 알고리즘입니다. 픽셀의 그라디언트의 <strong>상위 임계값</strong>과 <strong>하위 임계값</strong>을 사용하여 가장자리를 검출합니다. 픽셀의 <strong>연속성</strong>, <strong>연결성</strong> 등이 유효해야합니다. 가장자리의 일부로 간주되지 않는 픽셀은 제거되어 가장자리만 남게됩니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"윤곽-contours\">윤곽 (Contours)</h4>\n\n<p><code class=\"highlighter-rouge\">윤곽 (Contours)</code> 검출은 이미지 내의 윤곽 검출을 위한 알고리즘입니다. <strong>동일한 색상이나 비슷한 강도</strong>를 가진 <strong>연속한 픽셀</strong>을 묶습니다. 윤곽 검출을 통하여 <strong>중심점</strong>, <strong>면적</strong>, <strong>경계선</strong>, <strong>블록 껍질</strong>, <strong>피팅</strong> 등을 적용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"모서리-corner\">모서리 (Corner)</h4>\n\n<p><code class=\"highlighter-rouge\">모서리 (Corner)</code> 검출은 그라디언트에서 <strong>유사성</strong>을 검출합니다. <strong>픽셀 강도의 차이</strong>를 기준으로 모서리 점을 검출합니다. 이 결과로 <strong>가장자리</strong>, <strong>평면</strong>, <strong>모서리</strong>를 구분합니다. 때에 따라 모서리 강도가 강한 모서리 점을 검출할 수 도 있습니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"선-line\">선 (line)</h4>\n\n<p><code class=\"highlighter-rouge\">선 (line)</code> 검출은 이미지의 모든 점에 대한 <strong>교차점을 추적</strong>합니다. 교차점의 수가 임계값보다 높을 경우, 매개 변수가 있는 행으로 간주합니다. 즉, 교차점의 교차 수를 찾아 선을 검출합니다. 교차 횟수가 많을 수록 선이 더 많은 픽셀을 가지게 됩니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"원-circle\">원 (Circle)</h4>\n\n<p><code class=\"highlighter-rouge\">원 (Circle)</code> 검출은 이미지에서 <strong>방사형 대칭성</strong>이 높은 객체를 효과적으로 검출합니다. 특징점을 파라미터 공간으로 매핑하여 검출합니다. <strong>가장자리</strong>에 그라디언트 방법을 이용하여 원의 중심점 (a,b)에 대한 <strong>2D Histogram</strong>으로 선정합니다.</p>\n\n<p><br />\n<br /></p>\n\n<ul>\n  <li>Writer by : 윤대희</li>\n</ul>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "Computer Vision Theory : 이미지 연산",
      "category" : "",
      "tags"     : "Computer Vision",
      "url"      : "/posts/ComputerVision-8/",
      "date"     : "2018-12-02 00:00:00 +0900",
  "content"   : "<h3 id=\"이미지-연산-image-calculation\">이미지 연산 (Image Calculation)</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch8/1.jpg\"><img src=\"/assets/images/ComputerVision/ch8/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">이미지 연산 (Image Calculation)</code>란 각 픽셀마다 특정 함수나 수식을 적용하여 변형하는 것을 의미합니다. 이미지에 일괄적으로 값을 <strong>더하거나 빼는 연산</strong>을 예로 들 수 있습니다.  이외에도 색상을 흑백으로 변환하는 것도 연산으로 볼 수 있습니다. 색상 이미지를 흑백 이미지 변경할 때 다음의 수식이 적용됩니다. <code class=\"highlighter-rouge\">Y = 0.299 * R + 0.587 * G + 0.114 * B</code>을 통하여 그레이스케일로 변환할 수 있습니다. 이렇듯 이미지에 대해여 일괄적으로 적용하는 경우 이미지 연산이 적용되었다 볼 수 있습니다.</p>\n\n<p>이미지 연산을 통하여 <strong>특정 범위의 픽셀을 제거하거나 변환하는 등의 작업을 진행하거나 모든 픽셀에 대하여 동일한 처리</strong>를 진행할 수 있습니다. 해당 결과를 통하여 <strong>불필요한 영역을 제거하거나 필요한 영역을 두드러지게 할 수 있습니다.</strong></p>\n\n<p>대표적으로 <code class=\"highlighter-rouge\">비트 연산 (Bitwise)</code>, <code class=\"highlighter-rouge\">연산 (Calculation)</code>, <code class=\"highlighter-rouge\">색상 변경 (CvtColor)</code> 등이 있습니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"비트-연산-bitwise\">비트 연산 (Bitwise)</h4>\n\n<p><code class=\"highlighter-rouge\">비트 연산 (Bitwise)</code>는 이미지에 대하여 <code class=\"highlighter-rouge\">AND</code>, <code class=\"highlighter-rouge\">OR</code>, <code class=\"highlighter-rouge\">XOR</code>, <code class=\"highlighter-rouge\">NOT</code>의 비트 연산을 적용할 수 있습니다. 두 이미지에서 동일한 픽셀을 지니는 값만 표시하거나 표시하지 않거나 동일하지 않는 픽셀만을 표시하거나 색상 반전 등을 적용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"연산-calculation\">연산 (Calculation)</h4>\n\n<p><code class=\"highlighter-rouge\">연산 (Calculation)</code>은 이미지에 대하여 <code class=\"highlighter-rouge\">ADD</code>, <code class=\"highlighter-rouge\">SUB</code>, <code class=\"highlighter-rouge\">MUL</code>, <code class=\"highlighter-rouge\">DIV</code>, <code class=\"highlighter-rouge\">MAX</code>, <code class=\"highlighter-rouge\">MIN</code>, <code class=\"highlighter-rouge\">ABSDIFF</code> 등의 연산을 적용할 수 있습니다. 두 이미지의 픽셀의 값을 더하기, 빼기, 곱하기, 나누기, 최대값, 최소값, 절대값 감산 등을 적용하게 됩니다. 이를 통하여 이미지위에 다른 이미지를 겹치거나 특정 픽셀을 제거하는 등의 기능을 수행할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"색상-변경-cvtcolor\">색상 변경 (CvtColor)</h4>\n\n<p><code class=\"highlighter-rouge\">색상 변경 (CvtColor)</code>은 전체 이미지에 대하여 동일한 함수를 적용하여 해당 이미지가 지니는 의미를 변환하는 역할을 합니다. <code class=\"highlighter-rouge\">RGB</code> 속성을 지닌 이미지를 <code class=\"highlighter-rouge\">GRAY</code> 이미지로 변경하거나 <code class=\"highlighter-rouge\">HSV</code>, <code class=\"highlighter-rouge\">YCrCb</code> 등의 <strong>다양한 색상 공간으로 변환</strong>할 수 있습니다. <code class=\"highlighter-rouge\">RGB</code> 속성 이외의 다른 속성 색상 공간으로 변환하여 처리하므로 복잡한 알고리즘을 사용하지 않아도 원하는 결과를 얻어낼 수 있도록 하는 전처리 과정으로도 볼 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<ul>\n  <li>Writer by : 윤대희</li>\n</ul>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "Computer Vision Theory : 노이즈 제거 &amp; 이미지 복원",
      "category" : "",
      "tags"     : "Computer Vision",
      "url"      : "/posts/ComputerVision-7/",
      "date"     : "2018-11-25 00:00:00 +0900",
  "content"   : "<h3 id=\"노이즈-제거-noise-reduction\">노이즈 제거 (Noise Reduction)</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch7/1.jpg\"><img src=\"/assets/images/ComputerVision/ch7/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">노이즈 (Nosie)</code>란 원하지 않는 데이터를 의미합니다. 다른 데이터를 <strong>간섭</strong>하거나 의도하지 않은 <strong>왜곡</strong>을 의미합니다. 노이즈는 알고리즘을 방해하는 주된 요인이 됩니다. 장면 전환이나 피사체의 움직임, 카메라의 성능 등 다양한 이유로 인하여 발생합니다. 노이즈를 제거하는 작업을 <code class=\"highlighter-rouge\">디노이즈 (DeNoise)</code>라 합니다.</p>\n\n<p>OpenCV를 통하여 불러오는 이미지는 <strong>Bitmap</strong> 형식이므로, 어떤 이미지라도 <strong>노이즈는 항상 존재합니다.</strong> 또한, 노이즈가 존재하지 않는 이상적인 이미지라고 가정하여도 검출하려는 객체 이외에는 검출을 방해하는 요소가 됩니다. 불필요한 데이터는 모두 노이즈로 가정할 수 있습니다. 노이즈를 제거하여 <strong>검출</strong>이나 <strong>분석</strong> 등의 <code class=\"highlighter-rouge\">정확성</code>과 <code class=\"highlighter-rouge\">정밀성</code>을 높일 수 있습니다.</p>\n\n<p>대표적으로 <code class=\"highlighter-rouge\">흐림 효과 (Blur)</code>, <code class=\"highlighter-rouge\">필터링 (Filtering)</code>,  <code class=\"highlighter-rouge\">모폴로지 (Morphology)</code> 등이 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"이미지-복원-image-restoration\">이미지 복원 (Image Restoration)</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch7/2.jpg\"><img src=\"/assets/images/ComputerVision/ch7/2.jpg\" alt=\"2\" /></a>\n<code class=\"highlighter-rouge\">이미지 복원 (Image Restoration)</code>은 <code class=\"highlighter-rouge\">디노이즈 (DeNosie)</code> 영역이 일부 포함됩니다. 훼손된 영역이나 객체를 조작하거나 변형하여 <strong>본래의 형태로 복구하는 작업을 의미합니다.</strong> 이미지가 뭉게지거나 선명하지않은 이미지를 원래의 형상으로 복원합니다.</p>\n\n<p>이미지에서 불필요한 부분을 제거하였을 경우, 다시 원래 상태로 복원해야하는 경우가 있습니다. 이 때, 주변의 화소값으로 대체하거나 본래의 형상과 비슷하도록 변형하는 작업입니다. 들어온 이미지와는 형태가 변경되지만, <strong>본질에 더 가깝게 변경하게 됩니다.</strong></p>\n\n<p>대표적으로 <code class=\"highlighter-rouge\">크기 변환 (Resize)</code>, <code class=\"highlighter-rouge\">개체 제거 (Inpaint)</code>, <code class=\"highlighter-rouge\">감마 보정 (Gamma Correct)</code> 등이 있습니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"흐림-효과-blur\">흐림 효과 (Blur)</h4>\n\n<p><code class=\"highlighter-rouge\">흐림 효과 (Blur)</code>는 영상이나 이미지를 흐림 효과를 주어 <strong>번지게 하기 위해 사용합니다.</strong> 해당 픽셀의 주변값들과 비교하고 계산하여 픽셀들의 색상 값을 재조정합니다. 노이즈를 줄이고, 형상을 유지하여 검출하기 쉬운 상태로 변형됩니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"필터링-filtering\">필터링 (Filtering)</h4>\n\n<p><code class=\"highlighter-rouge\">필터링 (Filtering)</code>은 <strong>임의의 선형 필터를 이미지나 영상에 적용하기 위해 사용합니다.</strong> 필터링을 이용하여 <code class=\"highlighter-rouge\">흐림 효과</code>를 적용할 수 있으며, <code class=\"highlighter-rouge\">선명화(Sharpening)</code> 작업도 진행할 수 있습니다. 이미지를 흐리게 만든 것과 반대로 이미지를 날카롭게 만듭니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"모폴로지-morphology\">모폴로지 (Morphology)</h4>\n\n<p><code class=\"highlighter-rouge\">모폴로지(Morphology)</code> 는 영상이나 이미지의 <strong>화소값을 대체하기 위해 사용합니다.</strong> 영상이나 이미지에서 팽창과 침식을 이용해 이미지의 정확도를 높일 수 있습니다. <code class=\"highlighter-rouge\">팽창</code>은 구조 요소를 사용하여 이웃한 화소를 최대 픽셀로 대체합니다. 어두운 영역이 줄어들며 밝은 영역이 늘어납니다. 노이즈 제거 후 <strong>줄어든 크기를 복구</strong>하고자 할 때 주로 사용합니다. <code class=\"highlighter-rouge\">침식</code>은 구조 요소를 사용하여 이웃한 화소를 최소 픽셀로 대체합니다. 밝은 영역이 줄어들며 어두운 영역이 늘어납니다. <strong>노이즈 제거</strong>에 주로 사용합니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"개체-제거-inpaint\">개체 제거 (Inpaint)</h4>\n\n<p><code class=\"highlighter-rouge\">개체 제거 (Inpaint)</code>는 영상이나 이미지에서 <strong>불필요한 부분이나 영역을 제거한 후, 주변의 화소값으로 대체합니다.</strong> 주로, 워터마크나 불필요한 부분, 본래의 객체에서 튀는 부분 등을 삭제하고 자연스럽게 대체하기 위해 사용합니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"감마-보정-gamma-correct\">감마 보정 (Gamma Correct)</h4>\n\n<p><code class=\"highlighter-rouge\">감마 보정 (Gamma Correct)</code>은 영상이나 이미지의 <strong>명암을 보정하기 위해 사용되는 알고리즘입니다.</strong> 모니터 등을 통하여 촬영된 이미지를 확인 시 밝거나 어둡게 보이는 경우가 있습니다. 이를 수정하기 위하여 감마 보정을 실행합니다.</p>\n\n<p><br />\n<br /></p>\n\n<ul>\n  <li>Writer by : 윤대희</li>\n</ul>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "Computer Vision Theory : 전처리 알고리즘",
      "category" : "",
      "tags"     : "Computer Vision",
      "url"      : "/posts/ComputerVision-6/",
      "date"     : "2018-11-18 00:00:00 +0900",
  "content"   : "<h3 id=\"전처리-알고리즘-preprocessing-algorithm\">전처리 알고리즘 (Preprocessing Algorithm)</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch6/1.png\"><img src=\"/assets/images/ComputerVision/ch6/1.png\" alt=\"1\" /></a>\n이미지에는 매우 많은 데이터가 존재합니다. <strong>불필요한 데이터를 줄이고 유의미한 데이터를 정제</strong>하는 과정이 필요합니다. 이 때 전처리 알고리즘을 사용합니다. 전처리란 알고리즘에서 활용할 수 있도록 <strong>유의미한 정보로 가공하는 과정</strong>입니다.</p>\n\n<p>객체의 위치를 탐지하는 알고리즘을 구성한다 가정했을 때, 이미지에서 객체보다 더 많은 데이터들이 객체 탐지에 방해되는 요소가 됩니다. 이 정보들을 가공하여 본격적인 알고리즘이 적용되기 전에 데이터를 처리해야합니다. 탐지에 악영향을 주는 부분들을 최소화하는 역할을 합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"전처리-알고리즘의-종류\">전처리 알고리즘의 종류</h3>\n<hr />\n<p>전처리 알고리즘에는 다양한 알고리즘이 존재합니다. 크게, <code class=\"highlighter-rouge\">그레이스케일</code>, <code class=\"highlighter-rouge\">이진화</code>, <code class=\"highlighter-rouge\">확대/축소</code>, <code class=\"highlighter-rouge\">회전/변환</code> 등이 있습니다. <strong>앞의 과정을 처리 후, 주요한 알고리즘을 적용합니다.</strong></p>\n\n<p><br /></p>\n\n<h4 id=\"그레이스케일\">그레이스케일</h4>\n\n<p>그레이스케일은 <code class=\"highlighter-rouge\">다중 채널</code> 이미지를 <code class=\"highlighter-rouge\">단일 채널</code> 이미지로 변환하여 <strong>데이터의 폭을 줄이는 역할</strong>을 합니다. 대부분의 알고리즘이 소스를 그레이스케일 이미지를 사용하여 처리합니다. 다중 채널은 채널이 3개 또는 4개를 가지고 있습니다. 그레이스케일은 1개의 채널을 가지고 있으므로 데이터의 양이 <code class=\"highlighter-rouge\">1/3</code> 또는 <code class=\"highlighter-rouge\">1/4</code>로 줄어들게 되지만, <strong>이미지의 형상에는 크게 훼손을 주지 않습니다.</strong></p>\n\n<p><br /></p>\n\n<h4 id=\"이진화\">이진화</h4>\n\n<p>이진화는 어느 지점을 기준으로 <code class=\"highlighter-rouge\">검은색</code> 또는 <code class=\"highlighter-rouge\">흰색</code>으로 변형하기 위해서 사용합니다. 이진화 처리를 진행할 경우, 이미지를 두 가지의 색상으로 변형하여 일정 임계값 이하는 모두 검은색 또는 흰색으로 변형됩니다. 데이터의 개수가 극단적으로 줄어들게 됩니다. 이 처리를 통하여 검출하고자 하는 <strong>객체를 검출하기 쉬운 상태</strong>로 변형합니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"확대축소\">확대/축소</h4>\n\n<p>검출하려는 이미지에서 데이터의 양이 너무 많거나 너무 적을 경우, 이미지를 확대 또는 축소를 통하여 데이터의 범위를 키우거나 줄일 수 있습니다. <strong>검출하려는 객체가 너무 작을 경우, 이미지를 확대하며 검출하려는 이미지가 너무 클 경우, 축소 과정을 진행합니다.</strong></p>\n\n<p><br /></p>\n\n<h4 id=\"회전변환\">회전/변환</h4>\n\n<p>검출하려는 객체가 이미지에서 지정된 형태가 아닐 경우, 이미지를 <strong>검출하기 쉬운 상태로 변형하는 과정</strong>이 필요합니다. 캘리브레이션이나 이미지의 왜곡을 변형하는 과정을 진행할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<ul>\n  <li>Writer by : 윤대희</li>\n</ul>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "Computer Vision Theory : 관심 영역 &amp; 관심 채널",
      "category" : "",
      "tags"     : "Computer Vision",
      "url"      : "/posts/ComputerVision-5/",
      "date"     : "2018-11-03 00:00:00 +0900",
  "content"   : "<h3 id=\"관심-영역-roi\">관심 영역 (ROI)</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch5/1.jpg\"><img src=\"/assets/images/ComputerVision/ch5/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">관심 영역</code>이란 이미지 상에서 <strong>관심 있는 영역을 의미</strong>합니다. <code class=\"highlighter-rouge\">ROI</code>라 부르며 <strong>Region Of Interest</strong>의 약자입니다. 이미지를 처리함에 있어서 객체를 탐지하거나 검출하는 경우, 이부분을 명확하게 관심 영역이라 지정할 수 있습니다.</p>\n\n<p>알고리즘을 구성시, 초기 검출 단계에서는 이미지 전체에 대해 오브젝트를 검출합니다. 이 후, 추가적인 알고리즘이 적용된다면 해당 오브젝트의 이미지 영역에서 알고리즘을 진행하는 방법이 가장 좋습니다. 객체를 탐지한 이후에 <strong>두 번째 알고리즘을 적용할 때 객체 주변 영역에 대해서 불필요한 연산이 들어가게 됩니다.</strong> 불필요한 이미지 영역에 대해서도 연산이 시작되므로 그 만큼 <strong>연산량이 많아지고 많은 리소스를 소모하게됩니다.</strong></p>\n\n<p>알고리즘의 정확도와 연산속도의 향상을 위해서는 <code class=\"highlighter-rouge\">관심 영역</code>을 설정해야합니다. 만약, 이미지에서 시계에서 시간을 받아오는 알고리즘을 구성한다면, 첫 번째로 시계라는 객체를 검출하고, <strong>붉은색 영역</strong>을 관심 영역으로 설정한 다음 해당 이미지 안에서 시간을 검출하는 알고리즘을 구성해야합니다. 관심 영역 지정을 효율적으로 사용한다면 알고리즘의 <code class=\"highlighter-rouge\">정확도</code>와 <code class=\"highlighter-rouge\">연산 속도</code>를 높일 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"관심-채널-coi\">관심 채널 (COI)</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch5/2.jpg\"><img src=\"/assets/images/ComputerVision/ch5/2.jpg\" alt=\"2\" /></a>\n<code class=\"highlighter-rouge\">관심 채널</code>이란 이미지 상에서 <strong>관심 있는 채널을 의미</strong>합니다. <code class=\"highlighter-rouge\">COI</code>라 부르며 <strong>Region Of Channel</strong>의 약자입니다. 역시, 이미지를 처리함에 있어서 특정 채널을 사용하여 연산을 진행하는 경우, 이 부분을 관심 채널이라 부를 수 있습니다.</p>\n\n<p><strong>색상 이미지 (BGR)</strong>에는 매우 많은 데이터가 담겨있습니다. 이 때 채널을 분리하여 특정 채널에 대해 연산을 시작한다면 단순하게 <code class=\"highlighter-rouge\">1/3배</code>로 데이터의 양이 줄어듭니다. 또한, 채널을 모두 분리한 뒤에 동일한 알고리즘을 적용하여 더 많은 결과를 얻을 수 있습니다. 단순하게 계산하는 데이터의 양은 <code class=\"highlighter-rouge\">1/3배</code>로 줄지만, 얻어내는 데이터의 양은 <code class=\"highlighter-rouge\">3배</code>로 늘어나게 됩니다.</p>\n\n<p>채널을 분리하였을 때, <code class=\"highlighter-rouge\">GrayScale</code>과 비슷한 형태를 보입니다. 하지만, <code class=\"highlighter-rouge\">GrayScale</code>의 경우, <code class=\"highlighter-rouge\">Y = 0.299 x R + 0.587 x G + 0.114 x B</code>의 공식을 통해 얻어진 값입니다. 각 채널의 값에 대한 가중치의 곱으로 <code class=\"highlighter-rouge\">GrayScale</code>을 생성합니다. 확실하게 데이터의 변형이 생깁니다. <code class=\"highlighter-rouge\">Green 채널</code>에 대한 값에 가장 영향을 많이 받으며, <code class=\"highlighter-rouge\">Blue 채널</code>에 대해 가장 영향을 적게 받습니다. 특정 알고리즘을 구성할 때에는 각각의 채널에 대한 연산이 더 높은 정확도를 얻어낼 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">관심 영역</code>과 <code class=\"highlighter-rouge\">관심 채널</code> 둘 다 데이터의 형태를 변형하는 것이 아닌, <strong>특정 영역을 불러와 연산량과 정확도를 높이는데 사용할 수 있습니다.</strong> 알고리즘을 구성하는데 있어 <strong>관심 영역</strong>, <strong>관심 채널</strong>, <strong>비관심 영역</strong>, <strong>비관심 채널</strong>을 구분한다면 효율 높은 프로그램을 구성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<ul>\n  <li>Writer by : 윤대희</li>\n</ul>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "Computer Vision Theory : 이미지와 동영상의 이해",
      "category" : "",
      "tags"     : "Computer Vision",
      "url"      : "/posts/ComputerVision-4/",
      "date"     : "2018-11-03 00:00:00 +0900",
  "content"   : "<h3 id=\"이미지와-동영상의-이해\">이미지와 동영상의 이해</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch4/1.jpg\"><img src=\"/assets/images/ComputerVision/ch4/1.jpg\" alt=\"1\" /></a>\n<strong>이미지 파일 형식</strong>은 수백 가지의 종류가 존재합니다. <strong>OpenCV</strong>에서는 <code class=\"highlighter-rouge\">래스터 그래픽스</code> 이미지 파일 포맷을 쉽게 불러올 수 있습니다.\n가장 많이 사용되는 파일 포맷으로는 <code class=\"highlighter-rouge\">BMP (Bitmap)</code>, <code class=\"highlighter-rouge\">JPEG (Joint Photographic Experts Group)</code>, <code class=\"highlighter-rouge\">GIF (Graphics Interchange Format)</code>, <code class=\"highlighter-rouge\">PNG (Portable Network Graphics)</code> 등이 존재합니다. 동영상의 경우에는 <code class=\"highlighter-rouge\">AVI (Audio Video Interleave)</code>, <code class=\"highlighter-rouge\">MP4 (MPEG-4 Part 14)</code>, <code class=\"highlighter-rouge\">WMV (Windows Media Video)</code> 등이 존재합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">BMP</code> : <strong>1~24 Bit</strong>, 압축율 낮음</li>\n  <li><code class=\"highlighter-rouge\">JPEG</code> : <strong>1~24 Bit</strong>, 압축율 높음</li>\n  <li><code class=\"highlighter-rouge\">GIF</code> : <strong>1~8 Bit</strong>, 무손실 압축</li>\n  <li><code class=\"highlighter-rouge\">PNG</code> : <strong>1~48 Bit</strong>, 무손실 압축</li>\n  <li><code class=\"highlighter-rouge\">AVI</code> : <strong>다양한 코덱으로 인코딩 가능</strong></li>\n  <li><code class=\"highlighter-rouge\">MP4</code> : 고압축, <strong>비디오 품질 높음</strong></li>\n  <li><code class=\"highlighter-rouge\">WMV</code> : 고압축, <strong>비디오 품질 낮음</strong></li>\n</ul>\n\n<p><br /></p>\n\n<p>래스터 그래픽스의 경우, <strong>OpenCV</strong>를 통하여 쉽게 불러올 수 있는데 <code class=\"highlighter-rouge\">GIF</code> 이미지의 경우에는 <strong>프레임</strong>이 존재합니다. GIF의 경우, 움직이는 이미지이므로 동영상으로 간주하여 작업해야 합니다. 또한, 프레임이 없는 GIF의 이미지도 프레임이 하나인 동영상으로 간주해야 합니다. 그러므로 GIF 확장자를 <strong>OpenCV</strong>에서 처리할 경우, <code class=\"highlighter-rouge\">VideoCapture()</code> 함수를 사용하거나, <code class=\"highlighter-rouge\">pilow</code> 라이브러리 등을 이용해야합니다.</p>\n\n<p><br /></p>\n\n<p>동영상은 <strong>이미지의 연속</strong>입니다. 동영상은 멈추어 있는 사진들이 연속되어 움직이는 동영상이 됩니다. 이 각각의 이미지를 <code class=\"highlighter-rouge\">프레임</code>이라 부르며, <strong>프레임들을 초당 몇 장의 이미지를 보여주냐에 따라 동영상의 자연스러움이 결정됩니다.</strong> 동영상에 이미지 프로세싱을 적용할 경우, 모든 프레임에 동일한 알고리즘을 적용하게 됩니다. 그러므로 동영상을 처리할 경우, 프레임 속도에 따라 적절한 알고리즘을 설계해야합니다. 결국 원할한 알고리즘의 구현을 위해선 <code class=\"highlighter-rouge\">FPS (Frame Per Second)</code>의 간단한 이해가 필요합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">FPS</code>는 영상이 바뀌는 속도를 의미합니다. 즉, <strong>화면의 부드러움을 의미합니다.</strong> 화면이 부드럽게 처리되면서 함수를 적용해야합니다. 알고리즘의 처리 속도가 오래걸리는 경우, <code class=\"highlighter-rouge\">FPS</code>의 값을 적절히 조정하거나 알고리즘을 수정해야합니다. 좋은 알고리즘을 설계하지 못할 경우, <code class=\"highlighter-rouge\">FPS</code>의 속도를 따라가지 못하여 <strong>오류</strong>나 <strong>지연</strong>이 발생하게 됩니다. 또한, 동영상을 처리함에 있어서 <code class=\"highlighter-rouge\">이미지의 크기</code>, <code class=\"highlighter-rouge\">정밀도</code>, <code class=\"highlighter-rouge\">채널</code>의 값을 적절하게 사용한다면 높은 <code class=\"highlighter-rouge\">FPS</code>의 값을 가지는 동영상에서도 수준 높은 알고리즘을 구현할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<ul>\n  <li>Writer by : 윤대희</li>\n</ul>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "Computer Vision Theory : 이미지의 세 가지 구성요소",
      "category" : "",
      "tags"     : "Computer Vision",
      "url"      : "/posts/ComputerVision-3/",
      "date"     : "2018-10-28 00:00:00 +0900",
  "content"   : "<h3 id=\"이미지의-세-가지-구성요소\">이미지의 세 가지 구성요소</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch3/1.jpg\"><img src=\"/assets/images/ComputerVision/ch3/1.jpg\" alt=\"1\" /></a>\nOpenCV를 통한 이미지를 처리시 세 가지의 구성요소가 존재합니다. 이 세 가지의 구성요소는 영상 처리시 가장 중요하게 고려되어야할 속성입니다. <code class=\"highlighter-rouge\">이미지의 크기</code>, <code class=\"highlighter-rouge\">정밀도</code>, <code class=\"highlighter-rouge\">채널</code>입니다. 앞의 구성요소를 통하여 불러온 이미지가 어떤 속성을 가지는지 설정합니다.</p>\n\n<p>이 구성요소들이 올바르게 설정되지 않는다면 <strong>영상 처리시 불필요하게 너무 많은 데이터를 처리하거나 부족한 데이터를 받아오게 됩니다.</strong> 이제, 각각의 속성들이 어떤 의미를 지니는지 알아보도록 하겠습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"이미지의-크기-image-size\">이미지의 크기 (Image Size)</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch3/2.jpg\"><img src=\"/assets/images/ComputerVision/ch3/2.jpg\" alt=\"2\" /></a>\n먼저 <code class=\"highlighter-rouge\">이미지의 크기</code>입니다. 이미지의 크기는 해당 필드나 변수에 할당될 이미지의 크기를 설정합니다. 이미지의 크기를 원본 이미지의 크기를 <strong>2배</strong>, <strong>4배</strong>, <strong>1/2배</strong>, <strong>1/4배</strong> 등 설정할 수 있으며 또는 <strong>임의의 크기</strong>로 설정할 수 있습니다.</p>\n\n<p>이미지의 크기는 <code class=\"highlighter-rouge\">데이터의 크기</code>라 볼 수 있습니다. 고화질의 이미지의 경우, 이미지의 크기가 매우 큽니다. 그에 따라 영상 처리를 진행할 경우, <strong>이미지의 크기 만큼 데이터가 생성되어 너무 많은 연산을 진행하게 됩니다.</strong> 많은 알고리즘에서 <strong>이미지의 크기를 변경하는 메소드 (Image Pyramid, Resize) 등을 전처리 후 적용합니다.</strong></p>\n\n<p>OpenCV에서는 변수나 필드에 설정된 이미지 크기로 원본 이미지를 불러올 경우, <strong>오류</strong>가 발생합니다. 그 이유는 변수나 필드에 설정된 속성 값은 <code class=\"highlighter-rouge\">액자</code>의 역할을 한다 볼 수 있습니다. 필드나 변수에 설정된 이미지의 크기에 따라 원본 이미지를 삽입하게 되는데, 이 경우 크기가 다르다면 <code class=\"highlighter-rouge\">액자</code>의 공간에 담을 수 없습니다. 그러므로, 원본 이미지의 크기를 변경한 후 설정된 변수나 필드에 포함되어야합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/ComputerVision/ch3/7.jpg\"><img src=\"/assets/images/ComputerVision/ch3/7.jpg\" alt=\"7\" /></a>\n앞선 이미지를 회전할 경우, 액자의 크기를 변경해주지 않는다면 아래와 같은 현상이 발생합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/ComputerVision/ch3/8.jpg\"><img src=\"/assets/images/ComputerVision/ch3/8.jpg\" alt=\"8\" /></a>\n원본 이미지에서 반 시계방향으로 <code class=\"highlighter-rouge\">45°</code> 회전하였을 경우, 각각의 모서리 부분이 잘려나가는 것을 확인 할 수 있습니다. 액자의 크기는 동일한 상태로 이미지를 회전하였을 경우, 이미지가 잘려나가거나 오류가 발생합니다. 또한, 의도하지 않은 이미지의 누락 현상이 발생합니다. 이를 해결하기 위해서 <strong>액자의 크기도 재 설정해주어야합니다.</strong></p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/ComputerVision/ch3/9.jpg\"><img src=\"/assets/images/ComputerVision/ch3/9.jpg\" alt=\"9\" /></a>\n액자의 크기까지 재 설정한 경우, 정상적으로 이미지가 잘려나가지 않게 표시되는것을 확인할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"정밀도-bit-depth\">정밀도 (Bit Depth)</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch3/3.jpg\"><img src=\"/assets/images/ComputerVision/ch3/3.jpg\" alt=\"3\" /></a>\n다음으로는 <code class=\"highlighter-rouge\">정밀도</code>입니다. <code class=\"highlighter-rouge\">비트 깊이</code>, <code class=\"highlighter-rouge\">색상 깊이</code>, <code class=\"highlighter-rouge\">색 심도</code> 등과 동일한 의미를 갖습니다. 정밀도란 이미지가 얼마나 많은 색상을 표현할 수 있는지를 의미합니다. 정밀도가 높을 수록 더 많은 색상을 표현할 수 있어서 데이터의 폭이 넓어지고 더 자연스러운 이미지로 표시됩니다. 반대로 정밀도가 낮을수록 육안으로 확인할 수 없을 정도의 변형됩니다. 일반적으로 유효 비트가 많을수록 데이터의 처리 결과는 더 정밀해집니다.</p>\n\n<p>여기서 <code class=\"highlighter-rouge\">비트 (Bit)</code>의 값이 색상의 표현 개수를 설정합니다. <code class=\"highlighter-rouge\">1-Bit</code>의 경우, <code class=\"highlighter-rouge\">0</code>과 <code class=\"highlighter-rouge\">1</code>의 두 가지의 값만 가지게 되어 모든 색상을 <code class=\"highlighter-rouge\">0</code>의 값을 지니는 색상과 <code class=\"highlighter-rouge\">1</code>의 값을 지니는 색상으로만 표현됩니다. 중요한 점은 <strong>두 가지의 색상이 아닌 두 가지의 값으로 표현할 수 있다는 의미입니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">8-Bit</code>의 경우, <strong>256</strong> 가지의 값을 가질 수 있습니다. <code class=\"highlighter-rouge\">2x2x2x2x2x2x2x2=256</code>을 의미합니다. 256 가지의 방법으로 값을 표현할 수 있습니다. 최소 <code class=\"highlighter-rouge\">8-Bit</code>를 가질 때 유의미한 데이터를 얻게되어 색상을 표현할 수 있습니다. <code class=\"highlighter-rouge\">8-Bit</code>의 정밀도를 사용할 경우, 흑백의 색상을 원할하게 표현할 수 있습니다. 주로, <strong>GrayScale</strong> 메소드에서 많이 활용합니다.</p>\n\n<p>OpenCV에서는 <code class=\"highlighter-rouge\">U8</code>의 값을 가장 많이 사용합니다. <code class=\"highlighter-rouge\">U8</code>은 <code class=\"highlighter-rouge\">unsigned 8-bit intergers</code>를 의미합니다. <strong>unsigned</strong>는 <code class=\"highlighter-rouge\">부호 비트</code>를 제거해 저장 가능한 양수의 범위를 두 배로 늘리는 역할을 합니다. <code class=\"highlighter-rouge\">signed</code>의 경우에는 <code class=\"highlighter-rouge\">-127~127</code>의 값을 표현할 수 있으며, <code class=\"highlighter-rouge\">unsigned</code>의 경우, <code class=\"highlighter-rouge\">0~255</code>의 값을 표현할 수 있습니다. 대부분의 색상 채널은 <code class=\"highlighter-rouge\">0~255</code>의 값으로 색상을 표현합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/ComputerVision/ch3/10.jpg\"><img src=\"/assets/images/ComputerVision/ch3/10.jpg\" alt=\"10\" /></a></p>\n\n<p>위의 이미지는 <code class=\"highlighter-rouge\">1-bit</code>, <code class=\"highlighter-rouge\">4-bit</code>, <code class=\"highlighter-rouge\">8-bit</code>를 표현한 이미지입니다. <code class=\"highlighter-rouge\">1-bit</code>의 이미지는 <code class=\"highlighter-rouge\">binary</code>한 이미지가 되며, <code class=\"highlighter-rouge\">4-bit</code>의 이미지는 <code class=\"highlighter-rouge\">저화질</code>의 이미지가 됩니다. <code class=\"highlighter-rouge\">8-bit</code>의 이미지는 <code class=\"highlighter-rouge\">GrayScale</code>의 이미지가 됩니다. 이미지의 <code class=\"highlighter-rouge\">정밀도</code>가 높을수록 더 고화질의 이미지가 되며, 데이터의 개수가 많아집니다. 처리하는 단계의 역할에 따라 적절한 정밀도를 선정해야합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"채널-channel\">채널 (Channel)</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch3/4.jpg\"><img src=\"/assets/images/ComputerVision/ch3/4.jpg\" alt=\"4\" /></a>\n마지막으로 <code class=\"highlighter-rouge\">채널</code>은 그래픽스 이미지의 색상 정보를 포함하고 있습니다. 채널은 일반적으로 <code class=\"highlighter-rouge\">Red</code>, <code class=\"highlighter-rouge\">Blue</code>, <code class=\"highlighter-rouge\">Green</code>과 추가적으로 <code class=\"highlighter-rouge\">Alpha</code>가 존재합니다. 이외에도 <code class=\"highlighter-rouge\">Hue</code>, <code class=\"highlighter-rouge\">Saturation</code>, <code class=\"highlighter-rouge\">Value</code> 등의 채널도 존재합니다.</p>\n\n<p>색상을 표시할 때는 주로, <code class=\"highlighter-rouge\">3~4</code> 채널의 값을 사용하고, 흑백의 이미지를 표현할 때는 <code class=\"highlighter-rouge\">1</code> 채널을 사용합니다. <code class=\"highlighter-rouge\">3~4</code> 개의 채널을 가질 때는 <code class=\"highlighter-rouge\">다 채널</code> 또는 <code class=\"highlighter-rouge\">다중 채널</code>을 뜻합니다. <code class=\"highlighter-rouge\">1</code> 개의 채널을 가질 때는 <code class=\"highlighter-rouge\">단일 채널</code>을 뜻합니다.</p>\n\n<p>색상 이미지 (RGB)에서 <code class=\"highlighter-rouge\">Red</code>의 값만 추출한다해서 빨간색으로 표현되지는 않습니다. 그 이유는 <strong>한 가지의 채널로만 색상을 표현</strong>해야하기 때문입니다. 다음의 이미지에서 이미지를 채널별로 분리했을 때의 결과를 확인할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/ComputerVision/ch3/5.jpg\"><img src=\"/assets/images/ComputerVision/ch3/5.jpg\" alt=\"5\" /></a>\n<code class=\"highlighter-rouge\">R의 성분</code>, <code class=\"highlighter-rouge\">G의 성분</code>, <code class=\"highlighter-rouge\">B의 성분</code>만 따로 뽑아내서 출력했지만 <code class=\"highlighter-rouge\">흑백</code>으로 출력됩니다. 즉, <strong>해당 성분에 가까울수록 하얀색으로 출력되고 아닌 값은 검은색으로 출력됩니다.</strong></p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/ComputerVision/ch3/6.jpg\"><img src=\"/assets/images/ComputerVision/ch3/6.jpg\" alt=\"6\" /></a>\n이미지에서 파란 부분의 색상 정보를 확인해보겠습니다. 보시는 바와 같이 아무리 파란색이라도 약간의 적색이나 녹색이 포함되어있습니다. 만약, 파란색의 색상만 출력하고 싶다면 채널을 <code class=\"highlighter-rouge\">다 채널</code>로 사용하고 파란색의 성분을 가지는 블루 채널을 <code class=\"highlighter-rouge\">마스크</code>로 씌우거나 <code class=\"highlighter-rouge\">Hue</code>의 색상을 가져와야 파란색의 색상으로 출력할 수 있습니다.</p>\n\n<p>간단하게 흑백이나 특정 색상 데이터를 가져온다면 채널은 <code class=\"highlighter-rouge\">단일 채널</code>로 사용해야합니다. 많은 함수나 메소드에서 계산 시, 데이터의 양을 줄이고 정확도를 높이기 위하여 <code class=\"highlighter-rouge\">단일 채널</code>로 계산을 진행합니다. 우리가 <code class=\"highlighter-rouge\">OpenCV</code>에서 알고리즘을 적용할 때, 계산 이미지를 <code class=\"highlighter-rouge\">Binary</code>나 <code class=\"highlighter-rouge\">GrayScale</code>을 적용하는 이유입니다.</p>\n\n<p><br />\n<br />\n<br /></p>\n\n<p>이미지의 속성 정보에 대한 이해는 매우 중요합니다. 세 가지 구성요소를 이해하지 못한다면 여러 함수나 알고리즘을 적용하는데 큰 어려움을 겪습니다. 위의 세 가지 구성요소는 <code class=\"highlighter-rouge\">데이터</code>를 의미합니다. <strong>데이터를 어떻게 정제하고 확장, 축소 시킬지의 여부가 알고리즘의 정확도에 큰 영향을 미칩니다.</strong> <code class=\"highlighter-rouge\">전처리</code>나 <code class=\"highlighter-rouge\">후처리</code> 작업을 진행할 때 큰 변수로 작용합니다.</p>\n\n<p><br />\n<br /></p>\n\n<ul>\n  <li>Writer by : 윤대희</li>\n</ul>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "Computer Vision Theory : Digital Image Processing 이란?",
      "category" : "",
      "tags"     : "Computer Vision",
      "url"      : "/posts/ComputerVision-2/",
      "date"     : "2018-10-20 00:00:00 +0900",
  "content"   : "<h3 id=\"digital-image-processing-이란\">Digital Image Processing 이란?</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch2/1.jpg\"><img src=\"/assets/images/ComputerVision/ch2/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">Digital Image Processing</code>이란 디지털 이미지를 신호 처리하는 분야로 이미지로부터 <strong>유의미한 정보를 얻기 위하여 사용되는 일련의 알고리즘</strong>을 의미합니다. <strong>변환, 분류, 탐지, 인식, 검출, 분석, 왜곡, 수정, 향상, 복원, 압축, 필터링</strong> 등의 다양한 처리를 할 수 있습니다.</p>\n\n<p>디지털 이미지는 <code class=\"highlighter-rouge\">2차원 배열</code> 형태로 표시할 수 있습니다. 그러므로, 2차원 평면 공간에서 이미지의 <code class=\"highlighter-rouge\">픽셀의 좌표</code>와 <code class=\"highlighter-rouge\">해당 값</code>을 알 수 있습니다. 이를 신호 처리 기법을 사용하여 원하는 정보를 얻을 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"digital-image-processing의-시작\">Digital Image Processing의 시작</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch2/2.jpg\"><img src=\"/assets/images/ComputerVision/ch2/2.jpg\" alt=\"2\" /></a>\n이미지 프로세싱은 1964년 미국의 <code class=\"highlighter-rouge\">제트추진연구소(Jet Propulsion Laboratory)</code>에서 시작되었습니다. <code class=\"highlighter-rouge\">미국 항공우주국(NASA)</code>의 우주 개발 계획, 무인 탐사 우주선 등의 연구 개발 및 운용을 담당하는 연구소입니다.</p>\n\n<p>달 표면을 찍은 위성 <strong>사진의 화질을 개선</strong>하기 위하여 디지털 컴퓨터를 사용하면서 디지털 이미지 프로세싱 분야가 탄생하였습니다. 이 후, 물체 인식, 제조 공정 자동화, 의료 영상 처리, 문자 인식, 얼굴 인식 등의 영역까지 발전하였습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"digital-image-processing의-분류\">Digital Image Processing의 분류</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch2/3.jpg\"><img src=\"/assets/images/ComputerVision/ch2/3.jpg\" alt=\"3\" /></a>\n이미지 프로세싱은 인식, 이해 등을 중점적으로 <strong>연구하고 해석</strong>하는 분야입니다. 영상이나 이미지를 <strong>재가공하여 정보를 추출하는 역할</strong>을 합니다. 주로, 인식, 분석, 조작 등을 처리합니다.</p>\n\n<p><code class=\"highlighter-rouge\">인식</code>은 육안으로 식별이 불가능한 영역에서 차이점을 찾아 다른 이미지 또는 영상과 <strong>비교 분석하여 특징을 찾는 것</strong>을 의미합니다. 예시로 지문 인식, 병변 검출 등입니다.</p>\n\n<p><code class=\"highlighter-rouge\">분석</code>은 이미지 프로세싱에 의하여 <strong>보정 및 변형된 이미지에서 특징을 찾아내는 것</strong>을 의미합니다. 물체의 치수를 측정하거나 위성 사진 분석 등을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">조작</code>은 이미지가 너무 흐리거나 노이즈가 많은 경우, 이를 <strong>보정하거나 원하는 정보를 얻기 위하여 변형</strong>하는 것을 의미합니다. 주로, 전처리 단계에서 가장 많이 쓰이며 가장 중요한 부분입니다.</p>\n\n<p><br />\n<br /></p>\n\n<ul>\n  <li>Writer by : 윤대희</li>\n</ul>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "Computer Vision Theory : Computer Vision 이란?",
      "category" : "",
      "tags"     : "Computer Vision",
      "url"      : "/posts/ComputerVision-1/",
      "date"     : "2018-10-15 00:00:00 +0900",
  "content"   : "<h3 id=\"computer-vision-이란\">Computer Vision 이란?</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch1/1.jpg\"><img src=\"/assets/images/ComputerVision/ch1/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">Computer Vision</code>이란 카메라나 스캐너 등 영상 입출력 매체를 통하여 입력 받은 이미지나 영상에서 <code class=\"highlighter-rouge\">물체 (Object)</code>, <code class=\"highlighter-rouge\">전경 (Foreground)</code>, <code class=\"highlighter-rouge\">배경 (Background)</code> 등 물체와 주변 환경에 대한 데이터를 분석하여 유의미한 정보를 생성하는 기술입니다.</p>\n\n<p><code class=\"highlighter-rouge\">Image Processing</code>을 통하여 필요한 정보를 생성합니다. 즉, 컴퓨터의 <strong>시각적인 능력에 판단 능력을 부여</strong>하여 데이터 (이미지, 동영상)를 <code class=\"highlighter-rouge\">가공</code> 및 <code class=\"highlighter-rouge\">해석</code>하는데 사용됩니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"opencv\">OpenCV</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch1/2.png\"><img src=\"/assets/images/ComputerVision/ch1/2.png\" alt=\"2\" /></a>\n<code class=\"highlighter-rouge\">OpenCV</code>는 <code class=\"highlighter-rouge\">Open Source Computer Vision Library</code> 약어로 오픈 소스 컴퓨터 비전 라이브러리입니다. 실시간 이미지 프로세싱에 중점을 둔 라이브러리입니다. Intel에서 최초로 개발되었으며 C/C++, C#, Python 등 공식적으로 지원합니다.</p>\n\n<p>OpenCV를 활용하여 <code class=\"highlighter-rouge\">물체인식</code>, <code class=\"highlighter-rouge\">얼굴인식</code>, <code class=\"highlighter-rouge\">제스처 인식</code>을 비롯하여 <strong>자율 주행 자동차</strong>, <strong>OCR 판독기</strong>, <strong>불량검사기</strong> 등에 활용할 수 있습니다. OpenCV는 영상 처리가 들어가는 프로그램이라면 가히 필수적으로 사용하게 되는 라이브러리입니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"cv에서의-하드웨어--소프트웨어의-역할\">C.V.에서의 하드웨어 &amp; 소프트웨어의 역할</h3>\n<hr />\n<p><a href=\"/assets/images/ComputerVision/ch1/3.jpg\"><img src=\"/assets/images/ComputerVision/ch1/3.jpg\" alt=\"3\" /></a></p>\n\n<p>컴퓨터는 <strong>하드웨어</strong>와 <strong>소프트웨어</strong>로 구성되어 있습니다. 성능이 좋은 소프트웨어를 구동하기 위해서는 당연히 성능이 좋은 하드웨어가 필요합니다. 슈퍼컴퓨터를 사용하는 이유도 이와 같습니다. 슈퍼컴퓨터는 계산 속도가 매우 빠르고 많은 자료를 오랜 시간 동안 꾸준히 처리할 수 있기 때문입니다.</p>\n\n<p>그렇다면, 영상 처리에서 하드웨어와 소프트웨어의 역할은 각각 무엇일까요? 하드웨어의 역할은 <strong>컴퓨터의 성능</strong>과 <strong>카메라의 성능</strong>이며 소프트웨어의 역할은 영상 처리를 할 <strong>알고리즘</strong>입니다. 알고리즘을 매우 정확하게 구현했다 하여도 이를 처리할 컴퓨터와 카메라의 성능이 좋지 않다면 결과는 오랜 시간 계산하여 처리하게 되고 정확도도 떨어지게 됩니다.</p>\n\n<p>컴퓨터의 성능은 영상 처리에서 <strong>알고리즘 처리 속도와 관련이 있으며 카메라의 성능은 정확도와 관련이 있습니다.</strong> 컴퓨터의 성능이 나쁘다면 그 만큼 계산 속도가 늘어나거나 실행조차 할 수 없습니다. 카메라의 성능이 나쁘다면 실제 물체는 붉은색이지만 카메라에서는 주황색으로 보일 수 있으며 녹색도 연두색으로 보일 수 있습니다.</p>\n\n<p>영상 처리를 하기 위한 실질적인 데이터는 카메라나 불러온 이미지를 통해 얻습니다. 당연히 이미지의 크기가 크고 색상을 정확히 표현해냈다면 이미지 크기만큼의 데이터와 정확한 색상 데이터를 얻어낼 수 있습니다. 물론, <strong>하드웨어의 성능이 좋다 해서 알고리즘의 결과도 좋아지지는 않습니다.</strong> 앞에서 설명했던 예시와 같이 정확한 알고리즘을 구현해야 하기 때문입니다.</p>\n\n<p>제작할 프로그램 설계를 효율적으로 진행하고 완성하기 위한 작업의 첫 걸음은 프로그램이 <strong>어떤 목적을 가지고 어떤 역할을 할지 정확하게 파악하는 것입니다.</strong> 이것은 카메라의 성능의 선택과 알고리즘의 구성 선택에 필연적인 영향을 미칩니다. 단순한 작업을 반복하고 정확도가 큰 비중을 차지 하지 않는 프로그램이라면 적합한 카메라의 성능과 알고리즘을 사용하여 더 적은 비용과 빠른 시간으로 원하는 프로그램을 만들 수 있습니다. <strong>만약 프로그램을 작성 도중 카메라의 성능을 변경시킨다면 일부 알고리즘을 수정하거나 모든 알고리즘을 수정하는 일이 발생할 수 있습니다.</strong> 그렇게 된다면 초기에 계획했던 비용과 시간이 늘어나게 됩니다.  프로그램의 목적을 정확히 파악하고 영상 처리에 필요한 적합한 하드웨어와 소프트웨어를 선택해야합니다.</p>\n\n<p><br />\n<br /></p>\n\n<ul>\n  <li>Writer by : 윤대희</li>\n</ul>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 61강 - 내부 채우기",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-61/",
      "date"     : "2018-10-13 00:00:00 +0900",
  "content"   : "<h3 id=\"내부-채우기-flood-fill\">내부 채우기 (Flood Fill)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch61/1.png\"><img src=\"/assets/images/C/opencv/ch61/1.png\" alt=\"1\" /></a>\n영상이나 이미지에서 지정된 색으로 연결된 객체의 <code class=\"highlighter-rouge\">내부</code>를 채우는데 사용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">fill</span><span class=\"p\">;</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">FloodFill</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">fill</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">fill</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n\n            <span class=\"n\">CvWindow</span> <span class=\"n\">win</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Window\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"p\">);</span>\n            <span class=\"n\">CvPoint</span> <span class=\"n\">Pt</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(-</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">CvConnectedComp</span> <span class=\"n\">Comp</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvConnectedComp</span><span class=\"p\">();</span>\n\n            <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"n\">OnMouseCallback</span> <span class=\"p\">+=</span> <span class=\"k\">delegate</span> <span class=\"p\">(</span><span class=\"n\">MouseEvent</span> <span class=\"n\">eve</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">MouseEvent</span> <span class=\"n\">flag</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">LButtonDown</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">Pt</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">);</span>\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FloodFill</span><span class=\"p\">(</span><span class=\"n\">fill</span><span class=\"p\">,</span> <span class=\"n\">Pt</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Black</span><span class=\"p\">,</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ScalarAll</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">),</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ScalarAll</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">),</span> <span class=\"k\">out</span> <span class=\"n\">Comp</span><span class=\"p\">,</span> <span class=\"n\">FloodFillFlag</span><span class=\"p\">.</span><span class=\"n\">Link8</span><span class=\"p\">);</span>\n                    <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">fill</span><span class=\"p\">);</span>\n                    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">Comp</span><span class=\"p\">.</span><span class=\"n\">Area</span><span class=\"p\">);</span>                \n                <span class=\"p\">}</span>\n                <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">RButtonDown</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">Pt</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">);</span>\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FloodFill</span><span class=\"p\">(</span><span class=\"n\">fill</span><span class=\"p\">,</span> <span class=\"n\">Pt</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">White</span><span class=\"p\">,</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ScalarAll</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">),</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ScalarAll</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">),</span> <span class=\"k\">out</span> <span class=\"n\">Comp</span><span class=\"p\">,</span> <span class=\"n\">FloodFillFlag</span><span class=\"p\">.</span><span class=\"n\">Link8</span><span class=\"p\">);</span>\n                    <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">fill</span><span class=\"p\">);</span>\n                    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">Comp</span><span class=\"p\">.</span><span class=\"n\">Area</span><span class=\"p\">);</span>                \n                <span class=\"p\">}</span>\n            <span class=\"p\">};</span>\n\n            <span class=\"k\">while</span><span class=\"p\">(</span><span class=\"k\">true</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"kt\">int</span> <span class=\"n\">key</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">WaitKey</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">);</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">key</span> <span class=\"p\">==</span> <span class=\"sc\">'r'</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">fill</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n                    <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">fill</span><span class=\"p\">);</span>\n                <span class=\"p\">}</span>\n                <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">key</span> <span class=\"p\">==</span> <span class=\"sc\">'q'</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DestroyAllWindows</span><span class=\"p\">();</span>\n                    <span class=\"k\">break</span><span class=\"p\">;</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>    \n            <span class=\"k\">return</span> <span class=\"n\">fill</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">fill</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">fill</span><span class=\"p\">);</span>   \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">fill</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">fill</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">fill</code>은 원본을 복사한 이미지입니다.</p>\n\n<p><code class=\"highlighter-rouge\">fill</code>에 <code class=\"highlighter-rouge\">src</code>를 복제하여 같은 이미지로 변경합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvWindow</span> <span class=\"n\">win</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Window\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"p\">);</span>\n<span class=\"n\">CvPoint</span> <span class=\"n\">Pt</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(-</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">CvConnectedComp</span> <span class=\"n\">Comp</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvConnectedComp</span><span class=\"p\">();</span></code></pre></figure>\n\n<p>윈도우 창 <code class=\"highlighter-rouge\">win</code>을 생성하고 초기 이미지를 <code class=\"highlighter-rouge\">fill</code>로 사용합니다.</p>\n\n<p>마우스 포인터의 위치로 사용할 <code class=\"highlighter-rouge\">Pt</code>를 <code class=\"highlighter-rouge\">-1, -1</code>의 좌표로 초기화합니다.</p>\n\n<p>함수를 구조화하기위한 포인터인 <code class=\"highlighter-rouge\">Comp</code>를 생성합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">Comp</code>에 내부 채우기를 실행했을 때 생성되는 <strong>정보</strong>가 담겨있습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">win</span><span class=\"p\">.</span><span class=\"n\">OnMouseCallback</span> <span class=\"p\">+=</span> <span class=\"k\">delegate</span> <span class=\"p\">(</span><span class=\"n\">MouseEvent</span> <span class=\"n\">eve</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">MouseEvent</span> <span class=\"n\">flag</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">LButtonDown</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"p\">...</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">RButtonDown</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"p\">...</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">};</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">마우스 콜백 이벤트</code>를 <code class=\"highlighter-rouge\">delegate</code> 형식으로 적용하여 <code class=\"highlighter-rouge\">클래스</code> 내부에서도 함수가 작동하게 생성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">LButtonDown</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Pt</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">);</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FloodFill</span><span class=\"p\">(</span><span class=\"n\">fill</span><span class=\"p\">,</span> <span class=\"n\">Pt</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Black</span><span class=\"p\">,</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ScalarAll</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">),</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ScalarAll</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">),</span> <span class=\"k\">out</span> <span class=\"n\">Comp</span><span class=\"p\">,</span> <span class=\"n\">FloodFillFlag</span><span class=\"p\">.</span><span class=\"n\">Link8</span><span class=\"p\">);</span>\n    <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">fill</span><span class=\"p\">);</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">Comp</span><span class=\"p\">.</span><span class=\"n\">Area</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">RButtonDown</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Pt</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">);</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FloodFill</span><span class=\"p\">(</span><span class=\"n\">fill</span><span class=\"p\">,</span> <span class=\"n\">Pt</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">White</span><span class=\"p\">,</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ScalarAll</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">),</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ScalarAll</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">),</span> <span class=\"k\">out</span> <span class=\"n\">Comp</span><span class=\"p\">,</span> <span class=\"n\">FloodFillFlag</span><span class=\"p\">.</span><span class=\"n\">Link8</span><span class=\"p\">);</span>\n    <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">fill</span><span class=\"p\">);</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">Comp</span><span class=\"p\">.</span><span class=\"n\">Area</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Pt</code>에 현재 마우스 좌표를 저장합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.FloodFill()</code>를 이용하여 <strong>내부 채우기</strong>를 실행합니다. <code class=\"highlighter-rouge\">Cv.FloodFill(계산 이미지, 내부 채우기 색상, 하한 값, 상한 값, 연결 요소, 연결성)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">하한 값</code>은 <code class=\"highlighter-rouge\">Pt</code> 위치에서의 <strong>(해당 색상 값 - 하한 값)</strong>의 색상까지는 같은 색상으로 간주합니다.</p>\n\n<p><code class=\"highlighter-rouge\">상한 값</code>은 <code class=\"highlighter-rouge\">Pt</code> 위치에서의 <strong>(해당 색상 값 + 상한 값)</strong>의 색상까지는 같은 색상으로 간주합니다.</p>\n\n<p><code class=\"highlighter-rouge\">연결 요소</code>는 내부 채우기를 실행하였을 때의 <strong>정보</strong>가 담겨있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">연결성</code>은 픽셀의 어떠한 <strong>이웃 값</strong>이 고려될지를 설정합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">FloodFillFlag.*</code>\n    <ul>\n      <li><code class=\"highlighter-rouge\">Link4</code> : 이웃한 4 픽셀을 고려합니다.</li>\n      <li><code class=\"highlighter-rouge\">Link8</code> : 이웃한 8 픽셀을 고려합니다.</li>\n      <li><code class=\"highlighter-rouge\">FixedRange</code> : 시드 픽셀간의 차이를 고려합니다.</li>\n      <li><code class=\"highlighter-rouge\">MaskOnly</code> : 이미지를 변경하지 않고, 마스크를 채웁니다.</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">마스크</code>의 파라미터는 <code class=\"highlighter-rouge\">연결성</code> 파라미터 이후에 콤마 (,)를 추가하여 값을 할당할 수 있습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">while</span><span class=\"p\">(</span><span class=\"k\">true</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">key</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">WaitKey</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">);</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">key</span> <span class=\"p\">==</span> <span class=\"sc\">'r'</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">fill</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n        <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">fill</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">key</span> <span class=\"p\">==</span> <span class=\"sc\">'q'</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DestroyAllWindows</span><span class=\"p\">();</span>\n        <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">키 이벤트</code>를 사용하여 <code class=\"highlighter-rouge\">r</code>키가 눌러졌을 때, 이미지를 초기화하며 <code class=\"highlighter-rouge\">q</code>키가 눌러졌을 때, 종료합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch61/2.png\"><img src=\"/assets/images/C/opencv/ch61/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 20강 - 캡쳐 및 녹화",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-20/",
      "date"     : "2018-10-07 00:00:00 +0900",
  "content"   : "<h3 id=\"캡쳐-및-녹화-capture--record\">캡쳐 및 녹화 (Capture &amp; Record)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch20/1.png\"><img src=\"/assets/images/Python/opencv/ch20/1.png\" alt=\"1\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">캡쳐하거나 녹화</code>하기 위해 사용합니다. 영상이나 이미지를 <code class=\"highlighter-rouge\">연속적 또는 순간적으로 캡쳐하거나 녹화</code>할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">capture</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">VideoCapture</span><span class=\"p\">(</span><span class=\"s\">\"/Image/Star.mp4\"</span><span class=\"p\">)</span>\n<span class=\"n\">fourcc</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">VideoWriter_fourcc</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"s\">'XVID'</span><span class=\"p\">)</span>\n<span class=\"n\">record</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n\n<span class=\"k\">while</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CAP_PROP_POS_FRAMES</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CAP_PROP_FRAME_COUNT</span><span class=\"p\">)):</span>\n        <span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">\"/Image/Star.mp4\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"VideoFrame\"</span><span class=\"p\">,</span> <span class=\"n\">frame</span><span class=\"p\">)</span>\n\n    <span class=\"n\">now</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"si\">%</span><span class=\"s\">d_</span><span class=\"si\">%</span><span class=\"s\">H-</span><span class=\"si\">%</span><span class=\"s\">M-</span><span class=\"si\">%</span><span class=\"s\">S\"</span><span class=\"p\">)</span>\n    <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">33</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"mi\">27</span><span class=\"p\">:</span>\n        <span class=\"k\">break</span>\n    <span class=\"k\">elif</span> <span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"mi\">26</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"캡쳐\"</span><span class=\"p\">)</span>\n        <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imwrite</span><span class=\"p\">(</span><span class=\"s\">\"D:/\"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s\">\".png\"</span><span class=\"p\">,</span> <span class=\"n\">frame</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"mi\">24</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"녹화 시작\"</span><span class=\"p\">)</span>\n        <span class=\"n\">record</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n        <span class=\"n\">video</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">VideoWriter</span><span class=\"p\">(</span><span class=\"s\">\"D:/\"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s\">\".avi\"</span><span class=\"p\">,</span> <span class=\"n\">fourcc</span><span class=\"p\">,</span> <span class=\"mf\">20.0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n    <span class=\"k\">elif</span> <span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"녹화 중지\"</span><span class=\"p\">)</span>\n        <span class=\"n\">record</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n        <span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">()</span>\n        \n    <span class=\"k\">if</span> <span class=\"n\">record</span> <span class=\"o\">==</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"녹화 중..\"</span><span class=\"p\">)</span>\n        <span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">)</span>\n\n<span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">()</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">fourcc</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">VideoWriter_fourcc</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"s\">'XVID'</span><span class=\"p\">)</span>\n<span class=\"n\">record</span> <span class=\"o\">=</span> <span class=\"bp\">False</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">fourcc</code>를 생성하여 <strong>디지털 미디어 포맷 코드</strong>를 생성합니다. <code class=\"highlighter-rouge\">cv2.VideoWriter_fourcc(*'코덱')</code>을 사용하여 인코딩 방식을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">record</code> 변수를 생성하여 <code class=\"highlighter-rouge\">녹화 유/무</code>를 설정합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">FourCC(Four Character Code)</code> : 디지털 미디어 포맷 코드입니다. 즉, <strong>코덱의 인코딩 방식</strong>을 의미합니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n\n<span class=\"n\">now</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"si\">%</span><span class=\"s\">d_</span><span class=\"si\">%</span><span class=\"s\">H-</span><span class=\"si\">%</span><span class=\"s\">M-</span><span class=\"si\">%</span><span class=\"s\">S\"</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">datetime</code> 모듈을 포함하여 <strong>현재 시간</strong>을 받아와 제목으로 사용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">now</code>에 파일의 제목을 설정합니다. <code class=\"highlighter-rouge\">날짜_시간-분-초</code>의 형식으로 제목이 생성됩니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">33</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">key</code> 값에 현재 눌러진 <code class=\"highlighter-rouge\">키보드 키</code>의 값이 저장됩니다. <code class=\"highlighter-rouge\">33ms</code>마다 갱신됩니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">if</span> <span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"mi\">27</span><span class=\"p\">:</span>\n    <span class=\"k\">break</span>\n<span class=\"k\">elif</span> <span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"mi\">26</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"캡쳐\"</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imwrite</span><span class=\"p\">(</span><span class=\"s\">\"D:/\"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s\">\".png\"</span><span class=\"p\">,</span> <span class=\"n\">frame</span><span class=\"p\">)</span>\n<span class=\"k\">elif</span> <span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"mi\">24</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"녹화 시작\"</span><span class=\"p\">)</span>\n    <span class=\"n\">record</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n    <span class=\"n\">video</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">VideoWriter</span><span class=\"p\">(</span><span class=\"s\">\"D:/\"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s\">\".avi\"</span><span class=\"p\">,</span> <span class=\"n\">fourcc</span><span class=\"p\">,</span> <span class=\"mf\">20.0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n<span class=\"k\">elif</span> <span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"녹화 중지\"</span><span class=\"p\">)</span>\n    <span class=\"n\">record</span> <span class=\"o\">=</span> <span class=\"bp\">False</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">if-elif</code>`문을 이용하여 눌러진 키의 값을 판단합니다.</p>\n\n<p><code class=\"highlighter-rouge\">27 = ESC</code>, <code class=\"highlighter-rouge\">26 = Ctrl + Z</code>, <code class=\"highlighter-rouge\">24 = Ctrl + X</code>, <code class=\"highlighter-rouge\">3 = Ctrl + C</code>를 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">ESC</code>키를 눌렀을 경우, 프로그램을 종료합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Ctrl + Z</code>를 눌렀을 경우, 현재 화면을 <strong>캡쳐</strong>합니다. <code class=\"highlighter-rouge\">cv2.imwrite(\"경로 및 제목\", 이미지)</code>를 이용하여 해당 <code class=\"highlighter-rouge\">이미지</code>를 저장합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Ctrl + X</code>를 눌렀을 경우, <strong>녹화를 시작합니다.</strong> <code class=\"highlighter-rouge\">video</code>에 녹화할 파일 형식을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.VideoWriter(\"경로 및 제목\", 비디오 포맷 코드, FPS, (녹화 파일 너비, 녹화 파일 높이))</code>를 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Ctrl + C</code>를 눌렀을 경우, <strong>녹화를 중지합니다.</strong> <code class=\"highlighter-rouge\">video.release()</code>를 사용하여 <code class=\"highlighter-rouge\">메모리</code>를 해제합니다.</p>\n\n<p>녹화 시작할 때, <code class=\"highlighter-rouge\">record</code>를 <code class=\"highlighter-rouge\">True</code>로, 녹화를 중지할 때 <code class=\"highlighter-rouge\">record</code>를 <code class=\"highlighter-rouge\">False</code>로 변경합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">key</code> 값은 <code class=\"highlighter-rouge\">아스키 값</code>을 사용합니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">FPS(Frame Per Second)</code> : 영상이 바뀌는 속도를 의미합니다. 즉, 화면의 부드러움을 의미합니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">frame.shape</code>는 (높이, 너비, 채널)의 값이 저장되어있습니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">if</span> <span class=\"n\">record</span> <span class=\"o\">==</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"녹화 중..\"</span><span class=\"p\">)</span>\n    <span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">if</code>문을 이용하여 <code class=\"highlighter-rouge\">record</code>가 <code class=\"highlighter-rouge\">True</code>일때 <code class=\"highlighter-rouge\">video</code>에 `프레임을 저장합니다.</p>\n\n<p><code class=\"highlighter-rouge\">video.write(저장할 프레임)</code>을 사용하여 프레임을 저장할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"additional-information\">Additional Information</h3>\n<hr />\n\n<h4 id=\"fourcc-종류\">FourCC 종류</h4>\n\n<p><code class=\"highlighter-rouge\">CVID</code>, <code class=\"highlighter-rouge\">Default</code>, <code class=\"highlighter-rouge\">DIB</code>, <code class=\"highlighter-rouge\">DIVX</code>, <code class=\"highlighter-rouge\">H261</code>, <code class=\"highlighter-rouge\">H263</code>, <code class=\"highlighter-rouge\">H264</code>, <code class=\"highlighter-rouge\">IV32</code>, <code class=\"highlighter-rouge\">IV41</code>, <code class=\"highlighter-rouge\">IV50</code>, <code class=\"highlighter-rouge\">IYUB</code>, <code class=\"highlighter-rouge\">MJPG</code>, <code class=\"highlighter-rouge\">MP42</code>, <code class=\"highlighter-rouge\">MP43</code>, <code class=\"highlighter-rouge\">MPG4</code>, <code class=\"highlighter-rouge\">MSVC</code>, <code class=\"highlighter-rouge\">PIM1</code>, <code class=\"highlighter-rouge\">Prompt</code>, <code class=\"highlighter-rouge\">XVID</code></p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">단일 채널</code> 이미지의 경우, 사용할 수 없는 <code class=\"highlighter-rouge\">디지털 미디어 포맷 코드</code>가 존재합니다.</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 19강 - 기하학적 변환",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-19/",
      "date"     : "2018-09-29 00:00:00 +0900",
  "content"   : "<h3 id=\"기하학적-변환--warp-perspective\">기하학적 변환  (Warp Perspective)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch19/1.jpg\"><img src=\"/assets/images/Python/opencv/ch19/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지 위에 <code class=\"highlighter-rouge\">기하학적으로 변환</code>하기 위해 사용합니다. 영상이나 이미지를 <strong>펼치거나 좁힐 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">WarpPerspective</code>의 경우 4개의 점을 매핑합니다. (4개의 점을 이용한 변환)</li>\n  <li>Tip : <code class=\"highlighter-rouge\">WarpAffine</code>의 경우 3개의 점을 매핑합니다. (3개의 점을 이용한 변환)</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/harvest.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n<span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n\n<span class=\"n\">srcPoint</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">]],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n<span class=\"n\">dstPoint</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">]],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n<span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">getPerspectiveTransform</span><span class=\"p\">(</span><span class=\"n\">srcPoint</span><span class=\"p\">,</span> <span class=\"n\">dstPoint</span><span class=\"p\">)</span>\n\n<span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">warpPerspective</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">matrix</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">))</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"dst\"</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">srcPoint</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">]],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n<span class=\"n\">dstPoint</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">]],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span></code></pre></figure>\n\n<p>원본 이미지에서 4점 변환할 <code class=\"highlighter-rouge\">srcPoint</code>와 결과 이미지의 위치가 될 <code class=\"highlighter-rouge\">dstPoint</code>를 선언합니다.</p>\n\n<p>좌표의 순서는 <code class=\"highlighter-rouge\">좌상</code>, <code class=\"highlighter-rouge\">우상</code>, <code class=\"highlighter-rouge\">우하</code>, <code class=\"highlighter-rouge\">좌하</code> 순서입니다. <code class=\"highlighter-rouge\">numpy</code> 형태로 선언하며, 좌표의 순서는 <strong>원본 순서와 결과 순서가 동일해야합니다.</strong></p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">dtype</code>을 <code class=\"highlighter-rouge\">float32</code> 형식으로 선언해야 사용할 수 있습니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">getPerspectiveTransform</span><span class=\"p\">(</span><span class=\"n\">srcPoint</span><span class=\"p\">,</span> <span class=\"n\">dstPoint</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">기하학적 변환</code>을 위하여 <code class=\"highlighter-rouge\">cv2.getPerspectiveTransform(원본 좌표 순서, 결과 좌표 순서)</code>를 사용하여 <code class=\"highlighter-rouge\">matrix</code>를 생성합니다.</p>\n\n<p>다음과 같은 형식으로 매트릭스가 생성됩니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"p\">[[</span><span class=\"o\">-</span><span class=\"mf\">2.88000000e+01</span> <span class=\"o\">-</span><span class=\"mf\">9.60000000e+00</span>  <span class=\"mf\">1.05600000e+04</span><span class=\"p\">]</span>\n <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">4.44089210e-15</span> <span class=\"o\">-</span><span class=\"mf\">2.15400000e+01</span>  <span class=\"mf\">4.30800000e+03</span><span class=\"p\">]</span>\n <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">1.77809156e-17</span> <span class=\"o\">-</span><span class=\"mf\">2.00000000e-02</span>  <span class=\"mf\">1.00000000e+00</span><span class=\"p\">]]</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">warpPerspective</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">matrix</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">))</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.warpPerspective(원본 이미지, 매트릭스, (결과 이미지 너비, 결과 이미지 높이))</code>를 사용하여 이미지를 <strong>변환할 수 있습니다.</strong></p>\n\n<p>저장된 <strong>매트릭스 값</strong>을 사용하여 이미지를 변환합니다.</p>\n\n<p>이외에도, <code class=\"highlighter-rouge\">보간법</code>, <code class=\"highlighter-rouge\">픽셀 외삽법</code>을 추가적인 파라미터로 사용할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch19/2.png\"><img src=\"/assets/images/Python/opencv/ch19/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 18강 - Drawing",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-18/",
      "date"     : "2018-09-24 00:00:00 +0900",
  "content"   : "<h3 id=\"그래픽-드로잉-drawing\">그래픽 드로잉 (Drawing)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch18/1.png\"><img src=\"/assets/images/Python/opencv/ch18/1.png\" alt=\"1\" /></a>\n영상이나 이미지 위에 그래픽을 그리기 위해 사용합니다. <code class=\"highlighter-rouge\">선</code>, <code class=\"highlighter-rouge\">원</code>, <code class=\"highlighter-rouge\">사각형</code> 등을 그릴 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">768</span><span class=\"p\">,</span> <span class=\"mi\">1366</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">dtype</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">)</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1200</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">LINE_AA</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">circle</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">),</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">FILLED</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">LINE_4</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">rectangle</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mi\">400</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">LINE_8</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">ellipse</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">1200</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">pts1</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">]])</span>\n<span class=\"n\">pts2</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">800</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">700</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">]])</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">polylines</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">pts1</span><span class=\"p\">],</span> <span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">fillPoly</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">pts2</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">LINE_AA</span><span class=\"p\">)</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">putText</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"s\">\"YUNDAEHEE\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">900</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">),</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">FONT_HERSHEY_COMPLEX</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"src\"</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1200</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">LINE_AA</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.line(이미지, (x1, y1), (x2, y2), (B, G, R), 두께, 선형 타입)</code>을 이용하여 <code class=\"highlighter-rouge\">선</code>을 그릴 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">(x1, y1)</code>과 <code class=\"highlighter-rouge\">(x2, y2)</code>가 연결된 <code class=\"highlighter-rouge\">(B, G, R)</code> 색상, <code class=\"highlighter-rouge\">두께</code> 굵기의 선을 그릴 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">선형 타입</code>은 선의 <strong>연결성</strong>을 의미합니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">circle</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">),</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">FILLED</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">LINE_4</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.circle(이미지, (x, y), 반지름, (B, G, R), 두께, 선형 타입)</code>을 이용하여 <code class=\"highlighter-rouge\">원</code>을 그릴 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">(x, y)</code> 중심점을 가지는 <code class=\"highlighter-rouge\">반지름</code> 크기로 설정된 <code class=\"highlighter-rouge\">(B, G, R)</code> 색상, <code class=\"highlighter-rouge\">두께</code> 굵기의 원을 그릴 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 내부를 채우는 경우, 두께를 <code class=\"highlighter-rouge\">cv2.FILLED</code>을 사용하여 내부를 채울 수 있습니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">rectangle</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mi\">400</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">LINE_8</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.rectangle(이미지, (x1, y1), (x2, y2), (B, G, R), 두께, 선형 타입)</code>을 이용하여 <code class=\"highlighter-rouge\">사각형</code>을 그릴 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">(x1, y1)</code>의 좌측 상단 모서리와 <code class=\"highlighter-rouge\">(x2, y2)</code>의 우측 하단 모서리가 연결된 <code class=\"highlighter-rouge\">(B, G, R)</code> 색상, <code class=\"highlighter-rouge\">두께</code> 굵기의 사각형을 그릴 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">ellipse</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">1200</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.ellipse(이미지, (x, y), (lr, sr), 각도, 시작 각도, 종료 각도, (B, G, R), 두께, 선형 타입)</code>을 이용하여 <code class=\"highlighter-rouge\">타원</code>을 그릴 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">(x, y)</code>의 중심점을 가지며 중심에서 가장 먼 거리를 가지는 <code class=\"highlighter-rouge\">lr</code>과 가장 가까운 거리를 가지는 <code class=\"highlighter-rouge\">sr</code>의 타원을 <code class=\"highlighter-rouge\">각도</code>만큼 기울어진 타원를 생성합니다.</p>\n\n<p><code class=\"highlighter-rouge\">시작 각도</code>와 <code class=\"highlighter-rouge\">종료 각도</code>를 설정하여 <code class=\"highlighter-rouge\">호</code>의 형태로 그리며 <code class=\"highlighter-rouge\">(B, G, R)</code> 색상, <code class=\"highlighter-rouge\">두께</code> 굵기의 타원을 그릴 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">선형 타입</code>은 설정하지 않아도 사용할 수 있습니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">pts1</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">]])</span>\n<span class=\"n\">pts2</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">800</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">700</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">]])</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">poly</code> 함수를 사용하는 경우, <code class=\"highlighter-rouge\">numpy</code> 형태로 저장된 <code class=\"highlighter-rouge\">위치 좌표</code>들이 필요합니다.</p>\n\n<p><code class=\"highlighter-rouge\">n</code>개의 점이 저장된 경우, <code class=\"highlighter-rouge\">n각형</code>을 그릴 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">polylines</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">pts1</span><span class=\"p\">],</span> <span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.polylines(이미지, [위치 좌표], 닫힘 유/무, (B, G, R), 두께, 선형 타입 )</code>을 이용하여 <code class=\"highlighter-rouge\">다각형</code>을 그릴 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">[위치 좌표]</code>들의 지점들을 가지며 <code class=\"highlighter-rouge\">시작점</code>과 <code class=\"highlighter-rouge\">도착점</code>이 연결되어있는지 <code class=\"highlighter-rouge\">닫힘 유/무</code>를 설정하여 <code class=\"highlighter-rouge\">(B, G, R)</code> 색상, <code class=\"highlighter-rouge\">두께</code> 굵기의 다각형을 그릴 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">fillPoly</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">pts2</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">LINE_AA</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.fillPoly(이미지, [위치 좌표], (B, G, R), 두께, 선형 타입 )</code>을 이용하여 <code class=\"highlighter-rouge\">내부가 채워진 다각형</code>을 그릴 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">[위치 좌표]</code>들의 지점들을 가지며 <code class=\"highlighter-rouge\">(B, G, R)</code> 색상, <code class=\"highlighter-rouge\">두께</code> 굵기의 내부가 채워진 다각형을 그릴 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">putText</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"s\">\"YUNDAEHEE\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">900</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">),</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">FONT_HERSHEY_COMPLEX</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"mi\">3</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.putText(이미지, 문자, (x, y), 글꼴, 글자 크기, (B, G, R), 두께, 선형 타입)</code>을 이용하여 <code class=\"highlighter-rouge\">문자</code>를 그릴 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">문자</code> 내용을 가지는 문자열을 <code class=\"highlighter-rouge\">(x, y)</code> 위치에 표시합니다. <code class=\"highlighter-rouge\">글꼴</code>와 <code class=\"highlighter-rouge\">글자 크기</code>를 가지며 <code class=\"highlighter-rouge\">(B, G, R)</code> 색상, <code class=\"highlighter-rouge\">두께</code> 굵기의 문자를 그릴 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 문자의 위치는 좌표의 <code class=\"highlighter-rouge\">좌측 하단</code>을 기준으로 글자가 생성됩니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"additional-information\">Additional Information</h3>\n<hr />\n\n<h4 id=\"선형-타입-종류\">선형 타입 종류</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">속성</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cv2.FILLED</td>\n      <td style=\"text-align: center\">내부 채우기</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.LINE_4</td>\n      <td style=\"text-align: center\">4점 이웃 연결</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.LINE_8</td>\n      <td style=\"text-align: center\">8점 이웃 연결</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.LINE_AA</td>\n      <td style=\"text-align: center\">AntiAlias</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<h4 id=\"글꼴-종류\">글꼴 종류</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">속성</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">비고</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cv2.FONT_HERSHEY_SIMPLEX</td>\n      <td style=\"text-align: center\">보통 크기의 산세리프 글꼴</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.FONT_HERSHEY_PLAIN</td>\n      <td style=\"text-align: center\">작은 크기의 산세리프 글꼴</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.FONT_HERSHEY_DUPLEX</td>\n      <td style=\"text-align: center\">보통 크기의 산세리프 글꼴</td>\n      <td style=\"text-align: center\">정교함</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.FONT_HERSHEY_COMPLEX</td>\n      <td style=\"text-align: center\">보통 크기의 세리프 글꼴</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.FONT_HERSHEY_TRIPLEX</td>\n      <td style=\"text-align: center\">보통 크기의 세리프 글꼴</td>\n      <td style=\"text-align: center\">정교함</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.FONT_HERSHEY_COMPLEX_SMALL</td>\n      <td style=\"text-align: center\">작은 크기의 손글씨 글꼴</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.FONT_HERSHEY_SCRIPT_SIMPLEX</td>\n      <td style=\"text-align: center\">보통 크기의 손글씨 글꼴</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.FONT_HERSHEY_SCRIPT_COMPLEX</td>\n      <td style=\"text-align: center\">보통 크기의 손글씨 글꼴</td>\n      <td style=\"text-align: center\">정교함</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.FONT_ITALIC</td>\n      <td style=\"text-align: center\">기울임 꼴</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<h4 id=\"추가-옵션\">추가 옵션</h4>\n\n<p><code class=\"highlighter-rouge\">shift</code> : 좌표를 <code class=\"highlighter-rouge\">Shift(비트 연산)</code>만큼 이동시켜 표시합니다.</p>\n\n<p><code class=\"highlighter-rouge\">offset</code> : 좌표를 <code class=\"highlighter-rouge\">(x, y)</code>만큼 이동시켜 표시합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch18/1.png\"><img src=\"/assets/images/Python/opencv/ch18/1.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 17강 - 채널 분리 &amp; 병합",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-17/",
      "date"     : "2018-09-15 00:00:00 +0900",
  "content"   : "<h3 id=\"채널-분리--병합--split--merge\">채널 분리 &amp; 병합  (Split &amp; Merge)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch17/1.jpg\"><img src=\"/assets/images/Python/opencv/ch17/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">채널</code>을 나누고 합치기 위해 사용합니다. 채널을 <code class=\"highlighter-rouge\">B(Blue)</code>, <code class=\"highlighter-rouge\">G(Green)</code>, <code class=\"highlighter-rouge\">R(Red)</code>로 분리하여 채널을 변환할 수 있습니다.</p>\n\n<ul>\n  <li>Tip : OpenCV의 가산혼합의 삼원색 <strong>기본 배열순서</strong>는 <code class=\"highlighter-rouge\">BGR</code>입니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/tomato.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n<span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"n\">inversebgr</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">merge</span><span class=\"p\">((</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">))</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"b\"</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"g\"</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"r\"</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"inverse\"</span><span class=\"p\">,</span> <span class=\"n\">inversebgr</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">b, g, r = cv2.split(이미지)</code>를 이용하여 채널을 분리합니다.</p>\n\n<p>채널에 순서의 맞게 각 변수에 대입됩니다.</p>\n\n<p>분리된 채널들은 <code class=\"highlighter-rouge\">단일 채널</code>이므로 흑백의 색상으로만 표현됩니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">inversebgr</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">merge</span><span class=\"p\">((</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">))</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.merge((채널1, 채널2, 채널3))</code>을 이용하여 나눠진 채널을 <strong>다시 병합</strong>할 수 있습니다.</p>\n\n<p>채널을 변형한 뒤에 <strong>다시 합치거나 순서를 변경</strong>하여 병합할 수 있습니다.</p>\n\n<p>순서가 변경될 경우, 원본 이미지와 다른 색상으로 표현됩니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"additional-information\">Additional Information</h3>\n<hr />\n\n<h4 id=\"numpy-형식-채널-분리\">numpy 형식 채널 분리</h4>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"p\">[:,:,</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"p\">[:,:,</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"p\">[:,:,</span><span class=\"mi\">2</span><span class=\"p\">]</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">이미지[높이, 너비, 채널]</code>을 이용하여 <strong>특정 영역</strong>의 <strong>특정 채널</strong>만 불러올 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">:, :,  n</code>을 입력할 경우, 이미지 <code class=\"highlighter-rouge\">높이와 너비</code>를 그대로 반환하고 <code class=\"highlighter-rouge\">n</code>번째 채널만 반환하여 적용합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h4 id=\"빈-이미지\">빈 이미지</h4>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"n\">zero</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">dtype</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">)</span>\n<span class=\"n\">bgz</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">merge</span><span class=\"p\">((</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">zero</span><span class=\"p\">))</span></code></pre></figure>\n\n<p>검은색 빈 공간 이미지가 필요할 때는 <code class=\"highlighter-rouge\">np.zeros((높이, 너비, 채널), dtype=정밀도)</code>을 이용하여 빈 이미지를 생성할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">Blue, Green, Zero</code>이미지를 병합할 경우, <code class=\"highlighter-rouge\">Red</code> 채널 영역이 모두 <code class=\"highlighter-rouge\">흑백</code>이미지로 변경됩니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">import numpy as np</code>가 포함된 상태여야합니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch17/2.png\"><img src=\"/assets/images/Python/opencv/ch17/2.png\" alt=\"2\" /></a></p>\n\n<p><a href=\"/assets/images/Python/opencv/ch17/3.png\"><img src=\"/assets/images/Python/opencv/ch17/3.png\" alt=\"3\" /></a></p>\n\n<p><a href=\"/assets/images/Python/opencv/ch17/4.png\"><img src=\"/assets/images/Python/opencv/ch17/4.png\" alt=\"4\" /></a></p>\n\n<p><a href=\"/assets/images/Python/opencv/ch17/5.png\"><img src=\"/assets/images/Python/opencv/ch17/5.png\" alt=\"5\" /></a></p>\n\n<p><a href=\"/assets/images/Python/opencv/ch17/6.png\"><img src=\"/assets/images/Python/opencv/ch17/6.png\" alt=\"6\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 16강 - 채널 범위 병합",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-16/",
      "date"     : "2018-09-09 00:00:00 +0900",
  "content"   : "<h3 id=\"채널-범위-병합-addweighted\">채널 범위 병합 (addWeighted)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch16/1.jpg\"><img src=\"/assets/images/Python/opencv/ch16/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">색상</code>을 검출 할 때, <code class=\"highlighter-rouge\">cv2.inRange()</code>의 영역이 한정되어 색상을 설정하는 부분이 한정되어 있습니다. 이 때 <strong>특정 범위들을 병합할 때 사용합니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/tomato.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n<span class=\"n\">hsv</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_BGR2HSV</span><span class=\"p\">)</span>\n<span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">hsv</span><span class=\"p\">)</span>\n\n<span class=\"n\">lower_red</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">inRange</span><span class=\"p\">(</span><span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">))</span>\n<span class=\"n\">upper_red</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">inRange</span><span class=\"p\">(</span><span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">170</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">))</span>\n<span class=\"n\">added_red</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">addWeighted</span><span class=\"p\">(</span><span class=\"n\">lower_red</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">upper_red</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">)</span>\n\n<span class=\"n\">red</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">bitwise_and</span><span class=\"p\">(</span><span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">added_red</span><span class=\"p\">)</span>\n<span class=\"n\">red</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">red</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_HSV2BGR</span><span class=\"p\">)</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"red\"</span><span class=\"p\">,</span> <span class=\"n\">red</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">lower_red</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">inRange</span><span class=\"p\">(</span><span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">))</span>\n<span class=\"n\">upper_red</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">inRange</span><span class=\"p\">(</span><span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">170</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">))</span>\n<span class=\"n\">added_red</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">addWeighted</span><span class=\"p\">(</span><span class=\"n\">lower_red</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">upper_red</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">빨간색</code> 영역은 <code class=\"highlighter-rouge\">0 ~ 5</code>, <code class=\"highlighter-rouge\">170 ~ 180</code>의 범위로 두부분으로 나뉘어 있습니다. 이 때, 두 부분을 합쳐서 한 번에 출력하기 위해서 사용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.inRange(다채널 이미지, (채널1 최솟값, 채널2 최솟값, 채널3 최솟값), (채널1 최댓값, 채널2 최댓값, 채널3 최댓값))</code>을 통하여 다채널 이미지도 한 번에 범위를 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">HSV</code> 형식이므로 각각의 <code class=\"highlighter-rouge\">h</code>, <code class=\"highlighter-rouge\">s</code>, <code class=\"highlighter-rouge\">v</code> 범위를 한 번에 설정합니다.</p>\n\n<p>분리된 채널을 <code class=\"highlighter-rouge\">cv2.addWeighted(이미지1, 이미지1 비율, 이미지2, 이미지2 비율, 가중치)</code>를 이용하여 채널을 하나로 합칠 수 있습니다.</p>\n\n<p>두 이미지의 채널을 그대로 합칠 예정이므로 각각의 비율은 <code class=\"highlighter-rouge\">1.0</code>으로 사용하고, 가중치는 사용하지 않으므로 <code class=\"highlighter-rouge\">0.0</code>을 할당합니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.inRange()</code>를 사용할 때, 단일 채널 이미지의 범위만 할당하여 병합할 수 도 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch16/2.png\"><img src=\"/assets/images/Python/opencv/ch16/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 15강 - HSV",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-15/",
      "date"     : "2018-09-09 00:00:00 +0900",
  "content"   : "<h3 id=\"hsv-hue-saturation-value\">HSV (Hue, Saturation, Value)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch15/1.jpg\"><img src=\"/assets/images/Python/opencv/ch15/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">색상</code>을 검출 하기 위해 사용합니다. 채널을 <code class=\"highlighter-rouge\">Hue</code>, <code class=\"highlighter-rouge\">Saturation</code>, <code class=\"highlighter-rouge\">Value</code>로 분리하여 변환할 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">색상 (Hue)</code> : <code class=\"highlighter-rouge\">색의 질</code>입니다. 빨강, 노랑, 파랑이라고 하는 표현으로 나타내는 성질입니다.</li>\n  <li><code class=\"highlighter-rouge\">채도 (Saturation)</code> : <code class=\"highlighter-rouge\">색의 선명도</code>입니다. 아무것도 섞지 않아 맑고 깨끗하며 원색에 가까운 것을 채도가 높다고 표현합니다.</li>\n  <li><code class=\"highlighter-rouge\">명도 (Value)</code> : <code class=\"highlighter-rouge\">색의 밝기</code>입니다. 명도가 높을수록 백색에, 명도가 낮을수록 흑색에 가까워집니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code-1\">Main Code (1)</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/tomato.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n<span class=\"n\">hsv</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_BGR2HSV</span><span class=\"p\">)</span>\n<span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">hsv</span><span class=\"p\">)</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"h\"</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"s\"</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"v\"</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">hsv</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_BGR2HSV</span><span class=\"p\">)</span>\n<span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">hsv</span><span class=\"p\">)</span></code></pre></figure>\n\n<p>초기 속성은 <code class=\"highlighter-rouge\">BGR</code>이므로, <code class=\"highlighter-rouge\">cv2.cvtColor()</code>를 이용하여 <code class=\"highlighter-rouge\">HSV</code>채널로 변경합니다.</p>\n\n<p>각각의 속성으로 분할하기 위해서 <code class=\"highlighter-rouge\">cv2.split()</code>을 이용하여 채널을 분리합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 분리된 채널들은 <code class=\"highlighter-rouge\">단일 채널</code>이므로 흑백의 색상으로만 표현됩니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<h3 id=\"hue\">Hue</h3>\n\n<p><a href=\"/assets/images/Python/opencv/ch15/2.png\"><img src=\"/assets/images/Python/opencv/ch15/2.png\" alt=\"2\" /></a></p>\n\n<p><br /></p>\n\n<h3 id=\"saturation\">Saturation</h3>\n\n<p><a href=\"/assets/images/Python/opencv/ch15/3.png\"><img src=\"/assets/images/Python/opencv/ch15/3.png\" alt=\"2\" /></a></p>\n\n<p><br /></p>\n\n<h3 id=\"value\">Value</h3>\n\n<p><a href=\"/assets/images/Python/opencv/ch15/4.png\"><img src=\"/assets/images/Python/opencv/ch15/4.png\" alt=\"2\" /></a></p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code-2\">Main Code (2)</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/tomato.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n<span class=\"n\">hsv</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_BGR2HSV</span><span class=\"p\">)</span>\n<span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">hsv</span><span class=\"p\">)</span>\n\n<span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">inRange</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"n\">orange</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">bitwise_and</span><span class=\"p\">(</span><span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"p\">)</span>\n<span class=\"n\">orange</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">orange</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_HSV2BGR</span><span class=\"p\">)</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"orange\"</span><span class=\"p\">,</span> <span class=\"n\">orange</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code-1\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">inRange</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"n\">orange</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">bitwise_and</span><span class=\"p\">(</span><span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"p\">)</span>\n<span class=\"n\">orange</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">orange</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_HSV2BGR</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Hue</code>의 범위를 조정하여 <strong>특정 색상만 출력</strong>할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.inRange(단일 채널 이미지, 최솟값, 최댓값)</code>을 이용하여 범위를 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">주황색</code>은 약 <code class=\"highlighter-rouge\">8~20</code> 범위를 갖습니다.</p>\n\n<p>이 후, 해당 <code class=\"highlighter-rouge\">마스크</code>를 <strong>이미지 위에 덧씌워 해당 부분만 출력합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">cv2.bitwise_and(원본, 원본, mask = 단일 채널 이미지)</code>를 이용하여 <code class=\"highlighter-rouge\">마스크</code>만 덧씌웁니다.</p>\n\n<p>이 후, 다시 <code class=\"highlighter-rouge\">HSV</code> 속성에서 <code class=\"highlighter-rouge\">BGR</code> 속성으로 변경합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>색상 (Hue) : 0 ~ 180의 값을 지닙니다.</li>\n  <li>채도 (Saturation) : 0 ~ 255의 값을 지닙니다.</li>\n  <li>명도 (Value) : 0 ~ 255의 값을 지닙니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result-1\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch15/5.png\"><img src=\"/assets/images/Python/opencv/ch15/5.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 14강 - 가장자리 검출",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-14/",
      "date"     : "2018-09-01 00:00:00 +0900",
  "content"   : "<h3 id=\"가장자리-검출-edge\">가장자리 검출 (Edge)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch14/1.jpg\"><img src=\"/assets/images/Python/opencv/ch14/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">가장자리</code>를 검출 하기 위해 사용합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/wheat.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n<span class=\"n\">gray</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_BGR2GRAY</span><span class=\"p\">)</span>\n\n<span class=\"n\">canny</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">Canny</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">)</span>\n<span class=\"n\">sobel</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">Sobel</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CV_8U</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">laplacian</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">Laplacian</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CV_8U</span><span class=\"p\">,</span> <span class=\"n\">ksize</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"canny\"</span><span class=\"p\">,</span> <span class=\"n\">canny</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"sobel\"</span><span class=\"p\">,</span> <span class=\"n\">sobel</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"laplacian\"</span><span class=\"p\">,</span> <span class=\"n\">laplacian</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"canny-detailed-code\">Canny Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">canny</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">Canny</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.Canny(원본 이미지, 임계값1, 임계값2, 커널 크기, L2그라디언트)</code>를 이용하여 <strong>가장자리 검출을 적용합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">임계값1</code>은 임계값1 <code class=\"highlighter-rouge\">이하</code>에 포함된 가장자리는 가장자리에서 <code class=\"highlighter-rouge\">제외</code>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">임계값2</code>는 임계값2 <code class=\"highlighter-rouge\">이상</code>에 포함된 가장자리는 가장자리로 <code class=\"highlighter-rouge\">간주</code>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">커널 크기</code>는 <code class=\"highlighter-rouge\">Sobel</code> 마스크의 <code class=\"highlighter-rouge\">Aperture Size</code>를 의미합니다. 포함하지 않을 경우, 자동으로 할당됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">L2그라디언트</code>는 <code class=\"highlighter-rouge\">L2</code>방식의 사용 유/무를 설정합니다. 사용하지 않을 경우, 자동적으로 <code class=\"highlighter-rouge\">L1그라디언트</code> 방식을 사용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">L2그라디언트</code> : $\\sqrt{(dI/dx)^2 + (dI/dy)^2}$</p>\n\n<p><code class=\"highlighter-rouge\">L1그라디언트</code> : $|dI/dx| + |dI/dy|$</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"sobel-detailed-code\">Sobel Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">sobel</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">Sobel</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CV_8U</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.Sobel(그레이스케일 이미지, 정밀도, x방향 미분, y방향 미분, 커널, 배율, 델타, 픽셀 외삽법)</code>를 이용하여 <strong>가장자리 검출을 적용합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">정밀도</code>는 결과 이미지의 <code class=\"highlighter-rouge\">이미지 정밀도</code>를 의미합니다. <strong>정밀도에 따라 결과물이 달라질 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">x 방향 미분</code>은 이미지에서 <code class=\"highlighter-rouge\">x 방향</code>으로 미분할 값을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">y 방향 미분</code>은 이미지에서 <code class=\"highlighter-rouge\">y 방향</code>으로 미분할 값을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">커널</code>은 소벨 커널의 크기를 설정합니다. <code class=\"highlighter-rouge\">1</code>, <code class=\"highlighter-rouge\">3</code>, <code class=\"highlighter-rouge\">5</code>, <code class=\"highlighter-rouge\">7</code>의 값을 사용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">배율</code>은 계산된 미분 값에 대한 <code class=\"highlighter-rouge\">배율값</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">델타</code>는 계산전 미분 값에 대한 <code class=\"highlighter-rouge\">추가값</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">픽셀 외삽법</code>은 이미지를 가장자리 처리할 경우, 영역 밖의 픽셀은 <code class=\"highlighter-rouge\">추정</code>해서 값을 할당해야합니다.</p>\n\n<p>이미지 밖의 픽셀을 외삽하는데 사용되는 <strong>테두리 모드</strong>입니다. <code class=\"highlighter-rouge\">외삽 방식</code>을 설정합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip :  <code class=\"highlighter-rouge\">x방향 미분 값</code>과 <code class=\"highlighter-rouge\">y방향의 미분 값</code>의 합이 1 이상이여야 하며 각각의 값은 <code class=\"highlighter-rouge\">0</code>보다 커야합니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"laplacian-detailed-code\">Laplacian Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">laplacian</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">Laplacian</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CV_8U</span><span class=\"p\">,</span> <span class=\"n\">ksize</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.Laplacian(그레이스케일 이미지, 정밀도, 커널, 배율, 델타, 픽셀 외삽법)</code>를 이용하여 <strong>가장자리 검출을 적용합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">정밀도</code>는 결과 이미지의 <code class=\"highlighter-rouge\">이미지 정밀도</code>를 의미합니다. <strong>정밀도에 따라 결과물이 달라질 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">커널</code>은 <strong>2차 미분 필터의 크기</strong>를 설정합니다. <code class=\"highlighter-rouge\">1</code>, <code class=\"highlighter-rouge\">3</code>, <code class=\"highlighter-rouge\">5</code>, <code class=\"highlighter-rouge\">7</code>의 값을 사용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">배율</code>은 계산된 미분 값에 대한 <code class=\"highlighter-rouge\">배율값</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">델타</code>는 계산전 미분 값에 대한 <code class=\"highlighter-rouge\">추가값</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">픽셀 외삽법</code>은 이미지를 가장자리 처리할 경우, 영역 밖의 픽셀은 <code class=\"highlighter-rouge\">추정</code>해서 값을 할당해야합니다.</p>\n\n<p>이미지 밖의 픽셀을 외삽하는데 사용되는 <strong>테두리 모드</strong>입니다. <code class=\"highlighter-rouge\">외삽 방식</code>을 설정합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip :  <code class=\"highlighter-rouge\">커널</code>의 값이 1일 경우, <code class=\"highlighter-rouge\">3x3 Aperture Size</code>를 사용합니다. <strong>(중심값 = -4)</strong></li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"additional-information\">Additional Information</h3>\n<hr />\n\n<h4 id=\"픽셀-외삽법-종류\">픽셀 외삽법 종류</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">속성</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_CONSTANT</td>\n      <td style=\"text-align: center\">iiiiii | abcdefgh | iiiiiii</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_REPLICATE</td>\n      <td style=\"text-align: center\">aaaaaa | abcdefgh | hhhhhhh</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_REFLECT</td>\n      <td style=\"text-align: center\">fedcba | abcdefgh | hgfedcb</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_WRAP</td>\n      <td style=\"text-align: center\">cdefgh | abcdefgh | abcdefg</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_REFLECT_101</td>\n      <td style=\"text-align: center\">gfedcb | abcdefgh | gfedcba</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_REFLECT101</td>\n      <td style=\"text-align: center\">gfedcb | abcdefgh | gfedcba</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_DEFAULT</td>\n      <td style=\"text-align: center\">gfedcb | abcdefgh | gfedcba</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_TRANSPARENT</td>\n      <td style=\"text-align: center\">uvwxyz | abcdefgh | ijklmno</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_ISOLATED</td>\n      <td style=\"text-align: center\">관심 영역 (ROI) 밖은 고려하지 않음</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<h3 id=\"canny\">Canny</h3>\n\n<p><a href=\"/assets/images/Python/opencv/ch14/2.png\"><img src=\"/assets/images/Python/opencv/ch14/2.png\" alt=\"2\" /></a></p>\n\n<p><br /></p>\n\n<h3 id=\"sobel\">Sobel</h3>\n\n<p><a href=\"/assets/images/Python/opencv/ch14/3.png\"><img src=\"/assets/images/Python/opencv/ch14/3.png\" alt=\"2\" /></a></p>\n\n<p><br /></p>\n\n<h3 id=\"laplacian\">Laplacian</h3>\n\n<p><a href=\"/assets/images/Python/opencv/ch14/4.png\"><img src=\"/assets/images/Python/opencv/ch14/4.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 13강 - 흐림 효과",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-13/",
      "date"     : "2018-08-26 00:00:00 +0900",
  "content"   : "<h3 id=\"흐림-효과-blur\">흐림 효과 (Blur)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch13/1.jpg\"><img src=\"/assets/images/Python/opencv/ch13/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">흐림 효과</code>를 주어 번지게 하기 위해 사용합니다. 해당 픽셀의 <code class=\"highlighter-rouge\">주변값들과 비교</code>하고 계산하여 픽셀들의 <code class=\"highlighter-rouge\">색상 값을 재조정</code>합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/geese.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n\n<span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">blur</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">),</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">borderType</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">BORDER_DEFAULT</span><span class=\"p\">)</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"dst\"</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">blur</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">),</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">borderType</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">BORDER_DEFAULT</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.blur(원본 이미지, (커널 x크기, 커널 y크기), 앵커 포인트, 픽셀 외삽법)</code>를 이용하여 <strong>흐림 효과를 적용합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">커널 크기</code>는 이미지에 흐림 효과를 적용할 크기를 설정합니다. <strong>크기가 클수록 더 많이 흐려집니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">앵커 포인트</code>는 커널에서의 <strong>중심점</strong>을 의미합니다. <code class=\"highlighter-rouge\">(-1, -1)</code>로 사용할 경우, 자동적으로 <strong>커널의 중심점으로 할당합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">픽셀 외삽법</code>은 이미지를 흐림 효과 처리할 경우, 영역 밖의 픽셀은 <code class=\"highlighter-rouge\">추정</code>해서 값을 할당해야합니다.</p>\n\n<p>이미지 밖의 픽셀을 외삽하는데 사용되는 <strong>테두리 모드</strong>입니다. <code class=\"highlighter-rouge\">외삽 방식</code>을 설정합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"additional-information\">Additional Information</h3>\n<hr />\n\n<h4 id=\"픽셀-외삽법-종류\">픽셀 외삽법 종류</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">속성</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_CONSTANT</td>\n      <td style=\"text-align: center\">iiiiii | abcdefgh | iiiiiii</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_REPLICATE</td>\n      <td style=\"text-align: center\">aaaaaa | abcdefgh | hhhhhhh</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_REFLECT</td>\n      <td style=\"text-align: center\">fedcba | abcdefgh | hgfedcb</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_WRAP</td>\n      <td style=\"text-align: center\">cdefgh | abcdefgh | abcdefg</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_REFLECT_101</td>\n      <td style=\"text-align: center\">gfedcb | abcdefgh | gfedcba</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_REFLECT101</td>\n      <td style=\"text-align: center\">gfedcb | abcdefgh | gfedcba</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_DEFAULT</td>\n      <td style=\"text-align: center\">gfedcb | abcdefgh | gfedcba</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_TRANSPARENT</td>\n      <td style=\"text-align: center\">uvwxyz | abcdefgh | ijklmno</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.BORDER_ISOLATED</td>\n      <td style=\"text-align: center\">관심 영역 (ROI) 밖은 고려하지 않음</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch13/2.png\"><img src=\"/assets/images/Python/opencv/ch13/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 12강 - 이진화",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-12/",
      "date"     : "2018-08-26 00:00:00 +0900",
  "content"   : "<h3 id=\"이진화-binary\">이진화 (Binary)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch12/1.jpg\"><img src=\"/assets/images/Python/opencv/ch12/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지를 어느 지점을 기준으로 <code class=\"highlighter-rouge\">흑색</code> 또는 <code class=\"highlighter-rouge\">흰색</code>의 색상으로 변환하기 위해서 사용합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/geese.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n\n<span class=\"n\">gray</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_RGB2GRAY</span><span class=\"p\">)</span>\n<span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">threshold</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">THRESH_BINARY</span><span class=\"p\">)</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"dst\"</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">gray</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_RGB2GRAY</span><span class=\"p\">)</span>\n<span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">threshold</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">THRESH_BINARY</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">이진화</code>를 적용하기 위해서 <code class=\"highlighter-rouge\">그레이스케일</code>로 변환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">ret, dst</code>를 이용하여 <code class=\"highlighter-rouge\">이진화</code> 결과를 저장합니다. <code class=\"highlighter-rouge\">ret</code>에는 <code class=\"highlighter-rouge\">임계값</code>이 저장됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.threshold(그레스케일 이미지, 임계값, 최댓값, 임계값 종류)</code>를 이용하여 <strong>이진화 이미지로 변경합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">임계값</code>은 이미지의 <code class=\"highlighter-rouge\">흑백</code>을 나눌 기준값을 의미합니다. <code class=\"highlighter-rouge\">100</code>으로 설정할 경우, <code class=\"highlighter-rouge\">100</code>보다 이하면 <code class=\"highlighter-rouge\">0</code>으로, <code class=\"highlighter-rouge\">100</code>보다 이상이면 <code class=\"highlighter-rouge\">최댓값</code>으로 변경합니다.</p>\n\n<p><code class=\"highlighter-rouge\">임계값 종류</code>를 이용하여 <strong>이진화할 방법</strong> 설정합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"additional-information\">Additional Information</h3>\n<hr />\n\n<h4 id=\"임계값-종류\">임계값 종류</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">속성</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cv2.THRESH_BINARY</td>\n      <td style=\"text-align: center\">임계값 이상 = 최댓값 임계값 이하 = 0</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.THRESH_BINARY_INV</td>\n      <td style=\"text-align: center\">임계값 이상 = 0 임계값 이하 = 최댓값</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.THRESH_TRUNC</td>\n      <td style=\"text-align: center\">임계값 이상 = 임계값 임계값 이하 = 원본값</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.THRESH_TOZERO</td>\n      <td style=\"text-align: center\">임계값 이상 = 원본값 임계값 이하 = 0</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.THRESH_TOZERO_INV</td>\n      <td style=\"text-align: center\">임계값 이상 = 0 임계값 이하 = 원본값</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.THRESH_MASK</td>\n      <td style=\"text-align: center\">흑색 이미지로 변경</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.THRESH_OTSU</td>\n      <td style=\"text-align: center\">Otsu 알고리즘 사용</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.THRESH_TRIANGLE</td>\n      <td style=\"text-align: center\">Triangle 알고리즘 사용</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch12/2.png\"><img src=\"/assets/images/Python/opencv/ch12/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 11강 - 역상",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-11/",
      "date"     : "2018-08-19 00:00:00 +0900",
  "content"   : "<h3 id=\"역상-reverse-image\">역상 (Reverse Image)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch11/1.jpg\"><img src=\"/assets/images/Python/opencv/ch11/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">반전 된 색상</code>으로 변환하기 위해서 사용합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/whitebutterfly.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n\n<span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">bitwise_not</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">)</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"src\"</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"dst\"</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">bitwise_not</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.bitwise_not(원본 이미지)</code>를 이용하여 <strong>이미지의 색상을 반전할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">비트 연산</code>을 이용하여 <strong>색상을 반전시킵니다.</strong></p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">not</code> 연산 이외에도 <code class=\"highlighter-rouge\">and</code>, <code class=\"highlighter-rouge\">or</code>, <code class=\"highlighter-rouge\">xor</code> 연산이 존재합니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch11/2.png\"><img src=\"/assets/images/Python/opencv/ch11/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 10강 - 그레이스케일",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-10/",
      "date"     : "2018-08-19 00:00:00 +0900",
  "content"   : "<h3 id=\"그레이스케일-grayscale\">그레이스케일 (Grayscale)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch10/1.jpg\"><img src=\"/assets/images/Python/opencv/ch10/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지의 색상을 <code class=\"highlighter-rouge\">흑백</code>색상으로 변환하기 위해서 사용합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/crow.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n\n<span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_BGR2GRAY</span><span class=\"p\">)</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"src\"</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"dst\"</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_BGR2GRAY</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.cvtcolor(원본 이미지, 색상 변환 코드)</code>를 이용하여 <strong>이미지의 색상 공간을 변경할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">색상 변환 코드</code>는 <code class=\"highlighter-rouge\">원본 이미지 색상 공간</code><strong>2</strong><code class=\"highlighter-rouge\">결과 이미지 색상 공간</code>을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">원본 이미지 색상 공간</code>은 <code class=\"highlighter-rouge\">원본 이미지</code>와 일치해야합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">BGR</code>은 <code class=\"highlighter-rouge\">RGB</code> 색상 채널을 의미합니다. (Byte 역순)</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"additional-information\">Additional Information</h3>\n<hr />\n\n<h4 id=\"채널-범위\">채널 범위</h4>\n\n<p><code class=\"highlighter-rouge\">CV_8U 이미지 값 범위</code> : 0 ~ 255</p>\n\n<p><code class=\"highlighter-rouge\">CV_16U 이미지의 값 범위</code> : 0 ~ 65535</p>\n\n<p><code class=\"highlighter-rouge\">CV_32F 이미지의 값 범위</code> : 0 ~ 1</p>\n\n<p><br />\n<br /></p>\n\n<h4 id=\"색상-공간-코드\">색상 공간 코드</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">속성</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">비고</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">BGR</td>\n      <td style=\"text-align: center\">Blue, Green, Red 채널</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">BGRA</td>\n      <td style=\"text-align: center\">Blue, Green, Red, Alpha 채널</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">RGB</td>\n      <td style=\"text-align: center\">Red, Green, Blue 채널</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">RGBA</td>\n      <td style=\"text-align: center\">Red, Green, Blue, Alpha 채널</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">GRAY</td>\n      <td style=\"text-align: center\">단일 채널</td>\n      <td style=\"text-align: center\">그레이스케일</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">BGR565</td>\n      <td style=\"text-align: center\">Blue, Green, Red 채널</td>\n      <td style=\"text-align: center\">16 비트 이미지</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">XYZ</td>\n      <td style=\"text-align: center\">X, Y, Z 채널</td>\n      <td style=\"text-align: center\">CIE 1931 색 공간</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">YCrCb</td>\n      <td style=\"text-align: center\">Y, Cr, Cb 채널</td>\n      <td style=\"text-align: center\">YCC (크로마)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">HSV</td>\n      <td style=\"text-align: center\">Hue, Saturation, Value 채널</td>\n      <td style=\"text-align: center\">색상, 채도, 명도</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">Lab</td>\n      <td style=\"text-align: center\">L, a, b 채널</td>\n      <td style=\"text-align: center\">반사율, 색도1, 색도2</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">Luv</td>\n      <td style=\"text-align: center\">L, u, v 채널</td>\n      <td style=\"text-align: center\">CIE Luv</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">HLS</td>\n      <td style=\"text-align: center\">Hue, Lightness, Saturation 채널</td>\n      <td style=\"text-align: center\">색상, 밝기, 채도</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">YUV</td>\n      <td style=\"text-align: center\">Y, U, V 채널</td>\n      <td style=\"text-align: center\">밝기, 색상1, 색상2</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">BG, GB, RG</td>\n      <td style=\"text-align: center\">디모자이킹</td>\n      <td style=\"text-align: center\">단일 색상 공간으로 변경</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">_EA</td>\n      <td style=\"text-align: center\">디모자이킹</td>\n      <td style=\"text-align: center\">가장자리 인식</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">_VNG</td>\n      <td style=\"text-align: center\">디모자이킹</td>\n      <td style=\"text-align: center\">그라데이션 사용</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본 이미지 색상 공간</code><strong>2</strong><code class=\"highlighter-rouge\">결과 이미지 색상 공간</code>에 <code class=\"highlighter-rouge\">색상 공간 코드</code>를 조합하여 사용할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">예)</code> <code class=\"highlighter-rouge\">BGR2GRAY</code>는 <code class=\"highlighter-rouge\">Blue, Green, Red 채널</code> 이미지를 <code class=\"highlighter-rouge\">단일 채널, 그레이스케일</code> 이미지로 변경합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch10/2.png\"><img src=\"/assets/images/Python/opencv/ch10/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 9강 - 자르기",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-9/",
      "date"     : "2018-08-18 00:00:00 +0900",
  "content"   : "<h3 id=\"자르기-slice\">자르기 (Slice)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch9/1.jpg\"><img src=\"/assets/images/Python/opencv/ch9/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지의 크기를 <code class=\"highlighter-rouge\">원하는 크기로 조절</code>할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code-1\">Main Code (1)</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/pawns.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n\n<span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span> \n<span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">:</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">700</span><span class=\"p\">]</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"src\"</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"dst\"</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span> </code></pre></figure>\n\n<p>이미지는 <code class=\"highlighter-rouge\">numpy</code> 형식과 동일합니다. 이미지를 복제할 때, <code class=\"highlighter-rouge\">dst=src</code>로 사용할 경우, 원본에도 영향을 미칩니다.</p>\n\n<p>그러므로, <code class=\"highlighter-rouge\">*.copy()</code>를 이용하여 <code class=\"highlighter-rouge\">dst</code>에 이미지를 복제합니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">:</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">700</span><span class=\"p\">]</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">dst</code> 이미지에 <code class=\"highlighter-rouge\">src[높이(행), 너비(열)]</code>에서 <strong>잘라낼 영역을 설정합니다.</strong> <code class=\"highlighter-rouge\">List</code>형식과 동일합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code-2\">Main Code (2)</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/pawns.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n\n<span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span> \n<span class=\"n\">roi</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">:</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">700</span><span class=\"p\">]</span>\n<span class=\"n\">dst</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">500</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">roi</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"src\"</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"dst\"</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code-1\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span> </code></pre></figure>\n\n<p>이미지는 <code class=\"highlighter-rouge\">numpy</code> 형식과 동일합니다. 이미지를 복제할 때, <code class=\"highlighter-rouge\">dst=src</code>로 사용할 경우, 원본에도 영향을 미칩니다.</p>\n\n<p>그러므로, <code class=\"highlighter-rouge\">*.copy()</code>를 이용하여 <code class=\"highlighter-rouge\">dst</code>에 이미지를 복제합니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">roi</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">:</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">700</span><span class=\"p\">]</span>\n<span class=\"n\">dst</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">500</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">roi</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">roi</code>를 생성하여 <code class=\"highlighter-rouge\">src[높이(행), 너비(열)]</code>에서 <strong>잘라낼 영역을 설정합니다.</strong> <code class=\"highlighter-rouge\">List</code>형식과 동일합니다.</p>\n\n<p>이후, <code class=\"highlighter-rouge\">dst[높이(행), 너비(열)] = roi</code>를 이용하여 <code class=\"highlighter-rouge\">dst</code> 이미지에 해당 영역을 붙여넣을 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch9/2.png\"><img src=\"/assets/images/Python/opencv/ch9/2.png\" alt=\"2\" /></a></p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/opencv/ch9/3.png\"><img src=\"/assets/images/Python/opencv/ch9/3.png\" alt=\"3\" /></a></p>\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 8강 - 크기 조절",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-8/",
      "date"     : "2018-08-17 00:00:00 +0900",
  "content"   : "<h3 id=\"크기-조절-resize\">크기 조절 (Resize)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch8/1.jpg\"><img src=\"/assets/images/Python/opencv/ch8/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지의 크기를 <code class=\"highlighter-rouge\">원하는 크기로 조절</code>할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/champagne.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n\n<span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">resize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">dsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">640</span><span class=\"p\">,</span> <span class=\"mi\">480</span><span class=\"p\">),</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">INTER_AREA</span><span class=\"p\">)</span>\n<span class=\"n\">dst2</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">resize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">dsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">fx</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"n\">fy</span><span class=\"o\">=</span><span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">INTER_LINEAR</span><span class=\"p\">)</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"src\"</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"dst\"</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"dst2\"</span><span class=\"p\">,</span> <span class=\"n\">dst2</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">resize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">dsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">640</span><span class=\"p\">,</span> <span class=\"mi\">480</span><span class=\"p\">),</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">INTER_AREA</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.resize(원본 이미지, 결과 이미지 크기, 보간법)</code>로 이미지의 크기를 조절할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">결과 이미지 크기</code>는 <code class=\"highlighter-rouge\">Tuple</code>형을 사용하며, <code class=\"highlighter-rouge\">(너비, 높이)</code>를 의미합니다. 설정된 이미지 크기로 변경합니다.</p>\n\n<p><code class=\"highlighter-rouge\">보간법</code>은 이미지의 크기를 변경하는 경우, 변형된 이미지의 픽셀은 <code class=\"highlighter-rouge\">추정</code>해서 값을 할당해야합니다.</p>\n\n<p><code class=\"highlighter-rouge\">보간법</code>을 이용하여 픽셀들의 값을 할당합니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst2</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">resize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">dsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">fx</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"n\">fy</span><span class=\"o\">=</span><span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">INTER_LINEAR</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.resize(원본 이미지, dsize=(0, 0), 가로비, 세로비, 보간법)</code>로 이미지의 크기를 조절할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">결과 이미지 크기</code>가 <code class=\"highlighter-rouge\">(0, 0)</code>으로 <strong>크기를 설정하지 않은 경우</strong>, <code class=\"highlighter-rouge\">fx</code>와 <code class=\"highlighter-rouge\">fy</code>를 이용하여 이미지의 비율을 조절할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">fx</code>가 <code class=\"highlighter-rouge\">0.3</code>인 경우, 원본 이미지 너비의 <code class=\"highlighter-rouge\">0.3배</code>로 변경됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">fy</code>가 <code class=\"highlighter-rouge\">0.7</code>인 경우, 원본 이미지 높이의 <code class=\"highlighter-rouge\">0.7배</code>로 변경됩니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">결과 이미지 크기</code>와 <code class=\"highlighter-rouge\">가로비</code>, <code class=\"highlighter-rouge\">세로비</code>가 모두 설정된 경우, <code class=\"highlighter-rouge\">결과 이미지 크기</code>의 값으로 이미지의 크기가 조절됩니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"additional-information\">Additional Information</h3>\n<hr />\n\n<h4 id=\"interpolation-속성\">interpolation 속성</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">속성</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cv2.INTER_NEAREST</td>\n      <td style=\"text-align: center\">이웃 보간법</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.INTER_LINEAR</td>\n      <td style=\"text-align: center\">쌍 선형 보간법</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.INTER_LINEAR_EXACT</td>\n      <td style=\"text-align: center\">비트 쌍 선형 보간법</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.INTER_CUBIC</td>\n      <td style=\"text-align: center\">바이큐빅 보간법</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.INTER_AREA</td>\n      <td style=\"text-align: center\">영역 보간법</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.INTER_LANCZOS4</td>\n      <td style=\"text-align: center\">Lanczos 보간법</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<p>기본적으로 <code class=\"highlighter-rouge\">쌍 선형 보간법</code>이 가장 많이 사용됩니다.</p>\n\n<p>이미지를 <code class=\"highlighter-rouge\">확대</code>하는 경우, <code class=\"highlighter-rouge\">바이큐빅 보간법</code>이나 <code class=\"highlighter-rouge\">쌍 선형 보간법</code>을 가장 많이 사용합니다.</p>\n\n<p>이미지를 <code class=\"highlighter-rouge\">축소</code>하는 경우, <code class=\"highlighter-rouge\">영역 보간법</code>을 가장 많이 사용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">영역 보간법</code>에서 이미지를 <code class=\"highlighter-rouge\">확대</code>하는 경우, <code class=\"highlighter-rouge\">이웃 보간법</code>과 비슷한 결과를 반환합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch8/2.png\"><img src=\"/assets/images/Python/opencv/ch8/2.png\" alt=\"2\" /></a></p>\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 7강 - 확대 &amp; 축소",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-7/",
      "date"     : "2018-08-17 00:00:00 +0900",
  "content"   : "<h3 id=\"이미지-피라미드-image-pyramid\">이미지 피라미드 (Image Pyramid)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch7/1.jpg\"><img src=\"/assets/images/Python/opencv/ch7/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">이미지 피라미드 (Image Pyramid)</code>란 이미지의 크기를 변화시켜 <code class=\"highlighter-rouge\">원하는 단계까지 샘플링</code>하는 작업입니다. 영상이나 이미지를 <code class=\"highlighter-rouge\">확대</code>, <code class=\"highlighter-rouge\">축소</code>시켜 띄울 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/fruits.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n\n<span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">pyrUp</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">dstsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">borderType</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">BORDER_DEFAULT</span><span class=\"p\">);</span>\n<span class=\"n\">dst2</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">pyrDown</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"src\"</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"dst\"</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"dst2\"</span><span class=\"p\">,</span> <span class=\"n\">dst2</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">shape</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">height, width, channel = src.shape</code>를 이용하여 해당 이미지의 <code class=\"highlighter-rouge\">높이</code>, <code class=\"highlighter-rouge\">너비</code>, <code class=\"highlighter-rouge\">채널</code>의 값을 저장합니다.</p>\n\n<p><code class=\"highlighter-rouge\">너비</code>와 <code class=\"highlighter-rouge\">높이</code>를 이용하여 <strong>dstsize (결과 이미지 크기)</strong>을 설정합니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">pyrUp</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">dstsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">borderType</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">BORDER_DEFAULT</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.pyrUp(원본 이미지)</code>로 이미지를 <code class=\"highlighter-rouge\">2배</code>로 <strong>확대</strong>할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.pyrUp(원본 이미지, 결과 이미지 크기, 픽셀 외삽법)</code>을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">결과 이미지 크기</code>는 <code class=\"highlighter-rouge\">pyrUp()</code>함수일 경우, <code class=\"highlighter-rouge\">이미지 크기의 2배</code>로 사용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">픽셀 외삽법</code>은 이미지를 <code class=\"highlighter-rouge\">확대</code> 또는 <code class=\"highlighter-rouge\">축소</code>할 경우, 영역 밖의 픽셀은 <code class=\"highlighter-rouge\">추정</code>해서 값을 할당해야합니다.</p>\n\n<p>이미지 밖의 픽셀을 외삽하는데 사용되는 <strong>테두리 모드</strong>입니다. <code class=\"highlighter-rouge\">외삽 방식</code>을 설정합니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst2</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">pyrDown</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.pyrDown(원본 이미지)</code>로 이미지를 <code class=\"highlighter-rouge\">1/2배</code>로 <strong>축소</strong>할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.pyrUp()</code> 함수와 <strong>동일한 매개변수를</strong> 가집니다.</p>\n\n<p><code class=\"highlighter-rouge\">결과 이미지 크기</code>는 <code class=\"highlighter-rouge\">(width/2, height/2)</code>를 사용해야합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"additional-information\">Additional Information</h3>\n<hr />\n\n<p><code class=\"highlighter-rouge\">pyrUp()</code>과 <code class=\"highlighter-rouge\">pyrDown()</code> 함수에서 <code class=\"highlighter-rouge\">결과 이미지 크기</code>와 <code class=\"highlighter-rouge\">픽셀 외삽법</code>은 기본값으로 설정된 인수를 할당해야하므로 <code class=\"highlighter-rouge\">생략</code>하여 사용합니다.</p>\n\n<p>피라미드 함수에서 <code class=\"highlighter-rouge\">픽셀 외삽법</code>은 <code class=\"highlighter-rouge\">cv2.BORDER_DEFAULT</code>만 사용할 수 있습니다.</p>\n\n<p>이미지를 <code class=\"highlighter-rouge\">1/8배</code>, <code class=\"highlighter-rouge\">1/4배</code> ,<code class=\"highlighter-rouge\">4배</code>, <code class=\"highlighter-rouge\">8배</code> 등의 배율을 사용해야하는 경우, <code class=\"highlighter-rouge\">반복문</code>을 이용하여 적용할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch7/2.png\"><img src=\"/assets/images/Python/opencv/ch7/2.png\" alt=\"2\" /></a></p>\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 6강 - 회전",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-6/",
      "date"     : "2018-08-16 00:00:00 +0900",
  "content"   : "<h3 id=\"회전-rotate\">회전 (Rotate)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch6/1.jpg\"><img src=\"/assets/images/Python/opencv/ch6/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">회전</code>시켜 띄울 수 있습니다. <code class=\"highlighter-rouge\">90°</code>, <code class=\"highlighter-rouge\">45°</code>, <code class=\"highlighter-rouge\">-45°</code> 등 다양한 각도로 회전이 가능합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/ara.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n\n<span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">getRotationMatrix2D</span><span class=\"p\">((</span><span class=\"n\">width</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">warpAffine</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">matrix</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">))</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"src\"</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"dst\"</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/ara.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span></code></pre></figure>\n\n<p>원본 이미지로 사용할 <code class=\"highlighter-rouge\">src</code>를 선언하고 이미지를 불러옵니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">shape</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">height, width, channel = src.shape</code>를 이용하여 해당 이미지의 <code class=\"highlighter-rouge\">높이</code>, <code class=\"highlighter-rouge\">너비</code>, <code class=\"highlighter-rouge\">채널</code>의 값을 저장합니다.</p>\n\n<p><code class=\"highlighter-rouge\">높이</code>와 <code class=\"highlighter-rouge\">너비</code>를 이용하여 <strong>회전 중심점</strong>을 설정합니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">getRotationMatrix2D</span><span class=\"p\">((</span><span class=\"n\">width</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">matrix</code>에 <code class=\"highlighter-rouge\">회전 배열</code>을 생성하여 저장합니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.getRotationMatrix2D((중심점 X좌표, 중심점 Y좌표), 각도, 스케일)</code>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">중심점</code>은 <code class=\"highlighter-rouge\">Tuple</code>형태로 사용하며 회전할 <strong>기준점</strong>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">각도</code>는 <strong>회전할 각도</strong>를 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">스케일</code>은 이미지의 <strong>확대 비율</strong>을 설정합니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">warpAffine</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">matrix</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">))</span></code></pre></figure>\n\n<p>결과 이미지로 사용할 <code class=\"highlighter-rouge\">dst</code>를 선언하고 회전 함수를 적용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.warpAffine(원본 이미지, 배열, (결과 이미지 너비, 결과 이미지 높이))</code>을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">결과 이미지의 너비와 높이</code>로 크기가 선언되며 <code class=\"highlighter-rouge\">배열</code>에 따라 이미지가 <code class=\"highlighter-rouge\">회전</code>합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"additional-information\">Additional Information</h3>\n<hr />\n\n<p><code class=\"highlighter-rouge\">matrix</code>를 <code class=\"highlighter-rouge\">numpy</code>형식으로 선언하여 <code class=\"highlighter-rouge\">warpAffine</code>을 적용하여 변환할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch6/2.png\"><img src=\"/assets/images/Python/opencv/ch6/2.png\" alt=\"2\" /></a></p>\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 5강 - 대칭",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-5/",
      "date"     : "2018-08-16 00:00:00 +0900",
  "content"   : "<h3 id=\"대칭-flip-symmetry\">대칭 (Flip, Symmetry)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch5/1.jpg\"><img src=\"/assets/images/Python/opencv/ch5/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">대칭</code>시켜 띄울 수 있습니다. <strong>상하</strong> 또는 <strong>좌우</strong>방향으로 대칭할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/glass.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span>\n<span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">flip</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"src\"</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"dst\"</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/glass.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_COLOR</span><span class=\"p\">)</span></code></pre></figure>\n\n<p>원본 이미지로 사용할 <code class=\"highlighter-rouge\">src</code>를 선언하고 이미지를 불러옵니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">flip</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span></code></pre></figure>\n\n<p>결과 이미지로 사용할 <code class=\"highlighter-rouge\">dst</code>를 선언하고 <code class=\"highlighter-rouge\">대칭 함수</code>를 적용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.flip(원본 이미지, 대칭 방법)</code>을 의미합니다.</p>\n\n<p><strong>대칭 방법</strong>은 <strong>상수</strong>를 입력하여 대칭시킬 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">0</code>일 경우, <code class=\"highlighter-rouge\">상하</code>방향으로 대칭합니다.</p>\n\n<p><code class=\"highlighter-rouge\">1</code>일 경우, <code class=\"highlighter-rouge\">좌우</code>방향으로 대칭합니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"src\"</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"dst\"</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.imshow()</code>를 사용하여 이미지를 출력할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"additional-information\">Additional Information</h3>\n<hr />\n\n<p>대칭 방법 중 <strong>상수</strong>를 <code class=\"highlighter-rouge\">0</code>보다 <strong>낮은 값</strong>을 입력할 경우, <code class=\"highlighter-rouge\">상하 대칭</code>으로 간주합니다.</p>\n\n<p>대칭 방법 중 <strong>상수</strong>를 <code class=\"highlighter-rouge\">1</code>보다 <strong>높은 값</strong>을 입력할 경우, <code class=\"highlighter-rouge\">좌우 대칭</code>으로 간주합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch5/2.png\"><img src=\"/assets/images/Python/opencv/ch5/2.png\" alt=\"2\" /></a></p>\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 4강 - VIDEO 출력",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-4/",
      "date"     : "2018-08-15 00:00:00 +0900",
  "content"   : "<h3 id=\"video-출력\">Video 출력</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch4/1.jpg\"><img src=\"/assets/images/Python/opencv/ch4/1.jpg\" alt=\"1\" /></a>\n<strong>동영상 파일</strong>에서 이미지를 얻어와 프레임을 재생할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">capture</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">VideoCapture</span><span class=\"p\">(</span><span class=\"s\">\"Image/Star.mp4\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CAP_PROP_POS_FRAMES</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CAP_PROP_FRAME_COUNT</span><span class=\"p\">)):</span>\n        <span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">\"Image/Star.mp4\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"VideoFrame\"</span><span class=\"p\">,</span> <span class=\"n\">frame</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">33</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span> <span class=\"k\">break</span>\n\n<span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">()</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">capture</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">VideoCapture</span><span class=\"p\">(</span><span class=\"s\">\"Image/Star.mp4\"</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.VideoCapture(\"경로\")</code>을 이용하여 <strong>동영상 파일</strong>에서 프레임을 받아옵니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CAP_PROP_POS_FRAMES</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CAP_PROP_FRAME_COUNT</span><span class=\"p\">)):</span>\n    <span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">\"Image/Star.mp4\"</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">if</code>문을 이용하여 가장 처음 <code class=\"highlighter-rouge\">현재 프레임 개수</code>와 <code class=\"highlighter-rouge\">총 프레임 개수</code>를 비교합니다.</p>\n\n<p><code class=\"highlighter-rouge\">capture.get(속성)</code>을 이용하여 <code class=\"highlighter-rouge\">capture</code>의 <code class=\"highlighter-rouge\">속성</code>을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.CAP_PROP_POS_FRAMES</code>는 <strong>현재 프레임 개수를 의미합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">cv2.CAP_PROP_FRAME_COUNT</code>는 <strong>총 프레임 개수를 의미합니다.</strong></p>\n\n<p>같을 경우, 마지막 프레임이므로, <code class=\"highlighter-rouge\">capture.open(경로)</code>를 이용하여 <strong>다시 동영상 파일을 불러옵니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">if</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">33</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span> <span class=\"k\">break</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.waitkey(time)</code>을 이용하여 <code class=\"highlighter-rouge\">33ms</code>마다 프레임을 재생합니다.</p>\n\n<p>어떤 키라도 누를 경우, <code class=\"highlighter-rouge\">break</code>하여 <code class=\"highlighter-rouge\">while</code>문을 종료합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"additional-information\">Additional Information</h3>\n<hr />\n\n<h4 id=\"videocapture-함수\">VideoCapture 함수</h4>\n\n<p><code class=\"highlighter-rouge\">capture.get(속성)</code> : <code class=\"highlighter-rouge\">VideoCapture</code>의 <strong>속성</strong>을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">capture.grab()</code> : <code class=\"highlighter-rouge\">Frame</code>의 <strong>호출 성공 유/무</strong>를 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">capture.isOpened()</code> : <code class=\"highlighter-rouge\">VideoCapture</code>의 <strong>성공 유/무</strong>를 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">capture.open(카메라 장치 번호 또는 경로)</code> : <code class=\"highlighter-rouge\">카메라</code>나 <code class=\"highlighter-rouge\">동영상 파일</code>을 엽니다.</p>\n\n<p><code class=\"highlighter-rouge\">capture.release()</code> : <code class=\"highlighter-rouge\">VideoCapture</code>의 <strong>장치를 닫고 메모리를 해제합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">capture.retrieve()</code> : <code class=\"highlighter-rouge\">VideoCapture</code>의 <strong>프레임</strong>과 <strong>플래그</strong>를 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">capture.set(속성, 값)</code> :  <code class=\"highlighter-rouge\">VideoCapture</code>의 <strong>속성</strong>의 <strong>값</strong>을 설정합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h4 id=\"videocapture-속성\">VideoCapture 속성</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">속성</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">비고</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cv2.CAP_PROP_FRAME_WIDTH</td>\n      <td style=\"text-align: center\">프레임의 너비</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.CAP_PROP_FRAME_HEIGHT</td>\n      <td style=\"text-align: center\">프레임의 높이</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.CAP_PROP_FRAME_COUNT</td>\n      <td style=\"text-align: center\">프레임의 총 개수</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.CAP_PROP_FPS</td>\n      <td style=\"text-align: center\">프레임 속도</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.CAP_PROP_FOURCC</td>\n      <td style=\"text-align: center\">코덱 코드</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.CAP_PROP_BRIGHTNESS</td>\n      <td style=\"text-align: center\">이미지 밝기</td>\n      <td style=\"text-align: center\">카메라만 해당</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.CAP_PROP_CONTRAST</td>\n      <td style=\"text-align: center\">이미지 대비</td>\n      <td style=\"text-align: center\">카메라만 해당</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.CAP_PROP_SATURATION</td>\n      <td style=\"text-align: center\">이미지 채도</td>\n      <td style=\"text-align: center\">카메라만 해당</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.CAP_PROP_HUE</td>\n      <td style=\"text-align: center\">이미지 색상</td>\n      <td style=\"text-align: center\">카메라만 해당</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.CAP_PROP_GAIN</td>\n      <td style=\"text-align: center\">이미지 게인</td>\n      <td style=\"text-align: center\">카메라만 해당</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.CAP_PROP_EXPOSURE</td>\n      <td style=\"text-align: center\">이미지 노출</td>\n      <td style=\"text-align: center\">카메라만 해당</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.CAP_PROP_POS_MSEC</td>\n      <td style=\"text-align: center\">프레임 재생 시간</td>\n      <td style=\"text-align: center\">ms 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cv2.CAP_PROP_POS_FRAMES</td>\n      <td style=\"text-align: center\">현재 프레임</td>\n      <td style=\"text-align: center\">프레임의 총 개수 미만</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">CAP_PROP_POS_AVI_RATIO</td>\n      <td style=\"text-align: center\">비디오 파일 상대 위치</td>\n      <td style=\"text-align: center\">0 = 시작, 1 = 끝</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch4/2.png\"><img src=\"/assets/images/Python/opencv/ch4/2.png\" alt=\"2\" /></a></p>\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 3강 - Image 출력",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-3/",
      "date"     : "2018-08-13 00:00:00 +0900",
  "content"   : "<h3 id=\"image-출력\">Image 출력</h3>\n<hr />\n<p><a href=\"/assets/images/Python/opencv/ch3/1.jpg\"><img src=\"/assets/images/Python/opencv/ch3/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">컴퓨터에 저장된 이미지</code>를 얻어와 Python에서 출력할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/lunar.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_ANYCOLOR</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"Moon\"</span><span class=\"p\">,</span> <span class=\"n\">image</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"Image/lunar.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">IMREAD_ANYCOLOR</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">image = cv2.imread(\"경로\", mode)</code>을 이용하여 이미지를 불러와 변수에 저장할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">경로</code>는 <strong>상대 경로</strong> 또는 <strong>절대 경로</strong>를 사용하여 이미지를 불러올 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">mode</code>은 이미지를 초기에 불러올 때 적용할 <strong>초기 상태</strong>를 의미합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>mode\n    <ul>\n      <li><code class=\"highlighter-rouge\">cv2.IMREAD_UNCHANGED</code> : 원본 사용</li>\n      <li><code class=\"highlighter-rouge\">cv2.IMREAD_GRAYSCALE</code> : 1채널, 그레이스케일 적용</li>\n      <li><code class=\"highlighter-rouge\">cv2.IMREAD_COLOR</code> : 3 채널, BGR 이미지 사용</li>\n      <li><code class=\"highlighter-rouge\">cv2.IMREAD_ANYDEPTH</code> : 이미지에 따라 정밀도를 16/32비트 또는 8비트로 사용</li>\n      <li><code class=\"highlighter-rouge\">cv2.IMREAD_ANYCOLOR</code> : 가능한 3 채널, 색상 이미지로 사용</li>\n      <li><code class=\"highlighter-rouge\">cv2.IMREAD_REDUCED_GRAYSCALE_2</code> : 1 채널, 1/2 크기, 그레이스케일 적용</li>\n      <li><code class=\"highlighter-rouge\">cv2.IMREAD_REDUCED_GRAYSCALE_4</code> : 1 채널, 1/4 크기, 그레이스케일 적용</li>\n      <li><code class=\"highlighter-rouge\">cv2.IMREAD_REDUCED_GRAYSCALE_8</code> : 1 채널, 1/8 크기, 그레이스케일 적용</li>\n      <li><code class=\"highlighter-rouge\">cv2.IMREAD_REDUCED_COLOR_2</code> : 3 채널, 1/2 크기, BGR 이미지 사용</li>\n      <li><code class=\"highlighter-rouge\">cv2.IMREAD_REDUCED_COLOR_4</code> : 3 채널, 1/4 크기, BGR 이미지 사용</li>\n      <li><code class=\"highlighter-rouge\">cv2.IMREAD_REDUCED_COLOR_8</code> : 3 채널, 1/8 크기, BGR 이미지 사용</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"Moon\"</span><span class=\"p\">,</span> <span class=\"n\">image</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.imshow(\"윈도우 창 제목\", 이미지)</code>를 이용하여 <strong>윈도우 창</strong>에 <strong>이미지</strong>를 띄웁니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.waitkey(time)</code>이며 <code class=\"highlighter-rouge\">time</code>마다 키 입력상태를 받아옵니다. <code class=\"highlighter-rouge\">0</code>일 경우, 지속적으로 검사하여 <strong>해당 구문을 넘어가지 않습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">cv2.destroyAllWindows()</code>를 이용하여 <strong>모든 윈도우창을 닫습니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"additional-information\">Additional Information</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"n\">width</span> <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"n\">width</span> <span class=\"p\">,</span> <span class=\"n\">channel</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>1920 1280 3<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">height, width , channel = image.shape</code>를 이용하여 해당 이미지의 <code class=\"highlighter-rouge\">높이</code>, <code class=\"highlighter-rouge\">너비</code>, <code class=\"highlighter-rouge\">채널</code>의 값을 확인할 수 있습니다.</p>\n\n<p>이미지의 속성은 <code class=\"highlighter-rouge\">크기</code>, <code class=\"highlighter-rouge\">정밀도</code>, <code class=\"highlighter-rouge\">채널</code>을 주요한 속성으로 사용합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">크기</code> : 이미지의 <strong>높이</strong>와 <strong>너비</strong>를 의미합니다.</li>\n  <li><code class=\"highlighter-rouge\">정밀도</code> : 이미지의 처리 결과의 <strong>정밀성</strong>을 의미합니다.</li>\n  <li><code class=\"highlighter-rouge\">채널</code> : 이미지의 <strong>색상 정보</strong>를 의미합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <strong>유효 비트가 많을 수록 더 정밀해집니다.</strong></li>\n  <li>Tip : 채널이 <code class=\"highlighter-rouge\">3</code>일 경우, <strong>다색 이미지</strong>입니다. 채널이 <code class=\"highlighter-rouge\">1</code>일 경우, <strong>단색 이미지</strong>입니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch3/2.png\"><img src=\"/assets/images/Python/opencv/ch3/2.png\" alt=\"2\" /></a></p>\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 2강 - CAMERA 출력",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-2/",
      "date"     : "2018-08-13 00:00:00 +0900",
  "content"   : "<h3 id=\"camera-출력\">Camera 출력</h3>\n<hr />\n<p><strong>내장 카메라</strong> 또는 <strong>외장 카메라</strong>에서 이미지를 얻어와 프레임을 재생할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">capture</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">VideoCapture</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CAP_PROP_FRAME_WIDTH</span><span class=\"p\">,</span> <span class=\"mi\">640</span><span class=\"p\">)</span>\n<span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CAP_PROP_FRAME_HEIGHT</span><span class=\"p\">,</span> <span class=\"mi\">480</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n    <span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"VideoFrame\"</span><span class=\"p\">,</span> <span class=\"n\">frame</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span> <span class=\"k\">break</span>\n\n<span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">()</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"detailed-code\">Detailed Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">capture</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">VideoCapture</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cv2.VideoCapture(n)</code>을 이용하여 <strong>내장 카메라</strong> 또는 <strong>외장 카메라</strong>에서 영상을 받아옵니다.</p>\n\n<p><code class=\"highlighter-rouge\">n</code>은 <strong>카메라의 장치 번호</strong>를 의미합니다. 노트북을 이용할 경우, 내장 카메라가 존재하므로 카메라의 장치 번호는 <code class=\"highlighter-rouge\">0</code>이 됩니다.</p>\n\n<p>카메라를 추가적으로 연결하여 <strong>외장 카메라</strong>를 사용하는 경우, 장치 번호가 <code class=\"highlighter-rouge\">1~n</code>까지 변화합니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CAP_PROP_FRAME_WIDTH</span><span class=\"p\">,</span> <span class=\"mi\">640</span><span class=\"p\">)</span>\n<span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">CAP_PROP_FRAME_HEIGHT</span><span class=\"p\">,</span> <span class=\"mi\">480</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">capture.set(option, n)</code>을 이용하여 카메라의 속성을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">option</code>은 <strong>프레임의 너비와 높이</strong>등의 속성을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">n</code>의 경우 해당 <strong>너비와 높이의 값</strong>을 의미합니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">while</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n    <span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">\"VideoFrame\"</span><span class=\"p\">,</span> <span class=\"n\">frame</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span> <span class=\"k\">break</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">while</code>문을 이용하여 <strong>영상 출력을 반복합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">capture.read()</code>를 이용하여 <code class=\"highlighter-rouge\">카메라의 상태</code> 및 <code class=\"highlighter-rouge\">프레임</code>을 받아옵니다.</p>\n\n<p><code class=\"highlighter-rouge\">ret</code>은 카메라의 상태가 저장되며 정상 작동할 경우 <code class=\"highlighter-rouge\">True</code>를 반환합니다. 작동하지 않을 경우 <code class=\"highlighter-rouge\">False</code>를 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">frame</code>에 현재 프레임이 저장됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.imshow(\"윈도우 창 제목\", 이미지)</code>를 이용하여 <strong>윈도우 창</strong>에 <strong>이미지</strong>를 띄웁니다.</p>\n\n<p><code class=\"highlighter-rouge\">if</code>문을 이용하여 <strong>키 입력</strong>이 있을 때 까지 <code class=\"highlighter-rouge\">while</code>문을 반복합니다.</p>\n\n<p><code class=\"highlighter-rouge\">cv2.waitkey(time)</code>이며 <code class=\"highlighter-rouge\">time</code>마다 키 입력상태를 받아옵니다.</p>\n\n<p>키가 입력될 경우, 해당 키의 <code class=\"highlighter-rouge\">아스키 값</code>을 반환합니다.</p>\n\n<p>즉, 어떤 키라도 누를 경우, <code class=\"highlighter-rouge\">break</code>하여 <code class=\"highlighter-rouge\">while</code>문을 종료합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">time</code>이 <code class=\"highlighter-rouge\">0</code>일 경우, 지속적으로 검사하여 <strong>프레임이 넘어가지 않습니다.</strong></li>\n  <li>Tip : <code class=\"highlighter-rouge\">if cv2.waitKey(1) == ord('q'): break</code>으로 사용할 경우, <code class=\"highlighter-rouge\">q</code>가 입력될 때 <code class=\"highlighter-rouge\">while</code>문을 종료합니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">()</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">capture.relase()</code>를 통하여 카메라 장치에서 받아온 <strong>메모리를 해제합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">cv2.destroyAllWindows()</code>를 이용하여 <strong>모든 윈도우창을 닫습니다.</strong></p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">cv2.destroyWindow(\"윈도우 창 제목\")</code>을 이용하여 <strong>특정 윈도우 창만 닫을 수 있습니다.</strong></li>\n</ul>\n"
    } ,
  
    {
      "title"    : "Python OpenCV 강좌 : 제 1강 - OpenCV 설치",
      "category" : "",
      "tags"     : "Python-OpenCV",
      "url"      : "/posts/Python-opencv-1/",
      "date"     : "2018-08-12 00:00:00 +0900",
  "content"   : "<h3 id=\"opencv\">OpenCV</h3>\n<hr />\n<p>OpenCV (Open Source Computer Vision)은 <code class=\"highlighter-rouge\">오픈 소스 컴퓨터 비전 라이브러리</code>입니다. <code class=\"highlighter-rouge\">객체ㆍ얼굴ㆍ행동 인식</code>, <code class=\"highlighter-rouge\">독순</code>, <code class=\"highlighter-rouge\">모션 추적</code> 등의 응용 프로그램에서 사용합니다.</p>\n\n<p><br /></p>\n\n<p>본 강좌는 <code class=\"highlighter-rouge\">Python-OpenCVSharp 3.4.2</code>에 맞추어져 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"opencv-설치\">OpenCV 설치</h3>\n<hr />\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">OpenCV</code> 모듈은 <code class=\"highlighter-rouge\">pip</code>를 통하여 설치할 수 있습니다.</p>\n\n<p>설치 명령어는 <code class=\"highlighter-rouge\">python -m pip install opencv-python</code> 입니다.</p>\n\n<p><code class=\"highlighter-rouge\">OpenCV 설치하기</code> : <a href=\"https://076923.github.io/posts/Python-28/\">28강 바로가기</a></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">__version__</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>3.4.2<br />\n<br /></dd>\n</dl>\n\n<p>정상적으로 설치가 완료되었다면 위와 같이 <code class=\"highlighter-rouge\">3.4.2</code>가 출력되어야합니다.</p>\n\n<h3 id=\"python-플랫폼\">Python 플랫폼</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/opencv/ch1/1.png\"><img src=\"/assets/images/Python/opencv/ch1/1.png\" alt=\"1\" /></a></p>\n\n<p>본 <code class=\"highlighter-rouge\">Python-OpenCV</code> 강좌에서 사용될 이미지의 경로는 위와 같습니다.</p>\n\n<p><code class=\"highlighter-rouge\">D:\\Python\\Image</code> 폴더 안에 <strong>이미지 및 동영상을 저장하여 사용합니다.</strong></p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/opencv/ch1/2.png\"><img src=\"/assets/images/Python/opencv/ch1/2.png\" alt=\"2\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">IDLE</code>를 사용할 경우, <code class=\"highlighter-rouge\">상대 경로</code>를 이용하여 <code class=\"highlighter-rouge\">\"Image/파일명\"</code>으로 이미지를 불러올 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/opencv/ch1/3.png\"><img src=\"/assets/images/Python/opencv/ch1/3.png\" alt=\"3\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">Visual Studio</code>를 사용할 경우, <code class=\"highlighter-rouge\">절대 경로</code>를 이용하여 <code class=\"highlighter-rouge\">\"D:/Python/Image/파일명\"</code>으로 이미지를 불러올 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">Anaconda</code>를 이용하는 경우에도 동일합니다.</p>\n\n"
    } ,
  
    {
      "title"    : "Python numpy 강좌 : 제 11강 - 병합",
      "category" : "",
      "tags"     : "Python-numpy",
      "url"      : "/posts/Python-numpy-11/",
      "date"     : "2018-08-12 00:00:00 +0900",
  "content"   : "<h3 id=\"병합\">병합</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]])</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">hstack</span><span class=\"p\">([</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">])</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">([</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"--------\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[1 2]<br />\n [3 4]]<br />\n[[5 6]<br />\n [7 8]]<br />\n——–<br />\n[[1 2 5 6]<br />\n [3 4 7 8]]<br />\n[[1 2]<br />\n [3 4]<br />\n [5 6]<br />\n [7 8]]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.hstack([배열1, 배열2])</code>를 이용하여 <code class=\"highlighter-rouge\">배열1</code> <strong>우측</strong>에 <code class=\"highlighter-rouge\">배열2</code>를 <strong>이어 붙일 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">numpy.vstack([배열1, 배열2])</code>를 이용하여 <code class=\"highlighter-rouge\">배열1</code> <strong>하단</strong>에 <code class=\"highlighter-rouge\">배열2</code>를 <strong>이어 붙일 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]])</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">stack</span><span class=\"p\">([</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">],</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">stack</span><span class=\"p\">([</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">],</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"--------\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"--------\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[1 2]<br />\n [3 4]]<br />\n[[5 6]<br />\n [7 8]]<br />\n——–<br />\n[[[1 2]<br />\n  [3 4]]<br />\n<br />\n [[5 6]<br />\n  [7 8]]]<br />\n——–<br />\n[[[1 2]<br />\n  [5 6]]<br />\n<br />\n [[3 4]<br />\n  [7 8]]]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.stack([배열1, 배열2, axis=축])</code>를 이용하여 지정한 <code class=\"highlighter-rouge\">축</code>으로 <code class=\"highlighter-rouge\">배열1</code>과 <code class=\"highlighter-rouge\">배열2</code>를 <strong>이어 붙일 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">축</code>은 <strong>이어 붙일 차원의 범위를 넘어갈 수 없습니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]])</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dstack</span><span class=\"p\">([</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"--------\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[1 2]<br />\n [3 4]]<br />\n[[5 6]<br />\n [7 8]]<br />\n——–<br />\n[[[1 5]<br />\n  [2 6]]<br />\n<br />\n [[3 7]<br />\n  [4 8]]]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.dstack([배열1, 배열2])</code>를 이용하여 <code class=\"highlighter-rouge\">새로운 축</code>으로 <code class=\"highlighter-rouge\">배열1</code>과 <code class=\"highlighter-rouge\">배열2</code>를 <strong>이어 붙일 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">numpy.stack([a, b], axis=2)</code>과 <strong>동일한 결과를 반환합니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">tile</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[1 2]<br />\n [3 4]]<br />\n[[1 2 1 2]<br />\n [3 4 3 4]]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.tile(배열, 반복 횟수)</code>를 이용하여 <code class=\"highlighter-rouge\">배열</code>을 <code class=\"highlighter-rouge\">반복 횟수</code>만큼 <strong>이어 붙일 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<h3 id=\"특수-병합-메소드\">특수 병합 메소드</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]])</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">c_</span><span class=\"p\">[</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">]</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">r_</span><span class=\"p\">[</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"--------\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[1 2]<br />\n [3 4]]<br />\n[[5 6]<br />\n [7 8]]<br />\n——–<br />\n[[1 2 5 6]<br />\n [3 4 7 8]]<br />\n[[1 2]<br />\n [3 4]<br />\n [5 6]<br />\n [7 8]]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.c_[배열1, 배열2]</code>를 이용하여 <code class=\"highlighter-rouge\">배열1</code> <strong>우측</strong>에 <code class=\"highlighter-rouge\">배열2</code>를 <strong>이어 붙일 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">numpy.r_[배열1, 배열2]</code>를 이용하여 <code class=\"highlighter-rouge\">배열1</code> <strong>하단</strong>에 <code class=\"highlighter-rouge\">배열2</code>를 <strong>이어 붙일 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">소괄호 ()</code>를 사용하지 않고 <code class=\"highlighter-rouge\">대괄호 []</code>를 사용하여 메소드를 생성합니다.</p>\n"
    } ,
  
    {
      "title"    : "Python numpy 강좌 : 제 10강 - 난수",
      "category" : "",
      "tags"     : "Python-numpy",
      "url"      : "/posts/Python-numpy-10/",
      "date"     : "2018-08-11 00:00:00 +0900",
  "content"   : "<h3 id=\"무작위-선택\">무작위 선택</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">76923</span><span class=\"p\">)</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">])</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">replace</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">])</span>\n\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[9 5 6 7 8]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.random.seed(n)</code>을 이용하여 <strong>임의의 시드</strong>를 생성할 수 있습니다. 시드 값에 따라 난수와 흡사하지만 <strong>항상 같은 결과를 반환합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">numpy.random.choice(배열, n, replace=True, p=None)</code>을 이용하여 <code class=\"highlighter-rouge\">배열</code>에서 <code class=\"highlighter-rouge\">n</code>개의 값을 선택하여 반환할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">replace</code>를 <code class=\"highlighter-rouge\">True</code>로 사용할 경우, 값이 중복되어 선택되 반환될 수 있습니다. <code class=\"highlighter-rouge\">False</code>로 사용할 경우, 값이 중복되지 않습니다.</p>\n\n<p><code class=\"highlighter-rouge\">p</code>를 이용하여 <strong>각 데이터가 선택될 확률</strong>을 설정할 수 있습니다. <code class=\"highlighter-rouge\">p</code> 배열의 길이는 항상 <code class=\"highlighter-rouge\">배열</code>의 길이와 같아야합니다.</p>\n\n<p><code class=\"highlighter-rouge\">p</code>값들의 총합은 항상 <code class=\"highlighter-rouge\">1</code>이여야 하며, <code class=\"highlighter-rouge\">replace</code>를 <code class=\"highlighter-rouge\">False</code>로 사용할 경우, 값이 중복되지 않기 때문에 <strong>n개 이상 0의 값과 달라야합니다.</strong></p>\n\n<p><br /></p>\n\n<h3 id=\"난수-발생\">난수 발생</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">76923</span><span class=\"p\">)</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[0.76367992 0.87641303]<br />\n [0.53095238 0.38451373]]<br />\n[[-0.15929049 -0.07981017]<br />\n [ 1.73777738 -0.47496771]]<br />\n[[1 1]<br />\n [2 1]]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.random.rand(n, m, ...)</code>을 이용하여 <strong>다차원</strong> 무작위 배열을 생성할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">numpy.random.randn(n, m)</code>을 이용하여 <strong>표준 정규 분포</strong>에서 무작위 배열을 생성할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">numpy.random.randint(low, high, (n, m), dtype=None)</code>을 이용하여 <code class=\"highlighter-rouge\">low</code> ~ <code class=\"highlighter-rouge\">high-1</code> 사이의 무작위  <code class=\"highlighter-rouge\">(n, m)</code> 크기정수 배열을 반환합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">76923</span><span class=\"p\">)</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[0.76367992 0.87641303 0.53095238]<br />\n [0.38451373 0.2777934  0.05650517]]<br />\n[[0.44143693 0.7142663  0.54434277]<br />\n [0.74534435 0.89561778 0.36096285]]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.random.random((n, m))</code>과 <code class=\"highlighter-rouge\">numpy.random.sample((n, m))</code>를 이용하여 <strong>0.0 ~ 1.0</strong> 사이의 무작위 <code class=\"highlighter-rouge\">(n, m)</code> 크기 배열을 반환합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"난수-발생-1\">난수 발생</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">76923</span><span class=\"p\">)</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">uniform</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">lognormal</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">laplace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[1.76367992 1.87641303]<br />\n [1.53095238 1.38451373]]<br />\n[[ 17.12791367  18.54480749]<br />\n [114.18014024  12.4912986 ]]<br />\n[[ 0.09286726  0.67469586]<br />\n [ 1.56654873 -0.32583306]]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.random.uniform(low, high, size)</code>를 이용하여  <code class=\"highlighter-rouge\">low</code>~<code class=\"highlighter-rouge\">high</code> 사이의 <strong>균일한 분포의 무작위 배열</strong>을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">numpy.random.lognormal(mean, sigma, size)</code>를 이용하여 <code class=\"highlighter-rouge\">평균</code>과 <code class=\"highlighter-rouge\">시그마</code>를 대입한 <strong>로그 정규 분포의 무작위 배열</strong>을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">numpy.random.laplace(loc, scale, size)</code> : <code class=\"highlighter-rouge\">μ</code>와 <code class=\"highlighter-rouge\">λ</code>를 대입한 <strong>라플라스 분포의 무작위 배열</strong>을 반환합니다.</p>\n"
    } ,
  
    {
      "title"    : "Python numpy 강좌 : 제 9강 - 차원 확장",
      "category" : "",
      "tags"     : "Python-numpy",
      "url"      : "/posts/Python-numpy-9/",
      "date"     : "2018-08-10 00:00:00 +0900",
  "content"   : "<h3 id=\"차원-확장\">차원 확장</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">newaxis</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[:,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">newaxis</span><span class=\"p\">])</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[1 2 3 4]<br />\n[[1 2 3 4]]<br />\n[[1]<br />\n [2]<br />\n [3]<br />\n [4]]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">index</code> 중 <code class=\"highlighter-rouge\">np.newaxis</code>를 이용하여 차원을 확장할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">행</code> 부분에 <code class=\"highlighter-rouge\">np.newaxis</code>를 입력시, <strong>차원을 한 단계 추가합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">열</code> 부분에 <code class=\"highlighter-rouge\">np.newaxis</code>를 입력시, <strong>차원을 분해한 후 한 단계 추가합니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n              <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"p\">[:,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">newaxis</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">])</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[1 2]<br />\n [3 4]]<br />\n[[[1 2]]<br />\n<br />\n [[3 4]]]<br />\n[3 4]<br />\n4<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">배열[:, :, :, ... , np.newaxis]</code>를 이용하여 차원을 확장시킬 수 있습니다.</p>\n\n<p>차원이 증가함에 따라 <code class=\"highlighter-rouge\">index</code>의 표시법이 같이 증가합니다.</p>\n\n<p>주로, <strong>슬라이싱를 통한 연산에 사용됩니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">newaxis</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[:,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">newaxis</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">newaxis</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[:,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">newaxis</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[1 4 9]]<br />\n[[1 2 3]<br />\n [2 4 6]<br />\n [3 6 9]]<br />\n<br />\n<br />\n[[2 4 6]]<br />\n[[2 3 4]<br />\n [3 4 5]<br />\n [4 5 6]]<br />\n<br /></dd>\n</dl>\n\n<p>차원을 어떻게 나누느냐에 따라, 결과가 상이하게 달라집니다.</p>\n\n<p>주로, <code class=\"highlighter-rouge\">배열[:, np.newaxis]</code> 형태로 계산을 진행합니다.</p>\n\n"
    } ,
  
    {
      "title"    : "Python numpy 강좌 : 제 8강 - 매트릭스",
      "category" : "",
      "tags"     : "Python-numpy",
      "url"      : "/posts/Python-numpy-8/",
      "date"     : "2018-08-09 00:00:00 +0900",
  "content"   : "<h3 id=\"매트릭스\">매트릭스</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">*</span><span class=\"n\">b</span><span class=\"p\">)</span>\n\n<span class=\"n\">ma</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mat</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"n\">mb</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mat</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">ma</span><span class=\"o\">*</span><span class=\"n\">mb</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[ 1  6]<br />\n [ 6 16]]<br />\n[[ 5 11]<br />\n [11 25]]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">array * array</code>의 경우, 결과는 <strong>각각의 원소에 대한 곱을 반환합니다.</strong></p>\n\n<p>행렬의 곱을 반환해야하는 경우, <code class=\"highlighter-rouge\">mat</code> 형식으로 변환 후, <strong>곱 연산을 실행합니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"매트릭스-클래스\">매트릭스 클래스</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"mf\">1j</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"mf\">1j</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n\n<span class=\"n\">ma</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mat</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"n\">mb</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mat</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">H</span>\n<span class=\"n\">mc</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mat</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">I</span>\n<span class=\"n\">md</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mat</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">A</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">ma</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">mb</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">mc</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">md</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[1 3]<br />\n [2 4]]<br />\n[[1.+1.j 3.-0.j]<br />\n [2.+1.j 4.-0.j]]<br />\n[[-2.   1.5]<br />\n [ 1.  -0.5]]<br />\n[[1 3]<br />\n [2 4]]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">mat(배열).T</code>의 경우, 매트릭스의 <code class=\"highlighter-rouge\">전치</code>값을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">mat(배열).H</code>의 경우, 매트릭스의 <code class=\"highlighter-rouge\">공액복소수의 전치</code>값을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">mat(배열).I</code>의 경우, 매트릭스의 <code class=\"highlighter-rouge\">곱의 역함수</code>값을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">mat(배열).A</code>의 경우, 매트릭스 형식을 다시 <code class=\"highlighter-rouge\">array</code> 형식으로 변환하여 반환합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">*.T</code>의 경우, <code class=\"highlighter-rouge\">array</code> 배열의 <strong>전치</strong> 값으로도 사용이 가능합니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">*.A</code>의 경우, <strong>곱 연산</strong>을 실행시 <code class=\"highlighter-rouge\">원소 곱</code>의 값으로 반환합니다.</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python numpy 강좌 : 제 7강 - 연산",
      "category" : "",
      "tags"     : "Python-numpy",
      "url"      : "/posts/Python-numpy-7/",
      "date"     : "2018-08-09 00:00:00 +0900",
  "content"   : "<h3 id=\"연산\">연산</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]])</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">-</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">*</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">/</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cross</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[ 2  3  4]<br />\n [ 5  6  7]<br />\n [ 8  9 10]]<br />\n[[0 1 2]<br />\n [3 4 5]<br />\n [6 7 8]]<br />\n[[1 2 3]<br />\n [4 5 6]<br />\n [7 8 9]]<br />\n[[1. 2. 3.]<br />\n [4. 5. 6.]<br />\n [7. 8. 9.]]<br />\n[ 6 15 24]<br />\n[[-1  2 -1]<br />\n [-1  2 -1]<br />\n [-1  2 -1]]<br /></dd>\n</dl>\n\n<p>사칙연산과 관련된 연산은 <code class=\"highlighter-rouge\">array</code>와 <code class=\"highlighter-rouge\">array</code> 사이에 <strong>연산 기호를 포함하여 계산할 수 있습니다.</strong></p>\n\n<p>내적의 경우, <code class=\"highlighter-rouge\">np.dot(a, b)</code>를 이용하여 계산할 수 있습니다.</p>\n\n<p>외적의 경우, <code class=\"highlighter-rouge\">np.cross(a, b)</code>를 이용하여 계산할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p>이외에도 <code class=\"highlighter-rouge\">sin()</code>, <code class=\"highlighter-rouge\">cos()</code>, <code class=\"highlighter-rouge\">tan()</code>, <code class=\"highlighter-rouge\">ceil()</code>, <code class=\"highlighter-rouge\">floor()</code>, <code class=\"highlighter-rouge\">exp()</code>, <code class=\"highlighter-rouge\">mod()</code>, <code class=\"highlighter-rouge\">sqrt()</code>, <code class=\"highlighter-rouge\">maximum()</code>, <code class=\"highlighter-rouge\">minimum()</code>등 다양한 수학 함수도 지원합니다.</p>\n"
    } ,
  
    {
      "title"    : "Python numpy 강좌 : 제 6강 - 리쉐이프",
      "category" : "",
      "tags"     : "Python-numpy",
      "url"      : "/posts/Python-numpy-6/",
      "date"     : "2018-08-09 00:00:00 +0900",
  "content"   : "<h3 id=\"리쉐이프\">리쉐이프</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span>\n    <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">]])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[ 1  2  3  4]<br />\n [ 5  6  7  8]<br />\n [ 9 10 11 12]]<br />\n(3, 4)<br />\n[[ 1  2]<br />\n [ 3  4]<br />\n [ 5  6]<br />\n [ 7  8]<br />\n [ 9 10]<br />\n [11 12]]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">배열.shape = (행, 열)</code>을 통하여 배열의 형태를 변환할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">행렬</code>의 값은 총 길이의 <code class=\"highlighter-rouge\">곱(개수)</code>과 같아야합니다.</p>\n\n<p>원본 배열의 크기가 <code class=\"highlighter-rouge\">3x4=12</code>일 경우, 리쉐이프 할때 <code class=\"highlighter-rouge\">6x2=12</code>로 <strong>총 개수와 동일해야합니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]],</span>\n              <span class=\"p\">[[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">]],</span>\n              <span class=\"p\">[[</span><span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">]]])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[[ 1  2  3]<br />\n  [ 4  5  6]]<br />\n<br />\n [[ 7  8  9]<br />\n  [10 11 12]]<br />\n<br />\n [[13 14 15]<br />\n  [16 17 18]]]<br />\n(3, 2, 3)<br />\n[[[ 1  2  3]<br />\n  [ 4  5  6]<br />\n  [ 7  8  9]]<br />\n<br /> \n [[10 11 12]<br />\n  [13 14 15]<br />\n  [16 17 18]]]<br />\n<br /></dd>\n</dl>\n\n<p><strong>3차원 이상의 배열</strong> 또한 형태를 변환할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">배열.shape= (페이지, 행, 열)</code>의 순서이며, 역시 <strong>총 길이의 개수와 동일해야합니다.</strong></p>\n\n"
    } ,
  
    {
      "title"    : "Python numpy 강좌 : 제 5강 - 슬라이싱",
      "category" : "",
      "tags"     : "Python-numpy",
      "url"      : "/posts/Python-numpy-5/",
      "date"     : "2018-08-09 00:00:00 +0900",
  "content"   : "<h3 id=\"슬라이싱\">슬라이싱</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">:])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span> \n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">])</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[1 2 3 4 5]<br />\n<br />\n[4 5]<br />\n<br />\n[2 3 4]<br />\n<br />\n[1 3]\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">배열[a:b:c]</code>를 이용하여  <strong>배열의 일부를 잘라 표시할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">a</code>는 <strong>시작값</strong>, <code class=\"highlighter-rouge\">b</code>는 <strong>도착값</strong>, <code class=\"highlighter-rouge\">c</code>는 <strong>간격</strong>을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">index</code>는 <code class=\"highlighter-rouge\">0 ~ len-1</code>까지 존재하며, 아무것도 입력하지 않고 <code class=\"highlighter-rouge\">:</code>로 사용할 경우, 모든 <code class=\"highlighter-rouge\">행</code> 또는 <code class=\"highlighter-rouge\">열</code>을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">:n</code>으로 사용할 경우 <code class=\"highlighter-rouge\">0 ~ n</code>까지의 길이를 의미하며 <code class=\"highlighter-rouge\">n:</code>으로 사용할 경우, <code class=\"highlighter-rouge\">n ~ len-1</code>까지의 길이를 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">-1</code>을 입력할 경우, <code class=\"highlighter-rouge\">마지막 index-1 (len-2)</code>를 의미합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span>\n    <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">:])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">])</span> </code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[1 2 3]<br />\n [4 5 6]<br />\n [7 8 9]]<br />\n<br />\n[[2 3]<br />\n [5 6]<br />\n [8 9]]<br />\n<br />\n[[1 2]]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">배열[a:b, c:d]</code>를 이용하여 <strong>배열의 일부를 잘라 표시할 수 있습니다.</strong></p>\n\n<p>동일하게 <code class=\"highlighter-rouge\">배열[a:b:e, c:d:f]</code>를 이용하여 <code class=\"highlighter-rouge\">e</code>와 <code class=\"highlighter-rouge\">f</code>를 <strong>간격</strong>으로 사용할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">a</code> ~ <code class=\"highlighter-rouge\">b</code>는 표시할 <code class=\"highlighter-rouge\">행</code>의 위치를 의미하며, <code class=\"highlighter-rouge\">c</code> ~ <code class=\"highlighter-rouge\">d</code>는 표시할 <code class=\"highlighter-rouge\">열</code>의 위치를 의미합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span>\n    <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">]])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[::</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"p\">::</span><span class=\"mi\">2</span><span class=\"p\">])</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[ 1  2  3  4  5]<br />\n [ 6  7  8  9 10]<br />\n [11 12 13 14 15]]<br />\n<br />\n[[ 1  3  5]<br />\n [11 13 15]]<br />\n<br /></dd>\n</dl>\n\n<p>배열의 슬라이싱에서 <code class=\"highlighter-rouge\">간격</code>만 입력하여 배열을 출력할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">[::2, ::2]</code>일 경우, <code class=\"highlighter-rouge\">행</code>을 <code class=\"highlighter-rouge\">2</code>칸씩 띄우며, <code class=\"highlighter-rouge\">열</code>도 <code class=\"highlighter-rouge\">2</code>칸씩 띄워 출력합니다.</p>\n\n"
    } ,
  
    {
      "title"    : "Python numpy 강좌 : 제 4강 - 등간격",
      "category" : "",
      "tags"     : "Python-numpy",
      "url"      : "/posts/Python-numpy-4/",
      "date"     : "2018-08-09 00:00:00 +0900",
  "content"   : "<h3 id=\"등간격\">등간격</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[0 5]<br />\n[1 6]<br />\n[0 1 2 3 4 5 6 7 8 9]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.arange(start, end, step=간격, dtype=자료형)</code>을 사용하여 <code class=\"highlighter-rouge\">start</code> ~ <code class=\"highlighter-rouge\">end-1</code> 사이의 값을 <code class=\"highlighter-rouge\">간격</code>만큼 띄워 배열로 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">start</code>값은 항상 포함되며, <code class=\"highlighter-rouge\">end</code>값은 포함되지 않을 수도 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">간격</code>이 <code class=\"highlighter-rouge\">end</code>값을 초과할 경우, <code class=\"highlighter-rouge\">start</code>값만 포함합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">retstep</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">retstep</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"n\">retstep</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>(array([ 0. ,  2.5,  5. ,  7.5, 10. ]), 2.5)<br />\n[ 1.    3.25  5.5   7.75 10.  ]<br />\n[0. 2. 4. 6. 8.]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.linspace(start, end, num=개수, endpoint=True, retstep=False, dtype=자료형)</code>을 사용하여 <code class=\"highlighter-rouge\">start</code> ~ <code class=\"highlighter-rouge\">end</code> 사이의 값을 <code class=\"highlighter-rouge\">개수</code>만큼 생성하여 배열로 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">endpoint</code>가 <code class=\"highlighter-rouge\">True</code>일 경우 <code class=\"highlighter-rouge\">end</code>의 값이 <strong>마지막 값</strong>이 되며, <code class=\"highlighter-rouge\">False</code>일 경우 <code class=\"highlighter-rouge\">end</code>의 값을 <strong>마지막 값으로 사용하지 않습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">retstep</code>이 <code class=\"highlighter-rouge\">True</code>일 경우 값들의 <code class=\"highlighter-rouge\">간격</code>을 배열에 포함합니다. <code class=\"highlighter-rouge\">numpy.arange()</code>의 <code class=\"highlighter-rouge\">step</code>과 동일한 의미를 지닙니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">logspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">base</span><span class=\"o\">=</span><span class=\"mf\">10.0</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">logspace</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">base</span><span class=\"o\">=</span><span class=\"mf\">5.0</span><span class=\"p\">)</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">logspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"n\">base</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[1.00000000e+00 3.16227766e+02 1.00000000e+05 3.16227766e+07 1.00000000e+10]<br />\n[5.00000000e+00 1.86918598e+02 6.98771243e+03 2.61226682e+05 9.76562500e+06]<br />\n[1. 1. 1. 1. 1.]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.logspace(start, end, num=개수, endpoint=True, base=10.0, dtype=자료형)</code>을 사용하여 <code class=\"highlighter-rouge\">start</code> ~ <code class=\"highlighter-rouge\">end</code> 사이의 로그 배율을 사용하여 값을 <code class=\"highlighter-rouge\">개수</code>만큼 생성하여 배열로 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">endpoint</code>가 <code class=\"highlighter-rouge\">True</code>일 경우 <code class=\"highlighter-rouge\">end</code>의 값이 <strong>마지막 값</strong>이 되며, <code class=\"highlighter-rouge\">False</code>일 경우 <code class=\"highlighter-rouge\">end</code>의 값을 <strong>마지막 값으로 사용하지 않습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">base</code>는 로그 값의 <code class=\"highlighter-rouge\">간격</code>을 의미합니다.</p>\n\n"
    } ,
  
    {
      "title"    : "Python numpy 강좌 : 제 3강 - 배열 생성 (3)",
      "category" : "",
      "tags"     : "Python-numpy",
      "url"      : "/posts/Python-numpy-3/",
      "date"     : "2018-08-08 00:00:00 +0900",
  "content"   : "<h3 id=\"모든-값이-1인-배열\">모든 값이 1인 배열</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones_like</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[1 1]<br />\n [1 1]]<br />\n[1, 2, 3, 4, 5]<br />\n[1 1 1 1 1]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.ones(배열, dtype=자료형)</code>을 사용하여 <strong>모든 원소의 값이 1인 배열을 생성할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">numpy.ones_like(배열, dtype=자료형)</code>을 사용하여 <strong>배열의 크기와 동일하며 모든 원소의 값이 1인 배열을 생성할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<h3 id=\"모든-값이-0인-배열\">모든 값이 0인 배열</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros_like</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[0 0]<br />\n [0 0]]<br />\n[1, 2, 3, 4, 5]<br />\n[0 0 0 0 0]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.zeros(배열, dtype=자료형)</code>을 사용하여 <strong>모든 원소의 값이 0인 배열을 생성할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">numpy.zeros_like(배열, dtype=자료형)</code>을 사용하여 <strong>배열의 크기와 동일하며 모든 원소의 값이 0인 배열을 생성할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<h3 id=\"모든-값이-비어있는-배열\">모든 값이 비어있는 배열</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">empty</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">empty_like</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[     257 83886080]<br />\n [      18        0]]<br />\n[1, 2, 3, 4, 5]<br />\n[0 0 0 0 0]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.empty(배열, dtype=자료형)</code>을 사용하여 <strong>특정한 값으로 초기화하지 않는 배열을 생성할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">numpy.empty_like(배열, dtype=자료형)</code>을 사용하여 <strong>배열의 크기와 동일하며 특정한 값으로 초기화하지 않는 배열을 생성할 수 있습니다.</strong></p>\n\n<p><strong>난수와 다른 임의의 값이 들어가며 값은 메모리에 저장된 내용에 따라 달라집니다.</strong></p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">empty</code>를 이용하여 배열을 생성할 경우, <strong>조금 더 빠른 속도로 생성이 가능합니다.</strong></li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"대각의-값이-1인-배열-단위-행렬\">대각의 값이 1인 배열 (단위 행렬)</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">identity</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[1 0 0 0]<br />\n [0 1 0 0]<br />\n [0 0 1 0]<br />\n [0 0 0 1]]<br />\n[[0 1 0 0]<br />\n [0 0 1 0]<br />\n [0 0 0 1]<br />\n [0 0 0 0]]<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.identity(N, dtype=자료형)</code>을 사용하여 <strong>NxN 크기의 단위 행렬을 반환합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">numpy.eye(N, M, k=K, dtype=자료형)</code>을 사용하여 <strong>NxM 크기의 K값 만큼 이격된 단위 행렬을 반환합니다.</strong></p>\n\n<p>K의 값이 <code class=\"highlighter-rouge\">양수</code>일 경우, <code class=\"highlighter-rouge\">우상</code> 방향으로 이동하며, K의 값이 <code class=\"highlighter-rouge\">음수</code>일 경우, <code class=\"highlighter-rouge\">좌하</code> 방향으로 이동합니다.</p>\n\n"
    } ,
  
    {
      "title"    : "Python numpy 강좌 : 제 2강 - 배열 생성 (2)",
      "category" : "",
      "tags"     : "Python-numpy",
      "url"      : "/posts/Python-numpy-2/",
      "date"     : "2018-08-08 00:00:00 +0900",
  "content"   : "<h3 id=\"1차원-배열\">1차원 배열</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">1.1</span><span class=\"p\">,</span> <span class=\"mf\">2.2</span><span class=\"p\">,</span> <span class=\"mf\">3.3</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">)</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">bool</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[1 2 3]<br />\n[1.1 2.2 3.3]<br />\n[ True  True False]<br />\nint32<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.array(배열, dtype=자료형)</code>을 사용하여 <strong>배열 생성과 자료형을 설정할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">dtype</code>이 생략될 경우, 데이터의 자료형을 유추하여 자동적으로 <code class=\"highlighter-rouge\">dtype</code>을 할당합니다.</p>\n\n<p><code class=\"highlighter-rouge\">bool</code>형식의 특정한 배열을 생성시 <code class=\"highlighter-rouge\">dtype</code>을 사용하여 <code class=\"highlighter-rouge\">명시적</code>으로 표기합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"다차원-배열\">다차원 배열</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]])</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]],</span> <span class=\"p\">[[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]],</span> <span class=\"p\">[[</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">]]])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">ndim</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndim</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[1 2 3]<br />\n [4 5 6]<br />\n [7 8 9]]<br />\n[[[ 1  2]<br />\n  [ 3  4]]<br />\n<br />\n [[ 5  6]<br />\n  [ 7  8]]<br />\n<br />\n [[ 9 10]<br />\n  [11 12]]]<br />\n2<br />\n4<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">numpy.array(다차원 배열, dtype=자료형)</code>을 사용하여 <strong>다차원 배열 생성과 자료형을 설정할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">dtype</code>이 생략될 경우, 데이터의 자료형을 유추하여 자동적으로 <code class=\"highlighter-rouge\">dtype</code>을 할당합니다.</p>\n\n<p>다차원 배열의 값을 불러올 때, <code class=\"highlighter-rouge\">배열[페이지][행][열]...</code> 형태로 배열의 값을 불러올 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"배열-속성-반환\">배열 속성 반환</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]])</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]],</span> <span class=\"p\">[[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]],</span> <span class=\"p\">[[</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">]]])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">])</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>2<br />\n(3, 3)<br />\nint32<br />\n3<br />\n(3, 2, 2)<br />\n<br /></dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">배열.ndim</code> 또는 <code class=\"highlighter-rouge\">np.ndim(배열)</code>을 사용하여 <strong>배열의 차원을 반환합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">배열.shape</code> 또는 <code class=\"highlighter-rouge\">np.shape(배열)</code>을 사용하여 <strong>배열의 형태를 반환합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">배열.dtype</code>을 사용하여 <strong>배열의 자료형을 반환합니다.</strong></p>\n\n"
    } ,
  
    {
      "title"    : "Python numpy 강좌 : 제 1강 - 배열 생성 (1)",
      "category" : "",
      "tags"     : "Python-numpy",
      "url"      : "/posts/Python-numpy-1/",
      "date"     : "2018-08-07 00:00:00 +0900",
  "content"   : "<h3 id=\"numpy\">numpy</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">numpy</code>는 <code class=\"highlighter-rouge\">벡터 행렬</code> 계산을 효율적으로 처리하기 위한 모듈입니다. <code class=\"highlighter-rouge\">Numeric</code>모듈과 <code class=\"highlighter-rouge\">Numarray</code> 모듈이 합쳐져 <strong>높은 수준의 다차원 배열 계산</strong>을 <code class=\"highlighter-rouge\">고속 및 효율적</code>으로 처리할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">numpy</code> 모듈은 <code class=\"highlighter-rouge\">pip</code>를 통하여 설치할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">numpy 설치하기</code> : <a href=\"https://076923.github.io/posts/Python-28/\">28강 바로가기</a></p>\n\n<p><br /></p>\n\n<p><br />\n<br /></p>\n<h3 id=\"numpy-사용\">numpy 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span></code></pre></figure>\n\n<p>상단에 <code class=\"highlighter-rouge\">import numpy</code>를 사용하여 <code class=\"highlighter-rouge\">numpy</code>를 포함시킵니다. numpy 함수의 사용방법은 <code class=\"highlighter-rouge\">numpy.*</code>를 이용하여 사용이 가능합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">as</code> 구문이 추가될 경우, <code class=\"highlighter-rouge\">numpy.*</code>에서 <code class=\"highlighter-rouge\">np.*</code>으로 축약해서 사용할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"numpy-배열-생성\">numpy 배열 생성</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[1, 2, 3, 4, 5]<br />\n[1 2 3 4 5]<br />\n[1 3 5]<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">numpy.array(배열)</code>을 사용하여 <strong>numpy 배열</strong>을 생성할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">numpy</code>는 <code class=\"highlighter-rouge\">list</code>와 비슷하지만, 배열안에 <code class=\"highlighter-rouge\">콤마(,)</code>가 존재하지 않습니다.</p>\n\n<p>또한, <code class=\"highlighter-rouge\">list</code> 형식으로 생성된 배열을 <code class=\"highlighter-rouge\">numpy</code> 형식으로 변경할 수 있습니다.</p>\n\n<p><br /></p>\n<h3 id=\"numpy-배열-복제\">numpy 배열 복제</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">a</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n\n<span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">99</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[99  2  3  4  5]<br />\n[99  2  3  4  5]<br />\n[1 2 3 4 5]<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">numpy</code> 배열은 <code class=\"highlighter-rouge\">list</code>, <code class=\"highlighter-rouge\">tuple</code> 등과 동일하게 복사하여 값을 변경할 경우, <strong>원본의 값도 변경됩니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">numpy배열.copy()</code>를 통하여 복제할 경우, <strong>원본과 별개의 배열이 생성됩니다.</strong></p>\n\n<p><br /></p>\n<h3 id=\"numpy-배열-호출\">numpy 배열 호출</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">])</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>3<br />\n5<br />\n[1 3]<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">list</code>와 동일하게 배열 내의 원소를 <code class=\"highlighter-rouge\">대괄호([])</code>를 이용하여 호출할 수 있습니다.</p>\n\n<p><br /></p>\n<h3 id=\"numpy-배열-계산\">numpy 배열 계산</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[1, 2, 3, 4, 5, 1, 2, 3, 4, 5]<br />\n[ 2  4  6  8 10]<br />\n[4 6 8]<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">numpy</code>는 <code class=\"highlighter-rouge\">list</code>와 다르게 <code class=\"highlighter-rouge\">수학 기호</code>를 사용한다면 <strong>각각의 원소로 계산하여 반환합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">list</code>의 경우 <code class=\"highlighter-rouge\">*</code>기호 사용시 해당 배열을 이어붙이지만, <code class=\"highlighter-rouge\">numpy</code>의 경우 <strong>연산을 실행합니다.</strong></p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">numpy</code>를 사용할 경우, <code class=\"highlighter-rouge\">list comprehension</code>을 사용하지 않아도 원소의 값을 연산할 수 있습니다.</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 28강 - PIP 설치",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-28/",
      "date"     : "2018-08-06 00:00:00 +0900",
  "content"   : "<h3 id=\"pip-package-manager\">PIP (Package Manager)###</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">PIP(Package Manager)</code>는 Python에서 작성된 <strong>패키지 소프트웨어를 설치</strong>하는데 사용합니다. 명령 줄 인터페이스만으로도 손쉽게 소프트웨어 패키지를 설치할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"pip-실행-및-업그레이드\">PIP 실행 및 업그레이드###</h3>\n<hr />\n<p><a href=\"/assets/images/Python/ch28/1.png\"><img src=\"/assets/images/Python/ch28/1.png\" alt=\"1\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">Python이 저장된 경로\\Python\\Scripts</code>에 <code class=\"highlighter-rouge\">pip.exe</code>, <code class=\"highlighter-rouge\">pip3.exe</code> 등이 저장되어 있습니다.  이 <code class=\"highlighter-rouge\">pip</code>를 불러와 패키지 소프트웨어를 설치할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/ch28/2.png\"><img src=\"/assets/images/Python/ch28/2.png\" alt=\"2\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">명령 프롬프트 (cmd.exe)</code>를 실행시킵니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/ch28/3.png\"><img src=\"/assets/images/Python/ch28/3.png\" alt=\"3\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">Python</code>이 저장된 경로가 <code class=\"highlighter-rouge\">D 드라이브(d:)</code>이므로  이동합니다.</p>\n\n<p>그 후, <code class=\"highlighter-rouge\">cd python</code>을 통하여 <code class=\"highlighter-rouge\">Python</code> 폴더로 경로를 변경합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/ch28/4.png\"><img src=\"/assets/images/Python/ch28/4.png\" alt=\"4\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">python -m pip</code>를 통하여 <code class=\"highlighter-rouge\">pip</code>가 정상적으로 작동하는지 확인합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Commands</code>의 목록을 통하여 pip를 제어할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/ch28/5.png\"><img src=\"/assets/images/Python/ch28/5.png\" alt=\"5\" /></a></p>\n\n<p>먼저 <code class=\"highlighter-rouge\">pip</code>의 버전을 업그레이드합니다.</p>\n\n<p><code class=\"highlighter-rouge\">python -m pip install --upgrade pip</code>를 통하여 버전을 업그레이드합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/ch28/6.png\"><img src=\"/assets/images/Python/ch28/6.png\" alt=\"6\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">Sucessfully installed pip-버전</code>이 출력된다면 정상적으로 버전이 업그레이드 되었습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"pip-패키지-소프트웨어-설치\">PIP 패키지 소프트웨어 설치</h3>\n<hr />\n<p><a href=\"/assets/images/Python/ch28/7.png\"><img src=\"/assets/images/Python/ch28/7.png\" alt=\"7\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">numpy</code> 라이브러리를 설치해보도록 하겠습니다.</p>\n\n<p><code class=\"highlighter-rouge\">python -m pip install numpy</code>를 통하여 <code class=\"highlighter-rouge\">numpy</code> 라이브러리를 설치할 수 있습니다.</p>\n\n<p>&lt;br.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">OpenCV</code> 라이브러리는 <code class=\"highlighter-rouge\">opencv-python</code>으로 설치할 수 있습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/ch28/8.png\"><img src=\"/assets/images/Python/ch28/8.png\" alt=\"8\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">Sucessfully installed numpy-버전</code>이 출력된다면 정상적으로 설치되었습니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/ch28/9.png\"><img src=\"/assets/images/Python/ch28/9.png\" alt=\"9\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">Python Shell</code>을 실행 후, <code class=\"highlighter-rouge\">import numpy</code>와 <code class=\"highlighter-rouge\">numpy.__version__</code>을 통하여 <code class=\"highlighter-rouge\">numpy의 정상 설치 유/무</code>와 <code class=\"highlighter-rouge\">버전</code>을 확인할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/ch28/10.png\"><img src=\"/assets/images/Python/ch28/10.png\" alt=\"10\" /></a></p>\n\n<p>또는 <code class=\"highlighter-rouge\">pip list</code>를 통하여 <strong>설치된 패키지와 버전을 확인할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/ch28/11.png\"><img src=\"/assets/images/Python/ch28/11.png\" alt=\"11\" /></a></p>\n\n<p>다음과 같이 설치된 <code class=\"highlighter-rouge\">모든 라이브러리</code>를 확인하며 <code class=\"highlighter-rouge\">버전</code>까지 확인할 수 있습니다.</p>\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 60강 - 광학 흐름 - Farneback",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-60/",
      "date"     : "2018-08-05 00:00:00 +0900",
  "content"   : "<h3 id=\"광학-흐름---farneback-optical-flow-farneback\">광학 흐름 - Farneback (Optical Flow Farneback)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch60/1.png\"><img src=\"/assets/images/C/opencv/ch60/1.png\" alt=\"1\" /></a>\n카메라와 피사체의 <code class=\"highlighter-rouge\">상대 운동</code>에 의하여 발생하는 <code class=\"highlighter-rouge\">피사체의 운동에 대한 패턴</code>을 검출합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Farneback</code> 방법은 Gunnar Farneback의 알고리즘을 사용하여 <code class=\"highlighter-rouge\">밀도가 높은 광학 흐름</code>을 계산합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">이전 프레임(Previous)</code>과 <code class=\"highlighter-rouge\">현재 프레임(Current)</code>은 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">gray</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">optical</span><span class=\"p\">;</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">gray</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">OpticalFlowFarneback</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">previous</span><span class=\"p\">,</span> <span class=\"n\">IplImage</span> <span class=\"n\">current</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">prev</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">previous</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">curr</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"p\">);</span>\n            <span class=\"n\">optical</span> <span class=\"p\">=</span> <span class=\"n\">current</span><span class=\"p\">;</span>\n\n            <span class=\"kt\">int</span> <span class=\"n\">rows</span> <span class=\"p\">=</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span>\n            <span class=\"kt\">int</span> <span class=\"n\">cols</span> <span class=\"p\">=</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span>\n\n            <span class=\"n\">IplImage</span> <span class=\"n\">flow</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">F32</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n            <span class=\"kt\">double</span> <span class=\"n\">pyrScale</span> <span class=\"p\">=</span> <span class=\"m\">0.5</span><span class=\"p\">;</span>\n            <span class=\"kt\">int</span> <span class=\"n\">level</span> <span class=\"p\">=</span> <span class=\"m\">3</span><span class=\"p\">;</span>\n            <span class=\"kt\">int</span> <span class=\"n\">winSize</span> <span class=\"p\">=</span> <span class=\"m\">15</span><span class=\"p\">;</span>\n            <span class=\"kt\">int</span> <span class=\"n\">iterations</span> <span class=\"p\">=</span> <span class=\"m\">3</span><span class=\"p\">;</span>\n            <span class=\"kt\">int</span> <span class=\"n\">polyN</span> <span class=\"p\">=</span> <span class=\"m\">5</span><span class=\"p\">;</span>\n            <span class=\"kt\">double</span> <span class=\"n\">polySigma</span> <span class=\"p\">=</span> <span class=\"m\">1.1</span><span class=\"p\">;</span> \n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CalcOpticalFlowFarneback</span><span class=\"p\">(</span><span class=\"n\">prev</span><span class=\"p\">,</span> <span class=\"n\">curr</span><span class=\"p\">,</span> <span class=\"n\">flow</span><span class=\"p\">,</span> <span class=\"n\">pyrScale</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"p\">,</span> <span class=\"n\">winSize</span><span class=\"p\">,</span> <span class=\"n\">iterations</span><span class=\"p\">,</span> <span class=\"n\">polyN</span><span class=\"p\">,</span> <span class=\"n\">polySigma</span><span class=\"p\">,</span> <span class=\"n\">LKFlowFlag</span><span class=\"p\">.</span><span class=\"n\">PyrAReady</span><span class=\"p\">);</span>\n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">cols</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">+=</span> <span class=\"n\">winSize</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">&lt;</span> <span class=\"n\">rows</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">+=</span> <span class=\"n\">winSize</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"kt\">int</span> <span class=\"n\">dx</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">flow</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">][</span><span class=\"m\">0</span><span class=\"p\">];</span>\n                    <span class=\"kt\">int</span> <span class=\"n\">dy</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">flow</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">][</span><span class=\"m\">1</span><span class=\"p\">];</span>\n\n                    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">dx</span> <span class=\"p\">!=</span> <span class=\"m\">0</span> <span class=\"p\">||</span> <span class=\"n\">dy</span> <span class=\"p\">!=</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Point</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">),</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Point</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">+</span> <span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"p\">+</span> <span class=\"n\">dy</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Blue</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n                        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawCircle</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">+</span> <span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"p\">+</span> <span class=\"n\">dy</span><span class=\"p\">),</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Blue</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">return</span> <span class=\"n\">optical</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">);</span>   \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">optical</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">);</span>  \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">OpticalFlowFarneback</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">previous</span><span class=\"p\">,</span> <span class=\"n\">IplImage</span> <span class=\"n\">current</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>이전 프레임 <code class=\"highlighter-rouge\">previous</code>와 현재 프레임 <code class=\"highlighter-rouge\">current</code>를 매개변수로 사용하여 검출을 진행합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplImage</span> <span class=\"n\">prev</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">previous</span><span class=\"p\">);</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">curr</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"p\">);</span>\n<span class=\"n\">optical</span> <span class=\"p\">=</span> <span class=\"n\">current</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>광학 흐름 함수는 <code class=\"highlighter-rouge\">그레이스케일</code>을 적용하여 검출을 진행합니다.</p>\n\n<p>계산이미지로 사용할 <code class=\"highlighter-rouge\">prev</code>와 <code class=\"highlighter-rouge\">curr</code> 변수에 <code class=\"highlighter-rouge\">그레이스케일</code>을 적용합니다.</p>\n\n<p>이후, 결과로 사용할 <code class=\"highlighter-rouge\">optical</code> 필드에 <code class=\"highlighter-rouge\">현재 프레임</code>을 사용합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 그레이스케일을 사용하여 검출하므로 <code class=\"highlighter-rouge\">급격한 밝기 변화</code>나 <code class=\"highlighter-rouge\">노이즈</code>에는 정확한 검출을 얻어낼 수 없습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">rows</span> <span class=\"p\">=</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">cols</span> <span class=\"p\">=</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">행</code>과 <code class=\"highlighter-rouge\">열</code>을 설정합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplImage</span> <span class=\"n\">flow</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">F32</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n<span class=\"kt\">double</span> <span class=\"n\">pyrScale</span> <span class=\"p\">=</span> <span class=\"m\">0.5</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">level</span> <span class=\"p\">=</span> <span class=\"m\">3</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">winSize</span> <span class=\"p\">=</span> <span class=\"m\">15</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">iterations</span> <span class=\"p\">=</span> <span class=\"m\">3</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">polyN</span> <span class=\"p\">=</span> <span class=\"m\">5</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span> <span class=\"n\">polySigma</span> <span class=\"p\">=</span> <span class=\"m\">1.1</span><span class=\"p\">;</span> </code></pre></figure>\n\n<p>광학 흐름 검출 함수에 사용할 인수들을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">flow</code>는 광학 흐름에 대한 정보를 저장합니다. 비트 깊이는 <code class=\"highlighter-rouge\">F32</code>, 채널은 <code class=\"highlighter-rouge\">2</code>를 사용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">pyrScale</code>는 프레임의 피라미드를 만들기 위한 이미지 크기를 설정합니다. 값은 <code class=\"highlighter-rouge\">0~1</code>의 값을 사용합니다. <code class=\"highlighter-rouge\">0.5</code>는 <strong>고전적인 피라미드의 크기</strong>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">level</code>은 피라미드 이미지의 레벨값을 설정합니다. <code class=\"highlighter-rouge\">1</code>로 사용할 경우, <strong>원본 이미지로 사용합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">winSize</code>는 윈도우 창의 크기를 의미합니다. <strong>값이 클수록 노이즈의 영향과 처리속도가 짧아지지만, 검출 결과가 흐릿해집니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">iterations</code>는 각 피라미드에서 알고리즘이 <code class=\"highlighter-rouge\">반복 수행</code>할 횟수입니다.</p>\n\n<p><code class=\"highlighter-rouge\">polyN</code>은 각 픽셀에서 다항식 확장을 찾는 데 사용되는 <code class=\"highlighter-rouge\">인접 픽셀 영역 크기</code>입니다. <strong>값이 클수록 매끄러워지지만, 검출 결과가 흐릿해집니다.</strong> 값은 <code class=\"highlighter-rouge\">5~7</code>의 값을 가장 많이 사용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">polySigma</code>는 부드럽게 하기 위한 <code class=\"highlighter-rouge\">가우시안의 표준 편차</code>입니다. <strong>polyN의 값이 5일 경우, 1.1의 값을 주로 사용하며, polyN의 값이 7일 경우, 1.5의 값을 주로 사용합니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CalcOpticalFlowFarneback</span><span class=\"p\">(</span><span class=\"n\">prev</span><span class=\"p\">,</span> <span class=\"n\">curr</span><span class=\"p\">,</span> <span class=\"n\">flow</span><span class=\"p\">,</span> <span class=\"n\">pyrScale</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"p\">,</span> <span class=\"n\">winSize</span><span class=\"p\">,</span> <span class=\"n\">iterations</span><span class=\"p\">,</span> <span class=\"n\">polyN</span><span class=\"p\">,</span> <span class=\"n\">polySigma</span><span class=\"p\">,</span> <span class=\"n\">LKFlowFlag</span><span class=\"p\">.</span><span class=\"n\">PyrAReady</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.CalcOpticalFlowFarneback()</code>을 사용하여 <code class=\"highlighter-rouge\">광학 흐름</code>을 구합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.CalcOpticalFlowFarneback(이전 프레임, 현재 프레임, 광학 흐름 저장 변수, 피라미드 스케일, 레벨, 윈도우 창 크기, 반복 횟수, 인접 픽셀 영역 크기, 가우시안 표준 편차, 플래그)</code>를 의미합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">cols</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">+=</span> <span class=\"n\">winSize</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">&lt;</span> <span class=\"n\">rows</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">+=</span> <span class=\"n\">winSize</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"p\">...</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">이중 for</code>문을 사용하여 <code class=\"highlighter-rouge\">윈도우 창 크기</code>의 간격 만큼 반복합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">dx</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">flow</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">][</span><span class=\"m\">0</span><span class=\"p\">];</span>\n<span class=\"kt\">int</span> <span class=\"n\">dy</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">flow</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">][</span><span class=\"m\">1</span><span class=\"p\">];</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">flow</code>에 저장되어있는 <code class=\"highlighter-rouge\">광학 흐름</code>에 대한 값을 받아옵니다.</p>\n\n<p><code class=\"highlighter-rouge\">(j ,i)</code>지점에서 <code class=\"highlighter-rouge\">index 0</code>과 <code class=\"highlighter-rouge\">index 1</code> 값을 <code class=\"highlighter-rouge\">dx</code>, <code class=\"highlighter-rouge\">dy</code>에 저장합니다.</p>\n\n<p><code class=\"highlighter-rouge\">index 0</code>은 <code class=\"highlighter-rouge\">x</code>좌표에 대한 정보가 담겨있으며, <code class=\"highlighter-rouge\">index 1</code>은 <code class=\"highlighter-rouge\">y</code>좌표에 대한 정보가 담겨있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">dx</span> <span class=\"p\">!=</span> <span class=\"m\">0</span> <span class=\"p\">||</span> <span class=\"n\">dy</span> <span class=\"p\">!=</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Point</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">),</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Point</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">+</span> <span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"p\">+</span> <span class=\"n\">dy</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Blue</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawCircle</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">+</span> <span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"p\">+</span> <span class=\"n\">dy</span><span class=\"p\">),</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Blue</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">if</code>문을 이용하여 <code class=\"highlighter-rouge\">광학 흐름</code>이 발생되지 않았을 때는 표시하지 않습니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.DrawLine()</code>과 <code class=\"highlighter-rouge\">Cv.DrawCircle()</code>을 사용하여 광학 흐름을 <code class=\"highlighter-rouge\">optical</code> 필드에 표시합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch60/2.png\"><img src=\"/assets/images/C/opencv/ch60/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 59강 - 광학 흐름 - PyrLK",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-59/",
      "date"     : "2018-08-02 00:00:00 +0900",
  "content"   : "<h3 id=\"광학-흐름---pyrlk-optical-flow-pyramid-lk\">광학 흐름 - PyrLK (Optical Flow Pyramid LK)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch59/1.png\"><img src=\"/assets/images/C/opencv/ch59/1.png\" alt=\"1\" /></a>\n카메라와 피사체의 <code class=\"highlighter-rouge\">상대 운동</code>에 의하여 발생하는 <code class=\"highlighter-rouge\">피사체의 운동에 대한 패턴</code>을 검출합니다.</p>\n\n<p><code class=\"highlighter-rouge\">PyrLK(Pyramid Lucas Kanade)</code> 방법은 입력 이미지와 <code class=\"highlighter-rouge\">피라미드 이미지</code>를 사용하여 <code class=\"highlighter-rouge\">코너</code>를 기준으로 <code class=\"highlighter-rouge\">광학 흐름</code>을 검출합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">이전 프레임(Previous)</code>과 <code class=\"highlighter-rouge\">현재 프레임(Current)</code>은 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">코너 검출</code> : <a href=\"https://076923.github.io/posts/C-opencv-21/\">21강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">gray</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">optical</span><span class=\"p\">;</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">gray</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">OpticalFlowPyrLK</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">previous</span><span class=\"p\">,</span> <span class=\"n\">IplImage</span> <span class=\"n\">current</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">prev</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">previous</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">curr</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"p\">);</span>\n            <span class=\"n\">optical</span> <span class=\"p\">=</span> <span class=\"n\">current</span><span class=\"p\">;</span>\n\n            <span class=\"n\">IplImage</span> <span class=\"n\">prev_pyramid</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"m\">8</span><span class=\"p\">,</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">/</span> <span class=\"m\">3</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">curr_pyramid</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"m\">8</span><span class=\"p\">,</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">/</span> <span class=\"m\">3</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">IplImage</span> <span class=\"n\">eigImg</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">tempImg</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvPoint2D32f</span><span class=\"p\">[]</span> <span class=\"n\">corners</span><span class=\"p\">;</span>\n            <span class=\"n\">CvPoint2D32f</span><span class=\"p\">[]</span> <span class=\"n\">corners2</span><span class=\"p\">;</span>\n\n            <span class=\"kt\">int</span> <span class=\"n\">cornerCount</span> <span class=\"p\">=</span> <span class=\"m\">600</span><span class=\"p\">;</span>\n            <span class=\"kt\">sbyte</span><span class=\"p\">[]</span> <span class=\"n\">status</span><span class=\"p\">;</span>\n            <span class=\"n\">CvTermCriteria</span> <span class=\"n\">criteria</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvTermCriteria</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">0.01</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GoodFeaturesToTrack</span><span class=\"p\">(</span><span class=\"n\">prev</span><span class=\"p\">,</span> <span class=\"n\">eigImg</span><span class=\"p\">,</span> <span class=\"n\">tempImg</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">corners</span><span class=\"p\">,</span> <span class=\"k\">ref</span> <span class=\"n\">cornerCount</span><span class=\"p\">,</span> <span class=\"m\">0.01</span><span class=\"p\">,</span> <span class=\"m\">15</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CalcOpticalFlowPyrLK</span><span class=\"p\">(</span><span class=\"n\">prev</span><span class=\"p\">,</span> <span class=\"n\">curr</span><span class=\"p\">,</span> <span class=\"n\">prev_pyramid</span><span class=\"p\">,</span> <span class=\"n\">curr_pyramid</span><span class=\"p\">,</span> <span class=\"n\">corners</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">corners2</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"m\">20</span><span class=\"p\">,</span> <span class=\"m\">20</span><span class=\"p\">),</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">LKFlowFlag</span><span class=\"p\">.</span><span class=\"n\">PyrAReady</span><span class=\"p\">);</span>\n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">cornerCount</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"p\">==</span> <span class=\"m\">1</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"n\">corners</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">corners2</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawCircle</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"n\">corners2</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">optical</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">);</span>   \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">optical</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">);</span>  \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">OpticalFlowPyrLK</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">previous</span><span class=\"p\">,</span> <span class=\"n\">IplImage</span> <span class=\"n\">current</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>이전 프레임 <code class=\"highlighter-rouge\">previous</code>와 현재 프레임 <code class=\"highlighter-rouge\">current</code>를 매개변수로 사용하여 검출을 진행합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplImage</span> <span class=\"n\">prev</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">previous</span><span class=\"p\">);</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">curr</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"p\">);</span>\n<span class=\"n\">optical</span> <span class=\"p\">=</span> <span class=\"n\">current</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>광학 흐름 함수는 <code class=\"highlighter-rouge\">그레이스케일</code>을 적용하여 검출을 진행합니다.</p>\n\n<p>계산이미지로 사용할 <code class=\"highlighter-rouge\">prev</code>와 <code class=\"highlighter-rouge\">curr</code> 변수에 <code class=\"highlighter-rouge\">그레이스케일</code>을 적용합니다.</p>\n\n<p>이후, 결과로 사용할 <code class=\"highlighter-rouge\">optical</code> 필드에 <code class=\"highlighter-rouge\">현재 프레임</code>을 사용합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 그레이스케일을 사용하여 검출하므로 <code class=\"highlighter-rouge\">급격한 밝기 변화</code>나 <code class=\"highlighter-rouge\">노이즈</code>에는 정확한 검출을 얻어낼 수 없습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplImage</span> <span class=\"n\">prev_pyramid</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"m\">8</span><span class=\"p\">,</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">/</span> <span class=\"m\">3</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">curr_pyramid</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"m\">8</span><span class=\"p\">,</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">/</span> <span class=\"m\">3</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">LK</code> 방법은 피라미드 이미지를 사용하므로 <code class=\"highlighter-rouge\">이전 프레임</code>과 <code class=\"highlighter-rouge\">현재 프레임</code>에 피라미드 이미지를 저장할 변수를 생성합니다.</p>\n\n<p>피라미드 이미지의 크기는 <code class=\"highlighter-rouge\">너비</code>는 <code class=\"highlighter-rouge\">8</code>만큼 크며, <code class=\"highlighter-rouge\">높이</code>는 <code class=\"highlighter-rouge\">1/3</code>값입니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplImage</span> <span class=\"n\">eigImg</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">tempImg</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>코너 검출 함수인 <code class=\"highlighter-rouge\">GoodFeaturesToTrack()</code>을 사용할 예정이므로 <code class=\"highlighter-rouge\">eigImg</code>와 <code class=\"highlighter-rouge\">tempImg</code>를 저장합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvPoint2D32f</span><span class=\"p\">[]</span> <span class=\"n\">corners</span><span class=\"p\">;</span>\n<span class=\"n\">CvPoint2D32f</span><span class=\"p\">[]</span> <span class=\"n\">corners2</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">GoodFeaturesToTrack()</code>에서 검출한 코너를 저장할 <code class=\"highlighter-rouge\">corners</code>와 광학 흐름으로 이동한 코너인 <code class=\"highlighter-rouge\">corners2</code>를 생성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">cornerCount</span> <span class=\"p\">=</span> <span class=\"m\">600</span><span class=\"p\">;</span>\n<span class=\"kt\">sbyte</span><span class=\"p\">[]</span> <span class=\"n\">status</span><span class=\"p\">;</span>\n<span class=\"n\">CvTermCriteria</span> <span class=\"n\">criteria</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvTermCriteria</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">0.01</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cornerCount</code>는 반환할 <code class=\"highlighter-rouge\">코너의 최대 개수</code>를 설정합니다.  값이 너무 높을 경우 연산 속도가 느려집니다.</p>\n\n<p><code class=\"highlighter-rouge\">status</code>는 <code class=\"highlighter-rouge\">광학 흐름의 발생 유/무</code>를 저장합니다. <code class=\"highlighter-rouge\">1</code>이 저장될 경우 광학 흐름이 발생하였으며, <code class=\"highlighter-rouge\">0</code>이 저장될 경우 광학 흐름이 발생하지 않습니다.</p>\n\n<p><code class=\"highlighter-rouge\">criteria</code>를 사용하여 <code class=\"highlighter-rouge\">종료 기준</code>을 설정합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GoodFeaturesToTrack</span><span class=\"p\">(</span><span class=\"n\">prev</span><span class=\"p\">,</span> <span class=\"n\">eigImg</span><span class=\"p\">,</span> <span class=\"n\">tempImg</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">corners</span><span class=\"p\">,</span> <span class=\"k\">ref</span> <span class=\"n\">cornerCount</span><span class=\"p\">,</span> <span class=\"m\">0.01</span><span class=\"p\">,</span> <span class=\"m\">15</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">이전 프레임</code>에 대하여 <code class=\"highlighter-rouge\">코너</code>를 검출합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CalcOpticalFlowPyrLK</span><span class=\"p\">(</span><span class=\"n\">prev</span><span class=\"p\">,</span> <span class=\"n\">curr</span><span class=\"p\">,</span> <span class=\"n\">prev_pyramid</span><span class=\"p\">,</span> <span class=\"n\">curr_pyramid</span><span class=\"p\">,</span> <span class=\"n\">corners</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">corners2</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"m\">20</span><span class=\"p\">,</span> <span class=\"m\">20</span><span class=\"p\">),</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">LKFlowFlag</span><span class=\"p\">.</span><span class=\"n\">PyrAReady</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.CalcOpticalFlowPyrLK()</code>을 사용하여<code class=\"highlighter-rouge\"> 광학 흐름</code>을 구합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.CalcOpticalFlowPyrLK(이전 프레임, 현재 프레임, 피라미드 이전 프레임, 피라미드 현재 프레임, 이전 프레임 코너 검출점, 계산된 현재 프레임 코너 검출점, 블록 크기, 레벨, 상태, 종결 기준, 플래그)</code>를 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">계산된 현재 프레임 코너 검출점</code>에는 광학 흐름이 발생한 종료점의 위치를 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">상태</code>는 광학흐름의 <code class=\"highlighter-rouge\">발생 유/무</code>를 반환합니다.</p>\n\n<ul>\n  <li>\n    <p><code class=\"highlighter-rouge\">플래그</code></p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">PyrAReady</code> : 이전 프레임의 피라미드를 사전에 계산</li>\n      <li><code class=\"highlighter-rouge\">PyrBReady</code> : 현재 프레임의 피라미드를 사전에 계산</li>\n      <li><code class=\"highlighter-rouge\">InitialGuesses</code> : 함수가 호출되기 전에 초기 추정 좌표를 포함 (이전 프레임의 코너 검출점이 현재 프레임의 코너 검출점)</li>\n      <li><code class=\"highlighter-rouge\">InitialFlow</code> : 함수가 호출되기 전에 초기 추정 좌표를 포함 (이전 프레임의 코너 검출점이 현재 프레임의 코너 검출점)</li>\n      <li><code class=\"highlighter-rouge\">GetMinEigenVals</code> : 최소 고유 값을 오류 측정 값으로 사용</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">오류 측정값 (trackError)</code> - 계산된 값이 주변 움직임에 비해서 값이 너무 튀는 경우 제거하는 용도로 사용</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">cornerCount</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"p\">==</span> <span class=\"m\">1</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"n\">corners</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">corners2</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawCircle</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"n\">corners2</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">for</code>문을 사용하여 <code class=\"highlighter-rouge\">검출된 코너의 개수</code>만큼 반복합니다.</p>\n\n<p><code class=\"highlighter-rouge\">상태</code>값을 사용하여 광학 흐름이 발생하였을 때 값을 출력하게합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.DrawLine()</code>과 <code class=\"highlighter-rouge\">Cv.DrawCircle()</code>을 사용하여 광학 흐름을 <code class=\"highlighter-rouge\">optical</code> 필드에 표시합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">dx</code>와 <code class=\"highlighter-rouge\">dy</code>를 생성하여 <strong>일정 속도 이상, 이하의 값을 무시하거나 출력할 수 있습니다.</strong></li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch59/2.png\"><img src=\"/assets/images/C/opencv/ch59/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 58강 - 광학 흐름 - LK",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-58/",
      "date"     : "2018-08-02 00:00:00 +0900",
  "content"   : "<h3 id=\"광학-흐름---lk-optical-flow-lk\">광학 흐름 - LK (Optical Flow LK)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch58/1.png\"><img src=\"/assets/images/C/opencv/ch58/1.png\" alt=\"1\" /></a>\n카메라와 피사체의 <code class=\"highlighter-rouge\">상대 운동</code>에 의하여 발생하는 <code class=\"highlighter-rouge\">피사체의 운동에 대한 패턴</code>을 검출합니다.</p>\n\n<p><code class=\"highlighter-rouge\">LK(Lucas Kanade)</code> 방법은 입력 이미지에 <code class=\"highlighter-rouge\">블록 크기</code>를 기준으로 <code class=\"highlighter-rouge\">광학 흐름</code>을 검출합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">이전 프레임(Previous)</code>과 <code class=\"highlighter-rouge\">현재 프레임(Current)</code>은 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">gray</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">optical</span><span class=\"p\">;</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">gray</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">OpticalFlowLK</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">previous</span><span class=\"p\">,</span> <span class=\"n\">IplImage</span> <span class=\"n\">current</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">prev</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">previous</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">curr</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"p\">);</span>\n            <span class=\"n\">optical</span> <span class=\"p\">=</span> <span class=\"n\">current</span><span class=\"p\">;</span>\n\n            <span class=\"kt\">int</span> <span class=\"n\">rows</span> <span class=\"p\">=</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span>\n            <span class=\"kt\">int</span> <span class=\"n\">cols</span> <span class=\"p\">=</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span>\n\n            <span class=\"n\">CvMat</span> <span class=\"n\">velx</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CreateMat</span><span class=\"p\">(</span><span class=\"n\">rows</span><span class=\"p\">,</span> <span class=\"n\">cols</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F32C1</span><span class=\"p\">);</span>\n            <span class=\"n\">CvMat</span> <span class=\"n\">vely</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CreateMat</span><span class=\"p\">(</span><span class=\"n\">rows</span><span class=\"p\">,</span> <span class=\"n\">cols</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F32C1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">velx</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">();</span>\n            <span class=\"n\">vely</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">();</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CalcOpticalFlowLK</span><span class=\"p\">(</span><span class=\"n\">prev</span><span class=\"p\">,</span> <span class=\"n\">curr</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"m\">15</span><span class=\"p\">,</span> <span class=\"m\">15</span><span class=\"p\">),</span> <span class=\"n\">velx</span><span class=\"p\">,</span> <span class=\"n\">vely</span><span class=\"p\">);</span>\n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">cols</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">+=</span> <span class=\"m\">15</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">&lt;</span> <span class=\"n\">rows</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">+=</span> <span class=\"m\">15</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"kt\">int</span> <span class=\"n\">dx</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetReal2D</span><span class=\"p\">(</span><span class=\"n\">velx</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">);</span>\n                    <span class=\"kt\">int</span> <span class=\"n\">dy</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetReal2D</span><span class=\"p\">(</span><span class=\"n\">vely</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">);</span>\n\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawCircle</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">);</span>\n\n                    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Abs</span><span class=\"p\">(</span><span class=\"n\">dx</span><span class=\"p\">)</span> <span class=\"p\">&lt;</span> <span class=\"m\">30</span> <span class=\"p\">&amp;&amp;</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Abs</span><span class=\"p\">(</span><span class=\"n\">dy</span><span class=\"p\">)</span> <span class=\"p\">&lt;</span> <span class=\"m\">30</span><span class=\"p\">)</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Abs</span><span class=\"p\">(</span><span class=\"n\">dx</span><span class=\"p\">)</span> <span class=\"p\">&lt;</span> <span class=\"m\">10</span> <span class=\"p\">&amp;&amp;</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Abs</span><span class=\"p\">(</span><span class=\"n\">dy</span><span class=\"p\">)</span> <span class=\"p\">&lt;</span> <span class=\"m\">10</span><span class=\"p\">)</span> <span class=\"k\">continue</span><span class=\"p\">;</span>\n\n                        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Point</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">),</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Point</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">+</span> <span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"p\">+</span> <span class=\"n\">dy</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Blue</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n                        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawCircle</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">+</span> <span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"p\">+</span> <span class=\"n\">dy</span><span class=\"p\">),</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Blue</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n                    \n            <span class=\"k\">return</span> <span class=\"n\">optical</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">);</span>   \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">optical</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">);</span>  \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">OpticalFlowLK</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">previous</span><span class=\"p\">,</span> <span class=\"n\">IplImage</span> <span class=\"n\">current</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>이전 프레임 <code class=\"highlighter-rouge\">previous</code>와 현재 프레임 <code class=\"highlighter-rouge\">current</code>를 매개변수로 사용하여 검출을 진행합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplImage</span> <span class=\"n\">prev</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">previous</span><span class=\"p\">);</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">curr</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"p\">);</span>\n<span class=\"n\">optical</span> <span class=\"p\">=</span> <span class=\"n\">current</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>광학 흐름 함수는 <code class=\"highlighter-rouge\">그레이스케일</code>을 적용하여 검출을 진행합니다.</p>\n\n<p>계산이미지로 사용할 <code class=\"highlighter-rouge\">prev</code>와 <code class=\"highlighter-rouge\">curr</code> 변수에 <code class=\"highlighter-rouge\">그레이스케일</code>을 적용합니다.</p>\n\n<p>이후, 결과로 사용할 <code class=\"highlighter-rouge\">optical</code> 필드에 <code class=\"highlighter-rouge\">현재 프레임</code>을 사용합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 그레이스케일을 사용하여 검출하므로 <code class=\"highlighter-rouge\">급격한 밝기 변화</code>나 <code class=\"highlighter-rouge\">노이즈</code>에는 정확한 검출을 얻어낼 수 없습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">rows</span> <span class=\"p\">=</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">cols</span> <span class=\"p\">=</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span>\n\n<span class=\"n\">CvMat</span> <span class=\"n\">velx</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CreateMat</span><span class=\"p\">(</span><span class=\"n\">rows</span><span class=\"p\">,</span> <span class=\"n\">cols</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F32C1</span><span class=\"p\">);</span>\n<span class=\"n\">CvMat</span> <span class=\"n\">vely</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CreateMat</span><span class=\"p\">(</span><span class=\"n\">rows</span><span class=\"p\">,</span> <span class=\"n\">cols</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F32C1</span><span class=\"p\">);</span>\n\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">(</span><span class=\"n\">velx</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">(</span><span class=\"n\">vely</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">행</code>과 <code class=\"highlighter-rouge\">열</code>을 설정합니다.  매트릭스는 <code class=\"highlighter-rouge\">행의 개수 x 열의 개수</code>로 사용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">X 방향 속도 벡터</code>를 저장할 <code class=\"highlighter-rouge\">velx</code>와 <code class=\"highlighter-rouge\">Y 방향 속도 벡터</code>를 저장할 <code class=\"highlighter-rouge\">vely</code>를 <strong>매트릭스 형식</strong>으로 생성합니다.</p>\n\n<p><code class=\"highlighter-rouge\">행의 개수</code>는 <code class=\"highlighter-rouge\">높이의 크기</code>와 같으며, <code class=\"highlighter-rouge\">열의 개수</code>는 <code class=\"highlighter-rouge\">너비의 크기</code>와 같습니다.</p>\n\n<p>매트릭스를 생성하였으므로, <code class=\"highlighter-rouge\">SetZero()</code>를 통하여 매트릭스의 값을 <code class=\"highlighter-rouge\">0</code>으로 초기화합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CalcOpticalFlowLK</span><span class=\"p\">(</span><span class=\"n\">prev</span><span class=\"p\">,</span> <span class=\"n\">curr</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"m\">15</span><span class=\"p\">,</span> <span class=\"m\">15</span><span class=\"p\">),</span> <span class=\"n\">velx</span><span class=\"p\">,</span> <span class=\"n\">vely</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.CalcOpticalFlowLK()</code>을 사용하여 <code class=\"highlighter-rouge\">광학 흐름</code>을 구합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.CalcOpticalFlowLK(이전 프레임, 현재 프레임, 블록 크기, x 방향 속도 벡터, y 방향 속도 벡터)</code>입니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">블록 크기</code>는 해당 블록 내에 픽셀들은 <code class=\"highlighter-rouge\">모두 같은 움직임</code>으로 가정하는 크기입니다.</p>\n\n<p><code class=\"highlighter-rouge\">x 방향 속도 벡터</code>와 <code class=\"highlighter-rouge\">y 방향 속도 벡터</code>에 광학 흐름의 값이 담깁니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">cols</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">+=</span> <span class=\"m\">15</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">&lt;</span> <span class=\"n\">rows</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">+=</span> <span class=\"m\">15</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n       <span class=\"p\">...</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">이중 for</code>문을 사용하여 <code class=\"highlighter-rouge\">속도 벡터</code>의 값을 출력합니다.</p>\n\n<p><code class=\"highlighter-rouge\">행</code>과 <code class=\"highlighter-rouge\">열</code>로 반복을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">변환식</code>에서 값을 <code class=\"highlighter-rouge\">+=15</code>로 두어, 화면을 <code class=\"highlighter-rouge\">15 픽셀</code>마다 광학흐름을 검출합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">dx</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetReal2D</span><span class=\"p\">(</span><span class=\"n\">velx</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">);</span>\n<span class=\"kt\">int</span> <span class=\"n\">dy</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetReal2D</span><span class=\"p\">(</span><span class=\"n\">vely</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.GetReal2D()</code> 함수를 사용하여 매트릭스에 담겨있는 속도 벡터 성분을 불러옵니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.GetReal2D(matrix, index0, index1)</code>을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">index0</code>은 <strong>행 방향(↓)을 의미합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">index1</code>은 <strong>열 방향(→)을 의미합니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawCircle</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>이미지의 <code class=\"highlighter-rouge\">15</code> 간격마다 <code class=\"highlighter-rouge\">붉은색 지점</code>을 표시합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Abs</span><span class=\"p\">(</span><span class=\"n\">dx</span><span class=\"p\">)</span> <span class=\"p\">&lt;</span> <span class=\"m\">30</span> <span class=\"p\">&amp;&amp;</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Abs</span><span class=\"p\">(</span><span class=\"n\">dy</span><span class=\"p\">)</span> <span class=\"p\">&lt;</span> <span class=\"m\">30</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Abs</span><span class=\"p\">(</span><span class=\"n\">dx</span><span class=\"p\">)</span> <span class=\"p\">&lt;</span> <span class=\"m\">10</span> <span class=\"p\">&amp;&amp;</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Abs</span><span class=\"p\">(</span><span class=\"n\">dy</span><span class=\"p\">)</span> <span class=\"p\">&lt;</span> <span class=\"m\">10</span><span class=\"p\">)</span> <span class=\"k\">continue</span><span class=\"p\">;</span>\n\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Point</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">),</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Point</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">+</span> <span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"p\">+</span> <span class=\"n\">dy</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Blue</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawCircle</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">+</span> <span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"p\">+</span> <span class=\"n\">dy</span><span class=\"p\">),</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Blue</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">if</code>문과 <code class=\"highlighter-rouge\">Math.Abs()</code>를 사용하여 일정 값 <code class=\"highlighter-rouge\">이상</code>, <code class=\"highlighter-rouge\">이하</code>의 값을 무시하여 출력합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.DrawLine()</code>과 <code class=\"highlighter-rouge\">Cv.DrawCircle()</code>을 사용하여 광학 흐름을 <code class=\"highlighter-rouge\">optical</code> 필드에 표시합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch58/2.png\"><img src=\"/assets/images/C/opencv/ch58/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 57강 - 광학 흐름 - HS",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-57/",
      "date"     : "2018-07-27 00:00:00 +0900",
  "content"   : "<h3 id=\"광학-흐름---hs-optical-flow-hs\">광학 흐름 - HS (Optical Flow HS)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch57/1.png\"><img src=\"/assets/images/C/opencv/ch57/1.png\" alt=\"1\" /></a>\n카메라와 피사체의 <code class=\"highlighter-rouge\">상대 운동</code>에 의하여 발생하는 <code class=\"highlighter-rouge\">피사체의 운동에 대한 패턴</code>을 검출합니다.</p>\n\n<p><code class=\"highlighter-rouge\">HS(Horn Schunck)</code> 방법은 입력 이미지의 <code class=\"highlighter-rouge\">모든 픽셀</code>에 대하여 <code class=\"highlighter-rouge\">광학 흐름</code>을 검출합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">이전 프레임(Previous)</code>과 <code class=\"highlighter-rouge\">현재 프레임(Current)</code>은 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">gray</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">optical</span><span class=\"p\">;</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">gray</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">OpticalFlowHS</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">previous</span><span class=\"p\">,</span> <span class=\"n\">IplImage</span> <span class=\"n\">current</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">prev</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">previous</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">curr</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"p\">);</span>\n            <span class=\"n\">optical</span> <span class=\"p\">=</span> <span class=\"n\">current</span><span class=\"p\">;</span>\n\n            <span class=\"kt\">int</span> <span class=\"n\">rows</span> <span class=\"p\">=</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span>\n            <span class=\"kt\">int</span> <span class=\"n\">cols</span> <span class=\"p\">=</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span>\n\n            <span class=\"n\">CvMat</span> <span class=\"n\">velx</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CreateMat</span><span class=\"p\">(</span><span class=\"n\">rows</span><span class=\"p\">,</span> <span class=\"n\">cols</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F32C1</span><span class=\"p\">);</span>\n            <span class=\"n\">CvMat</span> <span class=\"n\">vely</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CreateMat</span><span class=\"p\">(</span><span class=\"n\">rows</span><span class=\"p\">,</span> <span class=\"n\">cols</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F32C1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">(</span><span class=\"n\">velx</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">(</span><span class=\"n\">vely</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvTermCriteria</span> <span class=\"n\">criteria</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">TermCriteria</span><span class=\"p\">(</span><span class=\"n\">CriteriaType</span><span class=\"p\">.</span><span class=\"n\">Iteration</span> <span class=\"p\">|</span> <span class=\"n\">CriteriaType</span><span class=\"p\">.</span><span class=\"n\">Epsilon</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"m\">0.01</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CalcOpticalFlowHS</span><span class=\"p\">(</span><span class=\"n\">prev</span><span class=\"p\">,</span> <span class=\"n\">curr</span><span class=\"p\">,</span> <span class=\"k\">false</span><span class=\"p\">,</span> <span class=\"n\">velx</span><span class=\"p\">,</span> <span class=\"n\">vely</span><span class=\"p\">,</span> <span class=\"m\">150.0</span><span class=\"p\">,</span> <span class=\"n\">criteria</span><span class=\"p\">);</span>\n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">rows</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">+=</span> <span class=\"m\">15</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">&lt;</span> <span class=\"n\">cols</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">+=</span> <span class=\"m\">15</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"kt\">int</span> <span class=\"n\">dx</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetReal2D</span><span class=\"p\">(</span><span class=\"n\">velx</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">);</span>\n                    <span class=\"kt\">int</span> <span class=\"n\">dy</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetReal2D</span><span class=\"p\">(</span><span class=\"n\">vely</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">);</span>\n\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Point</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">),</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Point</span><span class=\"p\">(</span><span class=\"n\">j</span> <span class=\"p\">+</span> <span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"p\">+</span> <span class=\"n\">dy</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">);</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">optical</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">);</span>   \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">optical</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">);</span>  \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">OpticalFlowHS</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">previous</span><span class=\"p\">,</span> <span class=\"n\">IplImage</span> <span class=\"n\">current</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>이전 프레임 <code class=\"highlighter-rouge\">previous</code>와 현재 프레임 <code class=\"highlighter-rouge\">current</code>를 매개변수로 사용하여 검출을 진행합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplImage</span> <span class=\"n\">prev</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">previous</span><span class=\"p\">);</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">curr</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"p\">);</span>\n<span class=\"n\">optical</span> <span class=\"p\">=</span> <span class=\"n\">current</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>광학 흐름 함수는 <code class=\"highlighter-rouge\">그레이스케일</code>을 적용하여 검출을 진행합니다.</p>\n\n<p>계산이미지로 사용할 <code class=\"highlighter-rouge\">prev</code>와 <code class=\"highlighter-rouge\">curr</code> 변수에 <code class=\"highlighter-rouge\">그레이스케일</code>을 적용합니다.</p>\n\n<p>이후, 결과로 사용할 <code class=\"highlighter-rouge\">optical</code> 필드에 <code class=\"highlighter-rouge\">현재 프레임</code>을 사용합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 그레이스케일을 사용하여 검출하므로 <code class=\"highlighter-rouge\">급격한 밝기 변화</code>나 <code class=\"highlighter-rouge\">노이즈</code>에는 정확한 검출을 얻어낼 수 없습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">rows</span> <span class=\"p\">=</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">cols</span> <span class=\"p\">=</span> <span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span>\n\n<span class=\"n\">CvMat</span> <span class=\"n\">velx</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CreateMat</span><span class=\"p\">(</span><span class=\"n\">rows</span><span class=\"p\">,</span> <span class=\"n\">cols</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F32C1</span><span class=\"p\">);</span>\n<span class=\"n\">CvMat</span> <span class=\"n\">vely</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CreateMat</span><span class=\"p\">(</span><span class=\"n\">rows</span><span class=\"p\">,</span> <span class=\"n\">cols</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F32C1</span><span class=\"p\">);</span>\n\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">(</span><span class=\"n\">velx</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">(</span><span class=\"n\">vely</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">행</code>과 <code class=\"highlighter-rouge\">열</code>을 설정합니다.  매트릭스는 <code class=\"highlighter-rouge\">행의 개수 x 열의 개수</code>로 사용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">X 방향 속도 벡터</code>를 저장할 <code class=\"highlighter-rouge\">velx</code>와 <code class=\"highlighter-rouge\">Y 방향 속도 벡터</code>를 저장할 <code class=\"highlighter-rouge\">vely</code>를 <strong>매트릭스 형식</strong>으로 생성합니다.</p>\n\n<p><code class=\"highlighter-rouge\">행의 개수</code>는 <code class=\"highlighter-rouge\">높이의 크기</code>와 같으며, <code class=\"highlighter-rouge\">열의 개수</code>는 <code class=\"highlighter-rouge\">너비의 크기</code>와 같습니다.</p>\n\n<p>매트릭스를 생성하였으므로, <code class=\"highlighter-rouge\">SetZero()</code>를 통하여 매트릭스의 값을 <code class=\"highlighter-rouge\">0</code>으로 초기화합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvTermCriteria</span> <span class=\"n\">criteria</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">TermCriteria</span><span class=\"p\">(</span><span class=\"n\">CriteriaType</span><span class=\"p\">.</span><span class=\"n\">Iteration</span> <span class=\"p\">|</span> <span class=\"n\">CriteriaType</span><span class=\"p\">.</span><span class=\"n\">Epsilon</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"m\">0.01</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.TermCriteria()</code>를 사용하여 종료 기준을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.TermCriteria(만족 조건, 최대 반복 횟수, 정확도)</code>입니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>만족 조건\n    <ul>\n      <li><code class=\"highlighter-rouge\">CriteriaType.Iteration</code> : <code class=\"highlighter-rouge\">최대 반복 횟수</code>에 도달 후, 알고리즘을 종료합니다.</li>\n      <li><code class=\"highlighter-rouge\">CriteriaType.Epsilon</code> : <code class=\"highlighter-rouge\">정확도</code>보다 낮아진 후, 알고리즘을 종료합니다.</li>\n      <li><code class=\"highlighter-rouge\">CriteriaType.Iteration | CriteriaType.Epsilon</code> : <code class=\"highlighter-rouge\">최대 반복 횟수</code>와 <code class=\"highlighter-rouge\">정확도</code> 중 더 빠르게 만족하는 조건을 사용합니다.</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CalcOpticalFlowHS</span><span class=\"p\">(</span><span class=\"n\">prev</span><span class=\"p\">,</span> <span class=\"n\">curr</span><span class=\"p\">,</span> <span class=\"k\">false</span><span class=\"p\">,</span> <span class=\"n\">velx</span><span class=\"p\">,</span> <span class=\"n\">vely</span><span class=\"p\">,</span> <span class=\"m\">150.0</span><span class=\"p\">,</span> <span class=\"n\">criteria</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.CalcOpticalFlowHS()</code>을 사용하여 <code class=\"highlighter-rouge\">광학 흐름</code>을 구합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.CalcOpticalFlowHS(이전 프레임, 현재 프레임, 초기 근사값 속도 필드 사용 유/무, x 방향 속도 벡터, y 방향 속도 벡터, 라그랑지안 승수, 종료 기준)</code>입니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">초기 근사값 속도 필드 사용 유/무</code>는 초기 근사값으로 입력 속도를 사용할지 여부를 결정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">x 방향 속도 벡터</code>와 <code class=\"highlighter-rouge\">y 방향 속도 벡터</code>에 광학 흐름의 값이 담깁니다.</p>\n\n<p><code class=\"highlighter-rouge\">라그랑지안 승수</code>는 매끄러움도를 뜻합니다. 값이 클수록 <code class=\"highlighter-rouge\">더 부드러운 광학 흐름</code>을 얻습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">rows</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">+=</span> <span class=\"m\">15</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">&lt;</span> <span class=\"n\">cols</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">+=</span> <span class=\"m\">15</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"p\">...</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">이중 for</code>문을 사용하여 <code class=\"highlighter-rouge\">속도 벡터</code>의 값을 출력합니다.</p>\n\n<p><code class=\"highlighter-rouge\">행</code>과 <code class=\"highlighter-rouge\">열</code>로 반복을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">변환식</code>에서 값을 <code class=\"highlighter-rouge\">+=15</code>로 두어, 화면을 <code class=\"highlighter-rouge\">15 픽셀</code>마다 광학흐름을 검출합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">dx</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetReal2D</span><span class=\"p\">(</span><span class=\"n\">velx</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">);</span>\n<span class=\"kt\">int</span> <span class=\"n\">dy</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetReal2D</span><span class=\"p\">(</span><span class=\"n\">vely</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.GetReal2D()</code> 함수를 사용하여 매트릭스에 담겨있는 속도 벡터 성분을 불러옵니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.GetReal2D(matrix, index0, index1)</code>을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">index0</code>은 <strong>행 방향(↓)을 의미합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">index1</code>은 <strong>열 방향(→)을 의미합니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Point</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">),</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Point</span><span class=\"p\">(</span><span class=\"n\">j</span> <span class=\"p\">+</span> <span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"p\">+</span> <span class=\"n\">dy</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.DrawLine()</code>을 사용하여 광학 흐름을 <code class=\"highlighter-rouge\">optical</code> 필드에 표시합니다.</p>\n\n<p>광학 흐름의 발생 지점은 <code class=\"highlighter-rouge\">(j, i)</code>입니다.</p>\n\n<p>광학 흐름의 도착 지점은 <code class=\"highlighter-rouge\">(j + dx, i + dy)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">dx</code>와 <code class=\"highlighter-rouge\">dy</code>의 값을 사용하여 <strong>광학 흐름의 속도</strong>를 출력할 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">dx</code>와 <code class=\"highlighter-rouge\">dy</code>를 이용하여 일정 속도 이상, 이하의 값을 무시하거나 출력할 수 있습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch57/2.png\"><img src=\"/assets/images/C/opencv/ch57/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 56강 - 광학 흐름 - BM",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-56/",
      "date"     : "2018-07-25 00:00:00 +0900",
  "content"   : "<h3 id=\"광학-흐름---bm-optical-flow-bm\">광학 흐름 - BM (Optical Flow BM)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch56/1.png\"><img src=\"/assets/images/C/opencv/ch56/1.png\" alt=\"1\" /></a>\n카메라와 피사체의 <code class=\"highlighter-rouge\">상대 운동</code>에 의하여 발생하는 <code class=\"highlighter-rouge\">피사체의 운동에 대한 패턴</code>을 검출합니다.</p>\n\n<p><code class=\"highlighter-rouge\">BM(Block Matching)</code> 방법은 블록 단위로 이미지를 나누며 <code class=\"highlighter-rouge\">이전 프레임</code>과 <code class=\"highlighter-rouge\">현재 프레임</code>을 매칭하여 <code class=\"highlighter-rouge\">광학 흐름</code>을 검출합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">이전 프레임(Previous)</code>과 <code class=\"highlighter-rouge\">현재 프레임(Current)</code>은 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">gray</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">optical</span><span class=\"p\">;</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">gray</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">OpticalFlowBM</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">previous</span><span class=\"p\">,</span> <span class=\"n\">IplImage</span> <span class=\"n\">current</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">prev</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">previous</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">curr</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"p\">);</span>\n            <span class=\"n\">optical</span> <span class=\"p\">=</span> <span class=\"n\">current</span><span class=\"p\">;</span>\n\n            <span class=\"kt\">int</span> <span class=\"n\">BlockSize</span> <span class=\"p\">=</span> <span class=\"m\">16</span><span class=\"p\">;</span>\n            <span class=\"kt\">int</span> <span class=\"n\">ShiftSize</span> <span class=\"p\">=</span> <span class=\"m\">32</span><span class=\"p\">;</span>\n            <span class=\"kt\">int</span> <span class=\"n\">MaxRange</span> <span class=\"p\">=</span> <span class=\"m\">10</span><span class=\"p\">;</span>\n\n            <span class=\"n\">CvSize</span> <span class=\"n\">blockSize</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">BlockSize</span><span class=\"p\">,</span> <span class=\"n\">BlockSize</span><span class=\"p\">);</span>\n            <span class=\"n\">CvSize</span> <span class=\"n\">shiftSize</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">ShiftSize</span><span class=\"p\">,</span> <span class=\"n\">ShiftSize</span><span class=\"p\">);</span>\n            <span class=\"n\">CvSize</span> <span class=\"n\">maxrange</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">MaxRange</span><span class=\"p\">,</span> <span class=\"n\">MaxRange</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvSize</span> <span class=\"n\">VelSize</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvSize</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">-</span> <span class=\"n\">blockSize</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"n\">shiftSize</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">)</span> <span class=\"p\">/</span> <span class=\"n\">shiftSize</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span>\n                <span class=\"n\">Height</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">-</span> <span class=\"n\">blockSize</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">+</span> <span class=\"n\">shiftSize</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">)</span> <span class=\"p\">/</span> <span class=\"n\">shiftSize</span><span class=\"p\">.</span><span class=\"n\">Height</span>\n            <span class=\"p\">};</span>\n\n            <span class=\"n\">CvMat</span> <span class=\"n\">velx</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CreateMat</span><span class=\"p\">(</span><span class=\"n\">VelSize</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">,</span> <span class=\"n\">VelSize</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F32C1</span><span class=\"p\">);</span>\n            <span class=\"n\">CvMat</span> <span class=\"n\">vely</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CreateMat</span><span class=\"p\">(</span><span class=\"n\">VelSize</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">,</span> <span class=\"n\">VelSize</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F32C1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">(</span><span class=\"n\">velx</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">(</span><span class=\"n\">vely</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CalcOpticalFlowBM</span><span class=\"p\">(</span><span class=\"n\">prev</span><span class=\"p\">,</span> <span class=\"n\">curr</span><span class=\"p\">,</span> <span class=\"n\">blockSize</span><span class=\"p\">,</span> <span class=\"n\">shiftSize</span><span class=\"p\">,</span> <span class=\"n\">maxrange</span><span class=\"p\">,</span> <span class=\"k\">false</span><span class=\"p\">,</span> <span class=\"n\">velx</span><span class=\"p\">,</span> <span class=\"n\">vely</span><span class=\"p\">);</span>\n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">velx</span><span class=\"p\">.</span><span class=\"n\">Rows</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">&lt;</span> <span class=\"n\">vely</span><span class=\"p\">.</span><span class=\"n\">Cols</span><span class=\"p\">;</span> <span class=\"n\">j</span><span class=\"p\">++)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"kt\">int</span> <span class=\"n\">dx</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetReal2D</span><span class=\"p\">(</span><span class=\"n\">velx</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">);</span>\n                    <span class=\"kt\">int</span> <span class=\"n\">dy</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetReal2D</span><span class=\"p\">(</span><span class=\"n\">vely</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">);</span>\n\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">j</span> <span class=\"p\">*</span> <span class=\"n\">ShiftSize</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"p\">*</span> <span class=\"n\">ShiftSize</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">j</span> <span class=\"p\">*</span> <span class=\"n\">ShiftSize</span> <span class=\"p\">+</span> <span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"p\">*</span> <span class=\"n\">ShiftSize</span> <span class=\"p\">+</span> <span class=\"n\">dy</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n                                    \n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">return</span> <span class=\"n\">optical</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">);</span>   \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">optical</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">);</span>  \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">OpticalFlowBM</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">previous</span><span class=\"p\">,</span> <span class=\"n\">IplImage</span> <span class=\"n\">current</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>이전 프레임 <code class=\"highlighter-rouge\">previous</code>와 현재 프레임 <code class=\"highlighter-rouge\">current</code>를 매개변수로 사용하여 검출을 진행합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplImage</span> <span class=\"n\">prev</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">previous</span><span class=\"p\">);</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">curr</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"p\">);</span>\n<span class=\"n\">optical</span> <span class=\"p\">=</span> <span class=\"n\">current</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>광학 흐름 함수는 <code class=\"highlighter-rouge\">그레이스케일</code>을 적용하여 검출을 진행합니다.</p>\n\n<p>계산이미지로 사용할 <code class=\"highlighter-rouge\">prev</code>와 <code class=\"highlighter-rouge\">curr</code> 변수에 <code class=\"highlighter-rouge\">그레이스케일</code>을 적용합니다.</p>\n\n<p>이후, 결과로 사용할 <code class=\"highlighter-rouge\">optical</code> 필드에 <code class=\"highlighter-rouge\">현재 프레임</code>을 사용합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 그레이스케일을 사용하여 검출하므로 <code class=\"highlighter-rouge\">급격한 밝기 변화</code>나 <code class=\"highlighter-rouge\">노이즈</code>에는 정확한 검출을 얻어낼 수 없습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">BlockSize</span> <span class=\"p\">=</span> <span class=\"m\">16</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">ShiftSize</span> <span class=\"p\">=</span> <span class=\"m\">32</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">MaxRange</span> <span class=\"p\">=</span> <span class=\"m\">10</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>함수에 사용되는 주요 상수인 <code class=\"highlighter-rouge\">BlockSize</code>, <code class=\"highlighter-rouge\">ShiftSize</code>, <code class=\"highlighter-rouge\">Range</code>를 선언하고 값을 적용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">BlockSize</code>는 검출에 사용할 <code class=\"highlighter-rouge\">블록의 크기</code>를 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">ShiftSize</code>는 <code class=\"highlighter-rouge\">블록의 이격 거리</code>를 의미합니다. <strong>값이 낮을 수록 검출 간격이 촘촘해집니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">MaxRange</code>는 블록 주변의 인접한 블록 크기를 의미합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">BlockSize</code>와 <code class=\"highlighter-rouge\">MaxRange</code>의 값이 높을 수록, <code class=\"highlighter-rouge\">ShiftSize</code>의 값이 낮을 수록 <strong>연산 시간이 길어집니다.</strong></li>\n</ul>\n\n<p><br /></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvSize</span> <span class=\"n\">blockSize</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">BlockSize</span><span class=\"p\">,</span> <span class=\"n\">BlockSize</span><span class=\"p\">);</span>\n<span class=\"n\">CvSize</span> <span class=\"n\">shiftSize</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">ShiftSize</span><span class=\"p\">,</span> <span class=\"n\">ShiftSize</span><span class=\"p\">);</span>\n<span class=\"n\">CvSize</span> <span class=\"n\">maxrange</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">MaxRange</span><span class=\"p\">,</span> <span class=\"n\">MaxRange</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>광학 흐름 함수는 <code class=\"highlighter-rouge\">CvSize</code> 형식을 인수로 사용하므로 각각의 변수에 값을 적용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvSize</span> <span class=\"n\">VelSize</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvSize</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">-</span> <span class=\"n\">blockSize</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"n\">shiftSize</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">)</span> <span class=\"p\">/</span> <span class=\"n\">shiftSize</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span>\n    <span class=\"n\">Height</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">-</span> <span class=\"n\">blockSize</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">+</span> <span class=\"n\">shiftSize</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">)</span> <span class=\"p\">/</span> <span class=\"n\">shiftSize</span><span class=\"p\">.</span><span class=\"n\">Height</span>\n<span class=\"p\">};</span></code></pre></figure>\n\n<p>광학 흐름에서 검출된 <code class=\"highlighter-rouge\">X 방향 속도 벡터</code>와 <code class=\"highlighter-rouge\">Y 방향 속도 벡터</code>의 값을 저장하기 위해 <code class=\"highlighter-rouge\">VelSize</code>를 생성합니다.</p>\n\n<p>블록 매칭 방식은 블록 크기에 대하여 광학 흐름을 계산하므로 <strong>원본 이미지의 크기보다 작습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">VelSize</code>의 크기는 <code class=\"highlighter-rouge\">(프레임 크기 - 블록 크기 + 이격 거리) / 이격 거리</code>입니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvMat</span> <span class=\"n\">velx</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CreateMat</span><span class=\"p\">(</span><span class=\"n\">VelSize</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">,</span> <span class=\"n\">VelSize</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F32C1</span><span class=\"p\">);</span>\n<span class=\"n\">CvMat</span> <span class=\"n\">vely</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CreateMat</span><span class=\"p\">(</span><span class=\"n\">VelSize</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">,</span> <span class=\"n\">VelSize</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F32C1</span><span class=\"p\">);</span>\n\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">(</span><span class=\"n\">velx</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">(</span><span class=\"n\">vely</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">X 방향 속도 벡터</code>를 저장할 <code class=\"highlighter-rouge\">velx</code>와 <code class=\"highlighter-rouge\">Y 방향 속도 벡터</code>를 저장할 <code class=\"highlighter-rouge\">vely</code>를 <strong>매트릭스 형식</strong>으로 생성합니다.</p>\n\n<p>매트릭스는 <code class=\"highlighter-rouge\">행의 개수 x 열의 개수</code>로 사용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">행의 개수</code>는 <code class=\"highlighter-rouge\">높이의 크기</code>와 같으며, <code class=\"highlighter-rouge\">열의 개수</code>는 <code class=\"highlighter-rouge\">너비의 크기</code>와 같습니다.</p>\n\n<p>매트릭스를 생성하였으므로, <code class=\"highlighter-rouge\">SetZero()</code>를 통하여 매트릭스의 값을 <code class=\"highlighter-rouge\">0</code>으로 초기화합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CalcOpticalFlowBM</span><span class=\"p\">(</span><span class=\"n\">prev</span><span class=\"p\">,</span> <span class=\"n\">curr</span><span class=\"p\">,</span> <span class=\"n\">blockSize</span><span class=\"p\">,</span> <span class=\"n\">shiftSize</span><span class=\"p\">,</span> <span class=\"n\">maxrange</span><span class=\"p\">,</span> <span class=\"k\">false</span><span class=\"p\">,</span> <span class=\"n\">velx</span><span class=\"p\">,</span> <span class=\"n\">vely</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.CalcOpticalFlowBM()</code>을 사용하여 <code class=\"highlighter-rouge\">광학 흐름</code>을 구합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.CalcOpticalFlowBM(이전 프레임, 현재 프레임, 블록 크기, 이격 거리, 인접한 블록 크기, 초기 근사값 속도 필드 사용 유/무, x 방향 속도 벡터, y 방향 속도 벡터)</code>입니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">초기 근사값 속도 필드 사용 유/무</code>는 초기 근사값으로 입력 속도를 사용할지 여부를 결정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">x 방향 속도 벡터</code>와 <code class=\"highlighter-rouge\">y 방향 속도 벡터</code>에 광학 흐름의 값이 담깁니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">velx</span><span class=\"p\">.</span><span class=\"n\">Rows</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">&lt;</span> <span class=\"n\">vely</span><span class=\"p\">.</span><span class=\"n\">Cols</span><span class=\"p\">;</span> <span class=\"n\">j</span><span class=\"p\">++)</span>\n    <span class=\"p\">{</span>\n        <span class=\"p\">...</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">이중 for</code>문을 사용하여 <code class=\"highlighter-rouge\">속도 벡터</code>의 값을 출력합니다.</p>\n\n<p><code class=\"highlighter-rouge\">행</code>과 <code class=\"highlighter-rouge\">열</code>로 반복을 실행합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">dx</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetReal2D</span><span class=\"p\">(</span><span class=\"n\">velx</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">);</span>\n<span class=\"kt\">int</span> <span class=\"n\">dy</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetReal2D</span><span class=\"p\">(</span><span class=\"n\">vely</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.GetReal2D()</code> 함수를 사용하여 매트릭스에 담겨있는 속도 벡터 성분을 불러옵니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.GetReal2D(matrix, index0, index1)</code>을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">index0</code>은 <strong>행 방향(↓)을 의미합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">index1</code>은 <strong>열 방향(→)을 의미합니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">optical</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">j</span> <span class=\"p\">*</span> <span class=\"n\">ShiftSize</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"p\">*</span> <span class=\"n\">ShiftSize</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">j</span> <span class=\"p\">*</span> <span class=\"n\">ShiftSize</span> <span class=\"p\">+</span> <span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"p\">*</span> <span class=\"n\">ShiftSize</span> <span class=\"p\">+</span> <span class=\"n\">dy</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n        </code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.DrawLine()</code>을 사용하여 광학 흐름을 <code class=\"highlighter-rouge\">optical</code> 필드에 표시합니다.</p>\n\n<p>광학 흐름의 발생 지점은 <code class=\"highlighter-rouge\">(j * ShiftSize, i * ShiftSize)</code>입니다.</p>\n\n<p>광학 흐름의 도착 지점은 <code class=\"highlighter-rouge\">(j * ShiftSize + dx, i * ShiftSize + dy)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">dx</code>와 <code class=\"highlighter-rouge\">dy</code>의 값을 사용하여 <strong>광학 흐름의 속도</strong>를 출력할 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">dx</code>와 <code class=\"highlighter-rouge\">dy</code>를 이용하여 일정 속도 이상, 이하의 값을 무시하거나 출력할 수 있습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch56/2.png\"><img src=\"/assets/images/C/opencv/ch56/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 55강 - 적분",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-55/",
      "date"     : "2018-07-23 00:00:00 +0900",
  "content"   : "<h3 id=\"적분-integral\">적분 (Integral)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch55/1.png\"><img src=\"/assets/images/C/opencv/ch55/1.png\" alt=\"1\" /></a>\n이미지의 <code class=\"highlighter-rouge\">적분</code> 값을 계산하여 특정 영역에 대한 <code class=\"highlighter-rouge\">합계</code>, <code class=\"highlighter-rouge\">평균</code>, <code class=\"highlighter-rouge\">표준 편차</code>등을 계산할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">gray</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">integral</span><span class=\"p\">;</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">gray</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">IntegralImage</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">integral</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">F64</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">integral</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n\n            <span class=\"n\">IplImage</span> <span class=\"n\">sum</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">F64</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">sqsum</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">F64</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">tiltedsum</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">F64</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n                    \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Integral</span><span class=\"p\">(</span><span class=\"n\">integral</span><span class=\"p\">,</span> <span class=\"n\">sum</span><span class=\"p\">,</span> <span class=\"n\">sqsum</span><span class=\"p\">,</span> <span class=\"n\">tiltedSum</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvMat</span> <span class=\"n\">src_mat</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMat</span><span class=\"p\">(</span><span class=\"n\">integral</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">,</span> <span class=\"n\">integral</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F64C1</span><span class=\"p\">);</span>\n            <span class=\"n\">CvMat</span> <span class=\"n\">sum_mat</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMat</span><span class=\"p\">(</span><span class=\"n\">sum</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">,</span> <span class=\"n\">sum</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F64C1</span><span class=\"p\">);</span>\n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">integral</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">&lt;</span> <span class=\"n\">integral</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span> <span class=\"n\">j</span><span class=\"p\">++)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">src_mat</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">integral</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">Val0</span><span class=\"p\">;</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">sum</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">&lt;</span> <span class=\"n\">sum</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span> <span class=\"n\">j</span><span class=\"p\">++)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">sum_mat</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">sum</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">Val0</span><span class=\"p\">;</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">src_mat</span><span class=\"p\">);</span>\n            <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">sum_mat</span><span class=\"p\">);</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">sum</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">);</span>   \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">integral</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">integral</span><span class=\"p\">);</span>  \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">integral</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">F64</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">integral</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>계산 이미지로 사용할 <code class=\"highlighter-rouge\">integral</code>을 생성하고 <code class=\"highlighter-rouge\">정밀도</code>는 <code class=\"highlighter-rouge\">F32</code> 또는 <code class=\"highlighter-rouge\">F64</code>의 <code class=\"highlighter-rouge\">단일 채널</code> 형식만 사용이 가능합니다.</p>\n\n<p><code class=\"highlighter-rouge\">단일 채널</code>로 변경하기 위해 <code class=\"highlighter-rouge\">그레이스케일</code>을 적용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplImage</span> <span class=\"n\">sum</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">F64</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">sqsum</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">F64</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">tiltedsum</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">F64</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">결과 이미지</code>인 <code class=\"highlighter-rouge\">sum</code>, <code class=\"highlighter-rouge\">sqsum</code>, <code class=\"highlighter-rouge\">tiltedsum</code>을 생성합니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지 크기</code>는 <code class=\"highlighter-rouge\">너비+1</code>, <code class=\"highlighter-rouge\">높이+1</code>을 사용하며, <code class=\"highlighter-rouge\">정밀도</code>는 <code class=\"highlighter-rouge\">F32</code> 또는 <code class=\"highlighter-rouge\">F64</code>의 <code class=\"highlighter-rouge\">단일 채널</code> 형식만 사용이 가능합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">sum</code>은 <code class=\"highlighter-rouge\">적분 이미지</code>를 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">sqsum</code>은 <code class=\"highlighter-rouge\">제곱된 적분 이미지</code>를 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">tiltedsum</code>은 <code class=\"highlighter-rouge\">45° 기울어진 적분 이미지</code>를 의미합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/opencv/ch55/1.png\"><img src=\"/assets/images/C/opencv/ch55/1.png\" alt=\"1\" /></a>\n위와 같은 이미지를 입력한다면, <strong>각 픽셀들의 값은 다음과 같습니다.</strong></p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/opencv/ch55/2.PNG\"><img src=\"/assets/images/C/opencv/ch55/2.PNG\" alt=\"2\" /></a>\n<code class=\"highlighter-rouge\">검은색 픽셀</code>의 값은 <code class=\"highlighter-rouge\">0</code>을 의미하며, <code class=\"highlighter-rouge\">회색 픽셀</code>의 값은 <code class=\"highlighter-rouge\">175</code>, <code class=\"highlighter-rouge\">하얀색 픽셀</code>의 값은 <code class=\"highlighter-rouge\">255</code>의 값이 됩니다.</p>\n\n<p>이 픽셀들의 값을 이용하여 <strong>적분 연산을 실행합니다.</strong></p>\n\n<p><br /></p>\n\n<h2 id=\"sum\">sum</h2>\n<p><a href=\"/assets/images/C/opencv/ch55/3.png\"><img src=\"/assets/images/C/opencv/ch55/3.png\" alt=\"3\" /></a></p>\n\n<p><br /></p>\n\n<h2 id=\"sqsum\">sqsum</h2>\n<p><a href=\"/assets/images/C/opencv/ch55/4.png\"><img src=\"/assets/images/C/opencv/ch55/4.png\" alt=\"4\" /></a></p>\n\n<p><br /></p>\n\n<h2 id=\"tiltedsum\">tiltedsum</h2>\n<p><a href=\"/assets/images/C/opencv/ch55/5.png\"><img src=\"/assets/images/C/opencv/ch55/5.png\" alt=\"5\" /></a></p>\n\n<p><br />\n<br /></p>\n\n<p>다음과 같은 공식을 사용하여 이미지를 변환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">X, Y</code>의 값은 <code class=\"highlighter-rouge\">결과 이미지</code>에서 각 <code class=\"highlighter-rouge\">픽셀</code>의 값을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">x, y</code>의 값은 <code class=\"highlighter-rouge\">계산 이미지</code>에서 각 <code class=\"highlighter-rouge\">픽셀</code>의 값을 의미합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/opencv/ch55/3.png\"><img src=\"/assets/images/C/opencv/ch55/3.png\" alt=\"3\" /></a>\n위와 같은 <code class=\"highlighter-rouge\">sum</code>의 연산 방법을 사용하여 결과를 확인한다면 다음과 같습니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/opencv/ch55/6.png\"><img src=\"/assets/images/C/opencv/ch55/6.png\" alt=\"6\" /></a>\n여기서 <code class=\"highlighter-rouge\">붉은색</code> 위치의 <code class=\"highlighter-rouge\">I3 값</code>의 값은 다음 이미지의 <code class=\"highlighter-rouge\">픽셀 합</code>과 같습니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/opencv/ch55/7.png\"><img src=\"/assets/images/C/opencv/ch55/7.png\" alt=\"7\" /></a>\n<code class=\"highlighter-rouge\">연두색</code> 위치의 <code class=\"highlighter-rouge\">a1:h2 값</code>의 합과 같습니다. <code class=\"highlighter-rouge\">연산 방법</code>의 공식을 이용하여 결과를 얻어냅니다.</p>\n\n<p>배열의 크기가 1이 더 큰 이유는 공식에서 확인할 수 있듯이 <code class=\"highlighter-rouge\">x&lt;X, y&lt;Y</code>에 의하여 <strong>배열의 크기가 1이 더 크게됩니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Integral</span><span class=\"p\">(</span><span class=\"n\">integral</span><span class=\"p\">,</span> <span class=\"n\">sum</span><span class=\"p\">,</span> <span class=\"n\">sqsum</span><span class=\"p\">,</span> <span class=\"n\">tiltedSum</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Integral()</code>를 사용하여 <code class=\"highlighter-rouge\">적분 이미지</code>를 구합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.Integral(계산 이미지, 적분 이미지, 제곱된 적분 이미지, 45° 기울어진 적분 이미지)</code>를 의미합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvMat</span> <span class=\"n\">src_mat</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMat</span><span class=\"p\">(</span><span class=\"n\">integral</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">,</span> <span class=\"n\">integral</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F64C1</span><span class=\"p\">);</span>\n<span class=\"n\">CvMat</span> <span class=\"n\">sum_mat</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMat</span><span class=\"p\">(</span><span class=\"n\">sum</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">,</span> <span class=\"n\">sum</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F64C1</span><span class=\"p\">);</span>\n\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">integral</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">&lt;</span> <span class=\"n\">integral</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span> <span class=\"n\">j</span><span class=\"p\">++)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">src_mat</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">integral</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">Val0</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">sum</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">&lt;</span> <span class=\"n\">sum</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span> <span class=\"n\">j</span><span class=\"p\">++)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">sum_mat</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">sum</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">Val0</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">src_mat</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">sum_mat</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CvMat</code>을 이용하여 <code class=\"highlighter-rouge\">적분 이미지</code>에 할당된 값을 확인할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지</code>를 통하여 결과를 확인은 어렵습니다.</p>\n\n<p>픽셀의 값이 <code class=\"highlighter-rouge\">255</code>을 넘어가는 경우, <code class=\"highlighter-rouge\">하얀색 픽셀</code>로 처리하여 <strong>육안으로는 구분할 수 없습니다.</strong></p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"image\">image</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"nf\">CvMat</span><span class=\"p\">(</span><span class=\"n\">Rows</span><span class=\"p\">=</span><span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"n\">Cols</span><span class=\"p\">=</span><span class=\"m\">10</span><span class=\"p\">)</span>\n<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">175</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t\n<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">175</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t\n<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">175</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t\n<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">175</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t\n<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">175</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t\n<span class=\"m\">175</span>\t<span class=\"m\">175</span>\t<span class=\"m\">175</span>\t<span class=\"m\">175</span>\t<span class=\"m\">175</span>\t<span class=\"m\">175</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t\n<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t\n<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t\n<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t\n<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t<span class=\"m\">255</span>\t</code></pre></figure>\n\n<p><br /></p>\n\n<h2 id=\"sum-1\">sum</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"nf\">CvMat</span><span class=\"p\">(</span><span class=\"n\">Rows</span><span class=\"p\">=</span><span class=\"m\">11</span><span class=\"p\">,</span> <span class=\"n\">Cols</span><span class=\"p\">=</span><span class=\"m\">11</span><span class=\"p\">)</span>\n<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t\n<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">175</span>\t<span class=\"m\">430</span>\t<span class=\"m\">685</span>\t<span class=\"m\">940</span>\t<span class=\"m\">1195</span>\t\n<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">350</span>\t<span class=\"m\">860</span>\t<span class=\"m\">1370</span>\t<span class=\"m\">1880</span>\t<span class=\"m\">2390</span>\t\n<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">525</span>\t<span class=\"m\">1290</span>\t<span class=\"m\">2055</span>\t<span class=\"m\">2820</span>\t<span class=\"m\">3585</span>\t\n<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">700</span>\t<span class=\"m\">1720</span>\t<span class=\"m\">2740</span>\t<span class=\"m\">3760</span>\t<span class=\"m\">4780</span>\t\n<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">0</span>\t<span class=\"m\">875</span>\t<span class=\"m\">2150</span>\t<span class=\"m\">3425</span>\t<span class=\"m\">4700</span>\t<span class=\"m\">5975</span>\t\n<span class=\"m\">0</span>\t<span class=\"m\">175</span>\t<span class=\"m\">350</span>\t<span class=\"m\">525</span>\t<span class=\"m\">700</span>\t<span class=\"m\">875</span>\t<span class=\"m\">1925</span>\t<span class=\"m\">3455</span>\t<span class=\"m\">4985</span>\t<span class=\"m\">6515</span>\t<span class=\"m\">8045</span>\t\n<span class=\"m\">0</span>\t<span class=\"m\">430</span>\t<span class=\"m\">860</span>\t<span class=\"m\">1290</span>\t<span class=\"m\">1720</span>\t<span class=\"m\">2150</span>\t<span class=\"m\">3455</span>\t<span class=\"m\">5240</span>\t<span class=\"m\">7025</span>\t<span class=\"m\">8810</span>\t<span class=\"m\">10595</span>\t\n<span class=\"m\">0</span>\t<span class=\"m\">685</span>\t<span class=\"m\">1370</span>\t<span class=\"m\">2055</span>\t<span class=\"m\">2740</span>\t<span class=\"m\">3425</span>\t<span class=\"m\">4985</span>\t<span class=\"m\">7025</span>\t<span class=\"m\">9065</span>\t<span class=\"m\">11105</span>\t<span class=\"m\">13145</span>\t\n<span class=\"m\">0</span>\t<span class=\"m\">940</span>\t<span class=\"m\">1880</span>\t<span class=\"m\">2820</span>\t<span class=\"m\">3760</span>\t<span class=\"m\">4700</span>\t<span class=\"m\">6515</span>\t<span class=\"m\">8810</span>\t<span class=\"m\">11105</span>\t<span class=\"m\">13400</span>\t<span class=\"m\">15695</span>\t\n<span class=\"m\">0</span>\t<span class=\"m\">1195</span>\t<span class=\"m\">2390</span>\t<span class=\"m\">3585</span>\t<span class=\"m\">4780</span>\t<span class=\"m\">5975</span>\t<span class=\"m\">8045</span>\t<span class=\"m\">10595</span>\t<span class=\"m\">13145</span>\t<span class=\"m\">15695</span>\t<span class=\"m\">18245</span></code></pre></figure>\n\n<p><br /></p>\n\n<h2 id=\"결과\">결과</h2>\n<p><a href=\"/assets/images/C/opencv/ch55/8.png\"><img src=\"/assets/images/C/opencv/ch55/8.png\" alt=\"8\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 54강 - 개체 제거",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-54/",
      "date"     : "2018-07-21 00:00:00 +0900",
  "content"   : "<h3 id=\"개체-제거-inpaint\">개체 제거 (Inpaint)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch54/1.jpg\"><img src=\"/assets/images/C/opencv/ch54/1.jpg\" alt=\"1\" /></a>\n이미지에서 <code class=\"highlighter-rouge\">불필요한 부분</code>이나 <code class=\"highlighter-rouge\">영역</code>을 <strong>제거한 후, 주변의 화소값으로 대체</strong>합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">inpaint</span><span class=\"p\">;</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">InpaintImage</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">inpaint</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">paint</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">mask</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvWindow</span> <span class=\"n\">win_Paint</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Paint\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">AutoSize</span><span class=\"p\">,</span> <span class=\"n\">paint</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvPoint</span> <span class=\"n\">prevPt</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(-</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">win_Paint</span><span class=\"p\">.</span><span class=\"n\">OnMouseCallback</span> <span class=\"p\">+=</span> <span class=\"k\">delegate</span> <span class=\"p\">(</span><span class=\"n\">MouseEvent</span> <span class=\"n\">eve</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">MouseEvent</span> <span class=\"n\">flag</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">LButtonDown</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">prevPt</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">);</span>\n                <span class=\"p\">}</span>\n                <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">LButtonUp</span> <span class=\"p\">||</span> <span class=\"p\">(</span><span class=\"n\">flag</span> <span class=\"p\">&amp;</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">FlagLButton</span><span class=\"p\">)</span> <span class=\"p\">==</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">prevPt</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(-</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n                <span class=\"p\">}</span>\n                <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">MouseMove</span> <span class=\"p\">&amp;&amp;</span> <span class=\"p\">(</span><span class=\"n\">flag</span> <span class=\"p\">&amp;</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">FlagLButton</span><span class=\"p\">)</span> <span class=\"p\">!=</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">CvPoint</span> <span class=\"n\">pt</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">);</span>\n\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">mask</span><span class=\"p\">,</span> <span class=\"n\">prevPt</span><span class=\"p\">,</span> <span class=\"n\">pt</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">White</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">paint</span><span class=\"p\">,</span> <span class=\"n\">prevPt</span><span class=\"p\">,</span> <span class=\"n\">pt</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">White</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n                    <span class=\"n\">prevPt</span> <span class=\"p\">=</span> <span class=\"n\">pt</span><span class=\"p\">;</span>\n                    <span class=\"n\">win_Paint</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">paint</span><span class=\"p\">);</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">};</span>\n\n            <span class=\"kt\">bool</span> <span class=\"n\">repeat</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n            <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">repeat</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">switch</span> <span class=\"p\">(</span><span class=\"n\">CvWindow</span><span class=\"p\">.</span><span class=\"nf\">WaitKey</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">))</span>\n                <span class=\"p\">{</span>\n                    <span class=\"k\">case</span> <span class=\"sc\">'r'</span><span class=\"p\">:</span>\n                        <span class=\"n\">mask</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">();</span>\n                        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">paint</span><span class=\"p\">);</span>\n                        <span class=\"n\">win_Paint</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">paint</span><span class=\"p\">);</span>\n                        <span class=\"k\">break</span><span class=\"p\">;</span>\n                    <span class=\"k\">case</span> <span class=\"sc\">'\\r'</span><span class=\"p\">:</span>\n                        <span class=\"n\">CvWindow</span> <span class=\"n\">win_Inpaint</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Inpainted\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">AutoSize</span><span class=\"p\">);</span>\n                        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Inpaint</span><span class=\"p\">(</span><span class=\"n\">paint</span><span class=\"p\">,</span> <span class=\"n\">mask</span><span class=\"p\">,</span> <span class=\"n\">inpaint</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">InpaintMethod</span><span class=\"p\">.</span><span class=\"n\">NS</span><span class=\"p\">);</span>\n                        <span class=\"n\">win_Inpaint</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">inpaint</span><span class=\"p\">);</span>\n                        <span class=\"k\">break</span><span class=\"p\">;</span>\n                    <span class=\"k\">case</span> <span class=\"p\">(</span><span class=\"kt\">char</span><span class=\"p\">)</span><span class=\"m\">27</span><span class=\"p\">:</span>\n                        <span class=\"n\">CvWindow</span><span class=\"p\">.</span><span class=\"nf\">DestroyAllWindows</span><span class=\"p\">();</span>\n                        <span class=\"n\">repeat</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n                        <span class=\"k\">break</span><span class=\"p\">;</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">return</span> <span class=\"n\">inpaint</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">inpaint</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">inpaint</span><span class=\"p\">);</span>  \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">inpaint</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">paint</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">mask</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>결과 이미지로 사용할 <code class=\"highlighter-rouge\">inpaint</code>의 속성을 설정합니다.</p>\n\n<p>계산 이미지로 사용할 <code class=\"highlighter-rouge\">paint</code>를 생성하고 원본을 <code class=\"highlighter-rouge\">복제</code>합니다.</p>\n\n<p>마스크로 사용할 <code class=\"highlighter-rouge\">mask</code>를 생성하고 속성을 설정합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvWindow</span> <span class=\"n\">win_Paint</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Paint\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">AutoSize</span><span class=\"p\">,</span> <span class=\"n\">paint</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">계산 이미지</code>위에 <code class=\"highlighter-rouge\">마스크</code>를 그릴 수 있게 <code class=\"highlighter-rouge\">윈도우 창</code>을 생성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvPoint</span> <span class=\"n\">prevPt</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(-</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">win_Paint</span><span class=\"p\">.</span><span class=\"n\">OnMouseCallback</span> <span class=\"p\">+=</span> <span class=\"k\">delegate</span> <span class=\"p\">(</span><span class=\"n\">MouseEvent</span> <span class=\"n\">eve</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">MouseEvent</span> <span class=\"n\">flag</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">LButtonDown</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">prevPt</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">LButtonUp</span> <span class=\"p\">||</span> <span class=\"p\">(</span><span class=\"n\">flag</span> <span class=\"p\">&amp;</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">FlagLButton</span><span class=\"p\">)</span> <span class=\"p\">==</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">prevPt</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(-</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">MouseMove</span> <span class=\"p\">&amp;&amp;</span> <span class=\"p\">(</span><span class=\"n\">flag</span> <span class=\"p\">&amp;</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">FlagLButton</span><span class=\"p\">)</span> <span class=\"p\">!=</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">CvPoint</span> <span class=\"n\">pt</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">);</span>\n\n        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">mask</span><span class=\"p\">,</span> <span class=\"n\">prevPt</span><span class=\"p\">,</span> <span class=\"n\">pt</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">White</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">paint</span><span class=\"p\">,</span> <span class=\"n\">prevPt</span><span class=\"p\">,</span> <span class=\"n\">pt</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">White</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n        <span class=\"n\">prevPt</span> <span class=\"p\">=</span> <span class=\"n\">pt</span><span class=\"p\">;</span>\n        <span class=\"n\">win_Paint</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">paint</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">};</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">마우스 콜백</code> 함수를 적용하여 <code class=\"highlighter-rouge\">윈도우 창</code>위에 <code class=\"highlighter-rouge\">마스크</code>를 직접 생성합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">마우스 콜백 알아보기</code> : <a href=\"https://076923.github.io/posts/C-opencv-37/\">37강 바로가기</a></p>\n\n<p><br /></p>\n\n<p>이전 마우스 좌표인 <code class=\"highlighter-rouge\">prevPt</code>를 생성하고 초기 위치를 <code class=\"highlighter-rouge\">(-1, -1)</code>로 초기화합니다.</p>\n\n<p><code class=\"highlighter-rouge\">마우스</code>가 이동하는 동안 <code class=\"highlighter-rouge\">계산 이미지</code>와 <code class=\"highlighter-rouge\">마스크</code>에 <code class=\"highlighter-rouge\">선</code>을 그립니다.</p>\n\n<p><code class=\"highlighter-rouge\">계산 이미지</code>에는 시각적으로 <code class=\"highlighter-rouge\">마스크</code>가 어떻게 그려지는지 확인할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">bool</span> <span class=\"n\">repeat</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">repeat</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">switch</span> <span class=\"p\">(</span><span class=\"n\">CvWindow</span><span class=\"p\">.</span><span class=\"nf\">WaitKey</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">))</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">case</span> <span class=\"sc\">'r'</span><span class=\"p\">:</span>\n            <span class=\"n\">mask</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">();</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">paint</span><span class=\"p\">);</span>\n            <span class=\"n\">win_Paint</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">paint</span><span class=\"p\">);</span>\n            <span class=\"k\">break</span><span class=\"p\">;</span>\n        <span class=\"k\">case</span> <span class=\"sc\">'\\r'</span><span class=\"p\">:</span>\n            <span class=\"n\">CvWindow</span> <span class=\"n\">win_Inpaint</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Inpainted\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">AutoSize</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Inpaint</span><span class=\"p\">(</span><span class=\"n\">paint</span><span class=\"p\">,</span> <span class=\"n\">mask</span><span class=\"p\">,</span> <span class=\"n\">inpaint</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">InpaintMethod</span><span class=\"p\">.</span><span class=\"n\">NS</span><span class=\"p\">);</span>\n            <span class=\"n\">win_Inpaint</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">inpaint</span><span class=\"p\">);</span>\n            <span class=\"k\">break</span><span class=\"p\">;</span>\n        <span class=\"k\">case</span> <span class=\"p\">(</span><span class=\"kt\">char</span><span class=\"p\">)</span><span class=\"m\">27</span><span class=\"p\">:</span>\n            <span class=\"n\">CvWindow</span><span class=\"p\">.</span><span class=\"nf\">DestroyAllWindows</span><span class=\"p\">();</span>\n            <span class=\"n\">repeat</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n            <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">키 이벤트</code> 함수를 적용하여 <code class=\"highlighter-rouge\">윈도우 창</code>에서 <code class=\"highlighter-rouge\">서로 다른 함수</code>를 적용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">키 이벤트 알아보기</code> : <a href=\"https://076923.github.io/posts/C-opencv-53/\">53강 바로가기</a></p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">r 키</code>가 눌렸을 때 <code class=\"highlighter-rouge\">마스크</code>와 <code class=\"highlighter-rouge\">계산 이미지</code>를 초기화합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Enter 키</code>가 눌렸을 때 <code class=\"highlighter-rouge\">개체 제거</code>함수를 적용하고, 새로운 윈도우 창에 <code class=\"highlighter-rouge\">결과</code>를 표시합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Esc 키</code>가 눌렸을 때 <code class=\"highlighter-rouge\">반복</code>을 종료하고 결과를 반환합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Inpaint</span><span class=\"p\">(</span><span class=\"n\">paint</span><span class=\"p\">,</span> <span class=\"n\">mask</span><span class=\"p\">,</span> <span class=\"n\">inpaint</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">InpaintMethod</span><span class=\"p\">.</span><span class=\"n\">NS</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Inpaint()</code>를 사용하여 <code class=\"highlighter-rouge\">마스크</code> 위치에 해당하는 <code class=\"highlighter-rouge\">개체</code>를 <code class=\"highlighter-rouge\">제거</code>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.Inpaint(계산 이미지, 마스크, 결과, 반지름, 알고리즘)</code>를 의미합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">반지름</code> : 마스크 내부 픽셀의 색상을 결정하기 위한 <strong>주변 영역의 반지름</strong></li>\n  <li><code class=\"highlighter-rouge\">알고리즘</code>\n    <ul>\n      <li><code class=\"highlighter-rouge\">InpaintMethod.NS</code>\t: Navier-Stokes 방식</li>\n      <li><code class=\"highlighter-rouge\">InpaintMethod.Telea</code> : Alexandru Telea 방식</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"마스크\">마스크</h2>\n<p><a href=\"/assets/images/C/opencv/ch54/2.png\"><img src=\"/assets/images/C/opencv/ch54/2.png\" alt=\"2\" /></a>\n<br /></p>\n<h2 id=\"결과\">결과</h2>\n<p><a href=\"/assets/images/C/opencv/ch54/3.png\"><img src=\"/assets/images/C/opencv/ch54/3.png\" alt=\"3\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 53강 - 키 이벤트",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-53/",
      "date"     : "2018-07-19 00:00:00 +0900",
  "content"   : "<h3 id=\"키-이벤트-key-event\">키 이벤트 (Key Event)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch53/1.jpg\"><img src=\"/assets/images/C/opencv/ch53/1.jpg\" alt=\"1\" /></a>\n윈도우창에서 <code class=\"highlighter-rouge\">특정 키</code>를 입력하였을 때 해당 경우에 맞는 <strong>동작을 발생시킬 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">gray</span><span class=\"p\">;</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">key</span><span class=\"p\">;</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">gray</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                    \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">KeyEvent</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">key</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n            <span class=\"n\">CvWindow</span> <span class=\"n\">win</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Window\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">);</span>\n                    \n            <span class=\"kt\">bool</span> <span class=\"n\">repeat</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n            <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">repeat</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">switch</span> <span class=\"p\">(</span><span class=\"n\">CvWindow</span><span class=\"p\">.</span><span class=\"nf\">WaitKey</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">))</span>\n                <span class=\"p\">{</span>\n                    <span class=\"k\">case</span> <span class=\"sc\">'r'</span><span class=\"p\">:</span>\n                        <span class=\"n\">key</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n                        <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">);</span>\n                        <span class=\"k\">break</span><span class=\"p\">;</span>\n                    <span class=\"k\">case</span> <span class=\"sc\">'\\r'</span><span class=\"p\">:</span>\n                        <span class=\"n\">key</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">;</span>\n                        <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">);</span>\n                        <span class=\"k\">break</span><span class=\"p\">;</span>\n                    <span class=\"k\">case</span> <span class=\"p\">(</span><span class=\"kt\">char</span><span class=\"p\">)</span><span class=\"m\">27</span><span class=\"p\">:</span>\n                        <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span>\n                        <span class=\"n\">repeat</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n                        <span class=\"k\">break</span><span class=\"p\">;</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">return</span> <span class=\"n\">key</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                  \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">gray</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">);</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">key</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">);</span>        \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">key</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n<span class=\"n\">CvWindow</span> <span class=\"n\">win</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Window\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>결과 이미지인 <code class=\"highlighter-rouge\">key</code>에 원본 이미지 <code class=\"highlighter-rouge\">src</code>를 복제합니다.</p>\n\n<p>윈도우 창 <code class=\"highlighter-rouge\">win</code>을 생성하고 초기 이미지를 <code class=\"highlighter-rouge\">key</code>로 사용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">bool</span> <span class=\"n\">repeat</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">repeat</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">while()</code>문을 이용하여 <code class=\"highlighter-rouge\">repeat</code>이 <code class=\"highlighter-rouge\">false</code>가 될 때까지 반복합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">switch</span> <span class=\"p\">(</span><span class=\"n\">CvWindow</span><span class=\"p\">.</span><span class=\"nf\">WaitKey</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">))</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">switch()</code>문을 이용하여 <code class=\"highlighter-rouge\">키 입력값</code>을 판단합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">case</span> <span class=\"sc\">'r'</span><span class=\"p\">:</span>\n    <span class=\"n\">key</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n    <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">);</span>\n    <span class=\"k\">break</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">r 키</code>가 입력됬을 때 해당 구문을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">key</code> 필드에 <code class=\"highlighter-rouge\">그레이스케일</code>을 적용하고, <code class=\"highlighter-rouge\">win</code> 윈도우 창에 표시합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">case</span> <span class=\"sc\">'\\r'</span><span class=\"p\">:</span>\n    <span class=\"n\">key</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">;</span>\n    <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">);</span>\n    <span class=\"k\">break</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Enter 키</code>가 입력되었을 때 <code class=\"highlighter-rouge\">key</code> 필드를 <code class=\"highlighter-rouge\">src</code>로 다시 초기화시키고, <code class=\"highlighter-rouge\">win</code> 윈도우 창에 표시합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">case</span> <span class=\"p\">(</span><span class=\"kt\">char</span><span class=\"p\">)</span><span class=\"m\">27</span><span class=\"p\">:</span>\n    <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span>\n    <span class=\"n\">repeat</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n    <span class=\"k\">break</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Esc 키</code>가 입력되었을 때 <code class=\"highlighter-rouge\">win</code> 윈도우 창을 닫고 <code class=\"highlighter-rouge\">반복</code>을 종료합니다.</p>\n\n<p><code class=\"highlighter-rouge\">아스키 값</code>이나 <code class=\"highlighter-rouge\">유니코드</code>를 사용할 경우 <strong>(char) 상수</strong>를 사용합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">case</code>문은 항상 마지막에 <code class=\"highlighter-rouge\">break</code>문을 포함해야합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch53/2.png\"><img src=\"/assets/images/C/opencv/ch53/2.png\" alt=\"2\" /></a>\n<br />\n<a href=\"/assets/images/C/opencv/ch53/3.png\"><img src=\"/assets/images/C/opencv/ch53/3.png\" alt=\"3\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 52강 - 템플릿 매칭",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-52/",
      "date"     : "2018-06-26 00:00:00 +0900",
  "content"   : "<h3 id=\"템플릿-매칭-template-matching\">템플릿 매칭 (Template Matching)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch52/1.png\"><img src=\"/assets/images/C/opencv/ch52/1.png\" alt=\"1\" /></a></p>\n\n<hr />\n\n<p><a href=\"/assets/images/C/opencv/ch52/2.png\"><img src=\"/assets/images/C/opencv/ch52/2.png\" alt=\"2\" /></a></p>\n\n<p>영상이나 이미지에서 <code class=\"highlighter-rouge\">템플릿과 일치</code>하는 <strong>오브젝트를 검출</strong>하는 함수입니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">match</span><span class=\"p\">;</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Templit</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">IplImage</span> <span class=\"n\">temp</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">match</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">;</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">templit</span> <span class=\"p\">=</span> <span class=\"n\">temp</span><span class=\"p\">;</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">tm</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">-</span> <span class=\"n\">templit</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">match</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">-</span> <span class=\"n\">templit</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">F32</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvPoint</span> <span class=\"n\">minloc</span><span class=\"p\">,</span> <span class=\"n\">maxloc</span><span class=\"p\">;</span>\n            <span class=\"n\">Double</span> <span class=\"n\">minval</span><span class=\"p\">,</span> <span class=\"n\">maxval</span><span class=\"p\">;</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">MatchTemplate</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"p\">,</span> <span class=\"n\">templit</span><span class=\"p\">,</span> <span class=\"n\">tm</span><span class=\"p\">,</span> <span class=\"n\">MatchTemplateMethod</span><span class=\"p\">.</span><span class=\"n\">SqDiffNormed</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">MinMaxLoc</span><span class=\"p\">(</span><span class=\"n\">tm</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">minval</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">maxval</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">minloc</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">maxloc</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawRect</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvRect</span><span class=\"p\">(</span><span class=\"n\">minloc</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">minloc</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">templit</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">templit</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">match</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                  \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">match</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">match</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">;</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">templit</span> <span class=\"p\">=</span> <span class=\"n\">temp</span><span class=\"p\">;</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">tm</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">-</span> <span class=\"n\">templit</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">match</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">-</span> <span class=\"n\">templit</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">F32</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>매칭 이미지인 <code class=\"highlighter-rouge\">match</code>와 템플릿 이미지인 <code class=\"highlighter-rouge\">templit</code>을 생성합니다.</p>\n\n<p><code class=\"highlighter-rouge\">tm</code>은 <code class=\"highlighter-rouge\">비교 결과</code>로 사용합니다. 이미지 크기는 항상 <code class=\"highlighter-rouge\">W-w+1</code> x <code class=\"highlighter-rouge\">H-h+1</code>로 고정적으로 사용됩니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">(W, H)</code> = match 이미지의 너비와 높이, <code class=\"highlighter-rouge\">(w, h)</code> = templit 이미지의 너비와 높이</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvPoint</span> <span class=\"n\">minloc</span><span class=\"p\">,</span> <span class=\"n\">maxloc</span><span class=\"p\">;</span>\n<span class=\"n\">Double</span> <span class=\"n\">minval</span><span class=\"p\">,</span> <span class=\"n\">maxval</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">minloc</code>은 검출된 위치의 <code class=\"highlighter-rouge\">최소 지점</code>을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">maxloc</code>은 검출된 위치의 <code class=\"highlighter-rouge\">최대 지점</code>을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">minval</code>은 검출된 위치의 <code class=\"highlighter-rouge\">최소 포인터</code>를 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">maxval</code>은 검출된 위치의 <code class=\"highlighter-rouge\">최대 포인터</code>를 의미합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">MatchTemplate</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"p\">,</span> <span class=\"n\">templit</span><span class=\"p\">,</span> <span class=\"n\">tm</span><span class=\"p\">,</span> <span class=\"n\">MatchTemplateMethod</span><span class=\"p\">.</span><span class=\"n\">SqDiffNormed</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.MatchTemplate()</code>을 이용하여 <code class=\"highlighter-rouge\">템플릿 매칭</code>을 실행합니다. <code class=\"highlighter-rouge\">Cv.MatchTemplate(매칭 이미지,템플릿 이미지 , 비교 결과 이미지, 연산방법)</code>을 의미합니다.</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">MatchTemplateMethod.*</code> : 연산방법입니다. <code class=\"highlighter-rouge\">R</code>은 <strong>결과</strong>, <code class=\"highlighter-rouge\">T</code>는 <strong>템플릿</strong>, <code class=\"highlighter-rouge\">I</code>는 <strong>매칭</strong> 이미지를 의미합니다.\n    <ul>\n      <li>\n        <p><code class=\"highlighter-rouge\">MatchTemplateMethod.SqDiff</code>\n<a href=\"/assets/images/C/opencv/ch52/3.png\"><img src=\"/assets/images/C/opencv/ch52/3.png\" alt=\"3\" /></a></p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">MatchTemplateMethod.SqDiffNormed</code>\n<a href=\"/assets/images/C/opencv/ch52/4.png\"><img src=\"/assets/images/C/opencv/ch52/4.png\" alt=\"4\" /></a></p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">MatchTemplateMethod.CCorr</code>\n<a href=\"/assets/images/C/opencv/ch52/5.png\"><img src=\"/assets/images/C/opencv/ch52/5.png\" alt=\"5\" /></a></p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">MatchTemplateMethod.CCorrNormed</code>\n<a href=\"/assets/images/C/opencv/ch52/6.png\"><img src=\"/assets/images/C/opencv/ch52/6.png\" alt=\"6\" /></a></p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">MatchTemplateMethod.CCoeff</code>\n<a href=\"/assets/images/C/opencv/ch52/7.png\"><img src=\"/assets/images/C/opencv/ch52/7.png\" alt=\"7\" /></a></p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">MatchTemplateMethod.CCoeffNormed</code>\n<a href=\"/assets/images/C/opencv/ch52/8.png\"><img src=\"/assets/images/C/opencv/ch52/8.png\" alt=\"8\" /></a></p>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/opencv/ch52/9.png\"><img src=\"/assets/images/C/opencv/ch52/9.png\" alt=\"9\" /></a></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">MinMaxLoc</span><span class=\"p\">(</span><span class=\"n\">tm</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">minval</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">maxval</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">minloc</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">maxloc</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.MinMaxLoc()</code>를 이용하여 <code class=\"highlighter-rouge\">비교 결과</code>이미지에서 <code class=\"highlighter-rouge\">지점</code>과 <code class=\"highlighter-rouge\">포인터</code>를 검출합니다. <code class=\"highlighter-rouge\">Cv.MinMaxLoc(최소 지점, 최대 지점, 최소 포인터, 최대 포인터)</code>를 의미합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">out</code> 키워드를 포함해야합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawRect</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvRect</span><span class=\"p\">(</span><span class=\"n\">minloc</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">minloc</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">templit</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">templit</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">match</code> 이미지에 <code class=\"highlighter-rouge\">최소 지점</code>에서 <code class=\"highlighter-rouge\">템플릿 이미지 크기</code>로 설정하여 템플릿 매칭 <strong>결과를 표시합니다.</strong></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch52/10.png\"><img src=\"/assets/images/C/opencv/ch52/10.png\" alt=\"10\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 51강 - 피부색 검출",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-51/",
      "date"     : "2018-06-25 00:00:00 +0900",
  "content"   : "<h3 id=\"피부색-검출-skin-detector\">피부색 검출 (Skin Detector)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch51/1.jpg\"><img src=\"/assets/images/C/opencv/ch51/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지에서 <code class=\"highlighter-rouge\">피부색과 흡사한 픽셀들을 검출하는 알고리즘</code>입니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.CPlusPlus</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">skin</span><span class=\"p\">;</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">SkinDetection</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">skin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">output</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">skin</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvAdaptiveSkinDetector</span> <span class=\"n\">detector</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvAdaptiveSkinDetector</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">MorphingMethod</span><span class=\"p\">.</span><span class=\"n\">ErodeDilate</span><span class=\"p\">);</span>\n            <span class=\"n\">detector</span><span class=\"p\">.</span><span class=\"nf\">Process</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"p\">);</span>\n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">x</span> <span class=\"p\">&lt;</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span> <span class=\"n\">x</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">y</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">y</span> <span class=\"p\">&lt;</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span> <span class=\"n\">y</span><span class=\"p\">++)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">[</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">].</span><span class=\"n\">Val0</span> <span class=\"p\">!=</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"n\">skin</span><span class=\"p\">[</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Green</span><span class=\"p\">;</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">return</span> <span class=\"n\">skin</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                  \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">skin</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">skin</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.CPlusPlus</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CvAdaptiveSkinDetector</code> 함수를 사용하기 위해서는 <strong>네임스페이스</strong>에 <code class=\"highlighter-rouge\">using OpenCvSharp.CPlusPlus;</code>를 선언해야 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">skin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">output</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>결과용 이미지인 <code class=\"highlighter-rouge\">skin</code>과 계산용 이미지인 <code class=\"highlighter-rouge\">output</code>을 생성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvAdaptiveSkinDetector</span> <span class=\"n\">detector</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvAdaptiveSkinDetector</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">MorphingMethod</span><span class=\"p\">.</span><span class=\"n\">ErodeDilate</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">detector</code>를 선언하여 피부색을 검출하기 위해 <code class=\"highlighter-rouge\">생성자</code>를 만듭니다. <code class=\"highlighter-rouge\">new CvAdaptiveSkinDetector(1, 모폴로지 연산 방법)</code>입니다.</p>\n\n<p><strong>첫 번째 인수</strong>는 <code class=\"highlighter-rouge\">samplingDivdier</code>를 의미하며, <code class=\"highlighter-rouge\">1</code>의 값을 고정적으로 사용합니다.</p>\n\n<ul>\n  <li>\n    <p><code class=\"highlighter-rouge\">MorphingMethod.*</code> : <strong>모폴로지 연산 방법</strong>입니다.</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">MorphingMethod.None</code> : 모폴로지 연산을 수행하지 않음</li>\n      <li><code class=\"highlighter-rouge\">MorphingMethod.Erode</code> : 모폴로지 침식만 적용</li>\n      <li><code class=\"highlighter-rouge\">MorphingMethod.ErodeDilate</code> : 모폴로지 침식 후 팽창 적용</li>\n      <li><code class=\"highlighter-rouge\">MorphingMethod.ErodeErode</code> : 모포롤지 침식 후 침식 적용</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">detector</span><span class=\"p\">.</span><span class=\"nf\">Process</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>피부색 검출 알고리즘을 실행합니다. <code class=\"highlighter-rouge\">detector.Process(원본, 결과)</code>입니다. <code class=\"highlighter-rouge\">원본</code>이미지에서 계산을 수행하며, <code class=\"highlighter-rouge\">결과</code>이미지에 검출 결과를 저장합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">x</span> <span class=\"p\">&lt;</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span> <span class=\"n\">x</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">y</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">y</span> <span class=\"p\">&lt;</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span> <span class=\"n\">y</span><span class=\"p\">++)</span>\n    <span class=\"p\">{</span>\n        <span class=\"p\">...</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">이중 for</code>문을 이용하여 이미지의 <code class=\"highlighter-rouge\">너비</code>와 <code class=\"highlighter-rouge\">높이</code>만큼 반복하여 <strong>모든 픽셀에 대해 검사합니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">[</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">].</span><span class=\"n\">Val0</span> <span class=\"p\">!=</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">검출용 이미지</code>인 <code class=\"highlighter-rouge\">output</code>의 <code class=\"highlighter-rouge\">(x, y)</code>의 픽셀의 값이 <code class=\"highlighter-rouge\">흑색</code>이 아니라면, <strong>피부색으로 가정</strong>합니다. <code class=\"highlighter-rouge\">Val0</code>는 <strong>첫 번째 엘리먼트 요소</strong>를 의미합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">skin</span><span class=\"p\">[</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Green</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">if</code>문에 부합한다면 결과이미지 <code class=\"highlighter-rouge\">(x, y)</code> 좌표의 색상을 <code class=\"highlighter-rouge\">초록색</code>으로 변경합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch51/2.png\"><img src=\"/assets/images/C/opencv/ch51/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 27강 - 클래스",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-27/",
      "date"     : "2018-06-19 00:00:00 +0900",
  "content"   : "<h3 id=\"클래스\">클래스</h3>\n<hr />\n<p>클래스(Class)는 <strong>객체 지향 프로그래밍(OOP)</strong>에서 특정한 객체를 생성하기 위해서 <code class=\"highlighter-rouge\">변수</code>, <code class=\"highlighter-rouge\">함수</code>, <code class=\"highlighter-rouge\">메소드</code> 및 <code class=\"highlighter-rouge\">이벤트</code> 등을 정의하는 틀입니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">class</span> <span class=\"nc\">Human</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">\"알 수 없음\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">99</span>\n    <span class=\"k\">def</span> <span class=\"nf\">man</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"n\">age</span>\n    <span class=\"k\">def</span> <span class=\"nf\">woman</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"n\">age</span>\n    <span class=\"k\">def</span> <span class=\"nf\">prt</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"이름은 \"</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s\">\"이고, 나이는 \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"p\">))</span>\n\n<span class=\"n\">a</span><span class=\"o\">=</span><span class=\"n\">Human</span><span class=\"p\">()</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">man</span><span class=\"p\">(</span><span class=\"s\">\"박XX\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b</span><span class=\"o\">=</span><span class=\"n\">Human</span><span class=\"p\">()</span>\n<span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">woman</span><span class=\"p\">(</span><span class=\"s\">\"김XX\"</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">)</span>\n\n<span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">Human</span><span class=\"p\">()</span>\n\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">prt</span><span class=\"p\">()</span>\n<span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">prt</span><span class=\"p\">()</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">vars</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>이름은 박XX이고, 나이는 10<br />\n이름은 김XX이고, 나이는 30<br />\n{‘name’: ‘알 수 없음’, ‘age’: 99}<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">class</span> <span class=\"nc\">Human</span><span class=\"p\">:</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">class 클래스이름:</code>을 사용하여 클래스의 이름을 설정할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\">    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">\"알 수 없음\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">99</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">def __init__(self)</code>를 이용하여 클래스가 생성되었을 때의 변수들을 <code class=\"highlighter-rouge\">초기화</code>할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">self</code> 인자는 <code class=\"highlighter-rouge\">자기 자신</code>을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">self.변수이름</code>을 통하여 변수들의 초기값을 할당할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">name</code> 변수와 <code class=\"highlighter-rouge\">age</code> 변수에 아무런 값도 할당되지 않는다면, <code class=\"highlighter-rouge\">알 수 없음</code>과 <code class=\"highlighter-rouge\">99</code>의 값이 각각 할당됩니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">man</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"n\">age</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">man</code> 함수에는 <code class=\"highlighter-rouge\">name</code>과 <code class=\"highlighter-rouge\">age</code>를 매개변수로 사용하며, <code class=\"highlighter-rouge\">age</code>의 값은 <code class=\"highlighter-rouge\">10</code>으로 초기설정이 되어있으므로, <code class=\"highlighter-rouge\">age</code> 값을 입력하지 않는다면 <code class=\"highlighter-rouge\">10</code>으로 자동 할당됩니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">woman</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"n\">age</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">woman</code> 함수에는 <code class=\"highlighter-rouge\">name</code>과 <code class=\"highlighter-rouge\">age</code>를 매개변수로 사용하며 두 개의 변수를 모두 할당해야 오류가 발생하지 않습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">prt</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"이름은 \"</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s\">\"이고, 나이는 \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"p\">))</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">prt</code> 함수는 출력용 함수이며, 값을 입력하지 않고 <strong>호출만으로도 함수가 실행</strong>됩니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"n\">Human</span><span class=\"p\">()</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">man</span><span class=\"p\">(</span><span class=\"s\">\"박XX\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b</span><span class=\"o\">=</span><span class=\"n\">Human</span><span class=\"p\">()</span>\n<span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">woman</span><span class=\"p\">(</span><span class=\"s\">\"김XX\"</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">)</span>\n\n<span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">Human</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">클래스이름</code>을 변수에 할당하여 <code class=\"highlighter-rouge\">클래스의 내부 함수</code>를 실행시킬 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">변수명.클래스함수명(매개변수1, 매개변수2)</code>를 이용하여 <code class=\"highlighter-rouge\">a</code>와 <code class=\"highlighter-rouge\">b</code> 변수에 값을 할당할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">prt</span><span class=\"p\">()</span>\n<span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">prt</span><span class=\"p\">()</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">vars</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">))</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">*.prt()</code> 함수는 아무런 인자를 필요로 하지 않으므로, 바로 사용이 가능합니다.</p>\n\n<p><code class=\"highlighter-rouge\">vars(변수이름)</code>을 사용하여 사전 형식으로 할당된 값을 확인할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">c</code> 변수에는 <code class=\"highlighter-rouge\">__init__(self)</code>를 통하여 초기화한 값인 <code class=\"highlighter-rouge\">알 수 없음</code>과 <code class=\"highlighter-rouge\">99</code>의 값이 할당되어 있습니다.</p>\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 31강 – Separator",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-31/",
      "date"     : "2018-06-18 00:00:00 +0900",
  "content"   : "<h3 id=\"separator-구분선\">Separator (구분선)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/tkinter/ch31/1.png\"><img src=\"/assets/images/Python/tkinter/ch31/1.png\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">Separator</code>를 이용하여 <strong>위젯의 구역</strong>을 나눌 수 있는 <code class=\"highlighter-rouge\">구분선</code>을 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"separator-사용\">Separator 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tkinter.ttk</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x480+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">button1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"1번\"</span><span class=\"p\">)</span>\n<span class=\"n\">button1</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">button2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"2번\"</span><span class=\"p\">)</span>\n<span class=\"n\">button2</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">button3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"3번\"</span><span class=\"p\">)</span>\t\n<span class=\"n\">button3</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\t\t\n<span class=\"n\">button4</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"4번\"</span><span class=\"p\">)</span>\n<span class=\"n\">button4</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\t\t\n<span class=\"n\">button5</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"5번\"</span><span class=\"p\">)</span>\n<span class=\"n\">button5</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">s</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Separator</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s\">\"vertical\"</span><span class=\"p\">)</span>\t\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">sticky</span><span class=\"o\">=</span><span class=\"s\">'ns'</span><span class=\"p\">)</span>\n\n<span class=\"n\">s2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Separator</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s\">\"horizontal\"</span><span class=\"p\">)</span>\t\n<span class=\"n\">s2</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">sticky</span><span class=\"o\">=</span><span class=\"s\">'ew'</span><span class=\"p\">)</span>\n\n<span class=\"n\">s3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Separator</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s\">\"vertical\"</span><span class=\"p\">)</span>\n<span class=\"n\">s3</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sticky</span><span class=\"o\">=</span><span class=\"s\">'ns'</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter.ttk</span></code></pre></figure>\n\n<p><br /></p>\n\n<p>상단에 <code class=\"highlighter-rouge\">import tkinter.ttk</code>를 사용하여 <code class=\"highlighter-rouge\">ttk 모듈</code>을 포함시킵니다. tkinter.ttk 함수의 사용방법은 <code class=\"highlighter-rouge\">tkinter.ttk.*</code>를 이용하여 사용이 가능합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">button1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"1번\"</span><span class=\"p\">)</span>\n<span class=\"n\">button1</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">button2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"2번\"</span><span class=\"p\">)</span>\n<span class=\"n\">button2</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">button3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"3번\"</span><span class=\"p\">)</span>\t\n<span class=\"n\">button3</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\t\t\n<span class=\"n\">button4</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"4번\"</span><span class=\"p\">)</span>\n<span class=\"n\">button4</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\t\t\n<span class=\"n\">button5</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"5번\"</span><span class=\"p\">)</span>\n<span class=\"n\">button5</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">s</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Separator</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s\">\"vertical\"</span><span class=\"p\">)</span>\t\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">sticky</span><span class=\"o\">=</span><span class=\"s\">'ns'</span><span class=\"p\">)</span>\n\n<span class=\"n\">s2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Separator</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s\">\"horizontal\"</span><span class=\"p\">)</span>\t\n<span class=\"n\">s2</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">sticky</span><span class=\"o\">=</span><span class=\"s\">'ew'</span><span class=\"p\">)</span>\n\n<span class=\"n\">s3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Separator</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s\">\"vertical\"</span><span class=\"p\">)</span>\n<span class=\"n\">s3</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sticky</span><span class=\"o\">=</span><span class=\"s\">'ns'</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.ttk.Separator(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 <code class=\"highlighter-rouge\">구분선의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">구분선.grid()</code>의 파라미터에서 <code class=\"highlighter-rouge\">sticky</code>의 값을 설정하여 할당된 공간 내에서의 <code class=\"highlighter-rouge\">위치를 조정</code>할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">orient</code>의 속성이 <code class=\"highlighter-rouge\">horizontal</code>일 경우 <code class=\"highlighter-rouge\">sticky</code>의 속성은 고정적으로 <code class=\"highlighter-rouge\">ew</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">orient</code>의 속성이 <code class=\"highlighter-rouge\">vertical</code>일 경우 <code class=\"highlighter-rouge\">sticky</code>의 속성은 고정적으로 <code class=\"highlighter-rouge\">ns</code>입니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"separator-parameter\">Separator Parameter</h3>\n<hr />\n\n<h5 id=\"구분선-형태-설정\">구분선 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">orient</td>\n      <td style=\"text-align: center\">구분선의 표시 방향</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">horizontal, vertical</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"구분선-형식-설정\">구분선 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">구분선의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">class_</td>\n      <td style=\"text-align: center\">클래스 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"구분선-동작-설정\">구분선 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock, coffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 30강 – Treeview",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-30/",
      "date"     : "2018-06-17 00:00:00 +0900",
  "content"   : "<h3 id=\"treeview-표\">Treeview (표)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/tkinter/ch30/1.png\"><img src=\"/assets/images/Python/tkinter/ch30/1.png\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">Treeview</code>을 이용하여 <strong>행과 열</strong>로 구성된 <code class=\"highlighter-rouge\">표</code>를 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"treeview-사용\">Treeview 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tkinter.ttk</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">cc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">tag_configure</span><span class=\"p\">(</span><span class=\"s\">\"tag2\"</span><span class=\"p\">,</span> <span class=\"n\">background</span><span class=\"o\">=</span><span class=\"s\">\"red\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">treeview</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Treeview</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">\"one\"</span><span class=\"p\">,</span> <span class=\"s\">\"two\"</span><span class=\"p\">],</span> <span class=\"n\">displaycolumns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">\"two\"</span><span class=\"p\">,</span> <span class=\"s\">\"one\"</span><span class=\"p\">])</span>\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">column</span><span class=\"p\">(</span><span class=\"s\">\"#0\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">70</span><span class=\"p\">)</span>\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">heading</span><span class=\"p\">(</span><span class=\"s\">\"#0\"</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"num\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">column</span><span class=\"p\">(</span><span class=\"s\">\"one\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"s\">\"center\"</span><span class=\"p\">)</span>\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">heading</span><span class=\"p\">(</span><span class=\"s\">\"one\"</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"문자\"</span><span class=\"p\">,</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"s\">\"e\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">column</span><span class=\"p\">(</span><span class=\"s\">\"#2\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"s\">\"w\"</span><span class=\"p\">)</span>\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">heading</span><span class=\"p\">(</span><span class=\"s\">\"two\"</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"ASCII\"</span><span class=\"p\">,</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"s\">\"center\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">treelist</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"s\">\"A\"</span><span class=\"p\">,</span> <span class=\"mi\">65</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s\">\"B\"</span><span class=\"p\">,</span> <span class=\"mi\">66</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s\">\"C\"</span><span class=\"p\">,</span> <span class=\"mi\">67</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s\">\"D\"</span><span class=\"p\">,</span> <span class=\"mi\">68</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s\">\"E\"</span><span class=\"p\">,</span> <span class=\"mi\">69</span><span class=\"p\">)]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">treelist</span><span class=\"p\">)):</span>\n    \n    <span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"s\">''</span><span class=\"p\">,</span> <span class=\"s\">'end'</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"n\">treelist</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">iid</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s\">\"번\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">top</span><span class=\"o\">=</span><span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"s\">''</span><span class=\"p\">,</span> <span class=\"s\">'end'</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">treelist</span><span class=\"p\">)),</span> <span class=\"n\">iid</span><span class=\"o\">=</span><span class=\"s\">\"5번\"</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"s\">\"tag1\"</span><span class=\"p\">)</span>\n<span class=\"n\">top_mid1</span><span class=\"o\">=</span><span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">top</span><span class=\"p\">,</span> <span class=\"s\">'end'</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"5-2\"</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">\"SOH\"</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">iid</span><span class=\"o\">=</span><span class=\"s\">\"5번-1\"</span><span class=\"p\">)</span>\n<span class=\"n\">top_mid2</span><span class=\"o\">=</span><span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">top</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"5-1\"</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">\"NUL\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">iid</span><span class=\"o\">=</span><span class=\"s\">\"5번-0\"</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"s\">\"tag2\"</span><span class=\"p\">)</span>\n<span class=\"n\">top_mid3</span><span class=\"o\">=</span><span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">top</span><span class=\"p\">,</span> <span class=\"s\">'end'</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"5-3\"</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">\"STX\"</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">iid</span><span class=\"o\">=</span><span class=\"s\">\"5번-2\"</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"s\">\"tag2\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">tag_bind</span><span class=\"p\">(</span><span class=\"s\">\"tag1\"</span><span class=\"p\">,</span> <span class=\"n\">sequence</span><span class=\"o\">=</span><span class=\"s\">\"&lt;&lt;TreeviewSelect&gt;&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"n\">cc</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter.ttk</span></code></pre></figure>\n\n<p><br /></p>\n\n<p>상단에 <code class=\"highlighter-rouge\">import tkinter.ttk</code>를 사용하여 <code class=\"highlighter-rouge\">ttk 모듈</code>을 포함시킵니다. tkinter.ttk 함수의 사용방법은 <code class=\"highlighter-rouge\">tkinter.ttk.*</code>를 이용하여 사용이 가능합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">cc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">tag_configure</span><span class=\"p\">(</span><span class=\"s\">\"tag2\"</span><span class=\"p\">,</span> <span class=\"n\">background</span><span class=\"o\">=</span><span class=\"s\">\"red\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">treeview</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Treeview</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">\"one\"</span><span class=\"p\">,</span> <span class=\"s\">\"two\"</span><span class=\"p\">],</span> <span class=\"n\">displaycolumns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">\"two\"</span><span class=\"p\">,</span> <span class=\"s\">\"one\"</span><span class=\"p\">])</span>\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">column</span><span class=\"p\">(</span><span class=\"s\">\"#0\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">70</span><span class=\"p\">)</span>\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">heading</span><span class=\"p\">(</span><span class=\"s\">\"#0\"</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"num\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">column</span><span class=\"p\">(</span><span class=\"s\">\"one\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"s\">\"center\"</span><span class=\"p\">)</span>\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">heading</span><span class=\"p\">(</span><span class=\"s\">\"one\"</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"문자\"</span><span class=\"p\">,</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"s\">\"e\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">column</span><span class=\"p\">(</span><span class=\"s\">\"#2\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"s\">\"w\"</span><span class=\"p\">)</span>\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">heading</span><span class=\"p\">(</span><span class=\"s\">\"two\"</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"ASCII\"</span><span class=\"p\">,</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"s\">\"center\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">treelist</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"s\">\"A\"</span><span class=\"p\">,</span> <span class=\"mi\">65</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s\">\"B\"</span><span class=\"p\">,</span> <span class=\"mi\">66</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s\">\"C\"</span><span class=\"p\">,</span> <span class=\"mi\">67</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s\">\"D\"</span><span class=\"p\">,</span> <span class=\"mi\">68</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s\">\"E\"</span><span class=\"p\">,</span> <span class=\"mi\">69</span><span class=\"p\">)]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">treelist</span><span class=\"p\">)):</span>\n    \n    <span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"s\">''</span><span class=\"p\">,</span> <span class=\"s\">'end'</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"n\">treelist</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">iid</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s\">\"번\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">top</span><span class=\"o\">=</span><span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"s\">''</span><span class=\"p\">,</span> <span class=\"s\">'end'</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">treelist</span><span class=\"p\">)),</span> <span class=\"n\">iid</span><span class=\"o\">=</span><span class=\"s\">\"5번\"</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"s\">\"tag1\"</span><span class=\"p\">)</span>\n<span class=\"n\">top_mid1</span><span class=\"o\">=</span><span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">top</span><span class=\"p\">,</span> <span class=\"s\">'end'</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"5-2\"</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">\"SOH\"</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">iid</span><span class=\"o\">=</span><span class=\"s\">\"5번-1\"</span><span class=\"p\">)</span>\n<span class=\"n\">top_mid2</span><span class=\"o\">=</span><span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">top</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"5-1\"</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">\"NUL\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">iid</span><span class=\"o\">=</span><span class=\"s\">\"5번-0\"</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"s\">\"tag2\"</span><span class=\"p\">)</span>\n<span class=\"n\">top_mid3</span><span class=\"o\">=</span><span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">top</span><span class=\"p\">,</span> <span class=\"s\">'end'</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"5-3\"</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">\"STX\"</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">iid</span><span class=\"o\">=</span><span class=\"s\">\"5번-2\"</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"s\">\"tag2\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">treeview</span><span class=\"o\">.</span><span class=\"n\">tag_bind</span><span class=\"p\">(</span><span class=\"s\">\"tag1\"</span><span class=\"p\">,</span> <span class=\"n\">sequence</span><span class=\"o\">=</span><span class=\"s\">\"&lt;&lt;TreeviewSelect&gt;&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"n\">cc</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.ttk.Treeview(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 <code class=\"highlighter-rouge\">표의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">표.column()</code>, <code class=\"highlighter-rouge\">표.heading()</code>을 이용하여 <code class=\"highlighter-rouge\">행</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">표.insert()</code>를 이용하여 <code class=\"highlighter-rouge\">열</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">변수 이름</code>과 <code class=\"highlighter-rouge\">iid</code>는 서로 대체하여 사용할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"treeview-method\">Treeview Method###</h3>\n<hr />\n\n<h5 id=\"표-메소드-1\">표 메소드 (1)</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">column(col, column_option)</td>\n      <td style=\"text-align: center\">표 열의 속성을 설정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">heading(col, heading_option)</td>\n      <td style=\"text-align: center\">표의 행 제목 설정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insert(상위 항목, 삽입 위치, option)</td>\n      <td style=\"text-align: center\">표에 항목을 삽입 위치에 삽입</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">item(iid, option)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목을 수정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">move(iid, 상위 항목, 삽입 위치)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목을 상위 항목의 삽입 위치로 이동</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">reattach(iid, 상위 항목, 삽입 위치)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목을 상위 항목의 삽입 위치로 이동 (move와 동일)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">delete(iid)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목 삭제</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">detach(iid)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목 연결 해제 및 숨김</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">index(iid)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목의 index 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">focus(iid)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목에 포커스</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">xview()</td>\n      <td style=\"text-align: center\">가로스크롤 연결</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">yview()</td>\n      <td style=\"text-align: center\">세로스크롤 연결</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">col</code> : <strong>#0</strong>은 열의 첫번째 위치를 의미, <strong>#1, #2, #3, …</strong> 또는 열<strong>의 이름1, 열의 이름2, 열의 이름3, …</strong>을 이용하여 열을 선택 가능</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"표-메소드-column_option\">표 메소드 column_option</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">anchor</td>\n      <td style=\"text-align: center\">행 제목의 문자열 위치 설정</td>\n      <td style=\"text-align: center\">w</td>\n      <td style=\"text-align: center\">n, e, w, s, ne, nw, se, sw, center</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">열의 너비</td>\n      <td style=\"text-align: center\">200</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">minwidth</td>\n      <td style=\"text-align: center\">열의 최소 너비</td>\n      <td style=\"text-align: center\">20</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">stretch</td>\n      <td style=\"text-align: center\">위젯 크기 조정 시 열의 너비 조정 설정 여부</td>\n      <td style=\"text-align: center\">TRUE</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"표-메소드-heading_option\">표 메소드 heading_option</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">text</td>\n      <td style=\"text-align: center\">행 제목의 이름</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">문자열</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">image</td>\n      <td style=\"text-align: center\">행 제목의 이미지</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">anchor</td>\n      <td style=\"text-align: center\">열의 문자열 위치 설정</td>\n      <td style=\"text-align: center\">w</td>\n      <td style=\"text-align: center\">n, e, w, s, ne, nw, se, sw, center</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">command</td>\n      <td style=\"text-align: center\">행 제목을 클릭할 때 실행하는 메소드(함수)</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">메소드, 함수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"표-메소드-option\">표 메소드 option</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">text</td>\n      <td style=\"text-align: center\">표 항목에 표시할 텍스트</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">문자열</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">image</td>\n      <td style=\"text-align: center\">표에 포함할 임의 이미지</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">values</td>\n      <td style=\"text-align: center\">표 행에 포함될 항목</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">open</td>\n      <td style=\"text-align: center\">표의 하위 항목 숨김 여부</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tags</td>\n      <td style=\"text-align: center\">표의 태그 이름 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">문자열</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">iid</td>\n      <td style=\"text-align: center\">표의 고유값 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"표-메소드-2\">표 메소드 (2)</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">bbox(iid, column=상수)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 행과 column 값의 (width, height, x, y)   값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">get_children()</td>\n      <td style=\"text-align: center\">표의 하위 항목 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">get_children(iid)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 하위 항목 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">set_children(iid, 하위 iid, 하위 iid, … )</td>\n      <td style=\"text-align: center\">iid 값을 가지는 상위 항목에서 하위 iid값을 가지는 항목만 남김</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">exists(iid)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목이 있다면 참 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">identify(component, x, y)</td>\n      <td style=\"text-align: center\">표의 x, y 위치에 지정된 component의 세부 사항 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">identify_row(y)</td>\n      <td style=\"text-align: center\">표의 y 위치의 iid 값을 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">identify_column(x)</td>\n      <td style=\"text-align: center\">표의 x 위치의 열 식별자 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">identify_element(x, y)</td>\n      <td style=\"text-align: center\">표의 x, y 위치에 요소를 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">identify_region(x, y)</td>\n      <td style=\"text-align: center\">표의 x, y 위치에 세부 사항 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">next(iid)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목의 다음 순서 iid 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">parent(iid)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목의 상위 항목 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">prev(iid)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목의 이전 순서 iid 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">see(iid)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목이 보이는지 확인</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selection_set(iid)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목 선택</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selection_add(iid)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목 다중 선택</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selection_remove(iid)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목 선택 취소</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selection_toggle(iid)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목 반전 선택</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">set(iid)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목의 사전 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">set(iid, column=col)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목에서 col의 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">set(iid, column=col, value=val)</td>\n      <td style=\"text-align: center\">iid 값을 가지는 항목에서 col의 값을 val로 변경</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>component : element, region, item, column, row</p>\n  </li>\n  <li>\n    <p>identify_region(x, y)의 반환값</p>\n    <ul>\n      <li>heading : 행 제목</li>\n      <li>separator : 사이 간격 선</li>\n      <li>tree : 열 제목</li>\n      <li>cell : 셀 영역</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"표-태그-메소드\">표 태그 메소드</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">tag_bind(태그 이름, sequence=”이벤트”, callback=함수)</td>\n      <td style=\"text-align: center\">태그 이름의 목록에서 이벤트가 실행되었을 때 함수를 실행</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tag_configure(태그 이름, tag_option)</td>\n      <td style=\"text-align: center\">태그 이름에 형태 설정</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tag_has(태그 이름)</td>\n      <td style=\"text-align: center\">태그 이름에 할당된 iid 값 반환</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tag_has(태그 이름, item=iid)</td>\n      <td style=\"text-align: center\">태그 이름과 iid 값 비교</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"표-태그-메소드-sequence\">표 태그 메소드 sequence</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">«TreeviewSelect&gt;</td>\n      <td style=\"text-align: center\">표의 항목이 선택될 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">«TreeviewOpen»</td>\n      <td style=\"text-align: center\">표의 항목을 열 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">«TreeviewClose»</td>\n      <td style=\"text-align: center\">표의 항목을 닫을 때</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"표-태그-메소드-tag_option\">표 태그 메소드 tag_option</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">background</td>\n      <td style=\"text-align: center\">표의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">foreground</td>\n      <td style=\"text-align: center\">표의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">image</td>\n      <td style=\"text-align: center\">표에 포함할 임의 이미지</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">font</td>\n      <td style=\"text-align: center\">표 안의 문자열 글꼴 설정</td>\n      <td style=\"text-align: center\">TkDefaultFont</td>\n      <td style=\"text-align: center\">font</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"treeview-parameter\">Treeview Parameter</h3>\n<hr />\n\n<h5 id=\"표-형태-설정\">표 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\">표의 행 높이</td>\n      <td style=\"text-align: center\">10</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">padding</td>\n      <td style=\"text-align: center\">표의 여백</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"표-형식-설정\">표 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">표의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">class_</td>\n      <td style=\"text-align: center\">클래스 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">columns</td>\n      <td style=\"text-align: center\">표의 열 이름 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">리스트</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">displaycolumns</td>\n      <td style=\"text-align: center\">표의 열 순서 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">리스트</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectmode</td>\n      <td style=\"text-align: center\">표의 선택 형식 설정</td>\n      <td style=\"text-align: center\">extended</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">extended, browse, none</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">show</td>\n      <td style=\"text-align: center\">표의 제목 표시 여부</td>\n      <td style=\"text-align: center\">tree headings</td>\n      <td style=\"text-align: center\"><a href=\"#reference-3\">tree headings, tree, headings</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"표-동작-설정\">표 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock, coffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>\n    <p>selectmode 파라미터</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">extended</code> : Ctrl 키 또는 Shift 키를 활용하여 모록을 다중 선택 가능</li>\n      <li><code class=\"highlighter-rouge\">browse</code> : 한 번에 하나의 목록만 선택 가능</li>\n      <li><code class=\"highlighter-rouge\">none</code> : 목록 선택 불가</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li>\n    <p>show 파라미터</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">tree headings</code> : 행 제목과 열 제목 표시</li>\n      <li><code class=\"highlighter-rouge\">tree</code> : 행 제목 표시하지 않음</li>\n      <li><code class=\"highlighter-rouge\">headings</code> : 열 제목 표시하지 않음</li>\n    </ul>\n  </li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 29강 – Sizegrip",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-29/",
      "date"     : "2018-06-12 00:00:00 +0900",
  "content"   : "<h3 id=\"sizegrip-크기-조절\">Sizegrip (크기 조절)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/tkinter/ch29/1.png\"><img src=\"/assets/images/Python/tkinter/ch29/1.png\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">Sizegrip</code>을 이용하여 <strong>위젯의 크기를 조절</strong>할 수 있는 <code class=\"highlighter-rouge\">크기 조절</code>를 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"sizegrip-사용\">Sizegrip 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tkinter.ttk</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">Drag</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n\n    <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">winfo_x</span><span class=\"p\">()</span><span class=\"o\">+</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">x</span>\n    <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">winfo_y</span><span class=\"p\">()</span><span class=\"o\">+</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">y</span>\n    <span class=\"n\">sz_width</span><span class=\"o\">=</span><span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">winfo_reqwidth</span><span class=\"p\">()</span>\n    <span class=\"n\">sz_height</span><span class=\"o\">=</span><span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">winfo_reqheight</span><span class=\"p\">()</span>\n\n    <span class=\"n\">text</span><span class=\"p\">[</span><span class=\"s\">\"width\"</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"n\">sz_width</span>\n    <span class=\"n\">text</span><span class=\"p\">[</span><span class=\"s\">\"height\"</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"o\">-</span><span class=\"n\">sz_height</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">&gt;=</span> <span class=\"n\">sz_width</span> <span class=\"ow\">and</span> <span class=\"n\">y</span> <span class=\"o\">&gt;=</span> <span class=\"n\">sz_height</span> <span class=\"ow\">and</span> <span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">winfo_width</span><span class=\"p\">()</span> <span class=\"ow\">and</span> <span class=\"n\">y</span> <span class=\"err\">ㅠ</span><span class=\"o\">&lt;</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">winfo_height</span><span class=\"p\">():</span>\n        <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n        <span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"n\">sz_width</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"o\">-</span><span class=\"n\">sz_height</span><span class=\"p\">)</span>\n\n<span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Text</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">sizegrip</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Sizegrip</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">winfo_reqwidth</span><span class=\"p\">()</span><span class=\"o\">-</span><span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">winfo_reqwidth</span><span class=\"p\">()</span> <span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">winfo_reqheight</span><span class=\"p\">()</span><span class=\"o\">-</span><span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">winfo_reqheight</span><span class=\"p\">()</span> <span class=\"p\">)</span>\n<span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"s\">\"&lt;B1-Motion&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">Drag</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter.ttk</span></code></pre></figure>\n\n<p><br /></p>\n\n<p>상단에 <code class=\"highlighter-rouge\">import tkinter.ttk</code>를 사용하여 <code class=\"highlighter-rouge\">ttk 모듈</code>을 포함시킵니다. tkinter.ttk 함수의 사용방법은 <code class=\"highlighter-rouge\">tkinter.ttk.*</code>를 이용하여 사용이 가능합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">Drag</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n\n    <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">winfo_x</span><span class=\"p\">()</span><span class=\"o\">+</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">x</span>\n    <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">winfo_y</span><span class=\"p\">()</span><span class=\"o\">+</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">y</span>\n    <span class=\"n\">sz_width</span><span class=\"o\">=</span><span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">winfo_reqwidth</span><span class=\"p\">()</span>\n    <span class=\"n\">sz_height</span><span class=\"o\">=</span><span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">winfo_reqheight</span><span class=\"p\">()</span>\n\n    <span class=\"n\">text</span><span class=\"p\">[</span><span class=\"s\">\"width\"</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"n\">sz_width</span>\n    <span class=\"n\">text</span><span class=\"p\">[</span><span class=\"s\">\"height\"</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"o\">-</span><span class=\"n\">sz_height</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">&gt;=</span> <span class=\"n\">sz_width</span> <span class=\"ow\">and</span> <span class=\"n\">y</span> <span class=\"o\">&gt;=</span> <span class=\"n\">sz_height</span> <span class=\"ow\">and</span> <span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">winfo_width</span><span class=\"p\">()</span> <span class=\"ow\">and</span> <span class=\"n\">y</span> <span class=\"o\">&lt;</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">winfo_height</span><span class=\"p\">():</span>\n        <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n        <span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"n\">sz_width</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"o\">-</span><span class=\"n\">sz_height</span><span class=\"p\">)</span>\n\n<span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Text</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">sizegrip</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Sizegrip</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">winfo_reqwidth</span><span class=\"p\">()</span><span class=\"o\">-</span><span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">winfo_reqwidth</span><span class=\"p\">()</span> <span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">winfo_reqheight</span><span class=\"p\">()</span><span class=\"o\">-</span><span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">winfo_reqheight</span><span class=\"p\">()</span> <span class=\"p\">)</span>\n<span class=\"n\">sizegrip</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"s\">\"&lt;B1-Motion&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">Drag</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.ttk.Sizegrip(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 <code class=\"highlighter-rouge\">크기 조절의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">크기 조절의 속성</code>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">마우스 포인터</code>의 위치와 <code class=\"highlighter-rouge\">위젯의 크기</code>에 대한 정보를 활용하여 <code class=\"highlighter-rouge\">위젯의 크기</code>를 조절 할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">winfo_*</code>를 활용하여 <code class=\"highlighter-rouge\">위젯에 대한 정보</code>를 확인할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">x 변수</code>와 <code class=\"highlighter-rouge\">y 변수</code>는 마우스로 크기를 조절할 때 <code class=\"highlighter-rouge\">해당 위젯의 좌표</code>를 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">sz_width 변수</code>와 <code class=\"highlighter-rouge\">sz_height 변수</code>는 크기 조절 위젯의 <code class=\"highlighter-rouge\">실제 크기</code>를 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">if문</code>을 활용하여 위젯의 크기를 조절할 때 <code class=\"highlighter-rouge\">윈도우 창</code>을 벗어나지 않게 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">sizegrip.place()</code>의 좌표를 변경하여 <code class=\"highlighter-rouge\">위젯의 내부</code>가 아닌 <code class=\"highlighter-rouge\">위젯의 외부</code>로 위치를 이동시킬 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"winfo_-method\">winfo_ Method###</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">winfo_atom(“문자열   식별자”)</td>\n      <td style=\"text-align: center\">식별자 부여</td>\n      <td style=\"text-align: center\">해당 위젯의 정수 식별자를 부여</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_atomname(정수 식별자)</td>\n      <td style=\"text-align: center\">식별자 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 문자열 식별자를 확인</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_cells()</td>\n      <td style=\"text-align: center\">컬러맵 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 컬러맵 셀의 수 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_children()</td>\n      <td style=\"text-align: center\">하위 위젯 반환</td>\n      <td style=\"text-align: center\">해당 위젯에 포함되어 있는 하위 위젯들을 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_class()</td>\n      <td style=\"text-align: center\">클래스 명 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 클래스 명을 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_colormapfull()</td>\n      <td style=\"text-align: center\">컬러맵 확인</td>\n      <td style=\"text-align: center\">해당 위젯에 컬러맵이 포함되어있다면 참 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_containing(x, y)</td>\n      <td style=\"text-align: center\">경로 이름 반환</td>\n      <td style=\"text-align: center\">해당 위젯에 x, y 위치의 위젯 경로 이름을 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_depth()</td>\n      <td style=\"text-align: center\">비트 깊이 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 비트 깊이를 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_exists()</td>\n      <td style=\"text-align: center\">존재 여부 반환</td>\n      <td style=\"text-align: center\">해당 위젯이 존재한다면 참 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_fpixels(화소)</td>\n      <td style=\"text-align: center\">화소 값 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 화소 부동 소수점 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_geometry()</td>\n      <td style=\"text-align: center\">위젯 설정 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 width x height + x + y 형식의 위젯 설정 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_width()</td>\n      <td style=\"text-align: center\">위젯 너비 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 너비 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_height()</td>\n      <td style=\"text-align: center\">위젯의 높이 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 높이 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_id()</td>\n      <td style=\"text-align: center\">고유 식별자 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 16진수 고유 식별자 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_interps()</td>\n      <td style=\"text-align: center\">디스플레이 인터프리터 반환</td>\n      <td style=\"text-align: center\">해당 위젯에 대한 디스플레이 Tcl 인터프리터 이름 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_ismapped()</td>\n      <td style=\"text-align: center\">매핑 반환</td>\n      <td style=\"text-align: center\">해당 위젯이 매핑되어있다면 참 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_manager()</td>\n      <td style=\"text-align: center\">지오메트리 매니저 이름 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 지오메트리 매니저의 값을 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_name()</td>\n      <td style=\"text-align: center\">위젯 이름 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 이름 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_parent()</td>\n      <td style=\"text-align: center\">상위 위젯 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 상위 위젯 이름을 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_pathname(id)</td>\n      <td style=\"text-align: center\">경로 이름 반환</td>\n      <td style=\"text-align: center\">해당 id의 위젯의 경로 이름 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_pixel(화소)</td>\n      <td style=\"text-align: center\">화소 값 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 화소 정수 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_pointerx()</td>\n      <td style=\"text-align: center\">마우스 포인터 x 값 반환</td>\n      <td style=\"text-align: center\">해당 위젯에서 마우스 포인터 x 좌표 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_pointery()</td>\n      <td style=\"text-align: center\">마우스 포인터 y 값 반환</td>\n      <td style=\"text-align: center\">해당 위젯에서 마우스 포인터 y 좌표 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_pointerxy()</td>\n      <td style=\"text-align: center\">마우스 포인터 (x, y) 값 반환</td>\n      <td style=\"text-align: center\">해당 위젯에서 마우스 포인터 (x, y) 좌표 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_reqwidth()</td>\n      <td style=\"text-align: center\">위젯 너비 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 요청된 너비 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_reqheight()</td>\n      <td style=\"text-align: center\">위젯 높이 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 요청된 높이 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_rgb(color)</td>\n      <td style=\"text-align: center\">(r, g, b) 반환</td>\n      <td style=\"text-align: center\">color에 해당하는 (r, g, b) 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_rootx()</td>\n      <td style=\"text-align: center\">위젯 좌측 상단 x 값 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 좌측 상단 x 좌표 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_rooty()</td>\n      <td style=\"text-align: center\">위젯 좌측 상단 y 값 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 좌측 상단 y 좌표 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_screen()</td>\n      <td style=\"text-align: center\">위젯 화면 이름 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 화면 이름 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_screencells()</td>\n      <td style=\"text-align: center\">위젯 화면 픽셀 수 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 화면 픽셀 수 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_screendepth()</td>\n      <td style=\"text-align: center\">위젯 화면 픽셀 깊이 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 화면 깊이 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_screenmmwidth()</td>\n      <td style=\"text-align: center\">위젯 화면 너비 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 화면 너비 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_screenmmheight()</td>\n      <td style=\"text-align: center\">위젯 화면 높이 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 화면 높이 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_screenvisual()</td>\n      <td style=\"text-align: center\">위젯 화면 색상 모델 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 화면 색상 모델 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_server()</td>\n      <td style=\"text-align: center\">윈도우 서버 정보 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 서버 (1)버전 (2)개정 번호 (3)공급 업체 (4)서버 릴리즈 번호를 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_toplevel()</td>\n      <td style=\"text-align: center\">최상위 위젯 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 최상위 위젯 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_viewable()</td>\n      <td style=\"text-align: center\">위젯 매핑 여부 반환</td>\n      <td style=\"text-align: center\">해당 위젯이 최상위 윈도우 까지 매핑되어있다면 참 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_visual()</td>\n      <td style=\"text-align: center\">위젯 색상 모델 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 색상 모델 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_visualid()</td>\n      <td style=\"text-align: center\">비주얼 식별자 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 비주얼 식별자 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_visualsavailable()</td>\n      <td style=\"text-align: center\">비주얼 목록 확인</td>\n      <td style=\"text-align: center\">해당 위젯에서 사용할 수 있는 모든 비주얼 목록 확인</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_vrootwidth()</td>\n      <td style=\"text-align: center\">위젯 가상 루트 너비 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 가상 루트 너비 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_vrootheight()</td>\n      <td style=\"text-align: center\">위젯 가상 루트 높이 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 가상 루트 높이 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_x()</td>\n      <td style=\"text-align: center\">위젯 좌측 상단 x 값 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 부모에서 좌측 상단 x 좌표 값 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">winfo_height()</td>\n      <td style=\"text-align: center\">위젯 좌측 상단 y 값 반환</td>\n      <td style=\"text-align: center\">해당 위젯의 부모에서 좌측 상단 y 좌표 값 반환</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>화소 형식 : “1i”, “2.0c”</li>\n  <li>r, g, b 범위 : 0~65535</li>\n  <li>색상 모델 반환 값 : truecolor, staticgray, staticcolor, pseudocolor, grayscale, directcolor</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"sizegrip-parameter\">Sizegrip Parameter</h3>\n<hr />\n\n<h5 id=\"크기-조절-형식-설정\">크기 조절 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">크기 조절의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">class_</td>\n      <td style=\"text-align: center\">클래스 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"크기-조절-동작-설정\">크기 조절 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock, coffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 28강 – Notebook",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-28/",
      "date"     : "2018-06-09 00:00:00 +0900",
  "content"   : "<h3 id=\"notebook-탭-메뉴\">Notebook (탭 메뉴)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/tkinter/ch28/1.png\"><img src=\"/assets/images/Python/tkinter/ch28/1.png\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">Notebook</code>을 이용하여 <strong>페이지</strong>를 나눌 수 있는 <code class=\"highlighter-rouge\">탭 메뉴</code>를 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"notebook-사용\">Notebook 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tkinter.ttk</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">notebook</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Notebook</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">frame1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">frame1</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지1\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">label1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">frame1</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지1의 내용\"</span><span class=\"p\">)</span>\n<span class=\"n\">label1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">frame2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">frame2</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지2\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">label2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">frame2</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지2의 내용\"</span><span class=\"p\">)</span>\n<span class=\"n\">label2</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">frame3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">frame3</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지4\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">label3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">frame3</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지4의 내용\"</span><span class=\"p\">)</span>\n<span class=\"n\">label3</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">frame4</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">frame4</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지3\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">label4</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">frame4</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지3의 내용\"</span><span class=\"p\">)</span>\n<span class=\"n\">label4</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter.ttk</span></code></pre></figure>\n\n<p><br /></p>\n\n<p>상단에 <code class=\"highlighter-rouge\">import tkinter.ttk</code>를 사용하여 <code class=\"highlighter-rouge\">ttk 모듈</code>을 포함시킵니다. tkinter.ttk 함수의 사용방법은 <code class=\"highlighter-rouge\">tkinter.ttk.*</code>를 이용하여 사용이 가능합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">notebook</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Notebook</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">frame1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">frame1</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지1\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">label1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">frame1</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지1의 내용\"</span><span class=\"p\">)</span>\n<span class=\"n\">label1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">frame2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">frame2</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지2\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">label2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">frame2</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지2의 내용\"</span><span class=\"p\">)</span>\n<span class=\"n\">label2</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">frame3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">frame3</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지4\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">label3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">frame3</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지4의 내용\"</span><span class=\"p\">)</span>\n<span class=\"n\">label3</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">frame4</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">frame4</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지3\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">label4</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">frame4</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"페이지3의 내용\"</span><span class=\"p\">)</span>\n<span class=\"n\">label4</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.ttk.Notebook(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 <code class=\"highlighter-rouge\">탭 메뉴의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">탭 메뉴의 속성</code>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">프레임</code>을 이용하여 <code class=\"highlighter-rouge\">탭 페이지</code>를 설정할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"notebook-method\">Notebook Method###</h3>\n<hr />\n\n<h5 id=\"탭-메뉴-메소드\">탭 메뉴 메소드</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">설명</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">add(frame, option)</td>\n      <td style=\"text-align: center\">페이지 추가</td>\n      <td style=\"text-align: center\">탭 메뉴의 페이지를 추가</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insert(tabname, frame, option)</td>\n      <td style=\"text-align: center\">페이지 삽입</td>\n      <td style=\"text-align: center\">탭 메뉴의 tabname 위치에 페이지를 추가</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">forget(tabname)</td>\n      <td style=\"text-align: center\">페이지 삭제</td>\n      <td style=\"text-align: center\">탭 메뉴의 tabname 페이지를 삭제</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">hide(tabname)</td>\n      <td style=\"text-align: center\">페이지 숨김</td>\n      <td style=\"text-align: center\">탭 메뉴의 tabname 페이지를 숨김</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">select(tabname)</td>\n      <td style=\"text-align: center\">페이지 선택</td>\n      <td style=\"text-align: center\">탭 메뉴의 tabname 페이지를 선택</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">index(tabname)</td>\n      <td style=\"text-align: center\">페이지 위치 반환</td>\n      <td style=\"text-align: center\">탭 메뉴의 tabname 페이지의 위치를 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tab(tabname)</td>\n      <td style=\"text-align: center\">페이지 설정 반환</td>\n      <td style=\"text-align: center\">탭 메뉴의 tabname 페이지의 설정을 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tabs()</td>\n      <td style=\"text-align: center\">페이지 반환</td>\n      <td style=\"text-align: center\">탭 메뉴의 페이지 tabname 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">enable_traversal()</td>\n      <td style=\"text-align: center\">키 바인딩 허용</td>\n      <td style=\"text-align: center\">탭 메뉴의 키 바인딩을 허용</td>\n    </tr>\n  </tbody>\n</table>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">tabname</code> : <code class=\"highlighter-rouge\">index</code>로 사용하거나, <code class=\"highlighter-rouge\">frame</code> 위젯의 <strong>변수 이름</strong>으로 사용</li>\n  <li><code class=\"highlighter-rouge\">current</code> : 현재 선택된 탭 페이지의 메뉴, (문자열)</li>\n  <li><code class=\"highlighter-rouge\">end</code> : 탭 메뉴의 탭 페이지 개수, (문자열)</li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>enable_traversal()</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">Ctrl + Tab</code> 을 이용하여 다음 페이지로 이동 가능</li>\n      <li><code class=\"highlighter-rouge\">Shift + Ctrl + Tab</code>을 이용하여 이전 페이지로 이동 가능</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"탭-메뉴-option\">탭 메뉴 Option</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">text</td>\n      <td style=\"text-align: center\">탭 페이지에 표시할 문자열</td>\n      <td style=\"text-align: center\">문자열</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">underline</td>\n      <td style=\"text-align: center\">탭 페이지의 문자열 중 index에 해당되는 문자에 밑줄 표시</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">sticky</td>\n      <td style=\"text-align: center\">탭 페이지의 할당된 공간 내에서의 위치 조정</td>\n      <td style=\"text-align: center\">n, e, w, s, ne, nw, se, sw</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">state</td>\n      <td style=\"text-align: center\">탭 페이지의 상태 설정</td>\n      <td style=\"text-align: center\">normal, disabled, hidden</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">image</td>\n      <td style=\"text-align: center\">탭 페이지에 포함할 임의 이미지</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">compound</td>\n      <td style=\"text-align: center\">탭 페에지에 문자열과 이미지를 동시에 표시할 때 이미지의 위치</td>\n      <td style=\"text-align: center\">none, center, left, right, top, bottom</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"notebook-parameter\">Notebook Parameter</h3>\n<hr />\n\n<h5 id=\"탭-메뉴-형태-설정\">탭 메뉴 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">탭 메뉴의 너비</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\">탭 메뉴의 높이</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">padding</td>\n      <td style=\"text-align: center\">탭 메뉴의 여백</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"탭-메뉴-형식-설정\">탭 메뉴 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">탭 메뉴의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">class_</td>\n      <td style=\"text-align: center\">클래스 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"탭-메뉴-동작-설정\">탭 메뉴 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 27강 – Progressbar",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-27/",
      "date"     : "2018-06-08 00:00:00 +0900",
  "content"   : "<h3 id=\"progressbar-프로그래스바\">Progressbar (프로그래스바)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">Progressbar</code>을 이용하여 <strong>현재 진행 상황</strong>을 표시하는 <code class=\"highlighter-rouge\">프로그래스바</code>를 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"progressbar-사용\">Progressbar 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tkinter.ttk</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">progressbar</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Progressbar</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">maximum</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s\">\"indeterminate\"</span><span class=\"p\">)</span>\n<span class=\"n\">progressbar</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">progressbar</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter.ttk</span></code></pre></figure>\n\n<p><br /></p>\n\n<p>상단에 <code class=\"highlighter-rouge\">import tkinter.ttk</code>를 사용하여 <code class=\"highlighter-rouge\">ttk 모듈</code>을 포함시킵니다. tkinter.ttk 함수의 사용방법은 <code class=\"highlighter-rouge\">tkinter.ttk.*</code>를 이용하여 사용이 가능합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">progressbar</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Progressbar</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">maximum</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s\">\"indeterminate\"</span><span class=\"p\">)</span>\n<span class=\"n\">progressbar</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">progressbar</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.ttk.Progressbar(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 <code class=\"highlighter-rouge\">프로그래스바의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">프로그래스바의 속성</code>을 설정합니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"progressbar-method\">Progressbar Method</h3>\n<hr />\n\n<h5 id=\"프로그래스바-메소드\">프로그래스바 메소드</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">설명</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">start(ms)</td>\n      <td style=\"text-align: center\">시작</td>\n      <td style=\"text-align: center\">프로그래스바가 <code class=\"highlighter-rouge\">밀리 초</code>마다 움직임</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">step(value)</td>\n      <td style=\"text-align: center\">값 증가</td>\n      <td style=\"text-align: center\">현재 표시되는 값에서 <code class=\"highlighter-rouge\">value</code>만큼 증가</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">stop()</td>\n      <td style=\"text-align: center\">종료</td>\n      <td style=\"text-align: center\">프로그래스바 작동 종료</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"progressbar-parameter\">Progressbar Parameter</h3>\n<hr />\n\n<h5 id=\"프로그래스바-형태-설정\">프로그래스바 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">length</td>\n      <td style=\"text-align: center\">프로그래스바의 너비</td>\n      <td style=\"text-align: center\">100</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">orient</td>\n      <td style=\"text-align: center\">프로그래스바의 표시 방향</td>\n      <td style=\"text-align: center\">vertical</td>\n      <td style=\"text-align: center\">vertical, horizontal</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">mode</td>\n      <td style=\"text-align: center\">프로그래스바의 표시 스타일</td>\n      <td style=\"text-align: center\">determinate </td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">determinate , indeterminate</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"프로그래스바-형식-설정\">프로그래스바 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">프로그래스바의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">class_</td>\n      <td style=\"text-align: center\">클래스 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">maximum</td>\n      <td style=\"text-align: center\">프로그래스바의 최댓값 설정</td>\n      <td style=\"text-align: center\">100</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">value</td>\n      <td style=\"text-align: center\">프로그래스바의 현재값을 설정</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">variable</td>\n      <td style=\"text-align: center\">프로그래스바의 현재값을 가져올 변수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">phase</td>\n      <td style=\"text-align: center\">프로그래스바의 고유값을 설정</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"프로그래스바-동작-설정\">프로그래스바 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>\n    <p>mode 파라미터</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">determinate</code> : 표시기가 처음부터 끝까지 채워짐</li>\n      <li><code class=\"highlighter-rouge\">indeterminate</code> : 표시기가 처음부터 끝까지 반복 이동</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 26강 – Combobox",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-26/",
      "date"     : "2018-06-07 00:00:00 +0900",
  "content"   : "<h3 id=\"combobox-콤보박스\">Combobox (콤보박스)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">Combobox</code>을 이용하여 <strong>텍스트와 허용된 값의 드롭다운 목록</strong>을 표시하는 <code class=\"highlighter-rouge\">콤보박스</code>를 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"spinbox-사용\">Spinbox 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tkinter.ttk</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s\">\"번\"</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">101</span><span class=\"p\">)]</span> \n\n<span class=\"n\">combobox</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Combobox</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"n\">values</span><span class=\"p\">)</span>\n<span class=\"n\">combobox</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">combobox</span><span class=\"o\">.</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"s\">\"목록 선택\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter.ttk</span></code></pre></figure>\n\n<p><br /></p>\n\n<p>상단에 <code class=\"highlighter-rouge\">import tkinter.ttk</code>를 사용하여 <code class=\"highlighter-rouge\">ttk 모듈</code>을 포함시킵니다. tkinter.ttk 함수의 사용방법은 <code class=\"highlighter-rouge\">tkinter.ttk.*</code>를 이용하여 사용이 가능합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s\">\"번\"</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">101</span><span class=\"p\">)]</span> \n\n<span class=\"n\">combobox</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Combobox</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"n\">values</span><span class=\"p\">)</span>\n<span class=\"n\">combobox</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">combobox</span><span class=\"o\">.</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"s\">\"목록 선택\"</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.ttk.Combobox(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 <code class=\"highlighter-rouge\">콤보박스의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">콤보박스의 속성</code>을 설정합니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"combobox-method\">Combobox Method###</h3>\n<hr />\n\n<h5 id=\"콤보박스-메소드\">콤보박스 메소드</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">설명</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">set(“문자열”)</td>\n      <td style=\"text-align: center\">표시값 변경</td>\n      <td style=\"text-align: center\">콤보박스의 현재 텍스트 변경</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">get()</td>\n      <td style=\"text-align: center\">표시값 반환</td>\n      <td style=\"text-align: center\">콤보박스의 현재 텍스트 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">current(index)</td>\n      <td style=\"text-align: center\">목록 표시</td>\n      <td style=\"text-align: center\">해당 <code class=\"highlighter-rouge\">index</code>의 목록 표시</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"combobox-parameter\">Combobox Parameter</h3>\n<hr />\n\n<h5 id=\"콤보박스-텍스트-설정\">콤보박스 텍스트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">textvariable</td>\n      <td style=\"text-align: center\">콤보박스에 표시할 문자열을 가져올 변수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">justify</td>\n      <td style=\"text-align: center\">콤보박스의 문자열이 여러 줄 일 경우 정렬 방법</td>\n      <td style=\"text-align: center\">left</td>\n      <td style=\"text-align: center\">center, left, right</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"콤보박스-형태-설정\">콤보박스 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">콤보박스의 너비</td>\n      <td style=\"text-align: center\">20</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\">콤보박스의 드롭 다운 목록이 표시할 개수</td>\n      <td style=\"text-align: center\">20</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"콤보박스-형식-설정\">콤보박스 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">콤보박스의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">class_</td>\n      <td style=\"text-align: center\">클래스 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">xscrollcommand</td>\n      <td style=\"text-align: center\">콤보박스의 가로스크롤 위젯 적용</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">Scrollbar위젯.set</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">values</td>\n      <td style=\"text-align: center\"> 콤보박스의 목록 값</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">list, tuple 등</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">exportselection</td>\n      <td style=\"text-align: center\">수치 조정 기압창의 선택 항목 여부 설정</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"콤보박스-동작-설정\">콤보박스 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">postcommand</td>\n      <td style=\"text-align: center\">콤보박스에서 드롭다운 목록을 클릭할 때 실행하는 메소드(함수)</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">메소드, 함수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">validate</td>\n      <td style=\"text-align: center\">콤보박스의 유효성 검사 실행 조건</td>\n      <td style=\"text-align: center\">none</td>\n      <td style=\"text-align: center\"><a href=\"#reference-3\">none, focus, focusin, focusout, key, all</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">validatecommand</td>\n      <td style=\"text-align: center\">유효성 검사 평가 함수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">함수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">invalidcommand</td>\n      <td style=\"text-align: center\">validateCommand가 False를 반환 할 때 실행할 함수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">함수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">values</code>를 <code class=\"highlighter-rouge\">[5, 10, 50, 100]</code>으로 설정하였을 경우, <code class=\"highlighter-rouge\">목록의 순서</code>로 드롭다운 목록 표시</li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li>\n    <p>validate 파라미터</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">none</code> : 콤보박스의 유효성 검사 실행하지 않음</li>\n      <li><code class=\"highlighter-rouge\">focus</code> : 콤보박스가 포커스를 받거나 잃을 때 validateCommand 실행</li>\n      <li><code class=\"highlighter-rouge\">focusin</code> : 콤보박스가 포커스를 받을 때 validateCommand 실행</li>\n      <li><code class=\"highlighter-rouge\">focusout</code> : 콤보박스가 포커스를 잃을 때 validateCommand 실행</li>\n      <li><code class=\"highlighter-rouge\">key</code> : 콤보박스가 수정될 경우 validateCommand 실행</li>\n      <li><code class=\"highlighter-rouge\">all</code> : 콤보박스의 모든 validate에 대해 validateCommand 실행</li>\n    </ul>\n  </li>\n</ul>\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 25강 – Spinbox",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-25/",
      "date"     : "2018-06-06 00:00:00 +0900",
  "content"   : "<h3 id=\"spinbox-수치-조정-기입창\">Spinbox (수치 조정 기입창)</h3>\n<hr />\n<p><a href=\"/assets/images/Python/tkinter/ch25/1.png\"><img src=\"/assets/images/Python/tkinter/ch25/1.png\" alt=\"1\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">Spinbox</code>을 이용하여 <strong>수치를 조정하고 입력</strong>받는 <code class=\"highlighter-rouge\">수치 조정 기입창</code>를 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"spinbox-사용\">Spinbox 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"숫자를 입력하세요.\"</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">value_check</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"숫자를 입력하세요.\"</span><span class=\"p\">)</span>\n    <span class=\"n\">valid</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n    <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">isdigit</span><span class=\"p\">():</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">50</span> <span class=\"ow\">and</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">):</span>\n            <span class=\"n\">valid</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n    <span class=\"k\">elif</span> <span class=\"bp\">self</span> <span class=\"o\">==</span> <span class=\"s\">''</span><span class=\"p\">:</span>\n        <span class=\"n\">valid</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n    <span class=\"k\">return</span> <span class=\"n\">valid</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">value_error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s\">\"를 입력하셨습니다.</span><span class=\"se\">\\n</span><span class=\"s\">올바른 값을 입력하세요.\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">validate_command</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">value_check</span><span class=\"p\">),</span> <span class=\"s\">'</span><span class=\"si\">%</span><span class=\"s\">P'</span><span class=\"p\">)</span>\n<span class=\"n\">invalid_command</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">value_error</span><span class=\"p\">),</span> <span class=\"s\">'</span><span class=\"si\">%</span><span class=\"s\">P'</span><span class=\"p\">)</span>\n\n<span class=\"n\">spinbox</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Spinbox</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">from_</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">to</span> <span class=\"o\">=</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">validate</span> <span class=\"o\">=</span> <span class=\"s\">'all'</span><span class=\"p\">,</span> <span class=\"n\">validatecommand</span> <span class=\"o\">=</span> <span class=\"n\">validate_command</span><span class=\"p\">,</span> <span class=\"n\">invalidcommand</span><span class=\"o\">=</span><span class=\"n\">invalid_command</span><span class=\"p\">)</span>\n<span class=\"n\">spinbox</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"숫자를 입력하세요.\"</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">value_check</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"숫자를 입력하세요.\"</span><span class=\"p\">)</span>\n    <span class=\"n\">valid</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n    <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">isdigit</span><span class=\"p\">():</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">50</span> <span class=\"ow\">and</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">):</span>\n            <span class=\"n\">valid</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n    <span class=\"k\">elif</span> <span class=\"bp\">self</span> <span class=\"o\">==</span> <span class=\"s\">''</span><span class=\"p\">:</span>\n        <span class=\"n\">valid</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n    <span class=\"k\">return</span> <span class=\"n\">valid</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">value_error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s\">\"를 입력하셨습니다.</span><span class=\"se\">\\n</span><span class=\"s\">올바른 값을 입력하세요.\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">validate_command</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">value_check</span><span class=\"p\">),</span> <span class=\"s\">'</span><span class=\"si\">%</span><span class=\"s\">P'</span><span class=\"p\">)</span>\n<span class=\"n\">invalid_command</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">value_error</span><span class=\"p\">),</span> <span class=\"s\">'</span><span class=\"si\">%</span><span class=\"s\">P'</span><span class=\"p\">)</span>\n\n<span class=\"n\">spinbox</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Spinbox</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">from_</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">to</span> <span class=\"o\">=</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">validate</span> <span class=\"o\">=</span> <span class=\"s\">'all'</span><span class=\"p\">,</span> <span class=\"n\">validatecommand</span> <span class=\"o\">=</span> <span class=\"n\">validate_command</span><span class=\"p\">,</span> <span class=\"n\">invalidcommand</span><span class=\"o\">=</span><span class=\"n\">invalid_command</span><span class=\"p\">)</span>\n<span class=\"n\">spinbox</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.Spinbox(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 <code class=\"highlighter-rouge\">수치 조정 기입창의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">수치 조정 기입창의 속성</code>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">사용자 정의 함수</code>에 <code class=\"highlighter-rouge\">래핑</code>하여 <code class=\"highlighter-rouge\">콜백</code>을 포함하여야 <code class=\"highlighter-rouge\">유효성 검사</code>를 실행할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">validate</code>를 이용하여 <code class=\"highlighter-rouge\">유효성 검사</code>를 <code class=\"highlighter-rouge\">반응 조건</code>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">validatecommand</code>를 이용하여 유효성을 검사하며, <code class=\"highlighter-rouge\">invalidcommand</code>를 통하여 올바르지 않을 때의 함수를 실행합니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"spinbox-method\">Spinbox Method###</h3>\n<hr />\n\n<h5 id=\"수치-조정-기입창-메소드\">수치 조정 기입창 메소드</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">설명</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">insert(index, “문자열”)</td>\n      <td style=\"text-align: center\">문자열 삽입</td>\n      <td style=\"text-align: center\">해당 <code class=\"highlighter-rouge\">index</code> 위치에 <code class=\"highlighter-rouge\">문자열</code>을 삽입</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">delete(start_index, end_index)</td>\n      <td style=\"text-align: center\">문자열 삭제</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">start_index</code>부터 <code class=\"highlighter-rouge\">end_index</code>까지의 문자열 삭제</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">get(start_index, end_index)</td>\n      <td style=\"text-align: center\">문자열 반환</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">start_index</code>부터 <code class=\"highlighter-rouge\">end_index</code>까지의 문자열 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">index(index)</td>\n      <td style=\"text-align: center\">인덱스 반환</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">index</code>가 음수 일 경우, <code class=\"highlighter-rouge\">1.0</code>으로 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">identify(x, y)</td>\n      <td style=\"text-align: center\">요소 식별</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">x, y</code> 위치의 위젯 요소 반환 (<code class=\"highlighter-rouge\">entry</code>, <code class=\"highlighter-rouge\">buttonup</code>, <code class=\"highlighter-rouge\">buttondown</code>, <code class=\"highlighter-rouge\">''</code>)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">invoke(button)</td>\n      <td style=\"text-align: center\">버튼 실행</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">buttonup</code> 또는 <code class=\"highlighter-rouge\">buttondown</code> 실행</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"수치-조정-기입창-콜백\">수치 조정 기입창 콜백</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">설명</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">%d</td>\n      <td style=\"text-align: center\">액션 코드 반환</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">삭제=0</code>, <code class=\"highlighter-rouge\">삽입=1</code>, <code class=\"highlighter-rouge\">포커스 인=textvariable</code>, <code class=\"highlighter-rouge\">포커스 아웃=textvariable</code></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">%i</td>\n      <td style=\"text-align: center\">텍스트 수정 인덱스 반환</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">삽입 또는 삭제=해당 index</code>, <code class=\"highlighter-rouge\">포커스인 또는 포커스 아웃=-1</code></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">%P</td>\n      <td style=\"text-align: center\">텍스트 부여 값</td>\n      <td style=\"text-align: center\">변경이 가능한 경우 텍스트에 부여될 값</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">%s</td>\n      <td style=\"text-align: center\">텍스트가 변경되기 전 값</td>\n      <td style=\"text-align: center\">텍스트가 변경되기 전의 유효한 값</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">%S</td>\n      <td style=\"text-align: center\">텍스트 변경된 후 값</td>\n      <td style=\"text-align: center\">텍스트가 변경된 후의 유효한 값</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">%v</td>\n      <td style=\"text-align: center\">validate 현재 값</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 validate 파라미터의 현재 값</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">%V</td>\n      <td style=\"text-align: center\">콜백 확인</td>\n      <td style=\"text-align: center\">어떤 호출로 인하여 콜백되었는지 확인</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">%W</td>\n      <td style=\"text-align: center\">위젯의 이름</td>\n      <td style=\"text-align: center\">호출된 위젯의 이름을 확인</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"spinbox-parameter\">Spinbox Parameter</h3>\n<hr />\n\n<h5 id=\"수치-조정-기입창-텍스트-설정\">수치 조정 기입창 텍스트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">textvariable</td>\n      <td style=\"text-align: center\">수치 조정 기입창에 표시할 문자열을 가져올 변수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">justify</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 문자열이 여러 줄 일 경우 정렬 방법</td>\n      <td style=\"text-align: center\">left</td>\n      <td style=\"text-align: center\">center, left, right</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"수치-조정-기입창-형태-설정\">수치 조정 기입창 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 너비</td>\n      <td style=\"text-align: center\">20</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 테두리 모양</td>\n      <td style=\"text-align: center\">sunken</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">borderwidth=bd</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 테두리 두께</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">foreground=fg</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insertwidth</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 키보드 커서 너비</td>\n      <td style=\"text-align: center\">2</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insertborderwidth</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 키보드 커서 테두리 두께</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insertbackground</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 키보드 커서 색상</td>\n      <td style=\"text-align: center\">SystemWindowText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectborderwidth</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 문자열 블록처리 테두리 두께</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectbackground</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 문자열 블록처리 배경 색상</td>\n      <td style=\"text-align: center\">SystemHighlightText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectforeground</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 문자열 블록처리 문자열 색상</td>\n      <td style=\"text-align: center\">SystemHighlightText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">buttonbackground</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 수치 조정 버튼 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"수치-조정-기입창-형식-설정\">수치 조정 기입창 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">font</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 문자열 글꼴 설정</td>\n      <td style=\"text-align: center\">TkDefaultFont</td>\n      <td style=\"text-align: center\">font</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">buttoncursor</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 수치 조정 버튼 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">xscrollcommand</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 가로스크롤 위젯 적용</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">Scrollbar위젯.set</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">from_</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 최솟값</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">to</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 최댓값</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">increment</td>\n      <td style=\"text-align: center\"> 수치 조정 기입창의 수치 간격</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">values</td>\n      <td style=\"text-align: center\"> 수치 조정 기입창의 사용자 정의 수치 값</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">list, tuple 등</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">format_</td>\n      <td style=\"text-align: center\"> 수치 조정 기입창의 수치 표시 형식</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">정밀도 설정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">exportselection</td>\n      <td style=\"text-align: center\">수치 조정 기압창의 선택 항목 여부 설정</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"수치-조정-기입창-상태-설정\">수치 조정 기입창 상태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">state</td>\n      <td style=\"text-align: center\">상태 설정</td>\n      <td style=\"text-align: center\">normal</td>\n      <td style=\"text-align: center\">normal, readonly, disabled</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activebackground</td>\n      <td style=\"text-align: center\">active 상태일 때 수치 조정 기입창의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">readonlybackground</td>\n      <td style=\"text-align: center\">readonly 상태일 때 수치 조정 기입창의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">disabledbackground</td>\n      <td style=\"text-align: center\">disabeld 상태일 때 수치 조정 기입창의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">disabledforeground</td>\n      <td style=\"text-align: center\">disabeld 상태일 때 수치 조정 기입창의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemDisabledText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"수치-조정-기입창-하이라이트-설정\">수치 조정 기입창 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">수치 조정 기입창이가 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">수치 조정 기입창이가 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">수치 조정 기입창이가 선택되었을 때 두께 <a href=\"#reference-3\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"수치-조정-기입창-동작-설정\">수치 조정 기입창 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">command</td>\n      <td style=\"text-align: center\">수치 조정 기입창에서 수치가 조정될 때 실행하는 메소드(함수)</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">메소드, 함수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">wrap</td>\n      <td style=\"text-align: center\">수치 조정 기입창에서 수치가 초과되거나 미만일 경우, 최솟값이나 최댓값으로 변경</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insertontime</td>\n      <td style=\"text-align: center\">기입창의 키보드 커서 깜빡임이 보이는 시간</td>\n      <td style=\"text-align: center\">600</td>\n      <td style=\"text-align: center\">상수(ms)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insertofftime</td>\n      <td style=\"text-align: center\">기입창의 키보드 커서 깜빡임이 보이지 않는 시간</td>\n      <td style=\"text-align: center\">300</td>\n      <td style=\"text-align: center\">상수(ms)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">repeatdelay</td>\n      <td style=\"text-align: center\"><a href=\"#reference-4\">수치 조정 버튼이 눌러진 상태에서 command 실행까지의 대기 시간</a></td>\n      <td style=\"text-align: center\">400</td>\n      <td style=\"text-align: center\">상수(ms)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">repeatinterval</td>\n      <td style=\"text-align: center\"><a href=\"#reference-5\">수치 조정 버튼이 눌러진 상태에서 command 실행의 반복 시간</a></td>\n      <td style=\"text-align: center\">100</td>\n      <td style=\"text-align: center\">상수(ms)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">validate</td>\n      <td style=\"text-align: center\">수치 조정 기입창의 유효성 검사 실행 조건</td>\n      <td style=\"text-align: center\">none</td>\n      <td style=\"text-align: center\"><a href=\"#reference-6\">none, focus, focusin, focusout, key, all</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">validatecommand</td>\n      <td style=\"text-align: center\">유효성 검사 평가 함수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">함수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">invalidcommand</td>\n      <td style=\"text-align: center\">validateCommand가 False를 반환 할 때 실행할 함수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">함수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">values</code>를 <code class=\"highlighter-rouge\">[5, 10, 50, 100]</code>으로 설정하였을 경우, <code class=\"highlighter-rouge\">목록의 순서</code>로 증감</li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 수치 조정 기입창이 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n\n<p><a id=\"reference-4\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">repeatdelay=100</code> 일 경우, <strong>누르고 있기 시작한 0.1초 후</strong>에 <code class=\"highlighter-rouge\">command</code>가 실행됨</li>\n</ul>\n\n<p><a id=\"reference-5\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">repeatdelay=1000</code>, <code class=\"highlighter-rouge\">repeatinterval=100</code> 일 경우, <strong>1초 후에 command가 실행되며 0.1초마다 버튼을 뗄 때까지</strong> <code class=\"highlighter-rouge\">command</code>가 계속 실행됨</li>\n</ul>\n\n<p><a id=\"reference-6\"></a></p>\n\n<ul>\n  <li>\n    <p>validate 파라미터</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">none</code> : 수치 조정 기입창의 유효성 검사 실행하지 않음</li>\n      <li><code class=\"highlighter-rouge\">focus</code> : 수치 조정 기입창이 포커스를 받거나 잃을 때 validateCommand 실행</li>\n      <li><code class=\"highlighter-rouge\">focusin</code> : 수치 조정 기입창이 포커스를 받을 때 validateCommand 실행</li>\n      <li><code class=\"highlighter-rouge\">focusout</code> : 수치 조정 기입창이 포커스를 잃을 때 validateCommand 실행</li>\n      <li><code class=\"highlighter-rouge\">key</code> : 수치 조정 기입창이 수정될 경우 validateCommand 실행</li>\n      <li><code class=\"highlighter-rouge\">all</code> : 수치 조정 기입창의 모든 validate에 대해 validateCommand 실행</li>\n    </ul>\n  </li>\n</ul>\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 24강 – Toplevel",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-24/",
      "date"     : "2018-06-04 00:00:00 +0900",
  "content"   : "<h3 id=\"toplevel-외부-윈도우\">Toplevel (외부 윈도우)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">Toplevel</code>을 이용하여 <strong>다른 위젯들을 포함</strong>하는 <code class=\"highlighter-rouge\">외부 윈도우</code>를 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"toplevel-사용\">Toplevel 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">menubar</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menu</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n\n<span class=\"n\">menu_1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menu</span><span class=\"p\">(</span><span class=\"n\">menubar</span><span class=\"p\">,</span> <span class=\"n\">tearoff</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 1-1\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 1-2\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_separator</span><span class=\"p\">()</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 1-3\"</span><span class=\"p\">)</span>\n<span class=\"n\">menubar</span><span class=\"o\">.</span><span class=\"n\">add_cascade</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"상위 메뉴 1\"</span><span class=\"p\">,</span> <span class=\"n\">menu</span><span class=\"o\">=</span><span class=\"n\">menu_1</span><span class=\"p\">)</span>\n\n<span class=\"n\">toplevel</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Toplevel</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">menu</span><span class=\"o\">=</span><span class=\"n\">menubar</span><span class=\"p\">)</span>\n<span class=\"n\">toplevel</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"320x200+820+100\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">toplevel</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">menubar</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menu</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n\n<span class=\"n\">menu_1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menu</span><span class=\"p\">(</span><span class=\"n\">menubar</span><span class=\"p\">,</span> <span class=\"n\">tearoff</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 1-1\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 1-2\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_separator</span><span class=\"p\">()</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 1-3\"</span><span class=\"p\">)</span>\n<span class=\"n\">menubar</span><span class=\"o\">.</span><span class=\"n\">add_cascade</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"상위 메뉴 1\"</span><span class=\"p\">,</span> <span class=\"n\">menu</span><span class=\"o\">=</span><span class=\"n\">menu_1</span><span class=\"p\">)</span>\n\n<span class=\"n\">toplevel</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Toplevel</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">menu</span><span class=\"o\">=</span><span class=\"n\">menubar</span><span class=\"p\">)</span>\n<span class=\"n\">toplevel</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"320x200+820+100\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">toplevel</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.Toplevel(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">외부 윈도우의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">외부 윈도우의 속성</code>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">메인 윈도우 창</code>에도 동일하게 적용할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"toplevel-method\">Toplevel Method###</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">title(“제목”)</td>\n      <td style=\"text-align: center\">외부 윈도우 창의 제목 설정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">resizable(너비, 높이)</td>\n      <td style=\"text-align: center\">외부 윈도우 창의 너비, 높이 설정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">maxsize(너비, 높이)</td>\n      <td style=\"text-align: center\">외부 윈도우 창의 최대 너비, 최대 높이 설정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">minsize(너비, 높이)</td>\n      <td style=\"text-align: center\">외부 윈도우 창의 최소 너비, 최소 높이 설정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">aspect(n1, d1, n2, d2)</td>\n      <td style=\"text-align: center\">외부 윈도우 창의 너비, 높이 비율 제한 (n1/d1, n2/d2)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">state()</td>\n      <td style=\"text-align: center\">외부 윈도우 창의 상태 반환 (normal, iconic, withdrawn)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">iconify()</td>\n      <td style=\"text-align: center\">외부 윈도우 창을 아이콘으로 변경</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">withdraw()</td>\n      <td style=\"text-align: center\">외부 윈도우 창을 화면에서 제거</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">deiconify()</td>\n      <td style=\"text-align: center\">외부 윈도우 창을 복원</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">overrideredirect(Boolean)</td>\n      <td style=\"text-align: center\">외부 윈도우 창의 상태 표시줄 유/무</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">frame()</td>\n      <td style=\"text-align: center\">외부 윈도우 창의 고유 식별자 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">lift()</td>\n      <td style=\"text-align: center\">윈도우 겹침 순서를 맨 위로 이동</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">lower()</td>\n      <td style=\"text-align: center\">윈도우 겹침 순서를 맨 아래로 이동</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">transient(윈도우)</td>\n      <td style=\"text-align: center\">지정된 윈도우 창에 대해 임시 창으로 전환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">sizefrom(컨트롤러)</td>\n      <td style=\"text-align: center\">크기 컨트롤러 설정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">positionfrom(컨트롤러)</td>\n      <td style=\"text-align: center\">위치 컨트롤러 설정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">group(윈도우)</td>\n      <td style=\"text-align: center\">관리 그룹에 윈도우 창 추가</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">protocol(이름, 함수)</td>\n      <td style=\"text-align: center\">호출될 함수를 콜백으로 등록</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"toplevel-parameter\">Toplevel Parameter</h3>\n<hr />\n\n<h5 id=\"외부-윈도우-형태-설정\">외부 윈도우 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">외부 윈도우의 너비</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">외부 윈도우의 높이</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">외부 윈도우의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">borderwidth=bd</td>\n      <td style=\"text-align: center\">외부 윈도우의 테두리 두께</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">외부 윈도우의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">padx</td>\n      <td style=\"text-align: center\">외부 윈도우의 테두리와 내용의 가로 여백</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">pady</td>\n      <td style=\"text-align: center\">외부 윈도우의 테두리와 내용의 세로 여백</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"외부-윈도우-형식-설정\">외부 윈도우 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">외부 윈도우의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">class_</td>\n      <td style=\"text-align: center\">클래스 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">visual</td>\n      <td style=\"text-align: center\">시각적 정보 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">colormap</td>\n      <td style=\"text-align: center\"> 256 색상을 지정하는 색상 맵 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">new</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"외부-윈도우-하이라이트-설정\">외부 윈도우 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">외부 윈도우가 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">외부 윈도우가 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">외부 윈도우가 선택되었을 때 두께 <a href=\"#reference-3\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"외부-윈도우-동작-설정\">외부 윈도우 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">container </td>\n      <td style=\"text-align: center\"><a href=\"#reference-4\">응용 프로그램이 포함될 컨테이너로 사용</a></td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">menu</td>\n      <td style=\"text-align: center\">외부 윈도우에 메뉴 부착</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">Menu 위젯</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>내부에 위젯이 존재할 경우, <code class=\"highlighter-rouge\">width</code>와 <code class=\"highlighter-rouge\">height</code> 설정을 무시하고 <code class=\"highlighter-rouge\">크기 자동 조절</code></li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 외부 윈도우가이 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n\n<p><a id=\"reference-4\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">container</code>를 <code class=\"highlighter-rouge\">True</code>로 설정하였을 경우, 외부 윈도우의 내부에 <code class=\"highlighter-rouge\">위젯</code>이 포함되어 있지 않아야 함</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 23강 – Bind",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-23/",
      "date"     : "2018-06-03 00:00:00 +0900",
  "content"   : "<h3 id=\"bind-이벤트-실행\">Bind (이벤트 실행)</h3>\n<hr />\n\n<p><code class=\"highlighter-rouge\">Bind</code>를 이용하여 위젯들의 <code class=\"highlighter-rouge\">이벤트</code>와 실행할 <code class=\"highlighter-rouge\">함수</code>를 설정할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"bind-사용\">Bind 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">drawing</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">width</span><span class=\"o\">&gt;</span><span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">x1</span><span class=\"o\">=</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"mi\">1</span>\n        <span class=\"n\">y1</span><span class=\"o\">=</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"o\">-</span><span class=\"mi\">1</span>\n        <span class=\"n\">x2</span><span class=\"o\">=</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">1</span>\n        <span class=\"n\">y2</span><span class=\"o\">=</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"o\">+</span><span class=\"mi\">1</span>\n        <span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">create_oval</span><span class=\"p\">(</span><span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">y1</span><span class=\"p\">,</span> <span class=\"n\">x2</span><span class=\"p\">,</span> <span class=\"n\">y2</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"blue\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">scroll</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"k\">global</span> <span class=\"n\">width</span>\n    <span class=\"k\">if</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">delta</span><span class=\"o\">==</span><span class=\"mi\">120</span><span class=\"p\">:</span>\n        <span class=\"n\">width</span><span class=\"o\">+=</span><span class=\"mi\">1</span>\n    <span class=\"k\">if</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">delta</span><span class=\"o\">==-</span><span class=\"mi\">120</span><span class=\"p\">:</span>\n        <span class=\"n\">width</span><span class=\"o\">-=</span><span class=\"mi\">1</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">))</span>\n\n<span class=\"n\">canvas</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Canvas</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"solid\"</span><span class=\"p\">,</span> <span class=\"n\">bd</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">expand</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"both\"</span><span class=\"p\">)</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"s\">\"&lt;B1-Motion&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">drawing</span><span class=\"p\">)</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"s\">\"&lt;MouseWheel&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">scroll</span><span class=\"p\">)</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">))</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">drawing</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">width</span><span class=\"o\">&gt;</span><span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">x1</span><span class=\"o\">=</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"mi\">1</span>\n        <span class=\"n\">y1</span><span class=\"o\">=</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"o\">-</span><span class=\"mi\">1</span>\n        <span class=\"n\">x2</span><span class=\"o\">=</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">1</span>\n        <span class=\"n\">y2</span><span class=\"o\">=</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"o\">+</span><span class=\"mi\">1</span>\n        <span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">create_oval</span><span class=\"p\">(</span><span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">y1</span><span class=\"p\">,</span> <span class=\"n\">x2</span><span class=\"p\">,</span> <span class=\"n\">y2</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"blue\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">scroll</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"k\">global</span> <span class=\"n\">width</span>\n    <span class=\"k\">if</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">delta</span><span class=\"o\">==</span><span class=\"mi\">120</span><span class=\"p\">:</span>\n        <span class=\"n\">width</span><span class=\"o\">+=</span><span class=\"mi\">1</span>\n    <span class=\"k\">if</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">delta</span><span class=\"o\">==-</span><span class=\"mi\">120</span><span class=\"p\">:</span>\n        <span class=\"n\">width</span><span class=\"o\">-=</span><span class=\"mi\">1</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">))</span>\n\n<span class=\"n\">canvas</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Canvas</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"solid\"</span><span class=\"p\">,</span> <span class=\"n\">bd</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">expand</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"both\"</span><span class=\"p\">)</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"s\">\"&lt;B1-Motion&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">drawing</span><span class=\"p\">)</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"s\">\"&lt;MouseWheel&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">scroll</span><span class=\"p\">)</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">))</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">위젯.Bind(\"이벤트\", 함수)</code>를 사용하여 <code class=\"highlighter-rouge\">위젯</code>의 <code class=\"highlighter-rouge\">이벤트</code>가 작동할 때 실행할 <code class=\"highlighter-rouge\">함수</code>를 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">Bind</code>를 <code class=\"highlighter-rouge\">중복</code>해서 사용하여도 <code class=\"highlighter-rouge\">모두 적용</code>됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">event.delta</code>를 이용하여 <code class=\"highlighter-rouge\">마우스 휠</code>의 <code class=\"highlighter-rouge\">delta</code>값을 확인할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">event.delta</code>의 값이 <code class=\"highlighter-rouge\">120</code>일 경우 <code class=\"highlighter-rouge\">업 스크롤</code>이며, <code class=\"highlighter-rouge\">-120</code>일 경우 <code class=\"highlighter-rouge\">다운 스크롤</code>입니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"bind-event\">Bind Event</h3>\n<hr />\n\n<h5 id=\"button\">Button</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">&lt;Button-1&gt;</td>\n      <td style=\"text-align: center\">마우스 왼쪽 버튼을 누를 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Button-2&gt;</td>\n      <td style=\"text-align: center\">마우스 휠 버튼을 누를 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Button-3&gt;</td>\n      <td style=\"text-align: center\">마우스 오른쪽 버튼을 누를 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Button-4&gt;</td>\n      <td style=\"text-align: center\">스크롤 업</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Button-5&gt;</td>\n      <td style=\"text-align: center\">스크롤 다운</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;MouseWheel&gt;</td>\n      <td style=\"text-align: center\">마우스 휠 이동</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"motion\">Motion</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">&lt;B1-Motion&gt;</td>\n      <td style=\"text-align: center\">마우스 왼쪽 버튼을 누르면서 움직일 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;B2-Motion&gt;</td>\n      <td style=\"text-align: center\">마우스 휠 버튼을 누르면서 움직일 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;B3-Motion&gt;</td>\n      <td style=\"text-align: center\">마우스 오른쪽 버튼을 누르면서 움직일 때</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"release\">Release</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">&lt;ButtonRelease-1&gt;</td>\n      <td style=\"text-align: center\">마우스 왼쪽 버튼을 뗄 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;ButtonRelease-2&gt;</td>\n      <td style=\"text-align: center\">마우스 휠 버튼을 뗄 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;ButtonRelease-3&gt;</td>\n      <td style=\"text-align: center\">마우스 오른쪽 버튼을 뗄 때</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"double-click\">Double Click</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">&lt;Double-Button-1&gt;</td>\n      <td style=\"text-align: center\">마우스 왼쪽 버튼을 더블 클릭할 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Double-Button-2&gt;</td>\n      <td style=\"text-align: center\">마우스 휠 버튼을 더블 클릭할 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Double-Button-3&gt;</td>\n      <td style=\"text-align: center\">마우스 오른쪽 버튼을 더블 클릭할 때</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"widget-operation\">Widget Operation</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">&lt;Enter&gt;</td>\n      <td style=\"text-align: center\">위젯 안으로 마우스 포인터가 들어왓을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Leave&gt;</td>\n      <td style=\"text-align: center\">위젯 밖으로 마우스 포인터가 나갔을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;FocusIn&gt;</td>\n      <td style=\"text-align: center\">위젯 안으로 Tab 키를 이용하여 들어왔을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;FocusOut&gt;</td>\n      <td style=\"text-align: center\">위젯 밖으로 Tab 키를 이용하여 나갔을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Configure&gt;</td>\n      <td style=\"text-align: center\">위젯의 모양이 수정되었을 때</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"key-input\">Key Input</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">&lt;Key&gt;</td>\n      <td style=\"text-align: center\">특정 키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Return&gt;</td>\n      <td style=\"text-align: center\">Enter 키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Cancel&gt;</td>\n      <td style=\"text-align: center\">Break 키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Pause&gt;</td>\n      <td style=\"text-align: center\">Pause 키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Backspace&gt;</td>\n      <td style=\"text-align: center\">백스페이스 키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Caps_Lock&gt;</td>\n      <td style=\"text-align: center\">캡스 락 키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Escape&gt;</td>\n      <td style=\"text-align: center\">이스케이프 키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Home&gt;</td>\n      <td style=\"text-align: center\">Home 키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;End&gt;</td>\n      <td style=\"text-align: center\">End 키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Print&gt;</td>\n      <td style=\"text-align: center\">Print 키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Insert&gt;</td>\n      <td style=\"text-align: center\">Insert 키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Delete&gt;</td>\n      <td style=\"text-align: center\">Delete 키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Prior&gt;</td>\n      <td style=\"text-align: center\">Page UP 키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Up&gt;</td>\n      <td style=\"text-align: center\">윗쪽 방향키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Down&gt;</td>\n      <td style=\"text-align: center\">아랫쪽 방향키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Right&gt;</td>\n      <td style=\"text-align: center\">오른쪽 방향키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Left&gt;</td>\n      <td style=\"text-align: center\">왼쪽 방향키가 입력되었을 때</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">&lt;Key&gt;</code> 이벤트 입력 시, <code class=\"highlighter-rouge\">&lt;s&gt;</code>, <code class=\"highlighter-rouge\">&lt;0&gt;</code>, <code class=\"highlighter-rouge\">&lt;F1&gt;</code>, <code class=\"highlighter-rouge\">&lt;F4&gt;</code> 등 특정 문자가 입력되었을 때도 가능, <code class=\"highlighter-rouge\">공백</code>은 <strong>제외</strong></li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"assistant-key-input\">Assistant Key Input</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">&lt;Shift-<code class=\"highlighter-rouge\">Key</code>&gt;</td>\n      <td style=\"text-align: center\">Shift + 특정 키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Contrl-<code class=\"highlighter-rouge\">Key</code>&gt;</td>\n      <td style=\"text-align: center\">Ctrl + 특정 키가 입력되었을 때</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">&lt;Alt-<code class=\"highlighter-rouge\">Key</code>&gt;</td>\n      <td style=\"text-align: center\">Alt + 특정 키가 입력되었을 때</td>\n    </tr>\n  </tbody>\n</table>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 22강 – PhotoImage",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-22/",
      "date"     : "2018-06-02 00:00:00 +0900",
  "content"   : "<h3 id=\"photoimage-이미지\">PhotoImage (이미지)</h3>\n<hr />\n\n<p><code class=\"highlighter-rouge\">PhotoImage</code>를 이용하여 위젯들의 공간에 <code class=\"highlighter-rouge\">이미지</code>를 설정할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"photoimage-사용\">PhotoImage 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">image</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">PhotoImage</span><span class=\"p\">(</span><span class=\"nb\">file</span><span class=\"o\">=</span><span class=\"s\">\"a.png\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">image</span><span class=\"o\">=</span><span class=\"n\">image</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">image</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">PhotoImage</span><span class=\"p\">(</span><span class=\"nb\">file</span><span class=\"o\">=</span><span class=\"s\">\"a.png\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">image</span><span class=\"o\">=</span><span class=\"n\">image</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.PhotoImage(경로)</code>을 사용하여 <code class=\"highlighter-rouge\">위젯</code>에 표시할 <code class=\"highlighter-rouge\">이미지</code>의 경로를 설정할 수 있습니다.</p>\n\n<p>글꼴을 적용할 <code class=\"highlighter-rouge\">위젯의 image 파라미터</code>에 사용합니다.</p>\n\n<p>기본 경로는 현재 사용하고 있는 <code class=\"highlighter-rouge\">프로젝트의 위치</code>가 기본 경로입니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 프로젝트가 저장된 위치와 이미지의 위치가 <code class=\"highlighter-rouge\">동일</code>하다면 <strong>이미지 파일의 이름만 입력</strong></li>\n</ul>\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 21강 – Font",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-21/",
      "date"     : "2018-06-02 00:00:00 +0900",
  "content"   : "<h3 id=\"font-글꼴\">Font (글꼴)</h3>\n<hr />\n\n<p><code class=\"highlighter-rouge\">Font</code>를 이용하여 위젯들의 문자열에 <code class=\"highlighter-rouge\">글꼴</code>을 설정할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"font-사용\">Font 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tkinter.font</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">font</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">font</span><span class=\"o\">.</span><span class=\"n\">Font</span><span class=\"p\">(</span><span class=\"n\">family</span><span class=\"o\">=</span><span class=\"s\">\"맑은 고딕\"</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">slant</span><span class=\"o\">=</span><span class=\"s\">\"italic\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"파이썬 3.6\"</span><span class=\"p\">,</span> <span class=\"n\">font</span><span class=\"o\">=</span><span class=\"n\">font</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter.font</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">font</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">font</span><span class=\"o\">.</span><span class=\"n\">Font</span><span class=\"p\">(</span><span class=\"n\">family</span><span class=\"o\">=</span><span class=\"s\">\"맑은 고딕\"</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">slant</span><span class=\"o\">=</span><span class=\"s\">\"italic\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"파이썬 3.6\"</span><span class=\"p\">,</span> <span class=\"n\">font</span><span class=\"o\">=</span><span class=\"n\">font</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.font.Font(파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 <code class=\"highlighter-rouge\">위젯</code>에 표시할 <code class=\"highlighter-rouge\">글꼴</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">글꼴</code>를 설정합니다.</p>\n\n<p>글꼴을 적용할 <code class=\"highlighter-rouge\">위젯의 font 파라미터</code>에 사용합니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"font-parameter\">Font Parameter</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">family</td>\n      <td style=\"text-align: center\">텍스트의 글꼴</td>\n      <td style=\"text-align: center\">TkDefaultFont</td>\n      <td style=\"text-align: center\">글꼴 이름</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">size</td>\n      <td style=\"text-align: center\">텍스트의 글꼴 크기</td>\n      <td style=\"text-align: center\">16</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">weight</td>\n      <td style=\"text-align: center\">텍스트의 진하게</td>\n      <td style=\"text-align: center\">normal</td>\n      <td style=\"text-align: center\">normal, bold</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">slant</td>\n      <td style=\"text-align: center\">텍스트의 기울임</td>\n      <td style=\"text-align: center\">roman</td>\n      <td style=\"text-align: center\">roamn, italic</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">underline</td>\n      <td style=\"text-align: center\">텍스트의 밑줄</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">overstrike</td>\n      <td style=\"text-align: center\">텍스트의 취소선</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 20강 – PanedWindow",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-20/",
      "date"     : "2018-06-01 00:00:00 +0900",
  "content"   : "<h3 id=\"panedwindow-내부-윈도우\">PanedWindow (내부 윈도우)</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/tkinter/ch20/1.png\"><img src=\"/assets/images/Python/tkinter/ch20/1.png\" alt=\"1\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">PanedWindow</code>을 이용하여 <strong>다른 위젯들을 포함</strong>하고 <strong>구역을 나눌 수 있는</strong> <code class=\"highlighter-rouge\">내부 윈도우</code>를 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"panedwindow-사용\">PanedWindow 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">panedwindow1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">PanedWindow</span><span class=\"p\">(</span><span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"raised\"</span><span class=\"p\">,</span> <span class=\"n\">bd</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">panedwindow1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">expand</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n \n<span class=\"n\">left</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">panedwindow1</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"내부윈도우-1 (좌측)\"</span><span class=\"p\">)</span>\n<span class=\"n\">panedwindow1</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"p\">)</span>\n\n<span class=\"n\">panedwindow2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">PanedWindow</span><span class=\"p\">(</span><span class=\"n\">panedwindow1</span><span class=\"p\">,</span> <span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s\">\"vertical\"</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"groove\"</span><span class=\"p\">,</span> <span class=\"n\">bd</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">panedwindow1</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">panedwindow2</span><span class=\"p\">)</span>\n\n<span class=\"n\">right</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">panedwindow1</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"내부윈도우-2 (우측)\"</span><span class=\"p\">)</span>\n<span class=\"n\">panedwindow1</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">right</span><span class=\"p\">)</span>\n\n<span class=\"n\">top</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">panedwindow2</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"내부윈도우-3 (상단)\"</span><span class=\"p\">)</span>\n<span class=\"n\">panedwindow2</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">top</span><span class=\"p\">)</span>\n\n<span class=\"n\">bottom</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">panedwindow2</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"내부윈도우-4 (하단)\"</span><span class=\"p\">)</span>\n<span class=\"n\">panedwindow2</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">bottom</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">panedwindow1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">PanedWindow</span><span class=\"p\">(</span><span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"raised\"</span><span class=\"p\">,</span> <span class=\"n\">bd</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">panedwindow1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">expand</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n \n<span class=\"n\">left</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">panedwindow1</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"내부윈도우-1 (좌측)\"</span><span class=\"p\">)</span>\n<span class=\"n\">panedwindow1</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"p\">)</span>\n\n<span class=\"n\">panedwindow2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">PanedWindow</span><span class=\"p\">(</span><span class=\"n\">panedwindow1</span><span class=\"p\">,</span> <span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s\">\"vertical\"</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"groove\"</span><span class=\"p\">,</span> <span class=\"n\">bd</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">panedwindow1</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">panedwindow2</span><span class=\"p\">)</span>\n\n<span class=\"n\">right</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">panedwindow1</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"내부윈도우-2 (우측)\"</span><span class=\"p\">)</span>\n<span class=\"n\">panedwindow1</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">right</span><span class=\"p\">)</span>\n\n<span class=\"n\">top</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">panedwindow2</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"내부윈도우-3 (상단)\"</span><span class=\"p\">)</span>\n<span class=\"n\">panedwindow2</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">top</span><span class=\"p\">)</span>\n\n<span class=\"n\">bottom</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">panedwindow2</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"내부윈도우-4 (하단)\"</span><span class=\"p\">)</span>\n<span class=\"n\">panedwindow2</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">bottom</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.PanedWindow(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">내부 윈도우의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">내부 윈도우의 속성</code>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">내부 윈도우의 새시</code>를 이동하여 컨테이너를 움직일 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"panedwindow-method\">PanedWindow Method</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">설명</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">add(위젯, option)</td>\n      <td style=\"text-align: center\">위젯 추가</td>\n      <td style=\"text-align: center\">해당 <code class=\"highlighter-rouge\">위젯</code>을 내부 윈도우에 추가</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>option</p>\n\n    <ul>\n      <li>after : 내부 윈도우의 위젯 순서를 앞에 배치, <code class=\"highlighter-rouge\">panedwindow2.add(top, after=bottom)</code></li>\n      <li>before : 내부 윈도우의 위젯 순서를 뒤에 배치, <code class=\"highlighter-rouge\">panedwindow2.add(bottom, before=top)</code></li>\n      <li>width : 내부 윈도우 자식의 너비</li>\n      <li>height : 내부 윈도우 자식의 높이</li>\n      <li>minsize : 내부 윈도우 새시의 최소 이동 제한 크기</li>\n      <li>sticky : 할당된 공간 내에서의 위치 조정</li>\n      <li>padx : 내부 윈도우의 가로 여백</li>\n      <li>pady : 내부 윈도우의 세로 여백</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 위젯이 <strong>추가된 순서</strong>에 따라 <code class=\"highlighter-rouge\">내부 윈도우</code>에서 위젯의 <strong>배열 순서를 결정</strong></li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"panedwindow-parameter\">PanedWindow Parameter</h3>\n<hr />\n\n<h5 id=\"내부-윈도우-형태-설정\">내부 윈도우 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">내부 윈도우의 너비</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">내부 윈도우의 높이</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">내부 윈도우의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">borderwidth=bd</td>\n      <td style=\"text-align: center\">내부 윈도우의 테두리 두께</td>\n      <td style=\"text-align: center\">2</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">내부 윈도우의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">orient</td>\n      <td style=\"text-align: center\">내부 윈도우의 표시 방향</td>\n      <td style=\"text-align: center\">vertical</td>\n      <td style=\"text-align: center\">vertical, horizontal</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">sashwidth</td>\n      <td style=\"text-align: center\">내부 윈도우 새시의 너비</td>\n      <td style=\"text-align: center\">3</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">sashrelief</td>\n      <td style=\"text-align: center\">내부 윈도우 새시의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">sashpad</td>\n      <td style=\"text-align: center\">내부 윈도우 새시의 여백</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">showhandle</td>\n      <td style=\"text-align: center\">내부 윈도우 새시의 손잡이 표시 유/무</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">handlesize</td>\n      <td style=\"text-align: center\">내부 윈도우 새시의 손잡이 크기</td>\n      <td style=\"text-align: center\">8</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">handlepad</td>\n      <td style=\"text-align: center\">내부 윈도우 새시의 손잡이 위치</td>\n      <td style=\"text-align: center\">8</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">opaqueresize</td>\n      <td style=\"text-align: center\">내부 윈도우 새시의 불투명바 제거 유/무</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"내부-윈도우-형식-설정\">내부 윈도우 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">내부 윈도우의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">sashcursor</td>\n      <td style=\"text-align: center\">내부 윈도우 새시의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">커서 속성</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>미 입력시, <code class=\"highlighter-rouge\">width</code>와 <code class=\"highlighter-rouge\">height</code>를 <code class=\"highlighter-rouge\">자동 조절</code></li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 19강 – LabelFrame",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-19/",
      "date"     : "2018-05-31 00:00:00 +0900",
  "content"   : "<h3 id=\"labelframe-라벨-프레임\">LabelFrame (라벨 프레임)</h3>\n<hr />\n\n<p><code class=\"highlighter-rouge\">LabelFrame</code>을 이용하여 <strong>다른 위젯들을 포함</strong>하고 <code class=\"highlighter-rouge\">캡션</code>이 있는 <code class=\"highlighter-rouge\">라벨 프레임</code>를 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"labelframe-사용\">LabelFrame 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">check</span><span class=\"p\">():</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_1</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span>\n    \n<span class=\"n\">labelframe</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">LabelFrame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"플랫폼 선택\"</span><span class=\"p\">)</span>\n<span class=\"n\">labelframe</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">RadioVariety_1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">StringVar</span><span class=\"p\">()</span>\n<span class=\"n\">RadioVariety_1</span><span class=\"o\">.</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"s\">\"미선택\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">radio1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">labelframe</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"Python\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s\">\"가능\"</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_1</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n<span class=\"n\">radio2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">labelframe</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"C/C++\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s\">\"부분 가능\"</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_1</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio2</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n<span class=\"n\">radio3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">labelframe</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"JSON\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s\">\"불가능\"</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_1</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio3</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">labelframe</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"None\"</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">check</span><span class=\"p\">():</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_1</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span>\n    \n<span class=\"n\">labelframe</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">LabelFrame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"플랫폼 선택\"</span><span class=\"p\">)</span>\n<span class=\"n\">labelframe</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">RadioVariety_1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">StringVar</span><span class=\"p\">()</span>\n<span class=\"n\">RadioVariety_1</span><span class=\"o\">.</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"s\">\"미선택\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">radio1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">labelframe</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"Python\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s\">\"가능\"</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_1</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n<span class=\"n\">radio2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">labelframe</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"C/C++\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s\">\"부분 가능\"</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_1</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio2</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n<span class=\"n\">radio3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">labelframe</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"JSON\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s\">\"불가능\"</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_1</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio3</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">labelframe</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"None\"</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.LabelFrame(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">라벨 프레임의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">라벨 프레임의 속성</code>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">라벨 프레임</code> 안에 <code class=\"highlighter-rouge\">위젯</code>이 포함되어 있지 않을 경우, <strong>표시되지 않습니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"labelframe-parameter\">LabelFrame Parameter</h3>\n<hr />\n\n<h5 id=\"라벨-프레임-텍스트-설정\">라벨 프레임 텍스트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">text</td>\n      <td style=\"text-align: center\">라벨 프레임에 표시할 문자열</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">labelwidget</td>\n      <td style=\"text-align: center\">라벨 프레임에 표시할 위젯</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">labelanchor</td>\n      <td style=\"text-align: center\">라벨 프레임의 문자열 위치 설정</td>\n      <td style=\"text-align: center\">nw</td>\n      <td style=\"text-align: center\">n, e, w, s, ne, nw, se, sw</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"라벨-프레임-형태-설정\">라벨 프레임 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">라벨 프레임의 너비</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">라벨 프레임의 높이</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">라벨 프레임의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">borderwidth=bd</td>\n      <td style=\"text-align: center\">라벨 프레임의 테두리 두께</td>\n      <td style=\"text-align: center\">2</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">라벨 프레임의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">foreground=fg</td>\n      <td style=\"text-align: center\">라벨 프레임의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">padx</td>\n      <td style=\"text-align: center\">라벨 프레임의 테두리와 내용의 가로 여백</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">pady</td>\n      <td style=\"text-align: center\">라벨 프레임의 테두리와 내용의 세로 여백</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"라벨-프레임-형식-설정\">라벨 프레임 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">font</td>\n      <td style=\"text-align: center\">라벨 프레임의 문자열 글꼴 설정</td>\n      <td style=\"text-align: center\">TkDefaultFont</td>\n      <td style=\"text-align: center\">font</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">라벨 프레임의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">class_</td>\n      <td style=\"text-align: center\">클래스 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">visual</td>\n      <td style=\"text-align: center\">시각적 정보 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">colormap</td>\n      <td style=\"text-align: center\"> 256 색상을 지정하는 색상 맵 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">new</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"라벨-프레임-하이라이트-설정\">라벨 프레임 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">라벨 프레임이가 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">라벨 프레임이가 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">라벨 프레임이가 선택되었을 때 두께 <a href=\"#reference-3\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"라벨-프레임-동작-설정\">라벨 프레임 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">container </td>\n      <td style=\"text-align: center\"><a href=\"#reference-4\">응용 프로그램이 포함될 컨테이너로 사용</a></td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>내부에 위젯이 존재할 경우, <code class=\"highlighter-rouge\">width</code>와 <code class=\"highlighter-rouge\">height</code> 설정을 무시하고 <code class=\"highlighter-rouge\">크기 자동 조절</code></li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 라벨 프레임이 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n\n<p><a id=\"reference-4\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">container</code>를 <code class=\"highlighter-rouge\">True</code>로 설정하였을 경우, 라벨 프레임의 내부에 <code class=\"highlighter-rouge\">위젯</code>이 포함되어 있지 않아야 함</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 18강 – Text",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-18/",
      "date"     : "2018-05-29 00:00:00 +0900",
  "content"   : "<h3 id=\"text-텍스트\">Text (텍스트)</h3>\n<hr />\n\n<p><code class=\"highlighter-rouge\"> Text</code>을 이용하여 <code class=\"highlighter-rouge\">여러 줄</code>의 <code class=\"highlighter-rouge\">문자열</code>을 출력하기 위한 <code class=\"highlighter-rouge\">텍스트</code>를 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"text-사용\">Text 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Text</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n\n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">CURRENT</span><span class=\"p\">,</span> <span class=\"s\">\"안녕하세요.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span>\n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"s\">\"current\"</span><span class=\"p\">,</span> <span class=\"s\">\"반습니다.\"</span><span class=\"p\">)</span>\n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mf\">2.1</span><span class=\"p\">,</span> <span class=\"s\">\"갑\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">tag_add</span><span class=\"p\">(</span><span class=\"s\">\"강조\"</span><span class=\"p\">,</span> <span class=\"s\">\"1.0\"</span><span class=\"p\">,</span> <span class=\"s\">\"1.6\"</span><span class=\"p\">)</span>\n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">tag_config</span><span class=\"p\">(</span><span class=\"s\">\"강조\"</span><span class=\"p\">,</span> <span class=\"n\">background</span><span class=\"o\">=</span><span class=\"s\">\"yellow\"</span><span class=\"p\">)</span> \n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">tag_remove</span><span class=\"p\">(</span><span class=\"s\">\"강조\"</span><span class=\"p\">,</span> <span class=\"s\">\"1.1\"</span><span class=\"p\">,</span> <span class=\"s\">\"1.2\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Text</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n\n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">CURRENT</span><span class=\"p\">,</span> <span class=\"s\">\"안녕하세요.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span>\n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"s\">\"current\"</span><span class=\"p\">,</span> <span class=\"s\">\"반습니다.\"</span><span class=\"p\">)</span>\n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mf\">2.1</span><span class=\"p\">,</span> <span class=\"s\">\"갑\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">tag_add</span><span class=\"p\">(</span><span class=\"s\">\"강조\"</span><span class=\"p\">,</span> <span class=\"s\">\"1.0\"</span><span class=\"p\">,</span> <span class=\"s\">\"1.6\"</span><span class=\"p\">)</span>\n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">tag_config</span><span class=\"p\">(</span><span class=\"s\">\"강조\"</span><span class=\"p\">,</span> <span class=\"n\">background</span><span class=\"o\">=</span><span class=\"s\">\"yellow\"</span><span class=\"p\">)</span> \n<span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">tag_remove</span><span class=\"p\">(</span><span class=\"s\">\"강조\"</span><span class=\"p\">,</span> <span class=\"s\">\"1.1\"</span><span class=\"p\">,</span> <span class=\"s\">\"1.2\"</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.Text(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">텍스트의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">텍스트의 속성</code>을 설정합니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"text-method\">Text Method###</h3>\n<hr />\n\n<h5 id=\"텍스트-문자열-메소드\">텍스트 문자열 메소드</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">설명</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">insert(index, “문자열”)</td>\n      <td style=\"text-align: center\">문자열 삽입</td>\n      <td style=\"text-align: center\">해당 <code class=\"highlighter-rouge\">index</code> 위치에 <code class=\"highlighter-rouge\">문자열</code>을 삽입</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">delete(start_index, end_index)</td>\n      <td style=\"text-align: center\">문자열 삭제</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">start_index</code>부터 <code class=\"highlighter-rouge\">end_index</code>까지의 문자열 삭제</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">get(start_index, end_index)</td>\n      <td style=\"text-align: center\">문자열 반환</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">start_index</code>부터 <code class=\"highlighter-rouge\">end_index</code>까지의 문자열 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">index(index)</td>\n      <td style=\"text-align: center\">인덱스 반환</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">index</code>가 음수 일 경우, <code class=\"highlighter-rouge\">1.0</code>으로 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">see(index)</td>\n      <td style=\"text-align: center\">문자열 표시 반환</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">index</code> 위치에 텍스트가 표시되면 <code class=\"highlighter-rouge\">True</code> 반환</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">index</code>는 <code class=\"highlighter-rouge\">y.x</code>를 사용, <code class=\"highlighter-rouge\">y줄, x번째 문자</code>를 의미함 <code class=\"highlighter-rouge\">예) 첫 번째 줄, 첫 번째 문자 = 1.0</code></li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"텍스트-마크-메소드\">텍스트 마크 메소드</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">설명</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">mark_set(mark, index)</td>\n      <td style=\"text-align: center\">마크 위치 설정</td>\n      <td style=\"text-align: center\">해당 마크의 위치 재설정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">mark_unset(mark)</td>\n      <td style=\"text-align: center\">마크 위치 제거</td>\n      <td style=\"text-align: center\">해당 마크의 표시 제거</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">mark_gravity(mark,gravity)</td>\n      <td style=\"text-align: center\">키보드 커서 삽입 위치 변경</td>\n      <td style=\"text-align: center\">해당 마크 사용 시, 좌측 삽입 또는 우측 삽입으로 변경</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">index(mark)</td>\n      <td style=\"text-align: center\">마크 위치 반환</td>\n      <td style=\"text-align: center\">해당 마크 위치 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">mark_names()</td>\n      <td style=\"text-align: center\">모든 마크 반환</td>\n      <td style=\"text-align: center\">텍스트에서 사용된 모든 마크를 반환</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">gravity</code>는 <code class=\"highlighter-rouge\">left</code>(좌측 삽입)와 <code class=\"highlighter-rouge\">right</code>(우측 삽입)로 사용, 기본값은 <code class=\"highlighter-rouge\">right</code>를 사용</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"텍스트-마크\">텍스트 마크</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">텍스트 이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">y.x</code></td>\n      <td style=\"text-align: center\">y 번째 줄 x 번째 문자</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">1.0</code></td>\n      <td style=\"text-align: center\">첫 번째 줄 첫 번째 문자</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">y.0</code></td>\n      <td style=\"text-align: center\">y 번째 줄 첫 번째 문자</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">y.end</code></td>\n      <td style=\"text-align: center\">y 번째 줄 마지막 문자</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tkinter.INSERT</td>\n      <td style=\"text-align: center\">insert</td>\n      <td style=\"text-align: center\">삽입 커서의 위치</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tkinert.CURRENT</td>\n      <td style=\"text-align: center\">current</td>\n      <td style=\"text-align: center\">마우스 포인터에 가장 가까운 문자의 위치</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tkinter.END</td>\n      <td style=\"text-align: center\">end</td>\n      <td style=\"text-align: center\">텍스트의 마지막 문자 위치</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tkinert.SEL_FIRST</td>\n      <td style=\"text-align: center\">sel.firs t</td>\n      <td style=\"text-align: center\">블록처리 되었을 때의 앞 부분</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tkinert.SEL_LAST</td>\n      <td style=\"text-align: center\">sel.last</td>\n      <td style=\"text-align: center\">블록처리 되었을 때의 뒷 부분</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">[마크]</code> linestart</td>\n      <td style=\"text-align: center\">마크에서 앞의 행</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">[마크]</code> lineend</td>\n      <td style=\"text-align: center\">마크에서 뒤의 행</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">[마크]</code> wordstart</td>\n      <td style=\"text-align: center\">마크에서 단어의 앞</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">3.5 wordstart</code>로 마크를 사용할 경우, <code class=\"highlighter-rouge\">3번째 줄 5 번째에 포함된 단어</code>의 앞 부분으로 설정됩니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"텍스트-마크-메소드-1\">텍스트 마크 메소드</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">설명</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">tag_add(tagname, start_index, end_index)</td>\n      <td style=\"text-align: center\">태그 생성</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">start_index</code>부터 <code class=\"highlighter-rouge\">end_index</code>까지의 <code class=\"highlighter-rouge\">tagname</code>을 생성</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tag_remove(tagname, start_index, end_index)</td>\n      <td style=\"text-align: center\">태그 제거</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">start_index</code>부터 <code class=\"highlighter-rouge\">end_index</code>까지의 <code class=\"highlighter-rouge\">tagname</code>의 설정 제거</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tag_delete(tagname)</td>\n      <td style=\"text-align: center\">태그 삭제</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">tagname</code>의 설정 및 선언 삭제</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tag_config(tagname, 파라미터1, 파라미터2, …)</td>\n      <td style=\"text-align: center\">태그 부착</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">tagname</code> 범위 만큼 속성 설정</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"text-parameter\">Text Parameter</h3>\n<hr />\n\n<h5 id=\"텍스트-텍스트-설정\">텍스트 텍스트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">wrap</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">자동 줄 내림 설정 방법</a></td>\n      <td style=\"text-align: center\">char</td>\n      <td style=\"text-align: center\">none, char, word</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tabs</td>\n      <td style=\"text-align: center\">텍스트의 Tab 간격</td>\n      <td style=\"text-align: center\">56</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tabstyle</td>\n      <td style=\"text-align: center\">텍스트의 Tab 간격 형식</td>\n      <td style=\"text-align: center\">tabular</td>\n      <td style=\"text-align: center\">tabular, <a href=\"#reference-2\">wordprocessor</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">startline</td>\n      <td style=\"text-align: center\">텍스트의 데이터 저장소에 저장될 시작 줄</td>\n      <td style=\"text-align: center\">시작 줄</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">endline</td>\n      <td style=\"text-align: center\">텍스트의 데이터 저장소에 저장될 마지막 줄</td>\n      <td style=\"text-align: center\">마지막 줄</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">spacing1</td>\n      <td style=\"text-align: center\">텍스트의 상단 수직 간격</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">spacing2</td>\n      <td style=\"text-align: center\">텍스트의 줄과 줄 사이 간격</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">spacing3</td>\n      <td style=\"text-align: center\">텍스트의 하단 수직 간격</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"텍스트-형태-설정\">텍스트 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">텍스트의 너비</td>\n      <td style=\"text-align: center\">80</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\">텍스트의 높이</td>\n      <td style=\"text-align: center\">24</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">텍스트의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">borderwidth=bd</td>\n      <td style=\"text-align: center\">텍스트의 테두리 두께</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">텍스트의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">foreground=fg</td>\n      <td style=\"text-align: center\">텍스트의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insertwidth</td>\n      <td style=\"text-align: center\">텍스트의 키보드 커서 너비</td>\n      <td style=\"text-align: center\">2</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insertborderwidth</td>\n      <td style=\"text-align: center\">텍스트의 키보드 커서 테두리 두께</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insertbackground</td>\n      <td style=\"text-align: center\">텍스트의 키보드 커서 색상</td>\n      <td style=\"text-align: center\">SystemWindowText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectborderwidth</td>\n      <td style=\"text-align: center\">텍스트의 문자열 블록처리 테두리 두께</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectbackground</td>\n      <td style=\"text-align: center\">텍스트의 문자열 블록처리 배경 색상</td>\n      <td style=\"text-align: center\">SystemHighlightText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectforeground</td>\n      <td style=\"text-align: center\">텍스트의 문자열 블록처리 문자열 색상</td>\n      <td style=\"text-align: center\">SystemHighlightText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">inactiveselectbackground</td>\n      <td style=\"text-align: center\">텍스트의 문자열 블록처리 중 다른 위젯 선택시 블록처리 배경 색상</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">padx</td>\n      <td style=\"text-align: center\">텍스트의 테두리와 내용의 가로 여백</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">pady</td>\n      <td style=\"text-align: center\">텍스트의 테두리와 내용의 세로 여백</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"텍스트-형식-설정\">텍스트 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">font</td>\n      <td style=\"text-align: center\">텍스트의 문자열 글꼴 설정</td>\n      <td style=\"text-align: center\">TkDefaultFont</td>\n      <td style=\"text-align: center\">font</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">텍스트의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-3\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">xscrollcommand</td>\n      <td style=\"text-align: center\">텍스트의 가로스크롤 객체 적용</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">Scrollbar위젯.set</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">yscrollcommand</td>\n      <td style=\"text-align: center\">텍스트의 세로스크롤 객체 적용</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">Scrollbar위젯.set</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">exportselection</td>\n      <td style=\"text-align: center\">텍스트의 선택 항목 여부 설정</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">setgrid</td>\n      <td style=\"text-align: center\">텍스트의 격자 크기 조정 설정</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"텍스트-상태-설정\">텍스트 상태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">state</td>\n      <td style=\"text-align: center\">상태 설정</td>\n      <td style=\"text-align: center\">normal</td>\n      <td style=\"text-align: center\">normal, disabled</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"텍스트-하이라이트-설정\">텍스트 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">텍스트가 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">텍스트가 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">텍스트가 선택되었을 때 두께 <a href=\"#reference-4\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"텍스트-동작-설정\">텍스트 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">blockcursor</td>\n      <td style=\"text-align: center\">텍스트의 키보드 커서를 블록으로 사용</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">undo</td>\n      <td style=\"text-align: center\"><a href=\"#reference-5\">텍스트의 실행 취소 사용 여부</a></td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">maxundo</td>\n      <td style=\"text-align: center\">텍스트의 실행 취소 최대 횟수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">autoseparators</td>\n      <td style=\"text-align: center\"><a href=\"#reference-6\">텍스트의 실행 취소 자동 저장 여부</a></td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>\n    <p>wrap 파라미터</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">none</code> : 줄 내림 하지 않음</li>\n      <li><code class=\"highlighter-rouge\">char</code> : 글자 단위로 줄 내림</li>\n      <li><code class=\"highlighter-rouge\">word</code> : 단어 단위로 줄 내림</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">wordprocessor</code>로 사용할 경우, 워드프로세서 기준 <code class=\"highlighter-rouge\">표준 간격</code>으로 사용함</li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-4\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 텍스트가 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n\n<p><a id=\"reference-5\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">Ctrl + Z</code>를 사용하여 <strong>실행 취소</strong>, <code class=\"highlighter-rouge\">Ctrl + Y</code>를 사용하여 <strong>다시 실행</strong></li>\n</ul>\n\n<p><a id=\"reference-5\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">autoseparators</code>를 <code class=\"highlighter-rouge\">True</code>로 설정하였을 경우, <strong>단 시간 내에 입력된 문자열을 실행 취소할 때</strong> 기록을 매번 저장하지 않아 모두 지워짐</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 17강 – Scale",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-17/",
      "date"     : "2018-05-27 00:00:00 +0900",
  "content"   : "<h3 id=\"scale-수치-조정-바\">Scale (수치 조정 바)</h3>\n<hr />\n\n<p><code class=\"highlighter-rouge\">Scale</code>을 이용하여 <code class=\"highlighter-rouge\">값</code>을 <code class=\"highlighter-rouge\">설정</code>하기 위한 <code class=\"highlighter-rouge\">수치 조정 바</code>를 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"scale-사용\">Scale 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">select</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s\">\"값 : \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">scale</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n<span class=\"n\">var</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">IntVar</span><span class=\"p\">()</span>\n\n<span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Scale</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">var</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">select</span><span class=\"p\">,</span> <span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s\">\"horizontal\"</span><span class=\"p\">,</span> <span class=\"n\">showvalue</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"n\">tickinterval</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">to</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">)</span>\n<span class=\"n\">scale</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"값 : 0\"</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">select</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s\">\"값 : \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">scale</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n<span class=\"n\">var</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">IntVar</span><span class=\"p\">()</span>\n\n<span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Scale</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">var</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">select</span><span class=\"p\">,</span> <span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s\">\"horizontal\"</span><span class=\"p\">,</span> <span class=\"n\">showvalue</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"n\">tickinterval</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">to</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">)</span>\n<span class=\"n\">scale</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"값 : 0\"</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter. Scrollbar(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">수치 조정 바의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">수치 조정 바의 속성</code>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">수치 조정 바</code>를 생성 후,  <code class=\"highlighter-rouge\">command</code> 파라미터를 <code class=\"highlighter-rouge\">적용할 함수</code>와 연결합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">scale.get()</code>는 현재 <code class=\"highlighter-rouge\">수치 조정 바</code>에 표시된 값을 가져오며, <code class=\"highlighter-rouge\">var.get()</code>은 <code class=\"highlighter-rouge\">var</code>에 저장된 값을 가져옵니다.</li>\n</ul>\n\n<p><br /></p>\n\n<p><br />\n<br /></p>\n<h3 id=\"scale-method\">Scale Method###</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">설명</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">set()</td>\n      <td style=\"text-align: center\">값 변경</td>\n      <td style=\"text-align: center\">수치 조정 바의 값을 변경</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">get()</td>\n      <td style=\"text-align: center\">값 반환</td>\n      <td style=\"text-align: center\">수치 조정 바의 값을 반환</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"scale-parameter\">Scale Parameter</h3>\n<hr />\n\n<h5 id=\"수치-조정-바-텍스트-설정\">수치 조정 바 텍스트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">label</td>\n      <td style=\"text-align: center\">수치 조정 바에 표시되는 문자</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">문자</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">showvalue</td>\n      <td style=\"text-align: center\">수치 조정 바에 값 표시 유/무</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"수치-조정-바-형태-설정\">수치 조정 바 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">수치 조정 바의 슬라이드 너비</td>\n      <td style=\"text-align: center\">15</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">length</td>\n      <td style=\"text-align: center\">수치 조정 바의 길이</td>\n      <td style=\"text-align: center\">100</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">수치 조정 바의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">borderwidth=bd</td>\n      <td style=\"text-align: center\">수치 조정 바의 테두리 두께</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">수치 조정 바의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">troughcolor</td>\n      <td style=\"text-align: center\">수치 조정 바의 내부 배경 색상</td>\n      <td style=\"text-align: center\">SystemScrollbar</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">orient</td>\n      <td style=\"text-align: center\">수치 조정 바의 표시 방향</td>\n      <td style=\"text-align: center\">vertical</td>\n      <td style=\"text-align: center\">vertical, horizontal</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">sliderlength</td>\n      <td style=\"text-align: center\">수치 조정 바의 슬라이더 길이</td>\n      <td style=\"text-align: center\">30</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">sliderrelief</td>\n      <td style=\"text-align: center\">수치 조정 바의 슬라이더 테두리 모양</td>\n      <td style=\"text-align: center\">raised</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tickinterval</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">수치 조정 바의 수치 값 간격</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"수치-조정-바-형식-설정\">수치 조정 바 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">font</td>\n      <td style=\"text-align: center\">수치 조정 바의 문자열 글꼴 설정</td>\n      <td style=\"text-align: center\">TkDefaultFont</td>\n      <td style=\"text-align: center\">font</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">수치 조정 바의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">digits</td>\n      <td style=\"text-align: center\">수치 조정 바의 숫자 값을 문자열로 변활 할 때 사용할 숫자의 수</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">from_</td>\n      <td style=\"text-align: center\">수치 조정 바의 최솟값</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">to</td>\n      <td style=\"text-align: center\">수치 조정 바의 최댓값</td>\n      <td style=\"text-align: center\">100</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">resolution</td>\n      <td style=\"text-align: center\">수치 조정 바의 간격</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"수치-조정-바-상태-설정\">수치 조정 바 상태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">state</td>\n      <td style=\"text-align: center\">상태 설정</td>\n      <td style=\"text-align: center\">normal</td>\n      <td style=\"text-align: center\">normal, active, disabled</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activebackground</td>\n      <td style=\"text-align: center\">active 상태일 때 수치 조정 바의 슬라이더 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"수치-조정-바-하이라이트-설정\">수치 조정 바 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">수치 조정 바가 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">수치 조정 바가 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">수치 조정 바가 선택되었을 때 두께 <a href=\"#reference-3\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">2</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"수치-조정-바-동작-설정\">수치 조정 바 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">command</td>\n      <td style=\"text-align: center\">수치 조정 바가 active 상태일 때 실행하는 메소드(함수)</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">메소드, 함수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">variable</td>\n      <td style=\"text-align: center\">수치 조정 바의 상태를 저장할 제어 변수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">tkinter.IntVar(), tkinter.StringVar()</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">bigincrement</td>\n      <td style=\"text-align: center\"><a href=\"#reference-4\">수치 조정 바가 Tab된 상태에서 Ctrl 키를 이용하여 한 번에 이동할 양</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">repeatdelay</td>\n      <td style=\"text-align: center\"><a href=\"#reference-5\">버튼이 눌러진 상태에서 command 실행까지의 대기 시간</a></td>\n      <td style=\"text-align: center\">300</td>\n      <td style=\"text-align: center\">상수(ms)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">repeatinterval</td>\n      <td style=\"text-align: center\"><a href=\"#reference-6\">버튼이 눌러진 상태에서 command 실행의 반복 시간</a></td>\n      <td style=\"text-align: center\">100</td>\n      <td style=\"text-align: center\">상수(ms)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">tickinterval</code>를 설정하였을 경우, 수치 조정 바에 <code class=\"highlighter-rouge\">tickinterval</code> 값 마다 수치가 표시됨</li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 수치 조정 바가 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n\n<p><a id=\"reference-4\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">takefocus</code>가 <code class=\"highlighter-rouge\">True</code>로 설정한 뒤, <code class=\"highlighter-rouge\">Tab</code>이 된 상태에서 <code class=\"highlighter-rouge\">Ctrl</code>키와 <code class=\"highlighter-rouge\">좌우 방향키</code>를 동시에 눌러 <code class=\"highlighter-rouge\">bigincrement</code> 의 값 만큼 한 번에 이동됨</li>\n</ul>\n\n<p><a id=\"reference-5\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">repeatdelay=100</code> 일 경우, <strong>누르고 있기 시작한 0.1초 후</strong>에 <code class=\"highlighter-rouge\">command</code>가 실행됨</li>\n</ul>\n\n<p><a id=\"reference-6\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">repeatdelay=1000</code>, <code class=\"highlighter-rouge\">repeatinterval=100</code> 일 경우, <strong>1초 후에 command가 실행되며 0.1초마다 버튼을 뗄 때까지</strong> <code class=\"highlighter-rouge\">command</code>가 계속 실행됨</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 16강 – Scrollbar",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-16/",
      "date"     : "2018-05-26 00:00:00 +0900",
  "content"   : "<h3 id=\"scrollbar-스크롤바\">Scrollbar (스크롤바)</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/tkinter/ch16/1.png\"><img src=\"/assets/images/Python/tkinter/ch16/1.png\" alt=\"1\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">Scrollbar</code>을 이용하여 <code class=\"highlighter-rouge\">위젯</code>에 <code class=\"highlighter-rouge\">스크롤</code>을 적용하기 위한 <code class=\"highlighter-rouge\">스크롤바</code>을 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"scrollbar-사용\">Scrollbar 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">frame</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n\n<span class=\"n\">scrollbar</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Scrollbar</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">)</span>\n<span class=\"n\">scrollbar</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"right\"</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"y\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">listbox</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Listbox</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"n\">yscrollcommand</span> <span class=\"o\">=</span> <span class=\"n\">scrollbar</span><span class=\"o\">.</span><span class=\"nb\">set</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1001</span><span class=\"p\">):</span>\n   <span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s\">\"/1000\"</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"left\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">scrollbar</span><span class=\"p\">[</span><span class=\"s\">\"command\"</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">yview</span>\n\n<span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">frame</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n\n<span class=\"n\">scrollbar</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Scrollbar</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">)</span>\n<span class=\"n\">scrollbar</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"right\"</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"y\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">listbox</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Listbox</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"n\">yscrollcommand</span> <span class=\"o\">=</span> <span class=\"n\">scrollbar</span><span class=\"o\">.</span><span class=\"nb\">set</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1001</span><span class=\"p\">):</span>\n   <span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s\">\"/1000\"</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"left\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">scrollbar</span><span class=\"p\">[</span><span class=\"s\">\"command\"</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">yview</span>\n\n<span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter. Scrollbar(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">스크롤바의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">스크롤바의 속성</code>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">스크롤바</code>를 생성 후, <code class=\"highlighter-rouge\">스크롤바의 객체</code>를 생성하여 <code class=\"highlighter-rouge\">위젯과 위젯을 연결</code>합니다.</p>\n\n<p>이 후, <code class=\"highlighter-rouge\">command</code> 파라미터를 <code class=\"highlighter-rouge\">적용할 위젯</code>과 연결합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">스크롤바</code>와 <code class=\"highlighter-rouge\">연결된 위젯</code>은 각각의 객체이므로 <code class=\"highlighter-rouge\">프레임</code>으로 <strong>연결하여 사용하는 것을 권장합니다.</strong>\n<br /></li>\n</ul>\n\n<p><br />\n<br /></p>\n<h3 id=\"scrollbar-method\">Scrollbar Method###</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">설명</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">set</td>\n      <td style=\"text-align: center\">스크롤 부착</td>\n      <td style=\"text-align: center\">위젯에 스크롤바 적용</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">set(좌측상단, 우측하단)</td>\n      <td style=\"text-align: center\">스크롤 부착</td>\n      <td style=\"text-align: center\">위젯에 스크롤바의 좌측상단 좌표와 우측하단 좌표에 고정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">get()</td>\n      <td style=\"text-align: center\">(좌측상단, 우측하단) 반환</td>\n      <td style=\"text-align: center\">현재 스크롤바의 좌측상단 좌표와 우측하단 좌표를 반환</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"scrollbar-parameter\">Scrollbar Parameter</h3>\n<hr />\n\n<h5 id=\"스크롤바-형태-설정\">스크롤바 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">스크롤바의 너비</td>\n      <td style=\"text-align: center\">17</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">스크롤바의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">borderwidth=bd</td>\n      <td style=\"text-align: center\">스크롤바의 테두리 두께</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">          스크롤바의 배경 색상        </td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">                   color                  </td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">elementborderwidth</td>\n      <td style=\"text-align: center\">          스크롤 요소의 테두리 두께</td>\n      <td style=\"text-align: center\">-1</td>\n      <td style=\"text-align: center\">    상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">orient</td>\n      <td style=\"text-align: center\">          스크롤의 표시 방향</td>\n      <td style=\"text-align: center\">vertical</td>\n      <td style=\"text-align: center\">  vertical, horizontal</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"스크롤바-형식-설정\">스크롤바 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">스크롤바의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">커서 속성</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"스크롤바-상태-설정\">스크롤바 상태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">activebackground</td>\n      <td style=\"text-align: center\">active 상태일 때 스크롤바의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activerelief </td>\n      <td style=\"text-align: center\">active 상태일 때 스크롤바의 테두리 모양</td>\n      <td style=\"text-align: center\">raised</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"스크롤바-하이라이트-설정\">스크롤바 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">스크롤바가 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">스크롤바가 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">스크롤바가 선택되었을 때 두께 <a href=\"#reference-2\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"스크롤바-동작-설정\">스크롤바 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">command</td>\n      <td style=\"text-align: center\">스크롤이 active 상태일 때 실행하는 메소드(함수)</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">메소드, 함수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">jump</td>\n      <td style=\"text-align: center\">스크롤이 동작할때 마다 command callback 호출</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">repeatdelay</td>\n      <td style=\"text-align: center\"><a href=\"#reference-3\">버튼이 눌러진 상태에서 command 실행까지의 대기 시간</a></td>\n      <td style=\"text-align: center\">300</td>\n      <td style=\"text-align: center\">상수(ms)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">repeatinterval</td>\n      <td style=\"text-align: center\"><a href=\"#reference-4\">버튼이 눌러진 상태에서 command 실행의 반복 시간</a></td>\n      <td style=\"text-align: center\">100</td>\n      <td style=\"text-align: center\">상수(ms)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 스크롤바가 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">repeatdelay=100</code> 일 경우, <strong>누르고 있기 시작한 0.1초 후</strong>에 <code class=\"highlighter-rouge\">command</code>가 실행됨</li>\n</ul>\n\n<p><a id=\"reference-4\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">repeatdelay=1000</code>, <code class=\"highlighter-rouge\">repeatinterval=100</code> 일 경우, <strong>1초 후에 command가 실행되며 0.1초마다 버튼을 뗄 때까지</strong> <code class=\"highlighter-rouge\">command</code>가 계속 실행됨</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 15강 – Canvas",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-15/",
      "date"     : "2018-05-25 00:00:00 +0900",
  "content"   : "<h3 id=\"canvas-캔버스\">Canvas (캔버스)</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/tkinter/ch15/1.png\"><img src=\"/assets/images/Python/tkinter/ch15/1.png\" alt=\"1\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">Canvas</code>을 이용하여 <code class=\"highlighter-rouge\">선</code>, <code class=\"highlighter-rouge\">다각형</code>, <code class=\"highlighter-rouge\">원</code>등을 그리기 위한 <code class=\"highlighter-rouge\">캔버스</code>을 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"canvas-사용\">Canvas 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">canvas</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Canvas</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"solid\"</span><span class=\"p\">,</span> <span class=\"n\">bd</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">line</span><span class=\"o\">=</span><span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">create_line</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">130</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">140</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"red\"</span><span class=\"p\">)</span>\n<span class=\"n\">polygon</span><span class=\"o\">=</span><span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">create_polygon</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">170</span><span class=\"p\">,</span> <span class=\"mi\">170</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">170</span><span class=\"p\">,</span> <span class=\"n\">outline</span><span class=\"o\">=</span><span class=\"s\">\"yellow\"</span><span class=\"p\">)</span>\n<span class=\"n\">oval</span><span class=\"o\">=</span><span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">create_oval</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">250</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"blue\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">arc</span><span class=\"o\">=</span><span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">create_arc</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">extent</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">'red'</span><span class=\"p\">)</span>\n\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">canvas</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Canvas</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"solid\"</span><span class=\"p\">,</span> <span class=\"n\">bd</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">line</span><span class=\"o\">=</span><span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">create_line</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">130</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">140</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"red\"</span><span class=\"p\">)</span>\n<span class=\"n\">polygon</span><span class=\"o\">=</span><span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">create_polygon</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">170</span><span class=\"p\">,</span> <span class=\"mi\">170</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">170</span><span class=\"p\">,</span> <span class=\"n\">outline</span><span class=\"o\">=</span><span class=\"s\">\"yellow\"</span><span class=\"p\">)</span>\n<span class=\"n\">oval</span><span class=\"o\">=</span><span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">create_oval</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">250</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"blue\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">arc</span><span class=\"o\">=</span><span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">create_arc</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">extent</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">'red'</span><span class=\"p\">)</span>\n\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter. Canvas(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">캔버스의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">캔버스의 속성</code>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">메소드</code>를 이용하여 캔버스에 <code class=\"highlighter-rouge\">도형</code>을 그릴 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"canvas-method\">Canvas Method###</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">설명</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">create_line(x1, y1, x2, x3, … , xn, yn, option)</td>\n      <td style=\"text-align: center\">선</td>\n      <td style=\"text-align: center\">(x1, y1), (x2, y2), …, (xn, yn) 까지 연결되는 선 생성</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">create_polygon(x1, y1, x2, x3, … , xn, yn, option)</td>\n      <td style=\"text-align: center\">다각형</td>\n      <td style=\"text-align: center\">(x1, y1), (x2, y2), …, (xn, yn) 의 꼭지점을 같는 다각형 생성</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">create_oval(x1, y1, x2, y2, option)</td>\n      <td style=\"text-align: center\">원</td>\n      <td style=\"text-align: center\">(x1, y1)에서 (x2, y2)의 크기를 가지는 원 생성</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">create_arc(x1, y1, x2, y2, start, extent, option)</td>\n      <td style=\"text-align: center\">호</td>\n      <td style=\"text-align: center\">(x1, y1)에서 (x2, y2)의 크기를 가지며 <code class=\"highlighter-rouge\">start</code> 각도부터 <code class=\"highlighter-rouge\">extent</code>의 각을 지니는 호 생성</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">create_image(x, y, image, option)</td>\n      <td style=\"text-align: center\">이미지</td>\n      <td style=\"text-align: center\">(x, y) 위치의 <code class=\"highlighter-rouge\">image</code> 생성</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>option</p>\n\n    <ul>\n      <li>\n        <p><code class=\"highlighter-rouge\">fill</code> : 배경 색상</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">outline</code> : 두께 색상</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">width</code> : 두께</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">fill</code> : 배경 색상</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">anchor</code> : 위치 지정</p>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 이외에도 여러 <code class=\"highlighter-rouge\">option</code>이 존재</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"entry-parameter\">Entry Parameter</h3>\n<hr />\n\n<h5 id=\"캔버스-형태-설정\">캔버스 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">캔버스의 너비</td>\n      <td style=\"text-align: center\">378</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\">캔버스의 높이</td>\n      <td style=\"text-align: center\">265</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">캔버스의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">borderwidth=bd</td>\n      <td style=\"text-align: center\">캔버스의 테두리 두께</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">          캔버스의 배경 색상        </td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">                   color                  </td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">offset</td>\n      <td style=\"text-align: center\">          캔버스의 오프셋 설정</td>\n      <td style=\"text-align: center\">0,0</td>\n      <td style=\"text-align: center\">                   <code class=\"highlighter-rouge\">x, y</code>, n, e, w, s, ne, nw, se, sw</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"캔버스-형식-설정\">캔버스 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">캔버스의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">xscrollcommand</td>\n      <td style=\"text-align: center\">캔버스의 가로스크롤 위젯 적용</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">Scrollbar위젯.set</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">yscrollcommand</td>\n      <td style=\"text-align: center\">캔버스의 세로스크롤 위젯 적용</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">Scrollbar위젯.set</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">xscrollincrement</td>\n      <td style=\"text-align: center\">캔버스 가로스크롤의 증가량</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">yscrollincrement</td>\n      <td style=\"text-align: center\">캔버스 가로스크롤의 증가량</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">scrollregion</td>\n      <td style=\"text-align: center\">캔버스 스크롤 영역 크기 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">n, e, w, s</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">confine</td>\n      <td style=\"text-align: center\">캔버스의 스크롤 영역 내 제한</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"캔버스-하이라이트-설정\">캔버스 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">캔버스가 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">캔버스가 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">캔버스가 선택되었을 때 두께 <a href=\"#reference-2\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"캔버스-동작-설정\">캔버스 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 캔버스가 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 14강 – Message",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-14/",
      "date"     : "2018-05-24 00:00:00 +0900",
  "content"   : "<h3 id=\"message-메세지\">Message (메세지)</h3>\n<hr />\n\n<p><code class=\"highlighter-rouge\">Message</code>를 이용하여 <strong>여러줄의 문자열을 포함</strong>하기 위한 <code class=\"highlighter-rouge\">메세지</code>를 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"message-사용\">Message 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">message</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Message</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"메세지입니다.\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"solid\"</span><span class=\"p\">)</span>\n<span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Message</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"메세지입니다.\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"solid\"</span>\n<span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.Message(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">메세지의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">메세지의 속성</code>을 설정합니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"message-parameter\">Message Parameter</h3>\n<hr />\n\n<h5 id=\"메세지-문자열-설정\">메세지 문자열 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">text</td>\n      <td style=\"text-align: center\">메세지에 표시할 문자열</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">textvariable</td>\n      <td style=\"text-align: center\">메세지에 표시할 문자열을 가져올 변수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">anchor</td>\n      <td style=\"text-align: center\">메세지안의 문자열의 위치</td>\n      <td style=\"text-align: center\">center</td>\n      <td style=\"text-align: center\">n, ne, e, se, s, sw, w, nw, center</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">justify</td>\n      <td style=\"text-align: center\">메세지의 문자열이 여러 줄 일 경우 정렬 방법</td>\n      <td style=\"text-align: center\">center</td>\n      <td style=\"text-align: center\">center, left, right</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"메세지-형태-설정\">메세지 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">메세지의 최대 허용 너비</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\">메세지의 최대 허용 높이</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">메세지의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">borderwidth=bd</td>\n      <td style=\"text-align: center\">메세지의 테두리 두께</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">메세지의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">foreground=fg</td>\n      <td style=\"text-align: center\">메세지의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">padx</td>\n      <td style=\"text-align: center\">메세지의 테두리와 내용의 가로 여백</td>\n      <td style=\"text-align: center\">-1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">pady</td>\n      <td style=\"text-align: center\">메세지의 테두리와 내용의 세로 여백</td>\n      <td style=\"text-align: center\">-1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">aspect</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">메시지의 높이에 대한 너비 비율</a></td>\n      <td style=\"text-align: center\">150</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"메세지-형식-설정\">메세지 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">font</td>\n      <td style=\"text-align: center\">메세지의 문자열 글꼴 설정</td>\n      <td style=\"text-align: center\">TkDefaultFont</td>\n      <td style=\"text-align: center\">font</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">메세지의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">커서 속성</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"메세지-하이라이트-설정\">메세지 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">메세지가 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">메세지가 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">메세지가 선택되었을 때 두께 <a href=\"#reference-3\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"메세지-동작-설정\">메세지 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">aspect</code>를 150으로 설정하였을 경우, <code class=\"highlighter-rouge\">100:150=높이:너비</code>를 의미함, width나 height가 설정된 경우 <code class=\"highlighter-rouge\">aspect</code> 설정 값은 <strong>무시됨</strong></li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 메세지가 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 13강 – Frame",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-13/",
      "date"     : "2018-05-23 00:00:00 +0900",
  "content"   : "<h3 id=\"frame-프레임\">Frame (프레임)</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/tkinter/ch13/1.png\"><img src=\"/assets/images/Python/tkinter/ch13/1.png\" alt=\"1\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">Frame</code>을 이용하여 <strong>다른 위젯들을 포함</strong>하기 위한 <code class=\"highlighter-rouge\">프레임</code>을 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"frame-사용\">Frame 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">frame1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"solid\"</span><span class=\"p\">,</span> <span class=\"n\">bd</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">frame1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"left\"</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"both\"</span><span class=\"p\">,</span> <span class=\"n\">expand</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">frame2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"solid\"</span><span class=\"p\">,</span> <span class=\"n\">bd</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">frame2</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"right\"</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"both\"</span><span class=\"p\">,</span> <span class=\"n\">expand</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">button1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">frame1</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"프레임1\"</span><span class=\"p\">)</span>\n<span class=\"n\">button1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"right\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">button2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">frame2</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"프레임2\"</span><span class=\"p\">)</span>\n<span class=\"n\">button2</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"left\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">frame1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"solid\"</span><span class=\"p\">,</span> <span class=\"n\">bd</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">frame1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"left\"</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"both\"</span><span class=\"p\">,</span> <span class=\"n\">expand</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">frame2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"solid\"</span><span class=\"p\">,</span> <span class=\"n\">bd</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">frame2</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"right\"</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"both\"</span><span class=\"p\">,</span> <span class=\"n\">expand</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">button1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">frame1</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"프레임1\"</span><span class=\"p\">)</span>\n<span class=\"n\">button1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"right\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">button2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">frame2</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"프레임2\"</span><span class=\"p\">)</span>\n<span class=\"n\">button2</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"left\"</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.Frame(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">프레임의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">프레임의 속성</code>을 설정합니다.</p>\n\n<p>위젯의 파라미터 중 <code class=\"highlighter-rouge\">윈도우 창</code>에서 <code class=\"highlighter-rouge\">프레임 이름</code>을 이용하여 해당 프레임에 위젯을 <code class=\"highlighter-rouge\">포함</code>시킬 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"frame-parameter\">Frame Parameter</h3>\n<hr />\n\n<h5 id=\"프레임-형태-설정\">프레임 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">프레임의 너비</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">프레임의 높이</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">프레임의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">프레임의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">padx</td>\n      <td style=\"text-align: center\">프레임의 테두리와 내용의 가로 여백</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">pady</td>\n      <td style=\"text-align: center\">프레임의 테두리와 내용의 세로 여백</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"프레임-형식-설정\">프레임 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">프레임의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">class_</td>\n      <td style=\"text-align: center\">클래스 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">visual</td>\n      <td style=\"text-align: center\">시각적 정보 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">colormap</td>\n      <td style=\"text-align: center\"> 256 색상을 지정하는 색상 맵 설정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">new</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"프레임-하이라이트-설정\">프레임 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">프레임이 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">프레임이 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">프레임이 선택되었을 때 두께 <a href=\"#reference-3\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"프레임-동작-설정\">프레임 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">container </td>\n      <td style=\"text-align: center\"><a href=\"#reference-4\">응용 프로그램이 포함될 컨테이너로 사용</a></td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>내부에 위젯이 존재할 경우, <code class=\"highlighter-rouge\">width</code>와 <code class=\"highlighter-rouge\">height</code> 설정을 무시하고 <code class=\"highlighter-rouge\">크기 자동 조절</code></li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 프레임이 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n\n<p><a id=\"reference-4\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">container</code>를 <code class=\"highlighter-rouge\">True</code>로 설정하였을 경우, 프레임의 내부에 <code class=\"highlighter-rouge\">위젯</code>이 포함되어 있지 않아야 함</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 12강 – 위젯 배치 : place",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-12/",
      "date"     : "2018-05-18 00:00:00 +0900",
  "content"   : "<h3 id=\"place-절대-위치-배치\">place (절대 위치 배치)</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/tkinter/ch12/1.png\"><img src=\"/assets/images/Python/tkinter/ch12/1.png\" alt=\"1\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">plaec</code>을 이용하여 <code class=\"highlighter-rouge\">위젯</code>들을 배치할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"place-사용\">place 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">b1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"(50, 50)\"</span><span class=\"p\">)</span>\n<span class=\"n\">b2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"(50, 100)\"</span><span class=\"p\">)</span>\n<span class=\"n\">b3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"(100, 150)\"</span><span class=\"p\">)</span>\n<span class=\"n\">b4</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"(0, 200)\"</span><span class=\"p\">)</span>\n<span class=\"n\">b5</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"(0, 300)\"</span><span class=\"p\">)</span>\n<span class=\"n\">b6</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"(0, 300)\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b1</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"n\">b2</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"n\">b3</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"n\">bordermode</span><span class=\"o\">=</span><span class=\"s\">\"inside\"</span><span class=\"p\">)</span>\n<span class=\"n\">b4</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">relwidth</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"n\">b5</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">relx</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"n\">b6</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">relx</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"s\">\"s\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">b1</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"n\">b2</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"n\">b3</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"n\">bordermode</span><span class=\"o\">=</span><span class=\"s\">\"inside\"</span><span class=\"p\">)</span>\n<span class=\"n\">b4</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">relwidth</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"n\">b5</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">relx</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"n\">b6</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">relx</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"s\">\"s\"</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">위젯이름.place(파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">위젯의 배치 속성</code>을 설정할 수 있습니다.</p>\n\n<p>배치되는 우선 순위는 <strong>가장 처음 선언한</strong> <code class=\"highlighter-rouge\">place</code>부터 배치됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">place</code>의 <code class=\"highlighter-rouge\">절대 위치</code>로 배치되며, <code class=\"highlighter-rouge\">크기</code>를 조정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">place()</code>은 <code class=\"highlighter-rouge\">pack()</code>, <code class=\"highlighter-rouge\">grid()</code>와는 <strong>같이 사용할 수 있습니다.</strong></p>\n\n<p><br />\n<br /></p>\n<h3 id=\"grid-parameter\">grid Parameter</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">x</td>\n      <td style=\"text-align: center\">x좌표 배치</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">y</td>\n      <td style=\"text-align: center\">y좌표 배치</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relx</td>\n      <td style=\"text-align: center\">x좌표 배치 비율</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">0 ~ 1</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">rely</td>\n      <td style=\"text-align: center\">y좌표 배치 비율</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">0 ~ 1</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">위젯의 너비</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\">위젯의 높이</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relwidth</td>\n      <td style=\"text-align: center\">위젯의 너비 비율</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">0 ~ 1</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relheight</td>\n      <td style=\"text-align: center\">위젯의 높이 비율</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">0 ~ 1</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">anchor</td>\n      <td style=\"text-align: center\">위젯의 기준 위치</td>\n      <td style=\"text-align: center\">nw</td>\n      <td style=\"text-align: center\">n, e, w, s, ne, nw, se, sw</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">x</code>, <code class=\"highlighter-rouge\">y</code>, <code class=\"highlighter-rouge\">relx</code>, <code class=\"highlighter-rouge\">rely</code> : 해당 구역으로 위젯을 <code class=\"highlighter-rouge\">이동</code>시킨다.</li>\n  <li><code class=\"highlighter-rouge\">width</code>, <code class=\"highlighter-rouge\">height</code>, <code class=\"highlighter-rouge\">relwidth</code>, <code class=\"highlighter-rouge\">relheight</code> : 위젯의 <code class=\"highlighter-rouge\">크기</code>를 변경시킨다.</li>\n  <li><code class=\"highlighter-rouge\">anchor</code> : <code class=\"highlighter-rouge\">위젯의 기본 조정 위치</code>를 변경시킨다. <code class=\"highlighter-rouge\">(기본값 = 왼쪽 상단 모서리)</code></li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 11강 – 위젯 배치 : grid",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-11/",
      "date"     : "2018-05-18 00:00:00 +0900",
  "content"   : "<h3 id=\"grid-셀-단위-배치\">grid (셀 단위 배치)</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/tkinter/ch11/1.png\"><img src=\"/assets/images/Python/tkinter/ch11/1.png\" alt=\"1\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">grid</code>을 이용하여 <code class=\"highlighter-rouge\">위젯</code>들을 배치할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"grid-사용\">grid 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">b1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"(0, 0)\"</span><span class=\"p\">)</span>\n<span class=\"n\">b2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"(0, 1)\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"n\">b3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"(0, 2)\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b4</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"(1, 0)\"</span><span class=\"p\">)</span>\n<span class=\"n\">b5</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"(1, 1)\"</span><span class=\"p\">)</span>\n<span class=\"n\">b6</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"(1, 3)\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b7</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"(2, 1)\"</span><span class=\"p\">)</span>\n<span class=\"n\">b8</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"(2, 2)\"</span><span class=\"p\">)</span>\n<span class=\"n\">b9</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"(2, 4)\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b1</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">b2</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">b3</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">b4</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">rowspan</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">b5</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">columnspan</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">b6</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"n\">b7</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">sticky</span><span class=\"o\">=</span><span class=\"s\">\"w\"</span><span class=\"p\">)</span>\n<span class=\"n\">b8</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">b9</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">99</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">b1</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">b2</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">b3</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">b4</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">rowspan</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">b5</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">columnspan</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">b6</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"n\">b7</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">sticky</span><span class=\"o\">=</span><span class=\"s\">\"w\"</span><span class=\"p\">)</span>\n<span class=\"n\">b8</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">b9</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">99</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">위젯이름.grid(파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">위젯의 배치 속성</code>을 설정할 수 있습니다.</p>\n\n<p>배치되는 우선 순위는 <strong>가장 처음 선언한</strong> <code class=\"highlighter-rouge\">grid</code>부터 배치됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">grid</code>의 <code class=\"highlighter-rouge\">셀 단위</code>로 배치되며, <code class=\"highlighter-rouge\">한 번에 여러 셀</code>을 <strong>건너 뛰어 배치할 수 없습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">grid()</code>은 <code class=\"highlighter-rouge\">pack()</code>과 <strong>같이 사용될 수 없으며</strong>, <code class=\"highlighter-rouge\">place()</code>와는 <strong>같이 사용할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">column</code>을 <code class=\"highlighter-rouge\">99</code>로 위치시키더라도, 그 전 <code class=\"highlighter-rouge\">grid</code> 배치에서 <code class=\"highlighter-rouge\">최대 column의 값</code>이 <code class=\"highlighter-rouge\">3</code>이 였으므로 자동적으로 <code class=\"highlighter-rouge\">4</code>로 할당됩니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n<h3 id=\"grid-parameter\">grid Parameter</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">row</td>\n      <td style=\"text-align: center\">행 위치</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">column</td>\n      <td style=\"text-align: center\">열 위치</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">rowspan</td>\n      <td style=\"text-align: center\">행 위치 조정</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">columnspan</td>\n      <td style=\"text-align: center\">열 위치 조정</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">sticky</td>\n      <td style=\"text-align: center\">할당된 공간 내에서의 위치 조정</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">n, e, s, w, nw, ne, sw, se</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">ipadx</td>\n      <td style=\"text-align: center\">위젯에 대한 x 방향 내부 패딩</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">ipady</td>\n      <td style=\"text-align: center\">위젯에 대한 y 방향 내부 패딩</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">padx</td>\n      <td style=\"text-align: center\">위젯에 대한 x 방향 외부 패딩</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">pady</td>\n      <td style=\"text-align: center\">위젯에 대한 y 방향 외부 패딩</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">row</code>, <code class=\"highlighter-rouge\">column</code> : 해당 구역으로 위젯을 <code class=\"highlighter-rouge\">이동</code>시킨다.</li>\n  <li><code class=\"highlighter-rouge\">rowspan</code>, <code class=\"highlighter-rouge\">columnspan</code> : 현재 배치된 구역에서 위치를 <code class=\"highlighter-rouge\">조정</code>한다.</li>\n  <li><code class=\"highlighter-rouge\">sticky</code> : <code class=\"highlighter-rouge\">현재 배치된 구역</code> 안에서 <code class=\"highlighter-rouge\">특정 위치</code>로 이동시킨다.</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 10강 – 위젯 배치 : pack",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-10/",
      "date"     : "2018-05-18 00:00:00 +0900",
  "content"   : "<h3 id=\"pack-상대-위치-배치\">pack (상대 위치 배치)</h3>\n<hr />\n\n<p><a href=\"/assets/images/Python/tkinter/ch10/1.png\"><img src=\"/assets/images/Python/tkinter/ch10/1.png\" alt=\"1\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">pack</code>을 이용하여 <code class=\"highlighter-rouge\">위젯</code>들을 배치할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"pack-사용\">pack 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">b1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"top\"</span><span class=\"p\">)</span>\n<span class=\"n\">b1_1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"top-1\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"bottom\"</span><span class=\"p\">)</span>\n<span class=\"n\">b2_1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"bottom-1\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"left\"</span><span class=\"p\">)</span>\n<span class=\"n\">b3_1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"left-1\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b4</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"right\"</span><span class=\"p\">)</span>\n<span class=\"n\">b4_1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"right-1\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b5</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"center\"</span><span class=\"p\">,</span> <span class=\"n\">bg</span><span class=\"o\">=</span><span class=\"s\">\"red\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"top\"</span><span class=\"p\">)</span>\n<span class=\"n\">b1_1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"top\"</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"x\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b2</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"bottom\"</span><span class=\"p\">)</span>\n<span class=\"n\">b2_1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"bottom\"</span><span class=\"p\">,</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"s\">\"e\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b3</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"left\"</span><span class=\"p\">)</span>\n<span class=\"n\">b3_1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"left\"</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"y\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b4</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"right\"</span><span class=\"p\">)</span>\n<span class=\"n\">b4_1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"right\"</span><span class=\"p\">,</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"s\">\"s\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b5</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">expand</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"both\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">b1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"top\"</span><span class=\"p\">)</span>\n<span class=\"n\">b1_1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"top\"</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"x\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b2</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"bottom\"</span><span class=\"p\">)</span>\n<span class=\"n\">b2_1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"bottom\"</span><span class=\"p\">,</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"s\">\"e\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b3</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"left\"</span><span class=\"p\">)</span>\n<span class=\"n\">b3_1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"left\"</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"y\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b4</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"right\"</span><span class=\"p\">)</span>\n<span class=\"n\">b4_1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">\"right\"</span><span class=\"p\">,</span> <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"s\">\"s\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">b5</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">expand</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s\">\"both\"</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">위젯이름.pack(파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">위젯의 배치 속성</code>을 설정할 수 있습니다.</p>\n\n<p>배치되는 우선 순위는 <strong>가장 처음 선언한</strong> <code class=\"highlighter-rouge\">pack</code>부터 배치됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">pack</code>의 <code class=\"highlighter-rouge\">파라미터</code>로 인하여 <strong>위젯의 크기가 변경될 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">pack()</code>은 <code class=\"highlighter-rouge\">grid()</code>와 <strong>같이 사용될 수 없으며</strong>, <code class=\"highlighter-rouge\">place()</code>와는 <strong>같이 사용할 수 있습니다.</strong></p>\n\n<p><br />\n<br /></p>\n<h3 id=\"pack-parameter\">pack Parameter</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">side</td>\n      <td style=\"text-align: center\">특정 위치로 공간 할당</td>\n      <td style=\"text-align: center\">top</td>\n      <td style=\"text-align: center\">top, bottom, left, right</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">anchor</td>\n      <td style=\"text-align: center\">할당된 공간 내에서 위치 지정</td>\n      <td style=\"text-align: center\">center</td>\n      <td style=\"text-align: center\">center, n, e, s, w, ne, nw, se, sw</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">fill</td>\n      <td style=\"text-align: center\">할당된 공간에 대한 크기 맞춤</td>\n      <td style=\"text-align: center\">none</td>\n      <td style=\"text-align: center\">none, x, y, both</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">expand</td>\n      <td style=\"text-align: center\">미사용 공간 확보</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">ipadx</td>\n      <td style=\"text-align: center\">위젯에 대한 x 방향 내부 패딩</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">ipady</td>\n      <td style=\"text-align: center\">위젯에 대한 y 방향 내부 패딩</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">padx</td>\n      <td style=\"text-align: center\">위젯에 대한 x 방향 외부 패딩</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">pady</td>\n      <td style=\"text-align: center\">위젯에 대한 y 방향 외부 패딩</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">side</code> : 해당 구역으로 위젯을 <code class=\"highlighter-rouge\">이동</code>시킨다.</li>\n  <li><code class=\"highlighter-rouge\">anchor</code> : <code class=\"highlighter-rouge\">현재 배치된 구역</code> 안에서 <code class=\"highlighter-rouge\">특정 위치</code>로 이동시킨다.</li>\n  <li><code class=\"highlighter-rouge\">fill</code> : 할당된 공간에 맞게 <code class=\"highlighter-rouge\">크기가 변경</code>된다.</li>\n  <li><code class=\"highlighter-rouge\">expand</code> : 할당되지 않은 <code class=\"highlighter-rouge\">미사용 공간</code>을 모두 <strong>현재 위젯의 할당된 공간으로 변경한다.</strong></li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 9강 – Menubutton",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-9/",
      "date"     : "2018-05-17 00:00:00 +0900",
  "content"   : "<h3 id=\"menubutton-메뉴버튼\">Menubutton (메뉴버튼)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">Menubutton</code>을 이용하여 <code class=\"highlighter-rouge\">메뉴</code>기능을 가진 <code class=\"highlighter-rouge\">단추</code>를 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"menubutton-사용\">Menubutton 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">menubutton</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menubutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"메뉴 메뉴버튼\"</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"raised\"</span><span class=\"p\">,</span> <span class=\"n\">direction</span><span class=\"o\">=</span><span class=\"s\">\"right\"</span><span class=\"p\">)</span>\n<span class=\"n\">menubutton</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">menu</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menu</span><span class=\"p\">(</span><span class=\"n\">menubutton</span><span class=\"p\">,</span> <span class=\"n\">tearoff</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위메뉴-1\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">add_separator</span><span class=\"p\">()</span>\n<span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위메뉴-2\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위메뉴-3\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">menubutton</span><span class=\"p\">[</span><span class=\"s\">\"menu\"</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">menu</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">menubutton</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menubutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"메뉴 메뉴버튼\"</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"raised\"</span><span class=\"p\">,</span> <span class=\"n\">direction</span><span class=\"o\">=</span><span class=\"s\">\"right\"</span><span class=\"p\">)</span>\n<span class=\"n\">menubutton</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">menu</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menu</span><span class=\"p\">(</span><span class=\"n\">menubutton</span><span class=\"p\">,</span> <span class=\"n\">tearoff</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위메뉴-1\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">add_separator</span><span class=\"p\">()</span>\n<span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위메뉴-2\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위메뉴-3\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">menubutton</span><span class=\"p\">[</span><span class=\"s\">\"menu\"</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">menu</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.Menubutton(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">메뉴버튼의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">메뉴버튼의 속성</code>을 설정합니다.</p>\n\n<p>이 후, <code class=\"highlighter-rouge\">tkinter.Menu(메뉴버튼 이름, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 <code class=\"highlighter-rouge\">메뉴의 속성</code>을 설정할 수 있습니다.</p>\n\n<p>마지막으로 메뉴버튼의 파라미터 중 <code class=\"highlighter-rouge\">menu</code>를 마지막에 사용하여 <code class=\"highlighter-rouge\">메뉴버튼과 메뉴</code>를 연결합니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"menubutton-parameter\">Menubutton Parameter</h3>\n<hr />\n\n<h5 id=\"메뉴버튼-문자열-설정\">메뉴버튼 문자열 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">text</td>\n      <td style=\"text-align: center\">메뉴버튼에 표시할 문자열</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">textvariable</td>\n      <td style=\"text-align: center\">메뉴버튼에 표시할 문자열을 가져올 변수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">anchor</td>\n      <td style=\"text-align: center\">메뉴버튼안의 문자열 또는 이미지의 위치</td>\n      <td style=\"text-align: center\">center</td>\n      <td style=\"text-align: center\">n, ne, e, se, s, sw, w, nw, center</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">justify</td>\n      <td style=\"text-align: center\">메뉴버튼의 문자열이 여러 줄 일 경우 정렬 방법</td>\n      <td style=\"text-align: center\">center</td>\n      <td style=\"text-align: center\">center, left, right</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">wraplength</td>\n      <td style=\"text-align: center\">자동 줄내림 설정 너비</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"메뉴버튼-형태-설정\">메뉴버튼 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">메뉴버튼의 너비</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\">메뉴버튼의 높이</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">메뉴버튼의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">메뉴버튼의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">foreground=fg</td>\n      <td style=\"text-align: center\">메뉴버튼의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">padx</td>\n      <td style=\"text-align: center\">메뉴버튼의 테두리와 내용의 가로 여백</td>\n      <td style=\"text-align: center\">5</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">pady</td>\n      <td style=\"text-align: center\">메뉴버튼의 테두리와 내용의 세로 여백</td>\n      <td style=\"text-align: center\">4</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"메뉴버튼-형식-설정\">메뉴버튼 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">bitmap</td>\n      <td style=\"text-align: center\">메뉴버튼에 포함할 기본 이미지</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">info, warning, error, question,   questhead, hourglass, gray12, gray25, gray50, gray75</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">image</td>\n      <td style=\"text-align: center\">메뉴버튼에 포함할 임의 이미지</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">compound</td>\n      <td style=\"text-align: center\">메뉴버튼에 문자열과 이미지를 동시에 표시할 때 이미지의 위치</td>\n      <td style=\"text-align: center\">none</td>\n      <td style=\"text-align: center\">bottom, center, left, none, right, top</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">font</td>\n      <td style=\"text-align: center\">메뉴버튼의 문자열 글꼴 설정</td>\n      <td style=\"text-align: center\">TkDefaultFont</td>\n      <td style=\"text-align: center\">font</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">메뉴버튼의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">커서 속성</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"메뉴버튼-상태-설정\">메뉴버튼 상태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">state</td>\n      <td style=\"text-align: center\">상태 설정</td>\n      <td style=\"text-align: center\">normal</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">normal</a>, active, disabled</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activebackground</td>\n      <td style=\"text-align: center\">active 상태일 때 메뉴버튼의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activeforeground</td>\n      <td style=\"text-align: center\">active 상태일 때 메뉴버튼의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">disabledforeground</td>\n      <td style=\"text-align: center\">disabeld 상태일 때 메뉴버튼의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemDisabledText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"메뉴버튼-하이라이트-설정\">메뉴버튼 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">메뉴버튼이 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">메뉴버튼이 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">메뉴버튼이 선택되었을 때 두께 <a href=\"#reference-3\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"메뉴버튼-동작-설정\">메뉴버튼 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">menu</td>\n      <td style=\"text-align: center\">메뉴버튼이 선택되었을 때 나타나는 메뉴 위젯</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">tktiner.Menu()</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">direction</td>\n      <td style=\"text-align: center\">메뉴버튼이 선택되었을 때 나타나는 메뉴 위젯의 방향</td>\n      <td style=\"text-align: center\">below</td>\n      <td style=\"text-align: center\">above, below, left, right, flush</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">indicatoron</td>\n      <td style=\"text-align: center\">메뉴버튼의 위젯 일치화 여부</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\"><a href=\"#reference-4\">Boolean</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>기본 설정은 <code class=\"highlighter-rouge\">normal</code> 상태의 설정을 의미함 (<code class=\"highlighter-rouge\">bg</code>, <code class=\"highlighter-rouge\">fg</code> 등의 설정)</li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 메뉴버튼이 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n\n<p><a id=\"reference-4\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">indicatoron</code>을 True로 설정할 경우, 메뉴버튼에 메뉴 기호가 나타남</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 8강 – Menu",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-8/",
      "date"     : "2018-05-16 00:00:00 +0900",
  "content"   : "<h3 id=\"menu-메뉴\">Menu (메뉴)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\"> Menu</code>을 이용하여 <code class=\"highlighter-rouge\">자주 사용하는 기능</code> 등을 <strong>다양한 선택사항으로 나누는</strong> <code class=\"highlighter-rouge\">메뉴</code>을 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"menu-사용\">Menu 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x480+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">close</span><span class=\"p\">():</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">quit</span><span class=\"p\">()</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">destroy</span><span class=\"p\">()</span>\n\n<span class=\"n\">menubar</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menu</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n\n<span class=\"n\">menu_1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menu</span><span class=\"p\">(</span><span class=\"n\">menubar</span><span class=\"p\">,</span> <span class=\"n\">tearoff</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 1-1\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 1-2\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_separator</span><span class=\"p\">()</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 1-3\"</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">close</span><span class=\"p\">)</span>\n<span class=\"n\">menubar</span><span class=\"o\">.</span><span class=\"n\">add_cascade</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"상위 메뉴 1\"</span><span class=\"p\">,</span> <span class=\"n\">menu</span><span class=\"o\">=</span><span class=\"n\">menu_1</span><span class=\"p\">)</span>\n\n<span class=\"n\">menu_2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menu</span><span class=\"p\">(</span><span class=\"n\">menubar</span><span class=\"p\">,</span> <span class=\"n\">tearoff</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">selectcolor</span><span class=\"o\">=</span><span class=\"s\">\"red\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_2</span><span class=\"o\">.</span><span class=\"n\">add_radiobutton</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 2-1\"</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"o\">=</span><span class=\"s\">\"disable\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_2</span><span class=\"o\">.</span><span class=\"n\">add_radiobutton</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 2-2\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_2</span><span class=\"o\">.</span><span class=\"n\">add_radiobutton</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 2-3\"</span><span class=\"p\">)</span>\n<span class=\"n\">menubar</span><span class=\"o\">.</span><span class=\"n\">add_cascade</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"상위 메뉴 2\"</span><span class=\"p\">,</span> <span class=\"n\">menu</span><span class=\"o\">=</span><span class=\"n\">menu_2</span><span class=\"p\">)</span>\n\n<span class=\"n\">menu_3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menu</span><span class=\"p\">(</span><span class=\"n\">menubar</span><span class=\"p\">,</span> <span class=\"n\">tearoff</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">menu_3</span><span class=\"o\">.</span><span class=\"n\">add_checkbutton</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 3-1\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_3</span><span class=\"o\">.</span><span class=\"n\">add_checkbutton</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 3-2\"</span><span class=\"p\">)</span>\n<span class=\"n\">menubar</span><span class=\"o\">.</span><span class=\"n\">add_cascade</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"상위 메뉴 3\"</span><span class=\"p\">,</span> <span class=\"n\">menu</span><span class=\"o\">=</span><span class=\"n\">menu_3</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">menu</span><span class=\"o\">=</span><span class=\"n\">menubar</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Window Close\"</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">close</span><span class=\"p\">():</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">quit</span><span class=\"p\">()</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">destroy</span><span class=\"p\">()</span>\n\n<span class=\"n\">menubar</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menu</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n\n<span class=\"n\">menu_1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menu</span><span class=\"p\">(</span><span class=\"n\">menubar</span><span class=\"p\">,</span> <span class=\"n\">tearoff</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 1-1\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 1-2\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_separator</span><span class=\"p\">()</span>\n<span class=\"n\">menu_1</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 1-3\"</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">close</span><span class=\"p\">)</span>\n<span class=\"n\">menubar</span><span class=\"o\">.</span><span class=\"n\">add_cascade</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"상위 메뉴 1\"</span><span class=\"p\">,</span> <span class=\"n\">menu</span><span class=\"o\">=</span><span class=\"n\">menu_1</span><span class=\"p\">)</span>\n\n<span class=\"n\">menu_2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menu</span><span class=\"p\">(</span><span class=\"n\">menubar</span><span class=\"p\">,</span> <span class=\"n\">tearoff</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">selectcolor</span><span class=\"o\">=</span><span class=\"s\">\"red\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_2</span><span class=\"o\">.</span><span class=\"n\">add_radiobutton</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 2-1\"</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"o\">=</span><span class=\"s\">\"disable\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_2</span><span class=\"o\">.</span><span class=\"n\">add_radiobutton</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 2-2\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_2</span><span class=\"o\">.</span><span class=\"n\">add_radiobutton</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 2-3\"</span><span class=\"p\">)</span>\n<span class=\"n\">menubar</span><span class=\"o\">.</span><span class=\"n\">add_cascade</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"상위 메뉴 2\"</span><span class=\"p\">,</span> <span class=\"n\">menu</span><span class=\"o\">=</span><span class=\"n\">menu_2</span><span class=\"p\">)</span>\n\n<span class=\"n\">menu_3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Menu</span><span class=\"p\">(</span><span class=\"n\">menubar</span><span class=\"p\">,</span> <span class=\"n\">tearoff</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">menu_3</span><span class=\"o\">.</span><span class=\"n\">add_checkbutton</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 3-1\"</span><span class=\"p\">)</span>\n<span class=\"n\">menu_3</span><span class=\"o\">.</span><span class=\"n\">add_checkbutton</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"하위 메뉴 3-2\"</span><span class=\"p\">)</span>\n<span class=\"n\">menubar</span><span class=\"o\">.</span><span class=\"n\">add_cascade</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"상위 메뉴 3\"</span><span class=\"p\">,</span> <span class=\"n\">menu</span><span class=\"o\">=</span><span class=\"n\">menu_3</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">menu</span><span class=\"o\">=</span><span class=\"n\">menubar</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Window Close\"</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">메뉴 이름=tkinter.Menu(윈도우 창)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 <code class=\"highlighter-rouge\">메뉴</code>를 사용할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">상위 메뉴 이름=tkinter.Menu(메뉴 이름, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">메뉴창</code>에 표시할 <code class=\"highlighter-rouge\">상위 메뉴의 속성</code>을 설정할 수 있습니다. <code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">상위 메뉴의 속성</code>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">상위 메뉴 이름.메소드(파라미터1, 파라미터2, 파라미터3, ...)</code>를 사용하여 <code class=\"highlighter-rouge\">메소드</code>에 해당하는 <code class=\"highlighter-rouge\">하위 메뉴</code>를 추가할 수 있습니다. <code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">하위 메뉴의 속성</code>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">윈도우 창.config(menu=메뉴 이름)</code>을 통하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 <code class=\"highlighter-rouge\">메뉴</code>를 등록할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">window.quit()</code>는 위젯이 유지된 채 <code class=\"highlighter-rouge\">window.mainloop()</code> 이후의 코드를 실행시킵니다.</p>\n\n<p><code class=\"highlighter-rouge\">window.destroy()</code>는 위젯을 파괴하고 <code class=\"highlighter-rouge\">window.mainloop()</code> 이후의 코드를 실행시킵니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"menu-method\">Menu Method###</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">add_command(파라미터)</td>\n      <td style=\"text-align: center\">기본 메뉴 항목 생성</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">add_radiobutton(파라미터)</td>\n      <td style=\"text-align: center\">라디오버튼 메뉴 항목 생성</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">add_checkbutton(파라미터)</td>\n      <td style=\"text-align: center\">체크버튼 메뉴 항목 생성</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">add_cascade(파라미터)</td>\n      <td style=\"text-align: center\">상위 메뉴와 하위 메뉴 연결</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">add_separator()</td>\n      <td style=\"text-align: center\">구분선 생성</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">add(유형, 파라미터)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">특정 유형</code>의 메뉴 항목 생성</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">delete(start_index, end_index)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">start_index</code>부터 <code class=\"highlighter-rouge\">end_index</code>까지의 항목 삭제</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">entryconfig(index, 파라미터)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">index</code> 위치의 메뉴 항목 수정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">index(item)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">item</code> 메뉴 항목의 <code class=\"highlighter-rouge\">index</code> 위치 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insert_separator (index)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">index</code> 위치에 구분선 생성</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">invoke(index)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">index</code> 위치의 항목 실행</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">type(속성)</td>\n      <td style=\"text-align: center\">선택 유형 반환 (command, radiobutton, checkbutton, cascade, separator, tearoff)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 파라미터 중, : <code class=\"highlighter-rouge\">label=이름</code>을 이용하여 메뉴의 이름을 설정할 수 있습니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">메뉴 이름.add_cascade(label=\"상위 메뉴 이름\", menu=연결할 상위 메뉴)</code>를 이용하여 메뉴를 부착할 수 있습니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n<h3 id=\"menu-parameter\">Menu Parameter</h3>\n<hr />\n\n<h5 id=\"메뉴-형태-설정\">메뉴 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">메뉴의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">메뉴의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">foreground=fg</td>\n      <td style=\"text-align: center\">메뉴의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectcolor</td>\n      <td style=\"text-align: center\">하위 메뉴의 선택 표시(√) 색상</td>\n      <td style=\"text-align: center\">SystemWindow</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"메뉴-형식-설정\">메뉴 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">font</td>\n      <td style=\"text-align: center\">메뉴의 문자열 글꼴 설정</td>\n      <td style=\"text-align: center\">TkDefaultFont</td>\n      <td style=\"text-align: center\">font</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">메뉴의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">커서 속성</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"메뉴-상태-설정\">메뉴 상태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">activeborderwidth</td>\n      <td style=\"text-align: center\">active 상태일 때 메뉴의 테두리 두께</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activebackground</td>\n      <td style=\"text-align: center\">active 상태일 때 메뉴의 배경 색상</td>\n      <td style=\"text-align: center\">SystemHighlight</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activeforeground</td>\n      <td style=\"text-align: center\">active 상태일 때 메뉴의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">disabledforeground</td>\n      <td style=\"text-align: center\">disabeld 상태일 때 메뉴의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemDisabledText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"메뉴-동작-설정\">메뉴 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">postcommand</td>\n      <td style=\"text-align: center\">메뉴가 선택되었을 때 실행하는 메소드(함수)</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">메소드, 함수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tearoff</td>\n      <td style=\"text-align: center\">하위메뉴의 분리 기능 사용 유/무</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">title</td>\n      <td style=\"text-align: center\">하위메뉴의 분리 기능의 제목</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">문자열</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tearoffcommand</td>\n      <td style=\"text-align: center\">메뉴의 위젯 일치화 여부</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">메소드, 함수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 7강 – Radiobutton",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-7/",
      "date"     : "2018-05-15 00:00:00 +0900",
  "content"   : "<h3 id=\"radiobutton-라디오버튼\">Radiobutton (라디오버튼)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">Radiobutton</code>을 이용하여 <code class=\"highlighter-rouge\">옵션</code> 등을 <strong>단일 선택</strong>하기 위한 <code class=\"highlighter-rouge\">라디오버튼</code>을 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"radiobutton-사용\">Radiobutton 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x480+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">check</span><span class=\"p\">():</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span> <span class=\"s\">\"RadioVariety_1 = \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">RadioVariety_1</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span> <span class=\"o\">+</span> <span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span> <span class=\"o\">+</span>\n                       <span class=\"s\">\"RadioVariety_2 = \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">RadioVariety_2</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span> <span class=\"o\">+</span> <span class=\"s\">\"</span><span class=\"se\">\\n\\n</span><span class=\"s\">\"</span> <span class=\"o\">+</span>\n                       <span class=\"s\">\"Total = \"</span>          <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">RadioVariety_1</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">RadioVariety_2</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()))</span>\n\n<span class=\"n\">RadioVariety_1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">IntVar</span><span class=\"p\">()</span>\n<span class=\"n\">RadioVariety_2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">IntVar</span><span class=\"p\">()</span>\n\n<span class=\"n\">radio1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"1번\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_1</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">radio2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"2번(1번)\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_1</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio2</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">radio3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"3번\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_1</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio3</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"None\"</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">radio4</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"4번\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_2</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio4</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">radio5</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"5번\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_2</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio5</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">check</span><span class=\"p\">():</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span> <span class=\"s\">\"RadioVariety_1 = \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">RadioVariety_1</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span> <span class=\"o\">+</span> <span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span> <span class=\"o\">+</span>\n                       <span class=\"s\">\"RadioVariety_2 = \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">RadioVariety_2</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span> <span class=\"o\">+</span> <span class=\"s\">\"</span><span class=\"se\">\\n\\n</span><span class=\"s\">\"</span> <span class=\"o\">+</span>\n                       <span class=\"s\">\"Total = \"</span>          <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">RadioVariety_1</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">RadioVariety_2</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()))</span>\n\n<span class=\"n\">RadioVariety_1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">IntVar</span><span class=\"p\">()</span>\n<span class=\"n\">RadioVariety_2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">IntVar</span><span class=\"p\">()</span>\n\n<span class=\"n\">radio1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"1번\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_1</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">radio2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"2번(1번)\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_1</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio2</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">radio3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"3번\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_1</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio3</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"None\"</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">radio4</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"4번\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_2</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio4</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">radio5</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Radiobutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"5번\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">RadioVariety_2</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"n\">radio5</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.Radiobutton(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">라디오버튼의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">라디오버튼의 속성</code>을 설정합니다.</p>\n\n<p>파라미터 중 <code class=\"highlighter-rouge\">command</code>를 이용하여 <code class=\"highlighter-rouge\">사용자 정의 함수 : check()</code>을 실행시킬 수 있습니다.</p>\n\n<p>파라미터 중 <code class=\"highlighter-rouge\">value</code>를 이용하여 <code class=\"highlighter-rouge\">라디오버튼의 값</code>을 설정할 수 있습니다. <code class=\"highlighter-rouge\">value</code>의 값이 겹치는 경우 <strong>같이 선택됩니다.</strong></p>\n\n<p>파라미터 중 <code class=\"highlighter-rouge\">variable</code>를 이용하여 <code class=\"highlighter-rouge\">tkinter.IntVar()</code>의 그룹이 같을 경우 하나의 묶음으로 간주하며 ‘value’의 값이 저장됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">tkinter.IntVar()</code>에 저장된 <code class=\"highlighter-rouge\">value</code> 값은 <code class=\"highlighter-rouge\">변수이름.get()</code>을 통하여 불러올 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"radiobutton-method\">Radiobutton Method###</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">select()</td>\n      <td style=\"text-align: center\">체크 상태</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">deselect()</td>\n      <td style=\"text-align: center\">해제 상태</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">invoke()</td>\n      <td style=\"text-align: center\">체크 버튼 실행</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">flash()</td>\n      <td style=\"text-align: center\">깜빡임</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">invoke()</code> : 라디오버튼을 클릭했을 때와 동일한 실행</li>\n  <li>Tip : <code class=\"highlighter-rouge\">flash()</code> : <code class=\"highlighter-rouge\">normal</code> 상태 배경 색상과 <code class=\"highlighter-rouge\">active</code> 상태 배경 색상 사이에서 깜빡임</li>\n</ul>\n\n<p><br />\n<br /></p>\n<h3 id=\"radiobutton-parameter\">Radiobutton Parameter</h3>\n<hr />\n\n<h5 id=\"라디오버튼-문자열-설정\">라디오버튼 문자열 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">text</td>\n      <td style=\"text-align: center\">라디오버튼에 표시할 문자열</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">textvariable</td>\n      <td style=\"text-align: center\">라디오버튼에 표시할 문자열을 가져올 변수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">anchor</td>\n      <td style=\"text-align: center\">라디오버튼안의 문자열 또는 이미지의 위치</td>\n      <td style=\"text-align: center\">center</td>\n      <td style=\"text-align: center\">n, ne, e, se, s, sw, w, nw, center</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">justify</td>\n      <td style=\"text-align: center\">라디오버튼의 문자열이 여러 줄 일 경우 정렬 방법</td>\n      <td style=\"text-align: center\">center</td>\n      <td style=\"text-align: center\">center, left, right</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">wraplength</td>\n      <td style=\"text-align: center\">자동 줄내림 설정 너비</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"라디오버튼-형태-설정\">라디오버튼 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">라디오버튼의 너비</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\">라디오버튼의 높이</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">라디오버튼의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">overrelief</td>\n      <td style=\"text-align: center\">라디오버튼에 마우스를 올렸을 때 라디오버튼의 테두리 모양</td>\n      <td style=\"text-align: center\">raised</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">라디오버튼의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">foreground=fg</td>\n      <td style=\"text-align: center\">라디오버튼의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectcolor</td>\n      <td style=\"text-align: center\">         라디오버튼 상태의 배경 색상      </td>\n      <td style=\"text-align: center\">SystemWindow</td>\n      <td style=\"text-align: center\">                   color                  </td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">padx</td>\n      <td style=\"text-align: center\">라디오버튼의 테두리와 내용의 가로 여백</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">pady</td>\n      <td style=\"text-align: center\">라디오버튼의 테두리와 내용의 세로 여백</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"라디오버튼-형식-설정\">라디오버튼 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">bitmap</td>\n      <td style=\"text-align: center\">라디오버튼에 포함할 기본 이미지</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">info, warning, error, question,   questhead, hourglass, gray12, gray25, gray50, gray75</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">image</td>\n      <td style=\"text-align: center\">라디오버튼에 포함할 임의 이미지</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectimage</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">라디오버튼의 체크 상태일 때 표시할 임의 이미지</a></td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">compound</td>\n      <td style=\"text-align: center\">라디오버튼에 문자열과 이미지를 동시에 표시할 때 이미지의 위치</td>\n      <td style=\"text-align: center\">none</td>\n      <td style=\"text-align: center\">bottom, center, left, none, right, top</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">font</td>\n      <td style=\"text-align: center\">라디오버튼의 문자열 글꼴 설정</td>\n      <td style=\"text-align: center\">TkDefaultFont</td>\n      <td style=\"text-align: center\">font</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">라디오버튼의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">커서 속성</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"라디오버튼-상태-설정\">라디오버튼 상태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">state</td>\n      <td style=\"text-align: center\">상태 설정</td>\n      <td style=\"text-align: center\">normal</td>\n      <td style=\"text-align: center\"><a href=\"#reference-3\">normal</a>, active, disabled</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activebackground</td>\n      <td style=\"text-align: center\">active 상태일 때 라디오버튼의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activeforeground</td>\n      <td style=\"text-align: center\">active 상태일 때 라디오버튼의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">disabledforeground</td>\n      <td style=\"text-align: center\">disabeld 상태일 때 라디오버튼의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemDisabledText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"라디오버튼-하이라이트-설정\">라디오버튼 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">라디오버튼이 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">라디오버튼이 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">라디오버튼이 선택되었을 때 두께 <a href=\"#reference-4\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"라디오버튼-동작-설정\">라디오버튼 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">command</td>\n      <td style=\"text-align: center\">라디오버튼이 active 상태일 때 실행하는 메소드(함수)</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">메소드, 함수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">variable</td>\n      <td style=\"text-align: center\">라디오버튼의 상태를 저장할 제어 변수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">tkinter.IntVar(), tkinter.StringVar()</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">value</td>\n      <td style=\"text-align: center\">라디오버튼이 가지고 있는 값</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-5\">variable의 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">indicatoron</td>\n      <td style=\"text-align: center\">라디오버튼의 위젯 일치화 여부</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\"><a href=\"#reference-6\">Boolean</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">selectimage</code> 파라미터는 <code class=\"highlighter-rouge\">image</code> 파라미터에 이미지가 포함되어 있어야 작동됨</li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li>기본 설정은 <code class=\"highlighter-rouge\">normal</code> 상태의 설정을 의미함 (<code class=\"highlighter-rouge\">bg</code>, <code class=\"highlighter-rouge\">fg</code> 등의 설정)</li>\n</ul>\n\n<p><a id=\"reference-4\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 라디오버튼이 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n\n<p><a id=\"reference-5\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">variable</code>의 값이 <code class=\"highlighter-rouge\">tkinter.StringVar()</code>일 경우, <code class=\"highlighter-rouge\">value</code>에 <code class=\"highlighter-rouge\">str</code> 속성을 할당할 수 있음</li>\n</ul>\n\n<p><a id=\"reference-6\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">indicatoron</code>을 False로 설정할 경우, 체크 선택 부분이 사라지고 버튼처럼 변환됨</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 6강 – Checkbutton",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-6/",
      "date"     : "2018-05-13 00:00:00 +0900",
  "content"   : "<h3 id=\"checkbutton-체크버튼\">Checkbutton (체크버튼)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">Checkbutton</code>을 이용하여 <code class=\"highlighter-rouge\">옵션</code> 등을 <strong>다중 선택</strong>하기 위한 <code class=\"highlighter-rouge\">체크버튼</code>을 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"checkbutton-사용\">Checkbutton 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x480+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">flash</span><span class=\"p\">():</span>\n    <span class=\"n\">checkbutton1</span><span class=\"o\">.</span><span class=\"n\">flash</span><span class=\"p\">()</span>\n\n<span class=\"n\">CheckVariety_1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">IntVar</span><span class=\"p\">()</span>\n<span class=\"n\">CheckVariety_2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">IntVar</span><span class=\"p\">()</span>\n\n<span class=\"n\">checkbutton1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Checkbutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"O\"</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">CheckVariety_1</span><span class=\"p\">,</span> <span class=\"n\">activebackground</span><span class=\"o\">=</span><span class=\"s\">\"blue\"</span><span class=\"p\">)</span>\n<span class=\"n\">checkbutton2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Checkbutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"△\"</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">CheckVariety_2</span><span class=\"p\">)</span>\n<span class=\"n\">checkbutton3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Checkbutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"X\"</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">CheckVariety_2</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">flash</span><span class=\"p\">)</span>\n\n<span class=\"n\">checkbutton1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n<span class=\"n\">checkbutton2</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n<span class=\"n\">checkbutton3</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">flash</span><span class=\"p\">():</span>\n    <span class=\"n\">checkbutton1</span><span class=\"o\">.</span><span class=\"n\">flash</span><span class=\"p\">()</span>\n\n<span class=\"n\">CheckVariety_1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">IntVar</span><span class=\"p\">()</span>\n<span class=\"n\">CheckVariety_2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">IntVar</span><span class=\"p\">()</span>\n\n<span class=\"n\">checkbutton1</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Checkbutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"O\"</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">CheckVariety_1</span><span class=\"p\">,</span> <span class=\"n\">activebackground</span><span class=\"o\">=</span><span class=\"s\">\"blue\"</span><span class=\"p\">)</span>\n<span class=\"n\">checkbutton2</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Checkbutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"△\"</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">CheckVariety_2</span><span class=\"p\">)</span>\n<span class=\"n\">checkbutton3</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Checkbutton</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"X\"</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">CheckVariety_2</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">flash</span><span class=\"p\">)</span>\n\n<span class=\"n\">checkbutton1</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n<span class=\"n\">checkbutton2</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n<span class=\"n\">checkbutton3</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.Checkbutton(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">체크버튼의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">체크버튼의 속성</code>을 설정합니다.</p>\n\n<p>파라미터 중 <code class=\"highlighter-rouge\">command</code>를 이용하여 <code class=\"highlighter-rouge\">사용자 정의 함수 : flash()</code>을 실행시킬 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"checkbutton-method\">Checkbutton Method###</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">select()</td>\n      <td style=\"text-align: center\">체크 상태</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">deselect()</td>\n      <td style=\"text-align: center\">해제 상태</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">toggle()</td>\n      <td style=\"text-align: center\">토글</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">invoke()</td>\n      <td style=\"text-align: center\">체크 버튼 실행</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">flash()</td>\n      <td style=\"text-align: center\">깜빡임</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">toggle()</code> : 체크일 경우 해제되며, 해제일 경우 체크됨</li>\n  <li>Tip : <code class=\"highlighter-rouge\">invoke()</code> : 체크버튼을 클릭했을 때와 동일한 실행</li>\n  <li>Tip : <code class=\"highlighter-rouge\">flash()</code> : <code class=\"highlighter-rouge\">normal</code> 상태 배경 색상과 <code class=\"highlighter-rouge\">active</code> 상태 배경 색 사이에서 깜빡임</li>\n</ul>\n\n<p><br />\n<br /></p>\n<h3 id=\"checkbutton-parameter\">Checkbutton Parameter</h3>\n<hr />\n\n<h5 id=\"체크버튼-문자열-설정\">체크버튼 문자열 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">text</td>\n      <td style=\"text-align: center\">체크버튼에 표시할 문자열</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">textvariable</td>\n      <td style=\"text-align: center\">체크버튼에 표시할 문자열을 가져올 변수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">anchor</td>\n      <td style=\"text-align: center\">체크버튼안의 문자열 또는 이미지의 위치</td>\n      <td style=\"text-align: center\">center</td>\n      <td style=\"text-align: center\">n, ne, e, se, s, sw, w, nw, center</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">justify</td>\n      <td style=\"text-align: center\">체크버튼의 문자열이 여러 줄 일 경우 정렬 방법</td>\n      <td style=\"text-align: center\">center</td>\n      <td style=\"text-align: center\">center, left, right</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">wraplength</td>\n      <td style=\"text-align: center\">자동 줄내림 설정 너비</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"체크버튼-형태-설정\">체크버튼 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">체크버튼의 너비</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\">체크버튼의 높이</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">체크버튼의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">overrelief</td>\n      <td style=\"text-align: center\">체크버튼에 마우스를 올렸을 때 체크버튼의 테두리 모양</td>\n      <td style=\"text-align: center\">raised</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">체크버튼의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">foreground=fg</td>\n      <td style=\"text-align: center\">체크버튼의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectcolor</td>\n      <td style=\"text-align: center\">         체크버튼 상태의 배경 색      </td>\n      <td style=\"text-align: center\">SystemWindow</td>\n      <td style=\"text-align: center\">                   color                </td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">padx</td>\n      <td style=\"text-align: center\">체크버튼의 테두리와 내용의 가로 여백</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">pady</td>\n      <td style=\"text-align: center\">체크버튼의 테두리와 내용의 세로 여백</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"체크버튼-형식-설정\">체크버튼 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">bitmap</td>\n      <td style=\"text-align: center\">체크버튼에 포함할 기본 이미지</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">info, warning, error, question,   questhead, hourglass, gray12, gray25, gray50, gray75</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">image</td>\n      <td style=\"text-align: center\">체크버튼에 포함할 임의 이미지</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectimage</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">체크버튼의 체크 상태일 때 표시할 임의 이미지</a></td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">compound</td>\n      <td style=\"text-align: center\">체크버튼에 문자열과 이미지를 동시에 표시할 때 이미지의 위치</td>\n      <td style=\"text-align: center\">none</td>\n      <td style=\"text-align: center\">bottom, center, left, none, right, top</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">font</td>\n      <td style=\"text-align: center\">체크버튼의 문자열 글꼴 설정</td>\n      <td style=\"text-align: center\">TkDefaultFont</td>\n      <td style=\"text-align: center\">font</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">체크버튼의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">커서 속성</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"체크버튼-상태-설정\">체크버튼 상태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">state</td>\n      <td style=\"text-align: center\">상태 설정</td>\n      <td style=\"text-align: center\">normal</td>\n      <td style=\"text-align: center\"><a href=\"#reference-3\">normal</a>, active, disabled</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activebackground</td>\n      <td style=\"text-align: center\">active 상태일 때 체크버튼의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activeforeground</td>\n      <td style=\"text-align: center\">active 상태일 때 체크버튼의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">disabledforeground</td>\n      <td style=\"text-align: center\">disabeld 상태일 때 체크버튼의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemDisabledText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"체크버튼-하이라이트-설정\">체크버튼 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">체크버튼이 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">체크버튼이 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">체크버튼이 선택되었을 때 두께 <a href=\"#reference-4\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"체크버튼-동작-설정\">체크버튼 동작 설정</h5>\n\n<table>\n  <tbody>\n    <tr>\n      <td>이름</td>\n      <td>의미</td>\n      <td>기본값</td>\n      <td>속성</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>:——————-:</td>\n      <td>:——————————:</td>\n      <td>:—————–:</td>\n      <td>:—-:</td>\n      <td>boo</td>\n    </tr>\n    <tr>\n      <td>takefocus</td>\n      <td>Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td>True</td>\n      <td>Boolean</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>command</td>\n      <td>체크버튼이 active 상태일 때 실행하는 메소드(함수)</td>\n      <td>-</td>\n      <td>메소드, 함수</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>variable</td>\n      <td>체크버튼의 상태를 저장할 제어 변수</td>\n      <td>-</td>\n      <td>tkinter.IntVar()</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>onvalue</td>\n      <td>체크버튼이 체크 상태일 때 연결된 제어 변수의 값</td>\n      <td>True</td>\n      <td>Boolean</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>offvalue</td>\n      <td>체크버튼이 해제 상태일 때 연결된 제어 변수의 값</td>\n      <td>False</td>\n      <td>Boolean</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>indicatoron</td>\n      <td>체크버튼의 위젯 일치화 여부</td>\n      <td>True</td>\n      <td><a href=\"#reference-5\">Boolean</a></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">selectimage</code> 파라미터는 <code class=\"highlighter-rouge\">image</code> 파라미터에 이미지가 포함되어 있어야 작동됨</li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li>기본 설정은 <code class=\"highlighter-rouge\">normal</code> 상태의 설정을 의미함 (<code class=\"highlighter-rouge\">bg</code>, <code class=\"highlighter-rouge\">fg</code> 등의 설정)</li>\n</ul>\n\n<p><a id=\"reference-4\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 체크버튼이 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n\n<p><a id=\"reference-5\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">indicatoron</code>을 False로 설정할 경우, 체크 선택 부분이 사라지고 버튼처럼 변환됨</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 5강 – Listbox",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-5/",
      "date"     : "2018-05-12 00:00:00 +0900",
  "content"   : "<h3 id=\"listbox-리스트박스\">Listbox (리스트박스)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">Listbox</code>을 이용하여 목록을 불러와 <code class=\"highlighter-rouge\">추가</code>, <code class=\"highlighter-rouge\">제거</code> 또는 <code class=\"highlighter-rouge\">선택</code>하기 위한 <code class=\"highlighter-rouge\">리스트박스</code>를 생성할 수 있습니다</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"listbox-사용\">Listbox 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x480+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">listbox</span> <span class=\"o\">=</span> <span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Listbox</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">selectmode</span><span class=\"o\">=</span><span class=\"s\">'extended'</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s\">\"1번\"</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s\">\"2번\"</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s\">\"2번\"</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s\">\"2번\"</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s\">\"3번\"</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">listbox</span> <span class=\"o\">=</span> <span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Listbox</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">selectmode</span><span class=\"o\">=</span><span class=\"s\">'extended'</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s\">\"1번\"</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s\">\"2번\"</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s\">\"2번\"</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s\">\"2번\"</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s\">\"3번\"</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.Listbox(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">리스트박스의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">리스트박스의 속성</code>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">리스트박스.insert(index, \"항목\")</code>을 통하여 항목을 <code class=\"highlighter-rouge\">추가</code>할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">리스트박스.delete(start_index, end_index)</code>를 통하여 항목을 <code class=\"highlighter-rouge\">삭제</code>할 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">리스트박스.delete(index)</code>를 통하여 <code class=\"highlighter-rouge\">단일 항목</code>만 <code class=\"highlighter-rouge\">삭제</code>할 수 있습니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n<h3 id=\"listbox-method\">Listbox Method###</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">insert(index, “항목”)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">index</code> 위치에 항목 추가</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">delete(start_index,   end_index)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">start_index</code>부터 <code class=\"highlighter-rouge\">end_index</code>까지의 항목 삭제</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">size()</td>\n      <td style=\"text-align: center\">항목 개수 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activate(index)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">index</code> 위치에 항목 선택</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">curselection()</td>\n      <td style=\"text-align: center\">선택된 항목을 튜플로 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">get(start_index, end_index)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">start_index</code>부터 <code class=\"highlighter-rouge\">end_index</code>까지의 항목을 튜플로 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">index(index)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">index</code>에 대응하는 위치 획득</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">nearest(y)</td>\n      <td style=\"text-align: center\">현재 보이는 리스트박스의 항목 중 y에 가장 가까운 값을 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">see(index)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">index</code>가 보이도록 리스트박스의 위치 조정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">xview()</td>\n      <td style=\"text-align: center\">가로스크롤 연결</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">xview_scroll(num, str)</td>\n      <td style=\"text-align: center\">가로스크롤의 속성 설정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">xview_moveto(num)</td>\n      <td style=\"text-align: center\">가로스크롤 이동 (0~1)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">yview()</td>\n      <td style=\"text-align: center\">세로스크롤 연결</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">yview_scroll(num, str)</td>\n      <td style=\"text-align: center\">세로스크롤의 속성 설정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">yview_moveto(num)</td>\n      <td style=\"text-align: center\">세로스크롤 이동 (0~1)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>xview_scroll</p>\n\n    <ul>\n      <li>\n        <p><code class=\"highlighter-rouge\">num</code> : 스크롤 이동 횟수</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">str</code></p>\n\n        <ul>\n          <li><code class=\"highlighter-rouge\">units</code> : 문자 너비로 스크롤</li>\n          <li><code class=\"highlighter-rouge\">pages</code> : 위젯 너비로 스크롤</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>yview_scroll</p>\n\n    <ul>\n      <li>\n        <p><code class=\"highlighter-rouge\">num</code> : 스크롤 이동 횟수</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">str</code></p>\n\n        <ul>\n          <li><code class=\"highlighter-rouge\">units</code> : 줄 높이로 스크롤</li>\n          <li><code class=\"highlighter-rouge\">pages</code> : 위젯 높이로 스크롤\n<br />\n<br />\n<br /></li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<h3 id=\"listbox-parameter\">Listbox Parameter</h3>\n<hr />\n\n<h5 id=\"리스트박스-문자열-설정\">리스트박스 문자열 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">listvariable</td>\n      <td style=\"text-align: center\">리스트박스에 표시할 문자열을 가져올 변수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"리스트박스-형태-설정\">리스트박스 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">리스트박스의 너비</td>\n      <td style=\"text-align: center\">20</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">상수</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\">리스트박스의 높이</td>\n      <td style=\"text-align: center\">10</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">상수</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">리스트박스의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">borderwidth=bd</td>\n      <td style=\"text-align: center\">리스트박스의 테두리 두께</td>\n      <td style=\"text-align: center\">2</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">리스트박스의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">foreground=fg</td>\n      <td style=\"text-align: center\">리스트박스의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectbackground</td>\n      <td style=\"text-align: center\">리스트박스 항목의 블록처리 배경 색상</td>\n      <td style=\"text-align: center\">SystemHighlight</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectforeground</td>\n      <td style=\"text-align: center\">리스트박스 항목의 블록처리 문자열 색상</td>\n      <td style=\"text-align: center\">SystemHighlight</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectborderwidth</td>\n      <td style=\"text-align: center\">리스트박스 항목의 블록처리 테두리 두께</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"리스트박스-형식-설정\">리스트박스 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">font</td>\n      <td style=\"text-align: center\">리스트박스의 문자열 글꼴 설정</td>\n      <td style=\"text-align: center\">TkDefaultFont</td>\n      <td style=\"text-align: center\">font</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">리스트박스의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">xscrollcommand</td>\n      <td style=\"text-align: center\">리스트박스의 가로스크롤 위젯 적용</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">Scrollbar위젯.set</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">yscrollcommand</td>\n      <td style=\"text-align: center\">리스트박스의 세로스크롤 위젯 적용</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">Scrollbar위젯.set</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">exportselection</td>\n      <td style=\"text-align: center\">리스트박스간의 항목 선택 유지</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\"><a href=\"#reference-3\">Boolean</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">setgrid</td>\n      <td style=\"text-align: center\">리스트박스의 격자 크기 조정 설정</td>\n      <td style=\"text-align: center\">False</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"리스트박스-상태-설정\">리스트박스 상태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">state</td>\n      <td style=\"text-align: center\">상태 설정</td>\n      <td style=\"text-align: center\">normal</td>\n      <td style=\"text-align: center\"><a href=\"#reference-4\">normal</a>, readonly, disabled</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">disabledforeground</td>\n      <td style=\"text-align: center\">disabeld 상태일 때 리스트박스의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemDisabledText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"리스트박스-하이라이트-설정\">리스트박스 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">리스트박스가이 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">리스트박스가이 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">리스트박스가이 선택되었을 때 두께 <a href=\"#reference-5\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"리스트박스-동작-설정\">리스트박스 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activestyle</td>\n      <td style=\"text-align: center\">리스트박스의 선택된 항목의 표시 형태</td>\n      <td style=\"text-align: center\">underline</td>\n      <td style=\"text-align: center\"><a href=\"#reference-6\">underline, none, dotbox</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectmode</td>\n      <td style=\"text-align: center\">리스트박스의 항목 선택 방법</td>\n      <td style=\"text-align: center\">browse</td>\n      <td style=\"text-align: center\"><a href=\"#reference-7\">browse, single, mulitple, extended</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">width</code>, <code class=\"highlighter-rouge\">height</code>에 <code class=\"highlighter-rouge\">0</code>을 입력 시, <strong>항목에 맞춰 크기가 설정됨</strong></li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">exportselection</code>가 <code class=\"highlighter-rouge\">True</code>일 때 리스트박스가 2개 이상일 경우 1번 리스트 박스에서 항목 선택 후, 2번 리스트 박스에서 항목을 선택하면 1번 <strong>리스트 박스의 항목 선택 상태가 해제된다.</strong> 항목 선택을 유지하고자 할 때 <code class=\"highlighter-rouge\">False</code>로 사용</li>\n</ul>\n\n<p><a id=\"reference-4\"></a></p>\n\n<ul>\n  <li>기본 설정은 <code class=\"highlighter-rouge\">normal</code> 상태의 설정을 의미함 (<code class=\"highlighter-rouge\">bg</code>, <code class=\"highlighter-rouge\">fg</code> 등의 설정)</li>\n</ul>\n\n<p><a id=\"reference-5\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 리스트박스가 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n\n<p><a id=\"reference-6\"></a></p>\n\n<ul>\n  <li>\n    <p>activestyle 파리미터</p>\n\n    <ul>\n      <li>dotbox : 선택된 항목에 점선 테두리 적용</li>\n      <li>underline : 선택된 항목의 문자열에 밑줄 적용</li>\n      <li>none : 선택된 항목에 블럭처리만 적용</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-7\"></a></p>\n\n<ul>\n  <li>\n    <p>selectmode 파라미터</p>\n\n    <ul>\n      <li>browse : 단일 선택, 방향키 이동 시 선택</li>\n      <li>single : 단일 선택, 방향키 이동 후 스페이스바로 선택</li>\n      <li>multiple : 다중 선택, 마우스 클릭이나 방향키 이동 후 스페이스바로 선택</li>\n      <li>extended : 다중 선택, 마우스 드래그나 쉬프트키 + 방향키 이동으로 선택</li>\n    </ul>\n  </li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 4강 – Entry",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-4/",
      "date"     : "2018-05-11 00:00:00 +0900",
  "content"   : "<h3 id=\"entry-기입창\">Entry (기입창)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">Entry</code>을 이용하여 텍스트를 <code class=\"highlighter-rouge\">입력</code>받거나 <code class=\"highlighter-rouge\">출력</code>하기 위한 <code class=\"highlighter-rouge\">기입창</code>을 생성할 수 있습니다</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"entry-사용\">Entry 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">math</span> <span class=\"kn\">import</span><span class=\"o\">*</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x480+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">calc</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"결과=\"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">eval</span><span class=\"p\">(</span><span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())))</span>\n\n<span class=\"n\">entry</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Entry</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"s\">\"&lt;Return&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">)</span>\n<span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">calc</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"결과=\"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">eval</span><span class=\"p\">(</span><span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())))</span>\n\n<span class=\"n\">entry</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Entry</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"s\">\"&lt;Return&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">)</span>\n<span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.Entry(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">기입창의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">기입창의 속성</code>을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Entry.bind()</code>를 이용하여 <code class=\"highlighter-rouge\">key</code>나 <code class=\"highlighter-rouge\">mouse</code> 등의 <code class=\"highlighter-rouge\">event</code>를 처리하여 <code class=\"highlighter-rouge\">메소드</code>나 <code class=\"highlighter-rouge\">함수</code>를 실행시킬 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">기입창</code>에 간단한 <code class=\"highlighter-rouge\">수학함수</code> 등을 작성 후 <code class=\"highlighter-rouge\">Enter 키</code>를 입력시, <code class=\"highlighter-rouge\">라벨</code>에 결과가 표시됩니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">4+4*cos(0.5)</code>을 입력시 <code class=\"highlighter-rouge\">결과=7.51033...</code>이 반환됩니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n<h3 id=\"entry-method\">Entry Method###</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">insert(index, “문자열”)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">index</code> 위치에 <code class=\"highlighter-rouge\">문자열</code> 추가</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">delete(start_index, end_index)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">start_index</code>부터 <code class=\"highlighter-rouge\">end_index</code>까지의 문자열 삭제</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">get()</td>\n      <td style=\"text-align: center\">기입창의 텍스트를 문자열로 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">index(index)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">index</code>에 대응하는 위치 획득</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">icursor(index)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">index</code> 앞에 키보드 커서 설정</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">select_adjust(index)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">index</code> 위치까지의 문자열을 블록처리</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">select_range(start_index,   end_index)</td>\n      <td style=\"text-align: center\"><code class=\"highlighter-rouge\">start_index</code>부터 <code class=\"highlighter-rouge\">end_index</code>까지 블록처리</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">select_to(index)</td>\n      <td style=\"text-align: center\">키보드 커서부터 <code class=\"highlighter-rouge\">index</code>까지 블록처리</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">select_from(index)</td>\n      <td style=\"text-align: center\">키보드 커서의 색인 위치를 <code class=\"highlighter-rouge\">index</code> 위치에 문자로 설정하고 선택</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">select_present()</td>\n      <td style=\"text-align: center\">블록처리 되어있는 경우 <code class=\"highlighter-rouge\">True</code>, 아닐 경우 <code class=\"highlighter-rouge\">False</code></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">select_clear()</td>\n      <td style=\"text-align: center\">블록처리 해제</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">xview()</td>\n      <td style=\"text-align: center\">가로스크롤 연결</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">        xview_scroll(num, str)        </td>\n      <td style=\"text-align: center\">                      가로스크롤의 속성 설정            </td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>xview_scroll</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">num</code>\n        <ul>\n          <li>num &gt; 0 : 왼쪽에서 오른쪽으로 스크롤</li>\n          <li>num &lt; 0 : 오른쪽에서 왼쪽으로 스크롤</li>\n        </ul>\n      </li>\n      <li><code class=\"highlighter-rouge\">str</code>\n        <ul>\n          <li><code class=\"highlighter-rouge\">units</code> : 문자 너비로 스크롤</li>\n          <li><code class=\"highlighter-rouge\">pages</code> : 위젯 너비로 스크롤\n  <br /></li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"entry-parameter\">Entry Parameter</h3>\n<hr />\n\n<h5 id=\"기입창-문자열-설정\">기입창 문자열 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">show</td>\n      <td style=\"text-align: center\">기입창에 표시되는 문자</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">문자</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">textvariable</td>\n      <td style=\"text-align: center\">기입창에 표시할 문자열을 가져올 변수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">justify</td>\n      <td style=\"text-align: center\">기입창의 문자열이 여러 줄 일 경우 정렬 방법</td>\n      <td style=\"text-align: center\">center</td>\n      <td style=\"text-align: center\">center, left, right</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"기입창-형태-설정\">기입창 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">기입창의 너비</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">기입창의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">borderwidth=bd</td>\n      <td style=\"text-align: center\">기입창의 테두리 두께</td>\n      <td style=\"text-align: center\">2</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">기입창의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">foreground=fg</td>\n      <td style=\"text-align: center\">기입창의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insertwidth</td>\n      <td style=\"text-align: center\">기입창의 키보드 커서 너비</td>\n      <td style=\"text-align: center\">2</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insertborderwidth</td>\n      <td style=\"text-align: center\">기입창의 키보드 커서 테두리 두께</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insertbackground</td>\n      <td style=\"text-align: center\">기입창의 키보드 커서 색상</td>\n      <td style=\"text-align: center\">SystemWindowText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectborderwidth</td>\n      <td style=\"text-align: center\">기입창의 문자열 블록처리 테두리 두께</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectbackground</td>\n      <td style=\"text-align: center\">기입창의 문자열 블록처리 배경 색상</td>\n      <td style=\"text-align: center\">SystemHighlight</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">selectforeground</td>\n      <td style=\"text-align: center\">기입창의 문자열 블록처리 문자열 색상</td>\n      <td style=\"text-align: center\">SystemHighlight</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"기입창-형식-설정\">기입창 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">font</td>\n      <td style=\"text-align: center\">기입창의 문자열 글꼴 설정</td>\n      <td style=\"text-align: center\">TkDefaultFont</td>\n      <td style=\"text-align: center\">font</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">기입창의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">커서 속성</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">xscrollcommand</td>\n      <td style=\"text-align: center\">기입창의 가로스크롤 위젯 적용</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">Scrollbar위젯.set</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"기입창-상태-설정\">기입창 상태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">state</td>\n      <td style=\"text-align: center\">상태 설정</td>\n      <td style=\"text-align: center\">normal</td>\n      <td style=\"text-align: center\"><a href=\"#reference-3\">normal</a>, readonly, disabled</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">readonlybackground</td>\n      <td style=\"text-align: center\">readonly 상태일 때 기입창의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">disabledbackground</td>\n      <td style=\"text-align: center\">disabeld 상태일 때 기입창의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">disabledforeground</td>\n      <td style=\"text-align: center\">disabeld 상태일 때 기입창의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemDisabledText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"기입창-하이라이트-설정\">기입창 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">기입창이 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">기입창이 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">기입창이 선택되었을 때 두께 <a href=\"#reference-4\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"기입창-동작-설정\">기입창 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insertontime</td>\n      <td style=\"text-align: center\">기입창의 키보드 커서 깜빡임이 보이는 시간</td>\n      <td style=\"text-align: center\">600</td>\n      <td style=\"text-align: center\">상수(ms)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">insertofftime</td>\n      <td style=\"text-align: center\">기입창의 키보드 커서 깜빡임이 보이지 않는 시간</td>\n      <td style=\"text-align: center\">300</td>\n      <td style=\"text-align: center\">상수(ms)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">*</code> 입력 시, 입력되는 모든 문자는 <code class=\"highlighter-rouge\">*</code> 처리되어 표시됨</li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li>기본 설정은 <code class=\"highlighter-rouge\">normal</code> 상태의 설정을 의미함 (<code class=\"highlighter-rouge\">bg</code>, <code class=\"highlighter-rouge\">fg</code> 등의 설정)</li>\n</ul>\n\n<p><a id=\"reference-4\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 기입창이 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 3강 – Button",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-3/",
      "date"     : "2018-05-10 00:00:00 +0900",
  "content"   : "<h3 id=\"button-버튼\">Button (버튼)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">Button</code>을 이용하여 <code class=\"highlighter-rouge\">메소드</code> 또는 <code class=\"highlighter-rouge\">함수</code> 등을 실행시키기 위한 <code class=\"highlighter-rouge\">단추</code>를 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"button-사용\">Button 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">countUP</span><span class=\"p\">():</span>\n    <span class=\"k\">global</span> <span class=\"n\">count</span>\n    <span class=\"n\">count</span> <span class=\"o\">+=</span><span class=\"mi\">1</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"p\">))</span>\n\n<span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"0\"</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">button</span> <span class=\"o\">=</span> <span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">overrelief</span><span class=\"o\">=</span><span class=\"s\">\"solid\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">countUP</span><span class=\"p\">,</span> <span class=\"n\">repeatdelay</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">repeatinterval</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">button</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">countUP</span><span class=\"p\">():</span>\n    <span class=\"k\">global</span> <span class=\"n\">count</span>\n    <span class=\"n\">count</span> <span class=\"o\">+=</span><span class=\"mi\">1</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"p\">))</span>\n\n<span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"0\"</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">button</span> <span class=\"o\">=</span> <span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">overrelief</span><span class=\"o\">=</span><span class=\"s\">\"solid\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">countUP</span><span class=\"p\">,</span> <span class=\"n\">repeatdelay</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">repeatinterval</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">button</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.Button(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">버튼의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">버튼의 속성</code>을 설정합니다.</p>\n\n<p>파라미터 중 <code class=\"highlighter-rouge\">command</code>를 이용하여 <code class=\"highlighter-rouge\">사용자 정의 함수 : countUP</code>을 실행시킬 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"button-method\">Button Method###</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">invoke()</td>\n      <td style=\"text-align: center\">버튼 실행</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">flash()</td>\n      <td style=\"text-align: center\">깜빡임</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">invoke()</code> : 버튼을 클릭했을 때와 동일한 실행</li>\n  <li>Tip : <code class=\"highlighter-rouge\">flash()</code> : <code class=\"highlighter-rouge\">normal</code> 상태 배경 색상과 <code class=\"highlighter-rouge\">active</code> 상태 배경 색상 사이에서 깜빡임</li>\n</ul>\n\n<p><br />\n<br /></p>\n<h3 id=\"button-parameter\">Button Parameter</h3>\n<hr />\n\n<h5 id=\"버튼-문자열-설정\">버튼 문자열 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">text</td>\n      <td style=\"text-align: center\">버튼에 표시할 문자열</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">textvariable</td>\n      <td style=\"text-align: center\">버튼에 표시할 문자열을 가져올 변수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">anchor</td>\n      <td style=\"text-align: center\">버튼안의 문자열 또는 이미지의 위치</td>\n      <td style=\"text-align: center\">center</td>\n      <td style=\"text-align: center\">n, ne, e, se, s, sw, w, nw, center</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">justify</td>\n      <td style=\"text-align: center\">버튼의 문자열이 여러 줄 일 경우 정렬 방법</td>\n      <td style=\"text-align: center\">center</td>\n      <td style=\"text-align: center\">center, left, right</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">wraplength</td>\n      <td style=\"text-align: center\">자동 줄내림 설정 너비</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"버튼-형태-설정\">버튼 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">버튼의 너비</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\">버튼의 높이</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">버튼의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">    overrelief    </td>\n      <td style=\"text-align: center\">       버튼에 마우스를 올렸을 때 버튼의 테두리 모양      </td>\n      <td style=\"text-align: center\">      raised      </td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">borderwidth=bd</td>\n      <td style=\"text-align: center\">버튼의 테두리 두께</td>\n      <td style=\"text-align: center\">2</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">          버튼의 배경 색상      </td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">                   color                </td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">foreground=fg</td>\n      <td style=\"text-align: center\">         버튼의 문자열 색상        </td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">                   color                  </td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">padx</td>\n      <td style=\"text-align: center\">버튼의 테두리와 내용의 가로 여백</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">pady</td>\n      <td style=\"text-align: center\">버튼의 테두리와 내용의 세로 여백</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"버튼-형식-설정\">버튼 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">bitmap</td>\n      <td style=\"text-align: center\">버튼에 포함할 기본 이미지</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">info, warning, error, question,   questhead, hourglass, gray12, gray25, gray50, gray75</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">image</td>\n      <td style=\"text-align: center\">버튼에 포함할 임의 이미지</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">compound</td>\n      <td style=\"text-align: center\">버튼에 문자열과 이미지를 동시에 표시할 때 이미지의 위치</td>\n      <td style=\"text-align: center\">none</td>\n      <td style=\"text-align: center\">bottom, center, left, none, right, top</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">font</td>\n      <td style=\"text-align: center\">버튼의 문자열 글꼴 설정</td>\n      <td style=\"text-align: center\">TkDefaultFont</td>\n      <td style=\"text-align: center\">font</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">버튼의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">커서 속성</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"버튼-상태-설정\">버튼 상태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">state</td>\n      <td style=\"text-align: center\">상태 설정</td>\n      <td style=\"text-align: center\">normal</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">normal</a>, active, disabled</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activebackground</td>\n      <td style=\"text-align: center\">active 상태일 때 버튼의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activeforeground</td>\n      <td style=\"text-align: center\">active 상태일 때 버튼의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">disabledforeground</td>\n      <td style=\"text-align: center\">disabeld 상태일 때 버튼의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemDisabledText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"버튼-하이라이트-설정\">버튼 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">버튼이 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">버튼이 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">버튼이 선택되었을 때 두께 <a href=\"#reference-3\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"버튼-동작-설정\">버튼 동작 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">takefocus</td>\n      <td style=\"text-align: center\">Tab 키를 이용하여 위젯 이동 허용 여부</td>\n      <td style=\"text-align: center\">True</td>\n      <td style=\"text-align: center\">Boolean</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">command</td>\n      <td style=\"text-align: center\">버튼이 active 상태일 때 실행하는 메소드(함수)</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">메소드, 함수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">repeatdelay</td>\n      <td style=\"text-align: center\"><a href=\"#reference-4\">버튼이 눌러진 상태에서 command 실행까지의 대기 시간</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수(ms)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">repeatinterval</td>\n      <td style=\"text-align: center\"><a href=\"#reference-5\">버튼이 눌러진 상태에서 command 실행의 반복 시간</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수(ms)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>기본 설정은 <code class=\"highlighter-rouge\">normal</code> 상태의 설정을 의미함 (<code class=\"highlighter-rouge\">bg</code>, <code class=\"highlighter-rouge\">fg</code> 등의 설정)</li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 버튼이 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n\n<p><a id=\"reference-4\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">repeatdelay=100</code> 일 경우, <strong>누르고 있기 시작한 0.1초 후</strong>에 <code class=\"highlighter-rouge\">command</code>가 실행됨</li>\n</ul>\n\n<p><a id=\"reference-5\"></a></p>\n\n<ul>\n  <li>\n    <p><code class=\"highlighter-rouge\">repeatdelay=1000</code>, <code class=\"highlighter-rouge\">repeatinterval=100</code> 일 경우, <strong>1초 후에 command가 실행되며 0.1초마다 버튼을 뗄 때까지</strong> <code class=\"highlighter-rouge\">command</code>가 계속 실행됨</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">repeatinterval</code> 파라미터는 <code class=\"highlighter-rouge\">repeatdelay</code> 파라미터와 <strong>같이</strong> 사용해야함</p>\n  </li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 2강 - Label",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-2/",
      "date"     : "2018-05-09 00:00:00 +0900",
  "content"   : "<h3 id=\"label-라벨\">Label (라벨)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">Label</code>을 이용하여 삽입한 이미지나 도표, 그림 등에 사용되는 <code class=\"highlighter-rouge\">주석문</code>을 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"label-사용\">Label 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"파이썬\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">fg</span><span class=\"o\">=</span><span class=\"s\">\"red\"</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"solid\"</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"파이썬\"</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">fg</span><span class=\"o\">=</span><span class=\"s\">\"red\"</span><span class=\"p\">,</span> <span class=\"n\">relief</span><span class=\"o\">=</span><span class=\"s\">\"solid\"</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">tkinter.Label(윈도우 창, 파라미터1, 파라미터2, 파라미터3, ...)</code>을 사용하여 해당 <code class=\"highlighter-rouge\">윈도우 창</code>에 표시할 <code class=\"highlighter-rouge\">라벨의 속성</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">파라미터</code>를 사용하여 <code class=\"highlighter-rouge\">라벨의 속성</code>을 설정합니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"label-parameter\">Label Parameter</h3>\n<hr />\n\n<h5 id=\"라벨-문자열-설정\">라벨 문자열 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">text</td>\n      <td style=\"text-align: center\">라벨에 표시할 문자열</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">textvariable</td>\n      <td style=\"text-align: center\">라벨에 표시할 문자열을 가져올 변수</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">anchor</td>\n      <td style=\"text-align: center\">라벨안의 문자열 또는 이미지의 위치</td>\n      <td style=\"text-align: center\">center</td>\n      <td style=\"text-align: center\">n, ne, e, se, s, sw, w, nw, center</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">justify</td>\n      <td style=\"text-align: center\">라벨의 문자열이 여러 줄 일 경우 정렬 방법</td>\n      <td style=\"text-align: center\">center</td>\n      <td style=\"text-align: center\">center, left, right</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">wraplength</td>\n      <td style=\"text-align: center\">자동 줄내림 설정 너비</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"라벨-형태-설정\">라벨 형태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">width</td>\n      <td style=\"text-align: center\">라벨의 너비</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">height</td>\n      <td style=\"text-align: center\">라벨의 높이</td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">relief</td>\n      <td style=\"text-align: center\">라벨의 테두리 모양</td>\n      <td style=\"text-align: center\">flat</td>\n      <td style=\"text-align: center\">flat, groove, raised, ridge, solid, sunken</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">borderwidth=bd</td>\n      <td style=\"text-align: center\">라벨의 테두리 두께</td>\n      <td style=\"text-align: center\">2</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">background=bg</td>\n      <td style=\"text-align: center\">          라벨의 배경 색상        </td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">                   color                  </td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">foreground=fg</td>\n      <td style=\"text-align: center\">         라벨의 문자열 색상        </td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">                   color                  </td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">padx</td>\n      <td style=\"text-align: center\">라벨의 테두리와 내용의 가로 여백</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">pady</td>\n      <td style=\"text-align: center\">라벨의 테두리와 내용의 세로 여백</td>\n      <td style=\"text-align: center\">1</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"라벨-형식-설정\">라벨 형식 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">bitmap</td>\n      <td style=\"text-align: center\">라벨에 포함할 기본 이미지</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">info, warning, error, question,   questhead, hourglass, gray12, gray25, gray50, gray75</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">image</td>\n      <td style=\"text-align: center\">라벨에 포함할 임의 이미지</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">compound</td>\n      <td style=\"text-align: center\">라벨에 문자열과 이미지를 동시에 표시할 때 이미지의 위치</td>\n      <td style=\"text-align: center\">none</td>\n      <td style=\"text-align: center\">bottom, center, left, none, right, top</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">font</td>\n      <td style=\"text-align: center\">라벨의 문자열 글꼴 설정</td>\n      <td style=\"text-align: center\">TkDefaultFont</td>\n      <td style=\"text-align: center\">font</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">cursor</td>\n      <td style=\"text-align: center\">라벨의 마우스 커서 모양</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\"><a href=\"#reference-1\">커서 속성</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"라벨-상태-설정\">라벨 상태 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">state</td>\n      <td style=\"text-align: center\">상태 설정</td>\n      <td style=\"text-align: center\">normal</td>\n      <td style=\"text-align: center\"><a href=\"#reference-2\">normal</a>, active, disabled</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activebackground</td>\n      <td style=\"text-align: center\">active 상태일 때 라벨의 배경 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">activeforeground</td>\n      <td style=\"text-align: center\">active 상태일 때 라벨의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemButtonText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">disabledforeground</td>\n      <td style=\"text-align: center\">disabeld 상태일 때 라벨의 문자열 색상</td>\n      <td style=\"text-align: center\">SystemDisabledText</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"라벨-하이라이트-설정\">라벨 하이라이트 설정</h5>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">이름</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">기본값</th>\n      <th style=\"text-align: center\">속성</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">highlightcolor</td>\n      <td style=\"text-align: center\">라벨이 선택되었을 때 색상</td>\n      <td style=\"text-align: center\">SystemWindowFrame</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightbackground</td>\n      <td style=\"text-align: center\">라벨이 선택되지 않았을 때 색상</td>\n      <td style=\"text-align: center\">SystemButtonFace</td>\n      <td style=\"text-align: center\">color</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">highlightthickness</td>\n      <td style=\"text-align: center\">라벨이 선택되었을 때 두께 <a href=\"#reference-3\">(두께 설정)</a></td>\n      <td style=\"text-align: center\">0</td>\n      <td style=\"text-align: center\">상수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<h5 id=\"참고\">참고</h5>\n<hr />\n<p><a id=\"reference-1\"></a></p>\n\n<ul>\n  <li>\n    <p>cursor 파라미터</p>\n\n    <ul>\n      <li>arrow, based_arrow_down, based_arrow_up, boat, bogosity, bottom_left_corner, bottom_right_corner, bottom_side, bottom_tee, box_spiral, center_ptr, circle, clock,\tcoffee_mug, cross, cross_reverse, crosshair, diamond_cross, dot, dotbox, double_arrow, draft_large, draft_small, draped_box, exchange, fleur, gobbler, gumby, hand1, hand2, heart, icon, iron_cross, left_ptr, left_side, left_tee, leftbutton, ll_angle, lr_angle, man, middlebutton, mouse, pencil, pirate, plus, question_arrow, right_ptr, right_side, right_tee, rightbutton, rtl_logo, sailboat, sb_down_arrow, sb_h_double_arrow, sb_left_arrow, sb_right_arrow, sb_up_arrow, sb_v_double_arrow, shuttle, sizing, spider, spraycan, star, target, tcross, top_left_arrow, top_left_corner, top_right_corner, top_side, top_tee, trek, ul_angle, umbrella, ur_angle, watch, wait, xterm, X_cursor</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a id=\"reference-2\"></a></p>\n\n<ul>\n  <li>기본 설정은 <code class=\"highlighter-rouge\">normal</code> 상태의 설정을 의미함 (<code class=\"highlighter-rouge\">bg</code>, <code class=\"highlighter-rouge\">fg</code> 등의 설정)</li>\n</ul>\n\n<p><a id=\"reference-3\"></a></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">highlightbackground</code>를 설정하였을 경우, 라벨이 선택되지 않았을 때에도 두께가 표시됨</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "Python tkinter 강좌 : 제 1강 - GUI 생성",
      "category" : "",
      "tags"     : "Python-tkinter",
      "url"      : "/posts/Python-tkinter-1/",
      "date"     : "2018-05-04 00:00:00 +0900",
  "content"   : "<h3 id=\"tkinter\">tkinter</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">tkinter</code>는 <code class=\"highlighter-rouge\">GUI</code>에 대한 <code class=\"highlighter-rouge\">표준 Python 인터페이스</code>이며 <code class=\"highlighter-rouge\">Window 창</code>을 생성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"tkinter-사용\">tkinter 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span></code></pre></figure>\n\n<p>상단에 <code class=\"highlighter-rouge\">import tkinter</code>를 사용하여 <code class=\"highlighter-rouge\">GUI 모듈</code>을 포함시킵니다. tkinter 함수의 사용방법은 <code class=\"highlighter-rouge\">tkinter.*</code>를 이용하여 사용이 가능합니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">윈도우이름=tkinter.Tk()</code>를 이용하여 가장 상위 레벨의 <code class=\"highlighter-rouge\">윈도우 창</code>을 <strong>생성할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">윈도우이름.mainloop()</code>를 사용하여 <code class=\"highlighter-rouge\">윈도우이름</code>의 윈도우 창을 <strong>윈도우가 종료될 때 까지 실행시킵니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">생성</code> 구문과 <code class=\"highlighter-rouge\">반복</code> 구문 사이에 <code class=\"highlighter-rouge\">위젯</code>을 생성하고 적용합니다.</p>\n\n<p><br />\n<br />\n<a href=\"/assets/images/Python/tkinter/ch1/1.png\"><img src=\"/assets/images/Python/tkinter/ch1/1.png\" alt=\"1\" /></a></p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">tkinter.Tk()</code>를 적용할 경우 가장 기본적인 <code class=\"highlighter-rouge\">윈도우 창</code>이 생성됩니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"window-창-설정\">Window 창 설정</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">윈도우이름.title(\"제목\")</code>을 이용하여 <code class=\"highlighter-rouge\">윈도우 창</code>의 <code class=\"highlighter-rouge\">제목</code>을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">윈도우이름.geometry(\"너비x높이+x좌표+y좌표\")</code>를 이용하여 <code class=\"highlighter-rouge\">윈도우 창</code>의 <code class=\"highlighter-rouge\">너비와 높이</code>, 초기 화면 위치의 <code class=\"highlighter-rouge\">x좌표와 y좌표</code>를 설정할 수있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">윈도우이름.resizeable(상하, 좌우)</code>을 이용하여 <code class=\"highlighter-rouge\">윈도우 창</code>의 <code class=\"highlighter-rouge\">창 크기 조절 가능 여부</code>를 설정할 수 있습니다. <code class=\"highlighter-rouge\">True</code>로 설정할 경우 <code class=\"highlighter-rouge\">윈도우 창</code>의 크기를 조절할 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">resizeable()</code>을 적용할 때, <code class=\"highlighter-rouge\">True=1</code>, <code class=\"highlighter-rouge\">False=0</code>을 의미하여 <code class=\"highlighter-rouge\">상수</code>를 입력해도 적용이 가능합니다.</li>\n</ul>\n\n<p><br />\n<br />\n<a href=\"/assets/images/Python/tkinter/ch1/2.png\"><img src=\"/assets/images/Python/tkinter/ch1/2.png\" alt=\"2\" /></a></p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">윈도우 창</code>의 이름이 <code class=\"highlighter-rouge\">YUN DAE HEE</code>로 설정되었으며 <code class=\"highlighter-rouge\">크기</code>와 <code class=\"highlighter-rouge\">초기 화면 위치</code>, <code class=\"highlighter-rouge\">윈도우 창의 크기 조절 불가</code>로 설정된 것을 확인할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n<h3 id=\"widget-배치\">Widget 배치</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span>\n\n<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s\">\"YUN DAE HEE\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">geometry</span><span class=\"p\">(</span><span class=\"s\">\"640x400+100+100\"</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">resizable</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s\">\"안녕하세요.\"</span><span class=\"p\">)</span>\n<span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">()</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span></code></pre></figure>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">위젯이름=tkinter.Label(윈도우창, text=\"내용\")</code>을 사용하여 <code class=\"highlighter-rouge\">윈도우 창</code>에 <code class=\"highlighter-rouge\">Label</code> 위젯을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">위젯이름.pack()</code>을 사용하여 <strong>위젯을 배치할 수 있습니다.</strong></p>\n\n<p><br />\n<br />\n<a href=\"/assets/images/Python/tkinter/ch1/3.png\"><img src=\"/assets/images/Python/tkinter/ch1/3.png\" alt=\"3\" /></a></p>\n\n<p>속성을 설정하지 않아 <code class=\"highlighter-rouge\">기본 속성</code>으로 설정되어 <strong>가장 최상단에 라벨이 배치된 것을 확인할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 26강 - 난수 모듈",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-26/",
      "date"     : "2018-05-02 00:00:00 +0900",
  "content"   : "<h3 id=\"난수-모듈\">난수 모듈</h3>\n<hr />\n<p>Python에서는 난수 모듈을 이용하여 <code class=\"highlighter-rouge\">특정한 순서나 규칙을 가지지 않은 무작위의 숫자</code>를 발생시키는 함수입니다. <strong>임의의 숫자</strong>나 <strong>확률</strong>이 필요한 알고리즘이나 코드에 사용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">random</span></code></pre></figure>\n\n<p>상단에 <code class=\"highlighter-rouge\">import random</code>를 사용하여 난수 모듈을 포함시킵니다. 난수 함수의 사용방법은 <code class=\"highlighter-rouge\">random.*</code>을 이용하여 사용이 가능합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">random</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">())</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">uniform</span><span class=\"p\">(</span><span class=\"mf\">3.5</span><span class=\"p\">,</span> <span class=\"mf\">3.6</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randrange</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randrange</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>0.4383375274996887<br />\n3.528242770358927<br />\n0<br />\n6<br />\n8<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">random.*</code>을 이용하여 <strong>무작위의 숫자를 발생시킵니다.</strong></p>\n\n<p><br /></p>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">함수</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">반환 형식</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">random()</td>\n      <td style=\"text-align: center\">0.0 &lt;= x &lt; 1.0</td>\n      <td style=\"text-align: center\">실수형</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">unform(a, b)</td>\n      <td style=\"text-align: center\">a &lt;= x &lt; b</td>\n      <td style=\"text-align: center\">실수형</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">randrange(a)</td>\n      <td style=\"text-align: center\">0 &lt;= x &lt; a</td>\n      <td style=\"text-align: center\">정수형</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">randrange(a, b)</td>\n      <td style=\"text-align: center\">a &lt;= x &lt; b</td>\n      <td style=\"text-align: center\">정수형</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">randint(a, b)</td>\n      <td style=\"text-align: center\">a &lt;= x &lt;= b</td>\n      <td style=\"text-align: center\">정수형</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<h3 id=\"리스트-사용-랜덤-함수\">리스트 사용 랜덤 함수</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">random</span>\n\n<span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">shuffle</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>100<br />\n[1000, 100]<br />\n[100, 1000, 10, 1]<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">random.*</code>을 이용하여 <code class=\"highlighter-rouge\">리스트</code>의 값을 <strong>추출하거나 변경할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">함수</th>\n      <th style=\"text-align: center\">의미</th>\n      <th style=\"text-align: center\">반환 형식</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">  choice(L)</td>\n      <td style=\"text-align: center\">임의의 원소값 하나를 반환</td>\n      <td style=\"text-align: center\">  원소의 데이터 형식 </td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">sample(L, n)</td>\n      <td style=\"text-align: center\">임의의 원소값 n개를 반환</td>\n      <td style=\"text-align: center\">리스트</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">shuffle(L)</td>\n      <td style=\"text-align: center\">리스트 무작위 재배열</td>\n      <td style=\"text-align: center\">리스트</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 25강 - 텍스트파일 읽기 쓰기",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-25/",
      "date"     : "2018-04-29 00:00:00 +0900",
  "content"   : "<h3 id=\"텍스트파일-text-file\">텍스트파일 (Text File)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">open</code>과 <code class=\"highlighter-rouge\">close</code>를 이용하여 텍스트파일을 다룰 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3>텍스트파일 쓰기</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">L</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">\"Python\"</span><span class=\"p\">,</span> <span class=\"s\">\"YUNDAEHEE\"</span><span class=\"p\">,</span> <span class=\"s\">\"076923\"</span><span class=\"p\">]</span>\n\n<span class=\"nb\">file</span><span class=\"o\">=</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">'d:/textfile.txt'</span><span class=\"p\">,</span><span class=\"s\">'w'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">file</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s\">\"START</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n    <span class=\"nb\">file</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s\">'</span><span class=\"si\">%</span><span class=\"s\">s</span><span class=\"se\">\\n</span><span class=\"s\">'</span> <span class=\"o\">%</span><span class=\"n\">L</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n\n<span class=\"nb\">file</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s\">\"END\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">file</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>START<br />\nPython<br />\nYUNDAEHEE<br />\n076923<br />\nEND<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<p>결과는 <code class=\"highlighter-rouge\">textfile.txt</code> 형식으로 <code class=\"highlighter-rouge\">D 드라이브</code>에 저장됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">변수명=open('경로', 'w')</code>을 통하여 텍스트파일을 작성할 수 있습니다. <code class=\"highlighter-rouge\">w</code>는 <code class=\"highlighter-rouge\">write</code>의 약어입니다.</p>\n\n<p><code class=\"highlighter-rouge\">변수명.write('내용')</code>을 사용하여 <code class=\"highlighter-rouge\">텍스트파일</code>에 <strong>문자열을 작성할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">변수명.close()</code>를 사용하여 <strong>텍스트파일의 작성을 종료할 수 있습니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>텍스트파일 한줄씩 읽기</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">L</span><span class=\"o\">=</span><span class=\"p\">[]</span>\n\n<span class=\"nb\">file</span><span class=\"o\">=</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">'d:/textfile.txt'</span><span class=\"p\">,</span><span class=\"s\">'r'</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"nb\">file</span><span class=\"o\">.</span><span class=\"n\">readline</span><span class=\"p\">()</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span><span class=\"n\">escape</span><span class=\"o\">=</span><span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span><span class=\"p\">:</span><span class=\"n\">escape</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n    \n    <span class=\"k\">if</span> <span class=\"n\">line</span><span class=\"p\">:</span>\n        <span class=\"n\">L</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"n\">escape</span><span class=\"p\">])</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">break</span>\n    \n<span class=\"nb\">file</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[‘START’, ‘Python’, ‘YUNDAEHEE’, ‘076923’, ‘END’]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">D 드라이브</code>에 저장되어있는 <code class=\"highlighter-rouge\">textfile.txt</code>를 불러옵니다.</p>\n\n<p><code class=\"highlighter-rouge\">변수명=open('경로', 'r')</code>를 통하여 텍스트파일을 불러올 수 있습니다. <code class=\"highlighter-rouge\">r</code>은 <code class=\"highlighter-rouge\">read</code>의 약어입니다.</p>\n\n<p><code class=\"highlighter-rouge\">변수명.readline()</code>을 이용하여 한줄씩 저장합니다.</p>\n\n<p><code class=\"highlighter-rouge\">if-else</code>문을 활용하여 <code class=\"highlighter-rouge\">List</code>에 한줄씩 저장합니다. <code class=\"highlighter-rouge\">append()</code>를 활용해 이어붙입니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">try-except</code>문, <code class=\"highlighter-rouge\">index</code>, <code class=\"highlighter-rouge\">len</code>, <code class=\"highlighter-rouge\">slice방법</code>을 활용하여 이스케이프 문자 <code class=\"highlighter-rouge\">\\n</code>를 제거한 후 표시할 수 있습니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3>텍스트파일 모두 읽기 (1)</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">L</span><span class=\"o\">=</span><span class=\"p\">[]</span>\n\n<span class=\"nb\">file</span><span class=\"o\">=</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">'d:/textfile.txt'</span><span class=\"p\">,</span><span class=\"s\">'r'</span><span class=\"p\">)</span>\n\n<span class=\"n\">lines</span><span class=\"o\">=</span><span class=\"nb\">file</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">()</span>\n\n<span class=\"nb\">file</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">)):</span>\n    <span class=\"n\">L</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[‘START’, ‘Python’, ‘YUNDAEHEE’, ‘076923’, ‘END’]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">변수명.readlines()</code>을 이용하여 <code class=\"highlighter-rouge\">List</code> 형식으로 모두 저장합니다. <code class=\"highlighter-rouge\">readline</code>에서 <code class=\"highlighter-rouge\">s</code>가 추가되어 <code class=\"highlighter-rouge\">readlines</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">for</code>문을 활용하여 <code class=\"highlighter-rouge\">lines</code>의 길이 만큼 <code class=\"highlighter-rouge\">반복</code>합니다.</p>\n\n<p>이 후, <code class=\"highlighter-rouge\">split('\\n')</code>을 활용하여 <code class=\"highlighter-rouge\">List</code>를 다시 나누고 <code class=\"highlighter-rouge\">[i][0]</code>의 위치의 문자만 출력합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>텍스트파일 모두 읽기 (2)</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"nb\">file</span><span class=\"o\">=</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">'d:/textfile.txt'</span><span class=\"p\">,</span><span class=\"s\">'r'</span><span class=\"p\">)</span>\n\n<span class=\"n\">All</span><span class=\"o\">=</span><span class=\"nb\">file</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"nb\">file</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"n\">lines</span><span class=\"o\">=</span><span class=\"n\">All</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[‘START’, ‘Python’, ‘YUNDAEHEE’, ‘076923’, ‘END’]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">변수명.read()</code>을 이용하여 <code class=\"highlighter-rouge\">str</code> 형식으로 모두 저장합니다.</p>\n\n<p>이 후, <code class=\"highlighter-rouge\">split('\\n')</code>을 활용하여 <code class=\"highlighter-rouge\">List</code>로 나누어 출력합니다.</p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 24강 - 집 함수",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-24/",
      "date"     : "2018-04-24 00:00:00 +0900",
  "content"   : "<h3 id=\"집-함수-zip\">집 함수 (zip)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">zip</code>를 사용하여 <strong>길이가 같은 자료형을 묶어 반환합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">list</code>, <code class=\"highlighter-rouge\">set</code>, <code class=\"highlighter-rouge\">dict</code> 함수 등을 <strong>같이 사용하여 결과를 반환합니다.</strong></p>\n\n<p><br /></p>\n\n<h3>함수 생성</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s\">\"YUN\"</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">\"하나\"</span><span class=\"p\">,</span><span class=\"s\">\"둘\"</span><span class=\"p\">,</span><span class=\"s\">\"셋\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"n\">c</span><span class=\"p\">)))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"n\">c</span><span class=\"p\">)))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">)))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[(‘Y’, 1, ‘하나’), (‘U’, 2, ‘둘’), (‘N’, 3, ‘셋’)]<br />\n{(‘Y’, 1, ‘하나’), (‘N’, 3, ‘셋’), (‘U’, 2, ‘둘’)}<br />\n{‘Y’: 1, ‘U’: 2, ‘N’: 3}</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">zip(자료형1, 자료형2, ....)</code>을 사용하여 <code class=\"highlighter-rouge\">묶어</code> 결과를 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">list()</code> 또는 <code class=\"highlighter-rouge\">set()</code> 등의 구문을 추가하지 않으면 <code class=\"highlighter-rouge\">&lt;zip object at 0x0506C940&gt;</code> 등의 <code class=\"highlighter-rouge\">iterator</code> 형태로 출력됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">dict()</code>의 경우 <code class=\"highlighter-rouge\">key</code>와 <code class=\"highlighter-rouge\">value</code>로 구성되어 있으므로 <strong>3개 이상은 묶을 수 없습니다.</strong></p>\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 23강 - 맵 함수",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-23/",
      "date"     : "2018-04-23 00:00:00 +0900",
  "content"   : "<h3 id=\"맵-함수-map\">맵 함수 (map)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">map</code>를 사용하여 <code class=\"highlighter-rouge\">범위</code>에 대한 <strong>모든 결과를 반환합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">lambda</code> 함수와 <code class=\"highlighter-rouge\">list</code> 함수를 <strong>같이 사용하여 결과를 반환합니다.</strong>\n<br /></p>\n\n<h3>함수 생성</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">f</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span><span class=\"n\">x</span><span class=\"o\">&gt;</span><span class=\"mi\">0</span>\n<span class=\"n\">g</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span><span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">2</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">))))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">))))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[False, False, False, False, False, False, True, True, True, True]<br />\n[0, 1, 4, 9, 16]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">map(함수, 범위)</code>를 사용하여 <code class=\"highlighter-rouge\">모든</code> 결과를 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">list()</code> 또는 <code class=\"highlighter-rouge\">set()</code> 등의 구문을 추가하지 않으면 <code class=\"highlighter-rouge\">&lt;map object at 0x05A2A890&gt;</code> 등의 <code class=\"highlighter-rouge\">iterator</code> 형태로 출력됩니다.</p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 22강 - 필터 함수",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-22/",
      "date"     : "2018-04-22 00:00:00 +0900",
  "content"   : "<h3 id=\"필터-함수-filter\">필터 함수 (filter)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">filter</code>를 사용하여 <code class=\"highlighter-rouge\">논리값(True or False)</code>을 반환하는 함수에서 <code class=\"highlighter-rouge\">참(True)</code>이 되는 값을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">lambda</code> 함수와 <code class=\"highlighter-rouge\">list</code> 함수 등을 <strong>같이 사용하여 결과를 반환합니다.</strong>\n<br /></p>\n\n<h3>함수 생성</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">f</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span><span class=\"n\">x</span><span class=\"o\">&gt;</span><span class=\"mi\">0</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">filter</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">))))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[1, 2, 3, 4]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">filter(함수, 범위)</code>를 사용하여 <code class=\"highlighter-rouge\">참(True)</code>의 결과를 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">list()</code> 또는 <code class=\"highlighter-rouge\">set()</code> 등의 구문을 추가하지 않으면 <code class=\"highlighter-rouge\">&lt;filter object at 0x05B3A830&gt;</code> 등의 <code class=\"highlighter-rouge\">iterator</code> 형태로 출력됩니다.</p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 21강 - 람다 함수",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-21/",
      "date"     : "2018-04-20 00:00:00 +0900",
  "content"   : "<h3 id=\"람다-함수-lambda\">람다 함수 (lambda)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">lambda</code>를 사용하여 한 줄로 되어있는 수학 함수를 생성할 수 있습니다. <strong>간단한 수학함수가 사용될 경우</strong> 람다 함수를 호출하여 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3>함수 생성</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">f</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">:</span><span class=\"n\">x</span><span class=\"o\">+</span><span class=\"n\">y</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"s\">\"YUN\"</span><span class=\"p\">,</span><span class=\"s\">\"DAEHEE\"</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>3<br />\n[1, 2, 3, 4]<br />\nYUNDAEHEE</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">함수명=lambda 매개변수1, 매개변수2, ... : 반환식</code>을 사용하여 람다 함수를 선언할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">함수명(인수1, 인수2 ...)</code>를 사용하여 함수를 호출합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">정수</code>, <code class=\"highlighter-rouge\">List</code>, <code class=\"highlighter-rouge\">문자열</code> 등을 사용 할 수 있습니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3>기본값 설정</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">f</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"n\">x</span><span class=\"o\">+</span><span class=\"n\">y</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>4<br />\n6</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">매개변수</code>에 <code class=\"highlighter-rouge\">기본값</code>을 할당할 수 있습니다. 기본값이 할당되면 함수를 호출할 때 <code class=\"highlighter-rouge\">매개변수</code>를 채우지 않으면 <code class=\"highlighter-rouge\">기본값</code>으로 사용합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>다중 입력</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">f</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"o\">*</span><span class=\"n\">x</span><span class=\"p\">:</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"mi\">2</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>14</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">매개변수</code>에 <code class=\"highlighter-rouge\">*</code>를 입력할 경우 <strong>갯수를 지정하지 않고 매개변수를 지정할 수 있습니다.</strong> 여러개의 매개변수들이 포함될 수 있습니다.</p>\n\n<p>단, 반환값은 <code class=\"highlighter-rouge\">하나의 값</code>만 반환할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>다중 반환</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">f</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span><span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span><span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span><span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">](</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">](</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">](</span><span class=\"mi\">1</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>2<br />\n3<br />\n4</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">List</code>로 사용할 경우 <code class=\"highlighter-rouge\">대괄호([])</code> 를 사용하여 선택된 수식으로 반환됩니다.</p>\n\n<p><br />\n<br /></p>\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 20강 - 사용자 정의 함수",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-20/",
      "date"     : "2018-04-18 00:00:00 +0900",
  "content"   : "<h3 id=\"사용자-정의-함수-user-defined-functions\">사용자 정의 함수 (User-defined Functions)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">def</code>와 <code class=\"highlighter-rouge\">return</code>을 사용하여 사용자 정의 함수를 생성할 수 있습니다. <strong>동일한 작업이 반복되는 경우</strong> 사용자 정의 함수를 호출하여 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3>함수 생성</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">add</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">]))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s\">\"YUN\"</span><span class=\"p\">,</span><span class=\"s\">\"DAEHEE\"</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>7<br />\n[1, 2, 3, 4, 5, 6]<br />\nYUNDAEHEE</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">def 함수명(매개변수1, 매개변수2, ....):</code>를 사용하여 사용자 정의 함수를 선언할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">함수명</code>으로 사용자 정의 함수를 <code class=\"highlighter-rouge\">호출</code>합니다.</p>\n\n<p>해당 함수에서 사용될 인수들을 <code class=\"highlighter-rouge\">매개변수들</code>에 선언합니다.</p>\n\n<p><code class=\"highlighter-rouge\">return 반환값</code>을 사용하여 <code class=\"highlighter-rouge\">반환값</code>이 결과로 반환됩니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">정수</code>, <code class=\"highlighter-rouge\">List</code>, <code class=\"highlighter-rouge\">문자열</code> 등을 사용 할 수 있습니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3>기본값 설정</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>11<br />\n3</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">매개변수</code>에 <code class=\"highlighter-rouge\">기본값</code>을 할당할 수 있습니다. 기본값이 할당되면 함수를 호출할 때 <code class=\"highlighter-rouge\">매개변수</code>를 채우지 않으면 <code class=\"highlighter-rouge\">기본값</code>으로 사용합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>다중 입력</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"n\">result</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n    \n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">num</span><span class=\"p\">:</span>\n        <span class=\"n\">result</span><span class=\"o\">+=</span><span class=\"n\">i</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>6</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">매개변수</code>에 <code class=\"highlighter-rouge\">*</code>를 입력할 경우 <strong>갯수를 지정하지 않고 매개변수를 지정할 수 있습니다.</strong> 여러개의 매개변수들이 포함될 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>다중 반환</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">calc</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">-</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">*</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">/</span><span class=\"n\">b</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">calc</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>(4, 2, 3, 3.0)<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">반환값</code>을 여러개로 지정할 경우 <code class=\"highlighter-rouge\">Tuple</code> 형식으로 결과들이 반환됩니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>최상위 함수</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">)</span>\n\n<span class=\"n\">plus</span><span class=\"o\">=</span><span class=\"n\">add</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">plus</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">(</span><span class=\"n\">plus</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>7<br />\n7</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">사용자 정의 함수</code>를 <strong>다른 함수의 인수로 사용할 수 있으며, 변수나 자료구조에도 저장이 가능합니다.</strong></p>\n\n<p>사용자 정의 함수로 구성된 <code class=\"highlighter-rouge\">add</code> 함수에 <code class=\"highlighter-rouge\">plus=add</code>를 추가하여 <code class=\"highlighter-rouge\">add</code> 함수를 <code class=\"highlighter-rouge\">plus</code>로 사용이 가능합니다.</p>\n\n<p>또한, <code class=\"highlighter-rouge\">func</code>함수에서 <code class=\"highlighter-rouge\">x</code>는 <strong>함수</strong>, <code class=\"highlighter-rouge\">y</code>, <code class=\"highlighter-rouge\">z</code>를 <strong>인수</strong>로 사용이 가능합니다.</p>\n\n<p><code class=\"highlighter-rouge\">func(함수, 인수1, 인수2)</code>로 사용하여 <code class=\"highlighter-rouge\">사용자 정의 함수</code>안에서 <code class=\"highlighter-rouge\">사용자 정의 함수</code>를 호출 할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 19강 -  List Comprehension",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-19/",
      "date"     : "2018-04-17 00:00:00 +0900",
  "content"   : "<h3 id=\"리스트-간소화-list-comprehension\">리스트 간소화 (List Comprehension)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">List</code>를 <strong>한 줄로 생성하여 간소화할 수 있습니다.</strong> <code class=\"highlighter-rouge\">조건문</code>등을 추가하여 코드를 간략화 할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3>생성</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)]</span> \n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">[리스트 값 for 변수 in 범위]</code>를 이용하여 <code class=\"highlighter-rouge\">범위</code>만큼 반복하여 <code class=\"highlighter-rouge\">변수</code>를 할당해 리스트에 <code class=\"highlighter-rouge\">리스트 값</code>을 채웁니다.</p>\n\n<p><code class=\"highlighter-rouge\">range(10)</code>은 <code class=\"highlighter-rouge\">0~9</code>의 값을 지니고 있으며 <code class=\"highlighter-rouge\">i</code>에서 각각의 값들을 호출합니다.</p>\n\n<p><code class=\"highlighter-rouge\">for</code>문을 통해 <code class=\"highlighter-rouge\">반복</code>하게 되어 <code class=\"highlighter-rouge\">리스트 값</code>을 조건에 맞게 채우게됩니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>조건</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">L1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">&gt;</span><span class=\"mi\">5</span><span class=\"p\">)]</span> \n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">L1</span><span class=\"p\">)</span>\n\n<span class=\"n\">L2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">&gt;</span><span class=\"mi\">5</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">%</span><span class=\"mi\">2</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">)]</span> <span class=\"mi\">3</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">L2</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[36, 49, 64, 81]<br />\n[36, 64]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">[리스트 값 for 변수 in 범위 if (조건)]</code>을 이용하여 <code class=\"highlighter-rouge\">if (조건)</code>을 추가해 <code class=\"highlighter-rouge\">조건식</code>에 맞는 경우의 <code class=\"highlighter-rouge\">리스트</code>를 생성할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">if (i&gt;5)</code>는 <code class=\"highlighter-rouge\">6~9</code>의 값을 지니고 있으며 <code class=\"highlighter-rouge\">i</code>에서 각각의 값을 호출할 때 <code class=\"highlighter-rouge\">5</code>부터 값을 호출합니다.</p>\n\n<p>또한 <code class=\"highlighter-rouge\">and</code>나 <code class=\"highlighter-rouge\">or</code> 등을 포함하여 <code class=\"highlighter-rouge\">조건식</code>을 추가할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>리스트화</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s\">\"YUNDAEHEE\"</span>\n\n<span class=\"n\">L1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">text</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">L1</span><span class=\"p\">)</span>\n\n<span class=\"n\">L2</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">([</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">text</span><span class=\"p\">]))</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">L2</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[‘Y’, ‘U’, ‘N’, ‘D’, ‘A’, ‘E’, ‘H’, ‘E’, ‘E’]<br />\n[‘E’, ‘Y’, ‘N’, ‘D’, ‘A’, ‘H’, ‘U’]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">List Comprehension</code>을 이용할 때, <code class=\"highlighter-rouge\">범위</code>를 <code class=\"highlighter-rouge\">문자열</code>로 사용하여 <strong>문자 값을 직접 할당할 수 있습니다.</strong></p>\n\n<p>또한 <code class=\"highlighter-rouge\">List Comprehension</code>에 <strong>함수를 포함하여 작성할 수 있습니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>Dictionary Comprehension</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s\">\"cheese\"</span>\n\n<span class=\"n\">D</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">i</span> <span class=\"p\">:</span> <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">text</span><span class=\"p\">}</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">D</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>{‘c’: 1, ‘h’: 1, ‘e’: 3, ‘s’: 1}</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">List</code> 이외에도 <code class=\"highlighter-rouge\">Dictionary Comprehension</code>를 이용하여 사전을 간소화할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">{key : value for 변수 in 범위}</code>를 이용하여 <code class=\"highlighter-rouge\">범위</code>만큼 반복하여 <code class=\"highlighter-rouge\">변수</code>를 할당해 <code class=\"highlighter-rouge\">key</code>값과 <code class=\"highlighter-rouge\">value</code>값을 채웁니다.</p>\n\n<p><code class=\"highlighter-rouge\">key</code>에는 <code class=\"highlighter-rouge\">문자</code>가 담겨있으며 <code class=\"highlighter-rouge\">value</code>에는 <code class=\"highlighter-rouge\">문자의 갯수</code>가 담겨있습니다.</p>\n\n<p><br />\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 18강 -  예외 형식",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-18/",
      "date"     : "2018-04-17 00:00:00 +0900",
  "content"   : "<h3 id=\"예외-형식-try-except\">예외 형식 (try-except)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">try-except</code> 함수를 이용하여 <strong>에러가 발생하는 부분을 처리할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<h3>try - except</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">while</span><span class=\"p\">(</span><span class=\"bp\">True</span><span class=\"p\">):</span>\n    \n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s\">\"숫자입력 : \"</span><span class=\"p\">)</span>\n    \n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n        \n    <span class=\"k\">except</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">\"숫자가 아닙니다.\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"---------------------\"</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>숫자입력 : 123<br />\n123<br />\n———————<br />\n숫자입력 : alpha<br />\n숫자가 아닙니다.<br />\n———————<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">while(True):</code>를 이용하여 일정 구문을 반복합니다.</p>\n\n<p><code class=\"highlighter-rouge\">try:</code> 구문은 오류가 발생하지 않았을 때 실행되는 구문입니다.</p>\n\n<p><code class=\"highlighter-rouge\">except:</code> 구문은 오류가 발생했을 때 실행되는 구문입니다.</p>\n\n<p><code class=\"highlighter-rouge\">try-except</code> 구문을 활용하여 <code class=\"highlighter-rouge\">ValueError</code> 등을 방지할 수 있습니다.</p>\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 17강 -  데이터 출력",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-17/",
      "date"     : "2018-04-16 00:00:00 +0900",
  "content"   : "<h3 id=\"데이터-출력-print\">데이터 출력 (print)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">print</code> 함수를 이용하여 데이터를 출력할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3>퍼센트 연산자</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mf\">3.0</span>\n\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">\"정수형 출력 : </span><span class=\"si\">%</span><span class=\"s\">d\"</span> <span class=\"o\">%</span> <span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">\"실수형 출력 : </span><span class=\"si\">%</span><span class=\"s\">f\"</span> <span class=\"o\">%</span> <span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>정수형 출력 : 3<br />\n실수형 출력 : 3.000000</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">%</code> 연산자를 활용하여 <code class=\"highlighter-rouge\">형변환</code>을 할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">형식 알아보기</code> : <a href=\"https://076923.github.io/posts/Python-10/\">10강 바로가기</a></p>\n\n<p><br />\n<br /></p>\n\n<h3>폭 설정</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mf\">3.0</span>\n\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">\"폭 설정 : </span><span class=\"si\">%3</span><span class=\"s\">d\"</span> <span class=\"o\">%</span> <span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">\"폭 설정 : </span><span class=\"si\">%5</span><span class=\"s\">d\"</span> <span class=\"o\">%</span> <span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>폭 설정 :   3<br />\n폭 설정 :     3<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">%상수</code>를 입력하여 <code class=\"highlighter-rouge\">상수</code> <strong>크기 만큼의 폭이 설정됩니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>정밀도 설정</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mf\">0.123456789</span>\n\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">\"정밀도 설정 : </span><span class=\"si\">%.3</span><span class=\"s\">f\"</span> <span class=\"o\">%</span> <span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">\"정밀도 설정 : </span><span class=\"si\">%.5</span><span class=\"s\">f\"</span> <span class=\"o\">%</span> <span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>정밀도 설정 : 0.123<br />\n정밀도 설정 : 0.12346<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">%.상수</code>를 입력하여 <code class=\"highlighter-rouge\">소수점(.)</code> 기호 뒤의 <code class=\"highlighter-rouge\">상수</code> <strong>크기 만큼의 정밀도가 설정됩니다.</strong></p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 정밀도는 <code class=\"highlighter-rouge\">반올림</code>하여 처리합니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3>폭과 정밀도 설정</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mf\">1234.56789</span>\n\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">\"폭&amp;정밀도 설정 : </span><span class=\"si\">%6.3</span><span class=\"s\">f\"</span> <span class=\"o\">%</span> <span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">\"폭&amp;정밀도 설정 : </span><span class=\"si\">%13.5</span><span class=\"s\">f\"</span> <span class=\"o\">%</span> <span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>폭&amp;정밀도 설정 : 1234.568<br />\n폭&amp;정밀도 설정 :   1234.56789</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">%n.m</code>를 입력하여 <code class=\"highlighter-rouge\">n</code> 크기 만큼의 <strong>폭</strong>과 <code class=\"highlighter-rouge\">m</code> 크기 만큼의 <strong>정밀도</strong>로 설정합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>format 설정 (1)</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"s\">\"Python\"</span>\n\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">\"정수:{0}</span><span class=\"se\">\\n</span><span class=\"s\">실수:{1}</span><span class=\"se\">\\n</span><span class=\"s\">문자열:{2}\"</span><span class=\"o\">.</span><span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"n\">c</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>정수:1<br />\n실수:2.0<br />\n문자열:Python</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">\"{0}{1}{2}...{n}\".format(index0, index1, index2, ..., indexn)</code>을 사용하여 포맷 형식을 설정할 수 있습니다.</p>\n\n<p>format의 <strong>인덱스의 순서대로 삽입됩니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>format 설정 (2)</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"1번\"</span><span class=\"p\">,</span> <span class=\"s\">\"2번\"</span><span class=\"p\">,</span> <span class=\"s\">\"3번\"</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">\"L0 = {0[0]}</span><span class=\"se\">\\n</span><span class=\"s\">L1 = {0[1]}\"</span><span class=\"o\">.</span><span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>L0 = 1번<br />\nL1 = 2번</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">\"{0[0]}{0[1]}....{n[m]}\".format(A,B...)\"</code>을 사용하여 포맷 형식을 설정할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">n</code>은 <strong>format에 포함된 순서</strong>를 의미하며 <code class=\"highlighter-rouge\">m</code>은 <strong>인덱스 안의 요소</strong>를 의미합니다.</p>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 50강 - 연산 (2)",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-50/",
      "date"     : "2018-04-10 00:00:00 +0900",
  "content"   : "<h3 id=\"연산-calculate\">연산 (Calculate)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch50/1.jpg\"><img src=\"/assets/images/C/opencv/ch50/1.jpg\" alt=\"1\" /></a>\n다양한 연산을 활용하여 <strong>영상이나 이미지를 변환을 할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">symm</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">calc</span><span class=\"p\">;</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Symmetry</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">symm</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Flip</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">symm</span><span class=\"p\">,</span> <span class=\"n\">FlipMode</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">symm</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>        \n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Calculate_2</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">src_symm</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n            <span class=\"n\">calc</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n\n            <span class=\"n\">src_symm</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Symmetry</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n                            \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Add</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_symm</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n            <span class=\"n\">CvWindow</span> <span class=\"n\">Add</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Add\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Sub</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_symm</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n            <span class=\"n\">CvWindow</span> <span class=\"n\">Sub</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Sub\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Mul</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_symm</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n            <span class=\"n\">CvWindow</span> <span class=\"n\">Mul</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Mul\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Div</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_symm</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n            <span class=\"n\">CvWindow</span> <span class=\"n\">Div</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Div\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Max</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_symm</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n            <span class=\"n\">CvWindow</span> <span class=\"n\">Max</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Max\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Min</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_symm</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n            <span class=\"n\">CvWindow</span> <span class=\"n\">Min</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Min\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n            \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">AbsDiff</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_symm</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n            <span class=\"n\">CvWindow</span> <span class=\"n\">AbsDiff</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"AbsDiff\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">WaitKey</span><span class=\"p\">();</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">Add</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span>\n                <span class=\"n\">Sub</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span>\n                <span class=\"n\">Mul</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span>\n                <span class=\"n\">Div</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span>\n                <span class=\"n\">Max</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span>\n                <span class=\"n\">Min</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span>\n                <span class=\"n\">AbsDiff</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n                  \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">symm</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">symm</span><span class=\"p\">);</span>                      \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">calc</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">calc</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplImage</span> <span class=\"n\">src_symm</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n<span class=\"n\">calc</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">src_symm</code>을 생성하여 <code class=\"highlighter-rouge\">src</code>의 이미지를 <code class=\"highlighter-rouge\">복제</code>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">calc</code>를 결과 이미지로 사용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">src_symm</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Symmetry</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">src_symm</code>을 <code class=\"highlighter-rouge\">좌우대칭</code>한 이미지로 변경합니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"add-연산\">Add 연산</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Add</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_symm</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n<span class=\"n\">CvWindow</span> <span class=\"n\">Add</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Add\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Add()</code>를 이용하여 <code class=\"highlighter-rouge\">Add</code> 연산을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.Add(이미지1, 이미지2, 결과, 마스크)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지1</code>과 <code class=\"highlighter-rouge\">이미지2</code>를 <strong>합산합니다.</strong></p>\n\n<p><br /></p>\n\n<h2 id=\"sub-연산\">Sub 연산</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Sub</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_symm</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n<span class=\"n\">CvWindow</span> <span class=\"n\">Sub</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Sub\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Sub()</code>를 이용하여 <code class=\"highlighter-rouge\">Sub</code> 연산을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.Sub(이미지1, 이미지2, 결과, 마스크)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지1</code>에서 <code class=\"highlighter-rouge\">이미지2</code>를 <strong>감산합니다.</strong></p>\n\n<p><br /></p>\n\n<h2 id=\"mul-연산\">Mul 연산</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Mul</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_symm</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n<span class=\"n\">CvWindow</span> <span class=\"n\">Mul</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Mul\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Mul()</code>를 이용하여 <code class=\"highlighter-rouge\">Mul</code> 연산을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.Mul(이미지1, 이미지2, 결과, 스케일)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지1</code>에서 <code class=\"highlighter-rouge\">이미지2</code>를 <strong>곱합니다.</strong></p>\n\n<p><br /></p>\n\n<h2 id=\"div-연산\">Div 연산</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Div</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_symm</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n<span class=\"n\">CvWindow</span> <span class=\"n\">Div</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Div\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Div()</code>를 이용하여 <code class=\"highlighter-rouge\">Div</code> 연산을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.Div(이미지1, 이미지2, 결과, 스케일)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지1</code>에서 <code class=\"highlighter-rouge\">이미지2</code>를 <strong>나눕니다.</strong></p>\n\n<p><br /></p>\n\n<h2 id=\"max-연산\">Max 연산</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Max</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_symm</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n<span class=\"n\">CvWindow</span> <span class=\"n\">Max</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Max\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Max()</code>를 이용하여 <code class=\"highlighter-rouge\">Max</code> 연산을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.Max(이미지1, 이미지2, 결과)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지1</code>와 <code class=\"highlighter-rouge\">이미지2</code>에서 <strong>최댓값을 찾습니다.</strong></p>\n\n<p><br /></p>\n\n<h2 id=\"min-연산\">Min 연산</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Min</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_symm</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n<span class=\"n\">CvWindow</span> <span class=\"n\">Min</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Max\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Min()</code>를 이용하여 <code class=\"highlighter-rouge\">Min</code> 연산을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.Min(이미지1, 이미지2, 결과)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지1</code>와 <code class=\"highlighter-rouge\">이미지2</code>에서 <strong>최솟값을 찾습니다.</strong></p>\n\n<p><br /></p>\n\n<h2 id=\"absdiff-연산\">AbsDiff 연산</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">AbsDiff</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_symm</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n<span class=\"n\">CvWindow</span> <span class=\"n\">AbsDiff</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"AbsDiff\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.AbsDiff()</code>를 이용하여 <code class=\"highlighter-rouge\">AbsDiff</code> 연산을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.AbsDiff(이미지1, 이미지2, 결과)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지1</code>에서 <code class=\"highlighter-rouge\">이미지2</code>의 <strong>절댓값 차이를 계산합니다.</strong></p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"add-연산-1\">Add 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch50/2.png\"><img src=\"/assets/images/C/opencv/ch50/2.png\" alt=\"2\" /></a>\n<br /></p>\n<h2 id=\"sub-연산-1\">Sub 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch50/3.png\"><img src=\"/assets/images/C/opencv/ch50/3.png\" alt=\"3\" /></a>\n<br /></p>\n<h2 id=\"mul-연산-1\">Mul 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch50/4.png\"><img src=\"/assets/images/C/opencv/ch50/4.png\" alt=\"4\" /></a>\n<br /></p>\n<h2 id=\"div-연산-1\">Div 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch50/5.png\"><img src=\"/assets/images/C/opencv/ch50/5.png\" alt=\"5\" /></a>\n<br /></p>\n<h2 id=\"max-연산-1\">Max 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch50/6.png\"><img src=\"/assets/images/C/opencv/ch50/6.png\" alt=\"6\" /></a>\n<br /></p>\n<h2 id=\"min-연산-1\">Min 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch50/7.png\"><img src=\"/assets/images/C/opencv/ch50/7.png\" alt=\"7\" /></a>\n<br /></p>\n<h2 id=\"absdiff-연산-1\">AbsDiff 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch50/8.png\"><img src=\"/assets/images/C/opencv/ch50/8.png\" alt=\"8\" /></a>\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 49강 - 연산 (1)",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-49/",
      "date"     : "2018-04-10 00:00:00 +0900",
  "content"   : "<h3 id=\"연산-calculate\">연산 (Calculate)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch49/1.jpg\"><img src=\"/assets/images/C/opencv/ch49/1.jpg\" alt=\"1\" /></a>\n다양한 연산을 활용하여 <strong>영상이나 이미지를 변환을 할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">bin</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">calc</span><span class=\"p\">;</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">bin</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Calculate_1</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">src_bin</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n            <span class=\"n\">calc</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src_bin</span><span class=\"p\">).</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src_bin</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">GrayToBgr</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">And</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_bin</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n            <span class=\"n\">CvWindow</span> <span class=\"n\">And</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"And\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Or</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_bin</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n            <span class=\"n\">CvWindow</span> <span class=\"n\">Or</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Or\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Xor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_bin</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n            <span class=\"n\">CvWindow</span> <span class=\"n\">Xor</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Xor\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Not</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n            <span class=\"n\">CvWindow</span> <span class=\"n\">Not</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Not\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">WaitKey</span><span class=\"p\">();</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">And</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span>\n                <span class=\"n\">Or</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span>\n                <span class=\"n\">Xor</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span>\n                <span class=\"n\">Not</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n                  \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">bin</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">);</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">calc</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">calc</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplImage</span> <span class=\"n\">src_bin</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n<span class=\"n\">calc</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">src_bin</code>을 생성하여 <code class=\"highlighter-rouge\">src</code>의 이미지를 <code class=\"highlighter-rouge\">복제</code>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">calc</code>를 결과 이미지로 사용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src_bin</span><span class=\"p\">).</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src_bin</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">GrayToBgr</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">src_bin</code>에 <code class=\"highlighter-rouge\">이진화</code>를 적용한 후, <code class=\"highlighter-rouge\">색상 형식</code>으로 즉각 변환시킵니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"and-연산\">And 연산</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">And</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_bin</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n<span class=\"n\">CvWindow</span> <span class=\"n\">And</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"And\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.And()</code>를 이용하여 <code class=\"highlighter-rouge\">And</code> 연산을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.And(이미지1, 이미지2, 결과, 마스크)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지2</code>가 흑백 이미지 일 경우, <code class=\"highlighter-rouge\">이미지2</code>의 <strong>흰색 부분만 출력합니다.</strong></p>\n\n<p><br /></p>\n\n<h2 id=\"or-연산\">Or 연산</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Or</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_bin</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n<span class=\"n\">CvWindow</span> <span class=\"n\">Or</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Or\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.And()</code>를 이용하여 <code class=\"highlighter-rouge\">And</code> 연산을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.And(이미지1, 이미지2, 결과, 마스크)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지2</code>가 흑백 이미지 일 경우, <code class=\"highlighter-rouge\">이미지2</code>의 <strong>검은색 부분만 출력합니다.</strong></p>\n\n<p><br /></p>\n\n<h2 id=\"xor-연산\">Xor 연산</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Xor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">src_bin</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n<span class=\"n\">CvWindow</span> <span class=\"n\">Xor</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Xor\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Xor()</code>를 이용하여 <code class=\"highlighter-rouge\">Xor</code> 연산을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.Xor(이미지1, 이미지2, 결과, 마스크)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지2</code>가 흑백 이미지 일 경우, <code class=\"highlighter-rouge\">이미지2</code>의 <strong>검은색 부분만 출력하며, 흰색 부분은 반전 출력합니다.</strong></p>\n\n<p><br /></p>\n\n<h2 id=\"not-연산\">Not 연산</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Not</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span>\n<span class=\"n\">CvWindow</span> <span class=\"n\">Not</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"Not\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Not()</code>를 이용하여 <code class=\"highlighter-rouge\">Not</code> 연산을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.Not(이미지, 결과, 마스크)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지</code>가 흑백 이미지 일 경우, <strong>반전 시켜 출력합니다.</strong></p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"and-연산-1\">And 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch49/2.png\"><img src=\"/assets/images/C/opencv/ch49/2.png\" alt=\"2\" /></a>\n<br /></p>\n<h2 id=\"or-연산-1\">Or 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch49/3.png\"><img src=\"/assets/images/C/opencv/ch49/3.png\" alt=\"3\" /></a>\n<br /></p>\n<h2 id=\"xor-연산-1\">Xor 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch49/4.png\"><img src=\"/assets/images/C/opencv/ch49/4.png\" alt=\"4\" /></a>\n<br /></p>\n<h2 id=\"not-연산-1\">Not 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch49/5.png\"><img src=\"/assets/images/C/opencv/ch49/5.png\" alt=\"5\" /></a>\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "C#-OpenCV 예제 : 공 추적",
      "category" : "",
      "tags"     : "C#-OpenCV 예제",
      "url"      : "/exercise/C-opencv-ball_tracking/",
      "date"     : "2018-04-08 00:00:00 +0900",
  "content"   : "<h3 id=\"ball-tracking\">Ball Tracking</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch3/1.png\"><img src=\"/assets/images/C/opencv/ex/ch3/1.png\" alt=\"1\" /></a>\n<strong>영상이나 이미지에서 공을 추적합니다.</strong> 움직이는 물체를 검출 할 수 있습니다.</p>\n\n<p>카메라나 동영상에서 움직이는 소형 물체를 추적할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">이진화(Binary)</code>를 적용하여 검출하기 쉬운 상태로 변환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">모폴로지(Morphology)</code>와 <code class=\"highlighter-rouge\">비트연산(Bitwise)</code> 활용하여 배경을 삭제합니다.</p>\n\n<p>배경이 삭제된 이미지에서 <code class=\"highlighter-rouge\">라벨링(Labeling)</code>을 통하여 물체를 검출합니다.</p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-1\">Step 1</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch3/2.png\"><img src=\"/assets/images/C/opencv/ex/ch3/2.png\" alt=\"2\" /></a></p>\n\n<p><br /></p>\n\n<ol>\n  <li>그레이스케일 적용</li>\n  <li>블러 &amp; 이진화 적용</li>\n</ol>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-opencv-10/\">그레이스케일 바로가기</a> <br />\n<a href=\"https://076923.github.io/posts/C-opencv-13/\">블러 바로가기</a> <br />\n<a href=\"https://076923.github.io/posts/C-opencv-12/\">이진화 바로가기</a> <br /></p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-2\">Step 2</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch3/3.png\"><img src=\"/assets/images/C/opencv/ex/ch3/3.png\" alt=\"3\" /></a></p>\n\n<p><br /></p>\n\n<p>배경 적용</p>\n\n<ol>\n  <li>모폴로지 적용</li>\n  <li>모폴로지 연산 적용</li>\n</ol>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-opencv-27/\">모폴로지 바로가기</a> <br />\n<a href=\"https://076923.github.io/posts/C-opencv-28/\">모포롤지 연산 바로가기</a> <br /></p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-3\">Step 3</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch3/4.png\"><img src=\"/assets/images/C/opencv/ex/ch3/4.png\" alt=\"4\" /></a></p>\n\n<p><br /></p>\n\n<p>배경 병합</p>\n\n<ol>\n  <li>비트 연산 (Or)</li>\n</ol>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-opencv-42/\">비트 연산 바로가기</a></p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-4\">Step 4</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch3/5.png\"><img src=\"/assets/images/C/opencv/ex/ch3/5.png\" alt=\"5\" /></a></p>\n\n<p><br /></p>\n\n<p>물체 연산</p>\n\n<ol>\n  <li>블러 &amp; 이진화 적용</li>\n  <li>모폴로지 연산</li>\n</ol>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-opencv-13/\">블러 바로가기</a> <br />\n<a href=\"https://076923.github.io/posts/C-opencv-12/\">이진화 바로가기</a> <br />\n<a href=\"https://076923.github.io/posts/C-opencv-12/\">이진화 바로가기</a> <br /></p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-5--way---1\">Step 5 : Way - 1</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch3/6.png\"><img src=\"/assets/images/C/opencv/ex/ch3/6.png\" alt=\"6\" /></a></p>\n\n<p><br /></p>\n\n<p>Way 1 : 물체 남기기</p>\n\n<ol>\n  <li>비트 연산 (And)</li>\n</ol>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-opencv-42/\">비트 연산 바로가기</a></p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-5--way---2\">Step 5 : Way - 2</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch3/7.png\"><img src=\"/assets/images/C/opencv/ex/ch3/7.png\" alt=\"7\" /></a></p>\n\n<p><br /></p>\n\n<p>Way 2 : 물체 추적</p>\n\n<ol>\n  <li>라벨링</li>\n  <li>결과 표시</li>\n</ol>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-opencv-32/\">라벨링 바로가기</a> <br />\n<a href=\"https://076923.github.io/posts/C-opencv-17/\">결과 표시 바로가기</a></p>\n\n<p><br />\n<br /></p>\n<h2 id=\"video-file\">Video File</h2>\n<hr />\n\n<h3 id=\"way---1\">Way - 1</h3>\n\n<video src=\"/assets/images/C/opencv/ex/ch3/way1.mp4\" autoplay=\"\" loop=\"\" controls=\"\" height=\"700\"></video>\n\n<p><br /></p>\n\n<h3 id=\"way---2\">Way - 2</h3>\n\n<video src=\"/assets/images/C/opencv/ex/ch3/way2.mp4\" autoplay=\"\" loop=\"\" controls=\"\" height=\"700\"></video>\n\n<p><br />\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "C#-OpenCV 예제 : 색상 원 검출",
      "category" : "",
      "tags"     : "C#-OpenCV 예제",
      "url"      : "/exercise/C-opencv-color_circle_detection/",
      "date"     : "2018-04-04 00:00:00 +0900",
  "content"   : "<h3 id=\"color-circle-detection\">Color Circle Detection</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch2/1.jpg\"><img src=\"/assets/images/C/opencv/ex/ch2/1.jpg\" alt=\"1\" /></a>\n<strong>원을 검출하여 색상을 파악합니다.</strong> 다양한 이미지나 동영상에서 색상이 포함된 원을 검출 할 수 있습니다.</p>\n\n<p>동영상이나 이미지에서 <code class=\"highlighter-rouge\">이진화(Binary)</code>와 <code class=\"highlighter-rouge\">모폴로지(Morphology)</code>를 통하여 이미지를 검출용 이미지로 변환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">원 검출(Hough Transform Circles)</code>를 사용하여 원을 검출합니다.</p>\n\n<p>검출이 완료되었다면 색상 검출을 위하여 <code class=\"highlighter-rouge\">관심 영역(Region of Interest)</code>을 생성하여 개별 적용합니다.</p>\n\n<p>관심 영역 위에 <code class=\"highlighter-rouge\">HSV</code>를 적용한 후, <code class=\"highlighter-rouge\">난수(Random)</code>을 생성하여 검출 이미지의 정확도를 파악합니다.</p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-1\">Step 1</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch2/2.png\"><img src=\"/assets/images/C/opencv/ex/ch2/2.png\" alt=\"2\" /></a></p>\n\n<p><br /></p>\n\n<ol>\n  <li>이진화 적용</li>\n  <li>모폴로지 &amp; 블러</li>\n</ol>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-opencv-12/\">이진화 바로가기</a> <br />\n<a href=\"https://076923.github.io/posts/C-opencv-27/\">모폴로지 바로가기</a> <br />\n<a href=\"https://076923.github.io/posts/C-opencv-13/\">블러 바로가기</a></p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-2\">Step 2</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch2/3.png\"><img src=\"/assets/images/C/opencv/ex/ch2/3.png\" alt=\"3\" /></a></p>\n\n<p><br /></p>\n\n<ol>\n  <li>원 검출</li>\n  <li>좌표 저장</li>\n</ol>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-opencv-26/\">원 검출 바로가기</a></p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-3\">Step 3</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch2/4.png\"><img src=\"/assets/images/C/opencv/ex/ch2/4.png\" alt=\"4\" /></a></p>\n\n<p><br /></p>\n\n<ol>\n  <li>좌표 불러오기</li>\n  <li>관심 영역 설정</li>\n</ol>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-opencv-9/\">관심 영역 바로가기</a></p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-4\">Step 4</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch2/5.png\"><img src=\"/assets/images/C/opencv/ex/ch2/5.png\" alt=\"5\" /></a></p>\n\n<p><br /></p>\n\n<ol>\n  <li>구역 설정</li>\n  <li>난수 생성</li>\n  <li>색상 검출</li>\n  <li>정확도 파악</li>\n</ol>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-27/\">난수 바로가기</a> <br />\n<a href=\"https://076923.github.io/posts/C-opencv-15/\">색상 검출 바로가기</a></p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-5\">Step 5</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch2/6.png\"><img src=\"/assets/images/C/opencv/ex/ch2/6.png\" alt=\"6\" /></a></p>\n\n<p><br /></p>\n\n<p>결과 표시</p>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-opencv-17/\">결과 표시 바로가기</a></p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-6\">Step 6</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch2/7.png\"><img src=\"/assets/images/C/opencv/ex/ch2/7.png\" alt=\"7\" /></a></p>\n\n<p><br /></p>\n\n<p>HDC 적용</p>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-opencv-36/\">HDC 바로가기</a></p>\n\n<p><br />\n<br /></p>\n<h2 id=\"video-file\">Video File</h2>\n<hr />\n<video src=\"/assets/images/C/opencv/ex/ch2/git.mp4\" autoplay=\"\" loop=\"\" controls=\"\" height=\"700\"></video>\n\n<p><br />\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "C#-OpenCV 예제 : 명함(문서) 인식",
      "category" : "",
      "tags"     : "C#-OpenCV 예제",
      "url"      : "/exercise/C-opencv-document_recognition/",
      "date"     : "2018-04-02 00:00:00 +0900",
  "content"   : "<h3 id=\"document-recognition\">Document Recognition</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch1/1.png\"><img src=\"/assets/images/C/opencv/ex/ch1/1.png\" alt=\"1\" /></a>\n<strong>명함이나 문서의 크기를 변환 후 해당 문자를 인식합니다.</strong></p>\n\n<p>동영상이나 이미지에서 <code class=\"highlighter-rouge\">코너 검출(Corner Detector)</code>하여 <code class=\"highlighter-rouge\">벡터의 내적(Dot Product)</code>을 사용해 사각형을 검출합니다.</p>\n\n<p>이 후, <code class=\"highlighter-rouge\">기하학적 변환(Warp Perspective)</code>을 이용하여 검출하기 쉬운 이미지로 변경합니다.</p>\n\n<p>검출용 이미지를 <code class=\"highlighter-rouge\">Tesseract 라이브러리</code>를 이용하여 문자를 검출하며 <code class=\"highlighter-rouge\">foreach</code>문과 <code class=\"highlighter-rouge\">유니코드</code> 등을 이용하여 문자들에서 유의미한 데이터(이름, 전화번호, 상호명 등)를 얻어냅니다.</p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-1\">Step 1</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch1/2.png\"><img src=\"/assets/images/C/opencv/ex/ch1/2.png\" alt=\"2\" /></a></p>\n\n<p><br /></p>\n\n<ol>\n  <li>관심 채널</li>\n  <li>이진화 적용 &amp; 캐니 엣지</li>\n  <li>코너 검출</li>\n  <li>벡터 내적을 통하여 사각형 파악</li>\n</ol>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-opencv-12/\">이진화 바로가기</a> <br />\n<a href=\"https://076923.github.io/posts/C-opencv-14/\">케니 엣지 바로가기</a> <br />\n<a href=\"https://076923.github.io/posts/C-opencv-21/\">코너 검출 바로가기</a></p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-2\">Step 2</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch1/3.png\"><img src=\"/assets/images/C/opencv/ex/ch1/3.png\" alt=\"3\" /></a></p>\n\n<p><br /></p>\n\n<ol>\n  <li>검출 좌표 저장</li>\n  <li>기하학적 변환</li>\n</ol>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-opencv-18/\">기하학적 변환 바로가기</a></p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-3\">Step 3</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch1/4.png\"><img src=\"/assets/images/C/opencv/ex/ch1/4.png\" alt=\"4\" /></a></p>\n\n<p><br /></p>\n\n<ol>\n  <li>tesseract 라이브러리</li>\n  <li>영문자 판독</li>\n</ol>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-tesseract-2/\">tesseract 라이브러리 바로가기</a></p>\n\n<p><br />\n<br /></p>\n<h2 id=\"step-4\">Step 4</h2>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ex/ch1/5.png\"><img src=\"/assets/images/C/opencv/ex/ch1/5.png\" alt=\"5\" /></a></p>\n\n<p><br /></p>\n\n<ol>\n  <li>foreach문</li>\n  <li>아스키 코드 &amp; 유니 코드</li>\n</ol>\n\n<p><br /></p>\n\n<p><a href=\"https://076923.github.io/posts/C-11/\">foreach문 바로가기</a></p>\n\n<p><br />\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 16강 -  데이터 입력",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-16/",
      "date"     : "2018-04-01 00:00:00 +0900",
  "content"   : "<h3 id=\"데이터-입력-input\">데이터 입력 (input)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">input</code> 함수를 이용하여 데이터를 입력받을 수 있습니다.</p>\n\n<p>입력 받은 초기 데이터 형식은 <code class=\"highlighter-rouge\">str</code>입니다.</p>\n\n<p><br /></p>\n\n<h3>단일 데이터 입력</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">datum</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s\">\"입력 : \"</span><span class=\"p\">)</span>\n\n<span class=\"n\">answer</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">datum</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">5</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">answer</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>입력 : 3<br />\n8</dd>\n</dl>\n\n<p><code class=\"highlighter-rouge\">int(데이터)</code>를 통하여 <code class=\"highlighter-rouge\">문자열</code>을 <code class=\"highlighter-rouge\">정수형</code>으로 변환하여 계산합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>다중 데이터 입력</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s\">\"입력 (x,y,z) : \"</span><span class=\"p\">)</span>\n\n<span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s\">','</span><span class=\"p\">)</span>\n<span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"o\">=</span> <span class=\"n\">L</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">L</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">L</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>입력 (x,y,z) : 1,2,3<br />\n1<br />\n2<br />\n3</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">a.split(b)</code>를 이용하여 <code class=\"highlighter-rouge\">data</code>에서 <code class=\"highlighter-rouge\">콤마(,)</code>마다 분리하여 <code class=\"highlighter-rouge\">리스트</code>로 저장합니다.</p>\n\n<p>이 후, 각각의 변수에 할당합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>다중 데이터 입력 간소화</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s\">\"데이터 입력 (a,b,c) : \"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s\">','</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>데이터 입력 (a,b,c) : 4,qqq,07<br />\n4<br />\nqqq<br />\n07</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">input()</code>에서 데이터 할당과 동시에 <code class=\"highlighter-rouge\">a.split(b)</code> 구문을 이용하여 <code class=\"highlighter-rouge\">콤마(,)</code>마다 분리하여 저장합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 반복문을 이용하여 <code class=\"highlighter-rouge\">콤마(,)</code> 이외에도 글자 사이사이에 있는 <code class=\"highlighter-rouge\">공백 ( )</code>을 제거하여 할당 할 수 있습니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">input()</code> 함수의 할당 된 데이터는 <code class=\"highlighter-rouge\">str</code> 형식으로 취급합니다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 15강 -  반복문",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-15/",
      "date"     : "2018-03-28 00:00:00 +0900",
  "content"   : "<h3 id=\"반복문-for-while\">반복문 (for, while)</h3>\n<hr />\n<p>Python에서는 <code class=\"highlighter-rouge\">for</code>와 <code class=\"highlighter-rouge\">while</code>을 이용하여 반복문을 구성할 수 있습니다.</p>\n\n<p>반복문에는 <code class=\"highlighter-rouge\">List</code>, <code class=\"highlighter-rouge\">Tuple</code>, <code class=\"highlighter-rouge\">Str</code>, <code class=\"highlighter-rouge\">range</code> 값을 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3>for 문</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"일\"</span><span class=\"p\">,</span><span class=\"s\">\"이\"</span><span class=\"p\">,</span><span class=\"s\">\"삼\"</span><span class=\"p\">]</span>\n<span class=\"n\">T</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">S</span> <span class=\"o\">=</span> <span class=\"s\">\"윤대희\"</span>\n<span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">L</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">T</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">S</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">total</span> <span class=\"o\">+=</span> <span class=\"n\">i</span>\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"n\">total</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>일<br />\n이<br />\n삼<br />\n1<br />\n2<br />\n3<br />\n윤<br />\n대<br />\n희<br />\n45</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">for 원소 in 목록:</code>을 이용하여 반복문을 실행시킬 수 있습니다.</p>\n\n<p>목록에는 <code class=\"highlighter-rouge\">리스트</code>, <code class=\"highlighter-rouge\">튜플</code>, <code class=\"highlighter-rouge\">문자열</code>, <code class=\"highlighter-rouge\">범위</code> 값 등을 이용할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>while 문</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"일\"</span><span class=\"p\">,</span><span class=\"s\">\"이\"</span><span class=\"p\">,</span><span class=\"s\">\"삼\"</span><span class=\"p\">]</span>\n<span class=\"n\">T</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">S</span> <span class=\"o\">=</span> <span class=\"s\">\"윤대희\"</span>\n<span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">):</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n    <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">):</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n    <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">):</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n    <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    \n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n    <span class=\"n\">total</span> <span class=\"o\">+=</span> <span class=\"n\">i</span>\n    <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">total</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>일<br />\n이<br />\n삼<br />\n1<br />\n2<br />\n3<br />\n윤<br />\n대<br />\n희<br />\n45</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">while 조건:</code>을 이용하여 반복문을 실행시킬 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">조건</code>에는 <code class=\"highlighter-rouge\">참</code>과 <code class=\"highlighter-rouge\">거짓</code>의 값으로 반환되어야 합니다.</p>\n\n<p><code class=\"highlighter-rouge\">참</code>값일 때 반복하며 <code class=\"highlighter-rouge\">거짓</code>일 때 종료합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>for문 - continue &amp; break</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span> <span class=\"k\">break</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"break\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span> <span class=\"k\">continue</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"continue\"</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>0<br />\n1<br />\n2<br />\nbreak<br />\n0<br />\n1<br />\n2<br />\n4<br />\ncontinue</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">if문</code>과 <code class=\"highlighter-rouge\">break</code>, <code class=\"highlighter-rouge\">continue</code>를 이용하여 조건에 만족 시 <code class=\"highlighter-rouge\">종료</code>하거나 <code class=\"highlighter-rouge\">건너뛰게</code> 할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>while문 - continue &amp; break</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n    <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span> <span class=\"k\">break</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"break\"</span><span class=\"p\">)</span>  \n\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n    <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span> <span class=\"k\">continue</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"continue\"</span><span class=\"p\">)</span>  </code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>0<br />\n1<br />\n2<br />\nbreak<br />\n0<br />\n1<br />\n2<br />\n4<br />\n5<br />\ncontinue</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">if문</code>과 <code class=\"highlighter-rouge\">break</code>, <code class=\"highlighter-rouge\">continue</code>를 이용하여 조건에 만족 시 <code class=\"highlighter-rouge\">종료</code>하거나 <code class=\"highlighter-rouge\">건너뛰게</code> 할 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>Tip : <code class=\"highlighter-rouge\">break</code> 또는 <code class=\"highlighter-rouge\">continue</code> <strong>구문을 만났을 때 종료하거나 건너뜁니다.</strong></p>\n  </li>\n  <li>\n    <p>Tip : <code class=\"highlighter-rouge\">while</code>문에서 <code class=\"highlighter-rouge\">continue</code>구문을 잘 못 사용할 경우 <code class=\"highlighter-rouge\">무한 루프</code>에 빠질 수 있습니다.</p>\n  </li>\n</ul>\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 14강 -  분기문",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-14/",
      "date"     : "2018-03-28 00:00:00 +0900",
  "content"   : "<h3 id=\"제어문-if\">제어문 (If)</h3>\n<hr />\n<p>Python에서는 <code class=\"highlighter-rouge\">if</code>, <code class=\"highlighter-rouge\">elif</code>, <code class=\"highlighter-rouge\">else</code> 또는 <code class=\"highlighter-rouge\">Tuple</code>, <code class=\"highlighter-rouge\">Dictionary</code>, <code class=\"highlighter-rouge\">삼항연산자</code>을 이용하여 분기문을 구성할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3>if 문</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n<span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"o\">&gt;</span> <span class=\"mi\">100</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"크다\"</span><span class=\"p\">)</span>\n<span class=\"k\">elif</span> <span class=\"n\">a</span> <span class=\"o\">==</span> <span class=\"mi\">100</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"같다\"</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"작다\"</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>같다</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">콜론(:)</code>과 <code class=\"highlighter-rouge\">탭(Tab)</code>을 이용하여 해당 분기문에 대한 내용을 구성할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>Tuple</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"o\">&gt;</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">*</span><span class=\"mi\">2</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">-</span><span class=\"mi\">4</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"p\">[</span><span class=\"n\">a</span><span class=\"o\">&gt;</span><span class=\"mi\">5</span><span class=\"p\">]</span>  \n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>1<br />\n1</dd>\n</dl>\n\n<p><br /></p>\n\n<p>튜플을 이용하여 <code class=\"highlighter-rouge\">if</code>문처럼 사용할 수 있습니다.</p>\n\n<p>튜플을 생성하여 <code class=\"highlighter-rouge\">(거짓, 참) [조건]</code>으로 사용할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>Dictionary</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"일\"</span><span class=\"p\">)</span>\n<span class=\"k\">elif</span> <span class=\"n\">a</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"이\"</span><span class=\"p\">)</span>\n<span class=\"k\">elif</span> <span class=\"n\">a</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"삼\"</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"알 수 없음\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span> <span class=\"p\">:</span> <span class=\"s\">\"일\"</span><span class=\"p\">,</span> <span class=\"mi\">2</span> <span class=\"p\">:</span> <span class=\"s\">\"이\"</span><span class=\"p\">,</span> <span class=\"mi\">3</span> <span class=\"p\">:</span> <span class=\"s\">\"삼\"</span><span class=\"p\">}</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"s\">\"알 수 없음\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>알 수 없음<br />\n알 수 없음</dd>\n</dl>\n\n<p><br /></p>\n\n<p>사전을 이용하여 <code class=\"highlighter-rouge\">if</code>문처럼 사용할 수 있습니다.</p>\n\n<p>사전을 생성하여 <code class=\"highlighter-rouge\">key</code>와 <code class=\"highlighter-rouge\">value</code> 값을 할당합니다.</p>\n\n<p><code class=\"highlighter-rouge\">사전.get(key, 예외)</code>을 이용하여 <code class=\"highlighter-rouge\">key</code>를 호출하여 <code class=\"highlighter-rouge\">value</code>를 불러옵니다. <strong>값이 없는 경우</strong> <code class=\"highlighter-rouge\">예외</code> <strong>구문을 출력합니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>삼항연산자</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"o\">&gt;</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">*</span><span class=\"mi\">2</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">-</span><span class=\"mi\">4</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">*</span><span class=\"mi\">2</span> <span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"o\">&gt;</span> <span class=\"mi\">5</span> <span class=\"k\">else</span> <span class=\"n\">a</span><span class=\"o\">-</span><span class=\"mi\">4</span> \n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>1<br />\n1</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">삼항연산자</code>를 사용하여 <strong>코드를 간략화 할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">참값 if 조건 else 거짓값</code>으로 구성할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">조건</code>에 부합할 경우 <code class=\"highlighter-rouge\">참값</code>을 실행하게 되며 부합하지 않을 경우 <code class=\"highlighter-rouge\">거짓값</code>을 실행합니다.</p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 48강 - 윤곽 추적",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-48/",
      "date"     : "2018-03-27 00:00:00 +0900",
  "content"   : "<h3 id=\"윤곽-추적-snake-image\">윤곽 추적 (Snake Image)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch48/1.jpg\"><img src=\"/assets/images/C/opencv/ch48/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">SnakeImage</code> 함수를 이용하여 이미지나 영상의 <strong>윤곽을 추적합니다.</strong></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">snake</span><span class=\"p\">;</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">SnakeImage</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">snake_calc</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">snake</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">snake_calc</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">snake_calc</span><span class=\"p\">,</span> <span class=\"n\">snake_calc</span><span class=\"p\">,</span> <span class=\"m\">150</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Smooth</span><span class=\"p\">(</span><span class=\"n\">snake_calc</span><span class=\"p\">,</span> <span class=\"n\">snake_calc</span><span class=\"p\">,</span> <span class=\"n\">SmoothType</span><span class=\"p\">.</span><span class=\"n\">Gaussian</span><span class=\"p\">,</span> <span class=\"m\">9</span><span class=\"p\">);</span>\n\n            <span class=\"kt\">int</span> <span class=\"n\">contour_num</span> <span class=\"p\">=</span> <span class=\"m\">2000</span><span class=\"p\">;</span>\n            <span class=\"n\">CvPoint</span><span class=\"p\">[]</span> <span class=\"n\">contour</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvPoint</span><span class=\"p\">[</span><span class=\"n\">contour_num</span><span class=\"p\">];</span>\n            <span class=\"n\">CvPoint</span> <span class=\"n\">center</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">snake_calc</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"n\">snake_calc</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">contour</span><span class=\"p\">.</span><span class=\"n\">Length</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">contour</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)(</span><span class=\"n\">center</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">*</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Cos</span><span class=\"p\">(</span><span class=\"m\">2</span> <span class=\"p\">*</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"n\">PI</span> <span class=\"p\">*</span> <span class=\"n\">i</span> <span class=\"p\">/</span> <span class=\"n\">contour</span><span class=\"p\">.</span><span class=\"n\">Length</span><span class=\"p\">)</span> <span class=\"p\">+</span> <span class=\"n\">center</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">);</span>\n                <span class=\"n\">contour</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)(</span><span class=\"n\">center</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">*</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Sin</span><span class=\"p\">(</span><span class=\"m\">2</span> <span class=\"p\">*</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"n\">PI</span> <span class=\"p\">*</span> <span class=\"n\">i</span> <span class=\"p\">/</span> <span class=\"n\">contour</span><span class=\"p\">.</span><span class=\"n\">Length</span><span class=\"p\">)</span> <span class=\"p\">+</span> <span class=\"n\">center</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"n\">CvWindow</span> <span class=\"n\">window</span> <span class=\"p\">=</span> <span class=\"k\">null</span><span class=\"p\">;</span>\n\n            <span class=\"kt\">int</span> <span class=\"n\">k</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n            <span class=\"k\">while</span> <span class=\"p\">(</span> <span class=\"n\">k</span> <span class=\"p\">&lt;</span> <span class=\"n\">contour_num</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">k</span><span class=\"p\">++;</span>\n\n                <span class=\"n\">window</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"SnakeImage\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">);</span>\n                <span class=\"n\">window</span><span class=\"p\">.</span><span class=\"nf\">Resize</span><span class=\"p\">(</span><span class=\"m\">640</span><span class=\"p\">,</span> <span class=\"m\">480</span><span class=\"p\">);</span>\n\n                <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SnakeImage</span><span class=\"p\">(</span><span class=\"n\">snake_calc</span><span class=\"p\">,</span> <span class=\"n\">contour</span><span class=\"p\">,</span> <span class=\"m\">0.50f</span><span class=\"p\">,</span> <span class=\"m\">0.40f</span><span class=\"p\">,</span> <span class=\"m\">0.30f</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"m\">15</span><span class=\"p\">,</span> <span class=\"m\">15</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvTermCriteria</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"k\">true</span><span class=\"p\">);</span>\n                            \n                <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">snake</span><span class=\"p\">);</span>\n\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">contour</span><span class=\"p\">.</span><span class=\"n\">Length</span> <span class=\"p\">-</span> <span class=\"m\">1</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Line</span><span class=\"p\">(</span><span class=\"n\">snake</span><span class=\"p\">,</span> <span class=\"n\">contour</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">contour</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">],</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">);</span>\n                <span class=\"p\">}</span>\n                <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Line</span><span class=\"p\">(</span><span class=\"n\">snake</span><span class=\"p\">,</span> <span class=\"n\">contour</span><span class=\"p\">[</span><span class=\"n\">contour</span><span class=\"p\">.</span><span class=\"n\">Length</span> <span class=\"p\">-</span> <span class=\"m\">1</span><span class=\"p\">],</span> <span class=\"n\">contour</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">],</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">);</span>\n\n                <span class=\"n\">window</span><span class=\"p\">.</span><span class=\"n\">Image</span> <span class=\"p\">=</span> <span class=\"n\">snake</span><span class=\"p\">;</span>\n                <span class=\"n\">Application</span><span class=\"p\">.</span><span class=\"nf\">DoEvents</span><span class=\"p\">();</span>\n            <span class=\"p\">}</span>\n            <span class=\"n\">window</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span>\n            <span class=\"k\">return</span> <span class=\"n\">snake</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n    \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">snake</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">snake</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplImage</span> <span class=\"n\">snake_calc</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">snake</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>계산에 사용할 <code class=\"highlighter-rouge\">snake_calc</code>와 결과에 사용할 <code class=\"highlighter-rouge\">snake</code>를 생성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">snake_calc</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">snake_calc</span><span class=\"p\">,</span> <span class=\"n\">snake_calc</span><span class=\"p\">,</span> <span class=\"m\">150</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Smooth</span><span class=\"p\">(</span><span class=\"n\">snake_calc</span><span class=\"p\">,</span> <span class=\"n\">snake_calc</span><span class=\"p\">,</span> <span class=\"n\">SmoothType</span><span class=\"p\">.</span><span class=\"n\">Gaussian</span><span class=\"p\">,</span> <span class=\"m\">9</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">snake_calc</code>를 <code class=\"highlighter-rouge\">그레이스케일</code>로 변환 후, <code class=\"highlighter-rouge\">이진화</code>를 적용합니다. 이 후 <code class=\"highlighter-rouge\">가우시안 블러</code>를 적용하여 이미지를 단순화합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">contour_num</span> <span class=\"p\">=</span> <span class=\"m\">2000</span><span class=\"p\">;</span>\n<span class=\"n\">CvPoint</span><span class=\"p\">[]</span> <span class=\"n\">contour</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvPoint</span><span class=\"p\">[</span><span class=\"n\">contour_num</span><span class=\"p\">];</span>\n<span class=\"n\">CvPoint</span> <span class=\"n\">center</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">snake_calc</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"n\">snake_calc</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>윤곽의 갯수로 사용할 <code class=\"highlighter-rouge\">contour_num</code>을 생성합니다.</p>\n\n<p><code class=\"highlighter-rouge\">contour</code>를 생성하여 <code class=\"highlighter-rouge\">contour_num</code>의 갯수만큼 생성합니다.</p>\n\n<p><code class=\"highlighter-rouge\">center</code>를 생성하여 윤곽 추적을 위한 <code class=\"highlighter-rouge\">이미지의 중심점</code>을 생성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">contour</span><span class=\"p\">.</span><span class=\"n\">Length</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">contour</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)(</span><span class=\"n\">center</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">*</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Cos</span><span class=\"p\">(</span><span class=\"m\">2</span> <span class=\"p\">*</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"n\">PI</span> <span class=\"p\">*</span> <span class=\"n\">i</span> <span class=\"p\">/</span> <span class=\"n\">contour</span><span class=\"p\">.</span><span class=\"n\">Length</span><span class=\"p\">)</span> <span class=\"p\">+</span> <span class=\"n\">center</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">);</span>\n    <span class=\"n\">contour</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)(</span><span class=\"n\">center</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">*</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Sin</span><span class=\"p\">(</span><span class=\"m\">2</span> <span class=\"p\">*</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"n\">PI</span> <span class=\"p\">*</span> <span class=\"n\">i</span> <span class=\"p\">/</span> <span class=\"n\">contour</span><span class=\"p\">.</span><span class=\"n\">Length</span><span class=\"p\">)</span> <span class=\"p\">+</span> <span class=\"n\">center</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">for</code>문을 사용하여 중심점을 기준으로 <code class=\"highlighter-rouge\">coutour_num</code> 갯수만큼 둘러싸게 합니다.</p>\n\n<p>윤곽의 <code class=\"highlighter-rouge\">X 좌표</code>와 <code class=\"highlighter-rouge\">Y 좌표</code>를 저장합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <strong>초기 윤곽은 중심점(center)을 기준으로 둥글게 생성됩니다.</strong></li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvWindow</span> <span class=\"n\">window</span> <span class=\"p\">=</span> <span class=\"k\">null</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>윤곽 추적을 보여줄 <code class=\"highlighter-rouge\">window</code>를 생성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">k</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n<span class=\"k\">while</span> <span class=\"p\">(</span> <span class=\"n\">k</span> <span class=\"p\">&lt;</span> <span class=\"n\">contour_num</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">k</span><span class=\"p\">++;</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>윤곽 추적을 위하여 <code class=\"highlighter-rouge\">contour_num</code>의 절반만큼 반복합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">window</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"SnakeImage\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">);</span>\n<span class=\"n\">window</span><span class=\"p\">.</span><span class=\"nf\">Resize</span><span class=\"p\">(</span><span class=\"m\">640</span><span class=\"p\">,</span> <span class=\"m\">480</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">window</code>를 생성하고 크기 모드를 <code class=\"highlighter-rouge\">StretchImage</code>로 사용하며 크기를 적절하게 변경합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SnakeImage</span><span class=\"p\">(</span><span class=\"n\">snake_calc</span><span class=\"p\">,</span> <span class=\"n\">contour</span><span class=\"p\">,</span> <span class=\"m\">0.50f</span><span class=\"p\">,</span> <span class=\"m\">0.40f</span><span class=\"p\">,</span> <span class=\"m\">0.30f</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"m\">15</span><span class=\"p\">,</span> <span class=\"m\">15</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvTermCriteria</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"k\">true</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.SnakeImage</code>를 사용하여 윤곽을 추적합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.SnakeImage(이미지, 윤곽선, 알파, 베타, 감마, 이웃 크기, 종료 기준, 그라디언트 플래그)</code>입니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p><code class=\"highlighter-rouge\">알파</code> : 연속성의 가중치입니다.</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">베타</code> : 곡률의 가중치입니다.</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">감마</code> : 이미지의 가중치입니다.</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">이웃크기</code> : 최솟값을 검색하는데 사용되는 모든 이웃 점의 크기입니다.</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">종료 기준</code> : 반복 알고리즘의 종료 기준입니다. 최대 반복 횟수를 의미합니다.</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">그라디언트 플래그</code> : 모든 이미지 픽셀에 대한 그래디언트 크기를 계산하고이를 에너지 필드로 간주 유/무 입니다.</p>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">snake</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>그려진 윤곽선을 지우고 <strong>새롭게 그리기 위하여 원본을 덧씌웁니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">contour</span><span class=\"p\">.</span><span class=\"n\">Length</span> <span class=\"p\">-</span> <span class=\"m\">1</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Line</span><span class=\"p\">(</span><span class=\"n\">snake</span><span class=\"p\">,</span> <span class=\"n\">contour</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">contour</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">],</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Line</span><span class=\"p\">(</span><span class=\"n\">snake</span><span class=\"p\">,</span> <span class=\"n\">contour</span><span class=\"p\">[</span><span class=\"n\">contour</span><span class=\"p\">.</span><span class=\"n\">Length</span> <span class=\"p\">-</span> <span class=\"m\">1</span><span class=\"p\">],</span> <span class=\"n\">contour</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">],</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">for</code>문을 이용하여 윤곽점을 이어 윤곽선으로 그립니다.</p>\n\n<p><code class=\"highlighter-rouge\">for</code>문에서는 첫번째 윤곽점과 마지막 윤곽점을 잇지 못하므로 <code class=\"highlighter-rouge\">for</code>문이 모두 반복된 후 남은 점을 잇습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">window</span><span class=\"p\">.</span><span class=\"n\">Image</span> <span class=\"p\">=</span> <span class=\"n\">snake</span><span class=\"p\">;</span>\n<span class=\"n\">Application</span><span class=\"p\">.</span><span class=\"nf\">DoEvents</span><span class=\"p\">();</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">window</code>에 윤곽 추적 결과를 표시합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Application.DoEvents()</code>를 사용하여 <code class=\"highlighter-rouge\">while</code>문이 반복중에도 윈도우 창이 <code class=\"highlighter-rouge\">업데이트</code>되도록 합니다.</p>\n\n<ul>\n  <li>Tip : 네임스페이스에 <code class=\"highlighter-rouge\">using System.Windows.Forms;</code>이 포함되어야 합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">window</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span></code></pre></figure>\n\n<p>추적이 완료되면 <code class=\"highlighter-rouge\">window</code>를 닫습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch48/2.gif\"><img src=\"/assets/images/C/opencv/ch48/2.gif\" alt=\"2\" /></a>\n<br />\n<a href=\"/assets/images/C/opencv/ch48/3.png\"><img src=\"/assets/images/C/opencv/ch48/3.png\" alt=\"3\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 13강 -  Set 기초 연산",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-13/",
      "date"     : "2018-03-26 00:00:00 +0900",
  "content"   : "<h3 id=\"집합-set\">집합 (Set)</h3>\n<hr />\n<p>Python에서는 <code class=\"highlighter-rouge\">중괄호({})</code>를 이용하여 <strong>집합을 생성할 수 있습니다.</strong> 집합은 <code class=\"highlighter-rouge\">연산</code>에 사용되며 <strong>중복이 불가능하며, 순서는 무관합니다.</strong></p>\n\n<p><br /></p>\n\n<h3>생성</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">}</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">}</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>{1, 2, 3}<br />\n{1, 3, 5, 7, 9}</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">중괄호({})</code>를 사용하여 <strong>집합을 생성할 수 있습니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>추가</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">}</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">}</span>\n\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>{1, 2, 3, 4}<br />\n{1, 3, 5, 7, 9, 11}</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">집합.add(x)</code>를 이용하여 집합에 <code class=\"highlighter-rouge\">x</code>값을 가지는 <strong>원소를 추가할 수 있습니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>삭제</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">}</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">}</span>\n\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">discard</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">discard</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>{1, 2}<br />\n{1, 3, 5, 9}</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">집합.discard(x)</code>를 이용하여 집합에서 <code class=\"highlighter-rouge\">x</code>값을 가지는 <strong>원소를 삭제할 수 있습니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>변환</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>{1, 2, 3, 7}</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">set(x)</code>을 이용하여 <code class=\"highlighter-rouge\">리스트 x</code>를 집합으로 변환할 수 있습니다.</p>\n\n<p><strong>중복되는 값은 사라집니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>합집합</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">}</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">}</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">|</span> <span class=\"n\">b</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">union</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>{1, 2, 3, 5, 7, 9}<br />\n{1, 2, 3, 5, 7, 9}</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">|</code> 기호를 사용하거나, <code class=\"highlighter-rouge\">집합.union(집합)</code>을 이용하여 <code class=\"highlighter-rouge\">합집합 연산</code>을 할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>교집합</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">}</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">}</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">&amp;</span> <span class=\"n\">b</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">intersection</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>{1, 3}<br />\n{1, 3</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">&amp;</code> 기호를 사용하거나, <code class=\"highlighter-rouge\">집합.intersection(집합)</code>을 이용하여 <code class=\"highlighter-rouge\">교집합 연산</code>을 할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>차집합</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\">    \n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">}</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">}</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">-</span> <span class=\"n\">b</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">b</span> <span class=\"o\">-</span> <span class=\"n\">a</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>{2}<br />\n{9, 5, 7}</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">-</code> 기호를 사용하여 <code class=\"highlighter-rouge\">차집합 연산</code>을 할 수 있습니다.</p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 47강 - 2D 필터링",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-47/",
      "date"     : "2018-03-25 00:00:00 +0900",
  "content"   : "<h3 id=\"2d-필터링-2d-filter\">2D 필터링 (2D Filter)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch47/1.jpg\"><img src=\"/assets/images/C/opencv/ch47/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">Filter2D</code> 함수를 이용하여 <code class=\"highlighter-rouge\">임의의 선형 필터</code>를 이미지나 영상에 적용합니다. <code class=\"highlighter-rouge\">커널</code>을 직접 생성하여 <code class=\"highlighter-rouge\">필터</code>를 적용할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">가우시안 필터</code>, <code class=\"highlighter-rouge\">중간값 필터</code>를 비롯하여 <code class=\"highlighter-rouge\">임의의 필터</code> 또한 <strong>직접 생성하여 적용할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">filter</span><span class=\"p\">;</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Filter2D</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>   \n            <span class=\"n\">filter</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n\n            <span class=\"kt\">float</span><span class=\"p\">[]</span> <span class=\"n\">data</span> <span class=\"p\">=</span>  <span class=\"p\">{</span>   <span class=\"m\">1</span><span class=\"p\">,</span>  <span class=\"m\">4</span><span class=\"p\">,</span>  <span class=\"m\">7</span><span class=\"p\">,</span>  <span class=\"m\">4</span><span class=\"p\">,</span>  <span class=\"m\">1</span><span class=\"p\">,</span>\n                                <span class=\"m\">4</span><span class=\"p\">,</span>  <span class=\"m\">16</span><span class=\"p\">,</span> <span class=\"m\">26</span><span class=\"p\">,</span> <span class=\"m\">16</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span>\n                                <span class=\"m\">7</span><span class=\"p\">,</span>  <span class=\"m\">26</span><span class=\"p\">,</span> <span class=\"m\">41</span><span class=\"p\">,</span> <span class=\"m\">26</span><span class=\"p\">,</span> <span class=\"m\">7</span><span class=\"p\">,</span>\n                                <span class=\"m\">4</span><span class=\"p\">,</span>  <span class=\"m\">16</span><span class=\"p\">,</span> <span class=\"m\">26</span><span class=\"p\">,</span> <span class=\"m\">16</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span>\n                                <span class=\"m\">1</span><span class=\"p\">,</span>  <span class=\"m\">4</span><span class=\"p\">,</span>  <span class=\"m\">7</span><span class=\"p\">,</span>  <span class=\"m\">4</span><span class=\"p\">,</span>  <span class=\"m\">1</span>   <span class=\"p\">};</span>\n\n            <span class=\"n\">CvMat</span> <span class=\"n\">kernel</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMat</span><span class=\"p\">(</span><span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F32C1</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Normalize</span><span class=\"p\">(</span><span class=\"n\">kernel</span><span class=\"p\">,</span> <span class=\"n\">kernel</span><span class=\"p\">,</span> <span class=\"m\">1.0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">NormType</span><span class=\"p\">.</span><span class=\"n\">L1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Filter2D</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">filter</span><span class=\"p\">,</span> <span class=\"n\">kernel</span><span class=\"p\">);</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">filter</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                  \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">filter</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">filter</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">filter</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>결과에 사용할 <code class=\"highlighter-rouge\">filter</code>를 생성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">float</span><span class=\"p\">[]</span> <span class=\"n\">data</span> <span class=\"p\">=</span>  <span class=\"p\">{</span>   <span class=\"m\">1</span><span class=\"p\">,</span>  <span class=\"m\">4</span><span class=\"p\">,</span>  <span class=\"m\">7</span><span class=\"p\">,</span>  <span class=\"m\">4</span><span class=\"p\">,</span>  <span class=\"m\">1</span><span class=\"p\">,</span>\n                    <span class=\"m\">4</span><span class=\"p\">,</span>  <span class=\"m\">16</span><span class=\"p\">,</span> <span class=\"m\">26</span><span class=\"p\">,</span> <span class=\"m\">16</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span>\n                    <span class=\"m\">7</span><span class=\"p\">,</span>  <span class=\"m\">26</span><span class=\"p\">,</span> <span class=\"m\">41</span><span class=\"p\">,</span> <span class=\"m\">26</span><span class=\"p\">,</span> <span class=\"m\">7</span><span class=\"p\">,</span>\n                    <span class=\"m\">4</span><span class=\"p\">,</span>  <span class=\"m\">16</span><span class=\"p\">,</span> <span class=\"m\">26</span><span class=\"p\">,</span> <span class=\"m\">16</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span>\n                    <span class=\"m\">1</span><span class=\"p\">,</span>  <span class=\"m\">4</span><span class=\"p\">,</span>  <span class=\"m\">7</span><span class=\"p\">,</span>  <span class=\"m\">4</span><span class=\"p\">,</span>  <span class=\"m\">1</span>   <span class=\"p\">};</span></code></pre></figure>\n\n<p>1차원 배열을 생성하여 임의의 커널을 생성합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 해당 커널은 <code class=\"highlighter-rouge\">가우시안 블러</code> 커널과 동일합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvMat</span> <span class=\"n\">kernel</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMat</span><span class=\"p\">(</span><span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"n\">MatrixType</span><span class=\"p\">.</span><span class=\"n\">F32C1</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CvMat</code>을 이용하여 매트릭스를 생성합니다. <code class=\"highlighter-rouge\">new CvMat(n, m, 매트릭스 타입, 배열)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">nxm</code> 크기의 매트릭스로 변환하여 생성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Normalize</span><span class=\"p\">(</span><span class=\"n\">kernel</span><span class=\"p\">,</span> <span class=\"n\">kernel</span><span class=\"p\">,</span> <span class=\"m\">1.0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">NormType</span><span class=\"p\">.</span><span class=\"n\">L1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Normalize()</code> 함수를 이용하여 매트릭스를 정규화합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.Normalize(원본, 결과, 최댓값, 최솟값, 정규화기준)</code>입니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p><code class=\"highlighter-rouge\">최댓값</code> : 정규화된 값의 최댓값입니다.</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">최솟값</code> : 정규화된 값의 최솟값입니다.</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">정규화기준</code> : 정규화할때의 기준을 선택합니다.</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">NormType.C</code> : 매트릭스의 최댓값을 기준으로 정규화합니다.</li>\n      <li><code class=\"highlighter-rouge\">NormType.L1</code> : 매트릭스의 합을 기준으로 정규화합니다.</li>\n      <li><code class=\"highlighter-rouge\">NormType.L2</code> : 매트릭스의 유클리드 노름을 기준으로 정규화합니다.</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Filter2D</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">filter</span><span class=\"p\">,</span> <span class=\"n\">kernel</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Filter2D()</code>을 적용합니다. <code class=\"highlighter-rouge\">Cv.Filter2D(원본, 결과, 커널)</code>을 사용합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"filter2d\">Filter2D</h2>\n<p><a href=\"/assets/images/C/opencv/ch47/2.png\"><img src=\"/assets/images/C/opencv/ch47/2.png\" alt=\"2\" /></a>\n<br /></p>\n<h2 id=\"smoothtypegaussian-5x5\">SmoothType.Gaussian 5x5</h2>\n<p><a href=\"/assets/images/C/opencv/ch47/3.png\"><img src=\"/assets/images/C/opencv/ch47/3.png\" alt=\"3\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 46강 - 피라미드 평균 이동 분할",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-46/",
      "date"     : "2018-03-23 00:00:00 +0900",
  "content"   : "<h3 id=\"피라미드-평균-이동-분할pyramid-mean-shift-filtering\">피라미드 평균 이동 분할(Pyramid Mean Shift Filtering)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch46/1.jpg\"><img src=\"/assets/images/C/opencv/ch46/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">PyrMeanShiftFiltering</code> 함수를 이용하여 <code class=\"highlighter-rouge\">이미지 피라미드</code>에 의한 평균 이동 분할을 진행합니다. <code class=\"highlighter-rouge\">레벨</code>을 지정하여 이미지 피라미드를 만들고 이 정보를 이용하여 <code class=\"highlighter-rouge\">이미지 분할</code>을 실행합니다. <code class=\"highlighter-rouge\">공간 윈도우 반경</code>과 <code class=\"highlighter-rouge\">색상 윈도우 반경</code>을 사용하여 <code class=\"highlighter-rouge\">평균 공간 값</code>과 <code class=\"highlighter-rouge\">평균 색 벡터</code>로 최종 값이 설정됩니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 피라미드 평균 이동 분할은 <code class=\"highlighter-rouge\">매우 높은 계산 시간을 요구</code>합니다. 적절한 이미지의 크기와 매개 변수 값을 사용해야합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">pyrmean</span><span class=\"p\">;</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">PyrMeanShiftFiltering</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">srcROI</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n            <span class=\"n\">pyrmean</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n\n            <span class=\"kt\">int</span> <span class=\"n\">level</span> <span class=\"p\">=</span> <span class=\"m\">2</span><span class=\"p\">;</span>\n            <span class=\"kt\">double</span> <span class=\"n\">spatial_radius</span> <span class=\"p\">=</span> <span class=\"m\">30.0</span><span class=\"p\">;</span>\n            <span class=\"kt\">double</span> <span class=\"n\">color_radius</span> <span class=\"p\">=</span> <span class=\"m\">30.0</span><span class=\"p\">;</span>\n            \n            <span class=\"n\">CvRect</span> <span class=\"n\">roi</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvRect</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">,</span>\n                <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">,</span>\n                <span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">&amp;</span> <span class=\"p\">-(</span><span class=\"m\">1</span> <span class=\"p\">&lt;&lt;</span> <span class=\"n\">level</span><span class=\"p\">),</span>\n                <span class=\"n\">Height</span> <span class=\"p\">=</span> <span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">&amp;</span> <span class=\"p\">-(</span><span class=\"m\">1</span> <span class=\"p\">&lt;&lt;</span> <span class=\"n\">level</span><span class=\"p\">)</span>\n            <span class=\"p\">};</span>\n            \n            <span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"n\">ROI</span> <span class=\"p\">=</span> <span class=\"n\">roi</span><span class=\"p\">;</span>\n            <span class=\"n\">pyrmean</span> <span class=\"p\">=</span> <span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>        \n                    \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">PyrMeanShiftFiltering</span><span class=\"p\">(</span><span class=\"n\">srcROI</span><span class=\"p\">,</span> <span class=\"n\">pyrmean</span><span class=\"p\">,</span> <span class=\"n\">space_radius</span><span class=\"p\">,</span> <span class=\"n\">color_radius</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvTermCriteria</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">));</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">pyrmean</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                  \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">pyrmean</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">pyrmean</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplImage</span> <span class=\"n\">srcROI</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n<span class=\"n\">pyrmean</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>계산에 사용할 <code class=\"highlighter-rouge\">srcROI</code>를 생성하여 <code class=\"highlighter-rouge\">src</code>를 복사하여 저장합니다.</p>\n\n<p>결과에 사용할 <code class=\"highlighter-rouge\">pyrmean</code>를 생성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">level</span> <span class=\"p\">=</span> <span class=\"m\">2</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span> <span class=\"n\">space_radius</span> <span class=\"p\">=</span> <span class=\"m\">30.0</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span> <span class=\"n\">color_radius</span> <span class=\"p\">=</span> <span class=\"m\">30.0</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>주요 매개변수인 <code class=\"highlighter-rouge\">레벨</code>과 <code class=\"highlighter-rouge\">공간 윈도우 반경</code>, <code class=\"highlighter-rouge\">색상 윈도우 반경</code>을 선언합니다.</p>\n\n<p><code class=\"highlighter-rouge\">레벨</code>은 비트 연산시 사용할 값입니다. <code class=\"highlighter-rouge\">레벨</code>값이 높을 수록 보여지는 이미지가 일부 누락될 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">공간 윈도우 반경</code>은 각각의 픽셀(X, Y)에서 계산될 픽셀(x, y)의 범위를 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">색상 윈도우 반경</code>은 픽셀의 성분 벡터(R, G, B)에서 공간 윈도우 반경의 픽셀 성분 벡터(r, g, b)를 뺏을 때의 허용치입니다.</p>\n\n<p><br /></p>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">공간</th>\n      <th style=\"text-align: center\">색상</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">(X, Y)</td>\n      <td style=\"text-align: center\">(R, G, B)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">(x, y)</td>\n      <td style=\"text-align: center\">(r, g, b)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">공간</th>\n      <th style=\"text-align: center\">계산식</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">x</td>\n      <td style=\"text-align: center\">X - spatial radius ≤ x ≤ X + spatial radius</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">y</td>\n      <td style=\"text-align: center\">Y - spatial radius ≤ y ≤ Y + spatial radius</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">색상</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">││(R,G,B) - (r, g, b)││ ≤ color_radius</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvRect</span> <span class=\"n\">roi</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvRect</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">,</span>\n    <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">,</span>\n    <span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">&amp;</span> <span class=\"p\">-(</span><span class=\"m\">1</span> <span class=\"p\">&lt;&lt;</span> <span class=\"p\">(</span><span class=\"n\">level</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">)),</span>\n    <span class=\"n\">Height</span> <span class=\"p\">=</span> <span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">&amp;</span> <span class=\"p\">-(</span><span class=\"m\">1</span> <span class=\"p\">&lt;&lt;</span> <span class=\"p\">(</span><span class=\"n\">level</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">))</span>\n<span class=\"p\">};</span></code></pre></figure>\n\n<p>관심 영역으로 사용할 <code class=\"highlighter-rouge\">roi</code>를 생성합니다.</p>\n\n<p><code class=\"highlighter-rouge\">너비</code>와 <code class=\"highlighter-rouge\">높이</code>를 <code class=\"highlighter-rouge\">AND</code>연산을 통하여 <strong>좌측으로 쉬프트 시킵니다.</strong> <code class=\"highlighter-rouge\">2의 보수법</code>을 사용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"n\">ROI</span> <span class=\"p\">=</span> <span class=\"n\">roi</span><span class=\"p\">;</span>\n<span class=\"n\">pyrmean</span> <span class=\"p\">=</span> <span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">srcROI</code>에 <code class=\"highlighter-rouge\">관심 영역</code>을 적용합니다.\n<code class=\"highlighter-rouge\">관심 영역</code>이 적용된 srcROI를 <code class=\"highlighter-rouge\">pyrmean</code>에 복사합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">PyrMeanShiftFiltering</span><span class=\"p\">(</span><span class=\"n\">srcROI</span><span class=\"p\">,</span> <span class=\"n\">pyrmean</span><span class=\"p\">,</span> <span class=\"n\">space_radius</span><span class=\"p\">,</span> <span class=\"n\">color_radius</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvTermCriteria</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">));</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.PyrMeanShiftFiltering()</code>을 적용합니다. <code class=\"highlighter-rouge\">Cv.PyrMeanShiftFiltering(원본, 결과, 공간 윈도우 반경, 공간 색상 반경, 레벨, 종결기준)</code>을 사용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">종결기준</code>은 <code class=\"highlighter-rouge\">new CvTermCriteria(최대반복횟수, 정확성)</code>을 사용합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"level-2-space_radius-300-color_radius-300\">level 2, space_radius 30.0, color_radius 30.0</h2>\n<p><a href=\"/assets/images/C/opencv/ch46/2.png\"><img src=\"/assets/images/C/opencv/ch46/2.png\" alt=\"2\" /></a>\n<br /></p>\n<h2 id=\"level-2-space_radius-600-color_radius-300\">level 2, space_radius 60.0, color_radius 30.0</h2>\n<p><a href=\"/assets/images/C/opencv/ch46/3.png\"><img src=\"/assets/images/C/opencv/ch46/3.png\" alt=\"3\" /></a>\n<br /></p>\n<h2 id=\"level-2-space_radius-300-color_radius-600\">level 2, space_radius 30.0, color_radius 60.0</h2>\n<p><a href=\"/assets/images/C/opencv/ch46/4.png\"><img src=\"/assets/images/C/opencv/ch46/4.png\" alt=\"4\" /></a>\n<br /></p>\n<h2 id=\"level-2-space_radius-600-color_radius-600\">level 2, space_radius 60.0, color_radius 60.0</h2>\n<p><a href=\"/assets/images/C/opencv/ch46/5.png\"><img src=\"/assets/images/C/opencv/ch46/5.png\" alt=\"5\" /></a>\n<br /></p>\n<h2 id=\"level-2-space_radius-300-color_radius-600-cvtermcriteria7-3\">level 2, space_radius 30.0, color_radius 60.0, CvTermCriteria(7, 3)</h2>\n<p><a href=\"/assets/images/C/opencv/ch46/6.png\"><img src=\"/assets/images/C/opencv/ch46/6.png\" alt=\"5\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 45강 - 피라미드 화상 분할",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-45/",
      "date"     : "2018-03-20 00:00:00 +0900",
  "content"   : "<h3 id=\"피라미드-화상-분할pyramid-segmentation\">피라미드 화상 분할(Pyramid Segmentation)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch45/1.jpg\"><img src=\"/assets/images/C/opencv/ch45/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">PyrSegmentation</code> 함수를 이용하여 <code class=\"highlighter-rouge\">이미지 피라미드</code>에 의한 화상 분할을 진행합니다. <code class=\"highlighter-rouge\">레벨</code>을 지정하여 이미지 피라미드를 만들고 이 정보를 이용하여 <code class=\"highlighter-rouge\">이미지 분할</code>을 실행합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">pyrseg</span><span class=\"p\">;</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">PyrSegmentation</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">srcROI</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n            <span class=\"n\">pyrseg</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n\n            <span class=\"kt\">int</span> <span class=\"n\">level</span> <span class=\"p\">=</span> <span class=\"m\">5</span><span class=\"p\">;</span>\n            <span class=\"kt\">double</span> <span class=\"n\">threshold1</span> <span class=\"p\">=</span> <span class=\"m\">255.0</span><span class=\"p\">;</span>\n            <span class=\"kt\">double</span> <span class=\"n\">threshold2</span> <span class=\"p\">=</span> <span class=\"m\">50.0</span><span class=\"p\">;</span>\n\n            <span class=\"n\">CvRect</span> <span class=\"n\">roi</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvRect</span><span class=\"p\">()</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">,</span>\n                <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">,</span>\n                <span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">&amp;</span> <span class=\"p\">-(</span><span class=\"m\">1</span> <span class=\"p\">&lt;&lt;</span> <span class=\"n\">level</span><span class=\"p\">),</span>\n                <span class=\"n\">Height</span> <span class=\"p\">=</span> <span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">&amp;</span> <span class=\"p\">-(</span><span class=\"m\">1</span> <span class=\"p\">&lt;&lt;</span> <span class=\"n\">level</span><span class=\"p\">)</span>\n            <span class=\"p\">};</span>\n\n            <span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"n\">ROI</span> <span class=\"p\">=</span> <span class=\"n\">roi</span><span class=\"p\">;</span>\n            <span class=\"n\">pyrseg</span> <span class=\"p\">=</span> <span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">PyrSegmentation</span><span class=\"p\">(</span><span class=\"n\">srcROI</span><span class=\"p\">,</span> <span class=\"n\">pyrseg</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"p\">,</span> <span class=\"n\">threshold1</span><span class=\"p\">,</span> <span class=\"n\">threshold2</span><span class=\"p\">);</span>\n            \n            <span class=\"k\">return</span> <span class=\"n\">pyrseg</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                  \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">pyrseg</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">pyrseg</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplImage</span> <span class=\"n\">srcROI</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span>\n<span class=\"n\">pyrseg</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>계산에 사용할 <code class=\"highlighter-rouge\">srcROI</code>를 생성하여 <code class=\"highlighter-rouge\">src</code>를 복사하여 저장합니다.</p>\n\n<p>결과에 사용할 <code class=\"highlighter-rouge\">pyrseg</code>를 생성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">level</span> <span class=\"p\">=</span> <span class=\"m\">5</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span> <span class=\"n\">threshold1</span> <span class=\"p\">=</span> <span class=\"m\">255.0</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span> <span class=\"n\">threshold2</span> <span class=\"p\">=</span> <span class=\"m\">50.0</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>주요 매개변수인 <code class=\"highlighter-rouge\">레벨</code>과 <code class=\"highlighter-rouge\">임계값1</code>, <code class=\"highlighter-rouge\">임계값2</code>를 선언합니다.</p>\n\n<p><code class=\"highlighter-rouge\">레벨</code>은 비트 연산시 사용할 값입니다. <code class=\"highlighter-rouge\">레벨</code>값이 높을 수록 보여지는 이미지가 일부 누락될 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">임계값</code>은 <code class=\"highlighter-rouge\">이진화</code> 함수에서 사용되는 임계값과 동일한 역할을 합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvRect</span> <span class=\"n\">roi</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvRect</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">,</span>\n    <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">,</span>\n    <span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">&amp;</span> <span class=\"p\">-(</span><span class=\"m\">1</span> <span class=\"p\">&lt;&lt;</span> <span class=\"n\">level</span><span class=\"p\">),</span>\n    <span class=\"n\">Height</span> <span class=\"p\">=</span> <span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">&amp;</span> <span class=\"p\">-(</span><span class=\"m\">1</span> <span class=\"p\">&lt;&lt;</span> <span class=\"n\">level</span><span class=\"p\">)</span>\n<span class=\"p\">};</span></code></pre></figure>\n\n<p>관심 영역으로 사용할 <code class=\"highlighter-rouge\">roi</code>를 생성합니다.</p>\n\n<p><code class=\"highlighter-rouge\">너비</code>와 <code class=\"highlighter-rouge\">높이</code>를 <code class=\"highlighter-rouge\">AND</code>연산을 통하여 <strong>좌측으로 쉬프트 시킵니다.</strong> <code class=\"highlighter-rouge\">2의 보수법</code>을 사용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"n\">ROI</span> <span class=\"p\">=</span> <span class=\"n\">roi</span><span class=\"p\">;</span>\n<span class=\"n\">pyrseg</span> <span class=\"p\">=</span> <span class=\"n\">srcROI</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">();</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">srcROI</code>에 <code class=\"highlighter-rouge\">관심 영역</code>을 적용합니다.\n<code class=\"highlighter-rouge\">관심 영역</code>이 적용된 srcROI를 <code class=\"highlighter-rouge\">pyrseg</code>에 복사합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">PyrSegmentation</span><span class=\"p\">(</span><span class=\"n\">srcROI</span><span class=\"p\">,</span> <span class=\"n\">pyrseg</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"p\">,</span> <span class=\"n\">threshold1</span><span class=\"p\">,</span> <span class=\"n\">threshold2</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.PyrSegmentation()</code>을 적용합니다. <code class=\"highlighter-rouge\">PyrSegmentation(원본, 결과, 레벨값, 임계값1, 임계값2)</code>를 사용합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"level-1\">level 1</h2>\n<p><a href=\"/assets/images/C/opencv/ch45/2.png\"><img src=\"/assets/images/C/opencv/ch45/2.png\" alt=\"2\" /></a>\n<br /></p>\n<h2 id=\"level-2\">level 2</h2>\n<p><a href=\"/assets/images/C/opencv/ch45/3.png\"><img src=\"/assets/images/C/opencv/ch45/3.png\" alt=\"3\" /></a>\n<br /></p>\n<h2 id=\"level-3\">level 3</h2>\n<p><a href=\"/assets/images/C/opencv/ch45/4.png\"><img src=\"/assets/images/C/opencv/ch45/4.png\" alt=\"4\" /></a>\n<br /></p>\n<h2 id=\"level-5\">level 5</h2>\n<p><a href=\"/assets/images/C/opencv/ch45/5.png\"><img src=\"/assets/images/C/opencv/ch45/5.png\" alt=\"5\" /></a>\n<br /></p>\n<h2 id=\"level-1--threshold2-100\">level 1,  threshold2 100</h2>\n<p><a href=\"/assets/images/C/opencv/ch45/6.png\"><img src=\"/assets/images/C/opencv/ch45/6.png\" alt=\"5\" /></a>\n<br /></p>\n<h2 id=\"level-1--threshold2-150\">level 1,  threshold2 150</h2>\n<p><a href=\"/assets/images/C/opencv/ch45/7.png\"><img src=\"/assets/images/C/opencv/ch45/7.png\" alt=\"5\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 44강 - 거리 변환",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-44/",
      "date"     : "2018-03-18 00:00:00 +0900",
  "content"   : "<h3 id=\"거리-변환-distance-transform\">거리 변환 (Distance Transform)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch44/1.png\"><img src=\"/assets/images/C/opencv/ch44/1.png\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">DistTransform</code> 함수를 이용하여 <code class=\"highlighter-rouge\">이진화 이미지</code>에서 <strong>가장 가까운 흑색(픽셀값 0)픽셀까지의 거리를 계산합니다.</strong></p>\n\n<p>주로, <code class=\"highlighter-rouge\">이진화</code> 적용 시 <strong>서로 붙어 있는 물체를 구분</strong>하는 방법으로 사용합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">dist</span><span class=\"p\">;</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">DistTransform</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">dist</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">F32</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Dilate</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Erode</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DistTransform</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">dist</span><span class=\"p\">,</span> <span class=\"n\">DistanceType</span><span class=\"p\">.</span><span class=\"n\">L2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"c1\">//Cv.Threshold(dist, dist, 50, 255, ThresholdType.Binary);</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">dist</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                  \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">dist</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">dist</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">dist</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">F32</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>결과를 표시할 이미지인 <code class=\"highlighter-rouge\">dist</code>와 이진화 이미지 <code class=\"highlighter-rouge\">bin</code>을 선언합니다.</p>\n\n<p><code class=\"highlighter-rouge\">dist</code> 이미지는 정밀도를 <code class=\"highlighter-rouge\">F32</code>를 사용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">bin</code> 이미지에 이진화를 적용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Dilate</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Erode</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">팽창</code>과 <code class=\"highlighter-rouge\">침식</code>을 이용하여 <strong>이진화 이후 나타나는 노이즈를 제거합니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DistTransform</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">dist</span><span class=\"p\">,</span> <span class=\"n\">DistanceType</span><span class=\"p\">.</span><span class=\"n\">L2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.DistTransform()</code>를 사용하여 가장 가까운 흑색 픽셀까지의 거리를 계산합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.DistTransform(이진화 이미지, 결과, 거리 유형, 마스크 크기)</code>를 의미합니다.</p>\n\n<ul>\n  <li>\n    <p>거리 유형</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">DistanceType.User</code> : 사용자 지정 거리</li>\n      <li><code class=\"highlighter-rouge\">DistanceType.L1</code> : <script type=\"math/tex\">L1 = \\vert x1-x2 \\vert + \\vert y1-y2 \\vert</script></li>\n      <li><code class=\"highlighter-rouge\">DistanceType.L2</code> : <script type=\"math/tex\">L2 = {\\sqrt{(x1-x2)^2 + (y1-y2)^2 }}</script></li>\n      <li><code class=\"highlighter-rouge\">DistanceType.C</code> : <script type=\"math/tex\">C = max(\\vert x1-x2 \\vert,\\vert y1-y2 \\vert)</script></li>\n      <li><code class=\"highlighter-rouge\">DistanceType.L12</code> : <script type=\"math/tex\">L12 = 2*{\\sqrt{1+x*x/2}-1)}</script>, <code class=\"highlighter-rouge\">L12=L1-L2</code></li>\n      <li><code class=\"highlighter-rouge\">DistanceType.Fair</code> : <script type=\"math/tex\">Fair = c^2*({\\vert x \\vert/c-\\log(1+\\vert x \\vert/c)}</script>, <code class=\"highlighter-rouge\">c=1.3998</code></li>\n      <li><code class=\"highlighter-rouge\">DistanceType.Welsch</code> : <script type=\"math/tex\">Welsch = {c^2}/{2*(1-\\exp(-(x/c)^2))}</script>, <code class=\"highlighter-rouge\">c=2.9846</code></li>\n      <li><code class=\"highlighter-rouge\">DistanceType.Huber</code> : <script type=\"math/tex\">Huber = \\vert x \\vert \\lt c \\text{  ?  } {x^2}/2 \\text{  :  } c*(\\vert x \\vert -c/2)</script>, <code class=\"highlighter-rouge\">c=1.345</code></li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">dist</span><span class=\"p\">,</span> <span class=\"n\">dist</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>거리 변환을 통해 얻어낸 이미지를 이용하여 <strong>다시 이진화를 적용해 붙어있는 이미지를 구분 할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"이진화-이미지\">이진화 이미지</h2>\n<p><a href=\"/assets/images/C/opencv/ch44/2.png\"><img src=\"/assets/images/C/opencv/ch44/2.png\" alt=\"2\" /></a>\n<br /></p>\n<h2 id=\"disttransform-이미지\">DistTransform 이미지</h2>\n<p><a href=\"/assets/images/C/opencv/ch44/3.png\"><img src=\"/assets/images/C/opencv/ch44/3.png\" alt=\"3\" /></a>\n<br /></p>\n<h2 id=\"disttransform--이진화-이미지\">DistTransform + 이진화 이미지</h2>\n<p><a href=\"/assets/images/C/opencv/ch44/4.png\"><img src=\"/assets/images/C/opencv/ch44/4.png\" alt=\"4\" /></a></p>\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 43강 - Background Remove (Mat)",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-43/",
      "date"     : "2018-03-17 00:00:00 +0900",
  "content"   : "<h3 id=\"배경-삭제-background-remove-background-subtractor\">배경 삭제 (Background Remove, Background Subtractor)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch43/1.PNG\"><img src=\"/assets/images/C/opencv/ch43/1.PNG\" alt=\"0\" /></a>\n<code class=\"highlighter-rouge\">BackgroundSubtractor</code> 함수를 이용하여 영상에서의 배경을 지울 수 있습니다. <code class=\"highlighter-rouge\">프레임</code>들을 비교하여 <code class=\"highlighter-rouge\">움직이는 물체(object)</code>만 표시합니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지</code>에는 적용할 수 없으며 <code class=\"highlighter-rouge\">카메라</code> 영상을 이용하여 <strong>프레임을 비교하여 배경을 삭제합니다.</strong></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.CPlusPlus</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">BackgroundSubtractor</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">VideoCapture</span> <span class=\"n\">video</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">VideoCapture</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">))</span>\n    <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">BackgroundSubtractorGMG</span> <span class=\"n\">GMG</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">BackgroundSubtractorGMG</span><span class=\"p\">())</span>\n    <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">BackgroundSubtractorMOG</span> <span class=\"n\">MOG</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">BackgroundSubtractorMOG</span><span class=\"p\">())</span>\n    <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">BackgroundSubtractorMOG2</span> <span class=\"n\">MOG2</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">BackgroundSubtractorMOG2</span><span class=\"p\">())</span>\n    <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">Mat</span> <span class=\"n\">frame</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Mat</span><span class=\"p\">())</span>\n    <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">Mat</span> <span class=\"k\">remove</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Mat</span><span class=\"p\">())</span>\n    <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">Window</span> <span class=\"n\">win_GMG</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"GMG\"</span><span class=\"p\">))</span>\n    <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">Window</span> <span class=\"n\">win_MOG</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"MOG\"</span><span class=\"p\">))</span>\n    <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">Window</span> <span class=\"n\">win_MOG2</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"MOG2\"</span><span class=\"p\">))</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">video</span><span class=\"p\">.</span><span class=\"n\">FrameWidth</span> <span class=\"p\">=</span> <span class=\"m\">640</span><span class=\"p\">;</span>\n        <span class=\"n\">video</span><span class=\"p\">.</span><span class=\"n\">FrameHeight</span> <span class=\"p\">=</span> <span class=\"m\">480</span><span class=\"p\">;</span>\n\n        <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">WaitKey</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span> <span class=\"p\">&lt;</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">video</span><span class=\"p\">.</span><span class=\"nf\">Read</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">);</span>\n\n            <span class=\"n\">GMG</span><span class=\"p\">.</span><span class=\"nf\">Run</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"k\">remove</span><span class=\"p\">);</span>\n            <span class=\"n\">win_GMG</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"k\">remove</span><span class=\"p\">);</span>\n\n            <span class=\"n\">MOG</span><span class=\"p\">.</span><span class=\"nf\">Run</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"k\">remove</span><span class=\"p\">);</span>\n            <span class=\"n\">win_MOG</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"k\">remove</span><span class=\"p\">);</span>\n\n            <span class=\"n\">MOG2</span><span class=\"p\">.</span><span class=\"nf\">Run</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"k\">remove</span><span class=\"p\">);</span>\n            <span class=\"n\">win_MOG2</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"k\">remove</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.CPlusPlus</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">BackgroundSubtractor</code> 함수를 사용하기 위해서는 <strong>네임스페이스</strong>에 <code class=\"highlighter-rouge\">using OpenCvSharp.CPlusPlus;</code>를 선언해야 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">VideoCapture</span> <span class=\"n\">video</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">VideoCapture</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">))</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Mat</code> 형식의 영상을 생성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">BackgroundSubtractorGMG</span> <span class=\"n\">GMG</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">BackgroundSubtractorGMG</span><span class=\"p\">())</span>\n<span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">BackgroundSubtractorMOG</span> <span class=\"n\">MOG</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">BackgroundSubtractorMOG</span><span class=\"p\">())</span>\n<span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">BackgroundSubtractorMOG2</span> <span class=\"n\">MOG2</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">BackgroundSubtractorMOG2</span><span class=\"p\">())</span></code></pre></figure>\n\n<p>3가지의 함수를 이용하여 배경을 삭제할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">BackgroundSubtractorGMG</code>, <code class=\"highlighter-rouge\">BackgroundSubtractorMOG</code>, <code class=\"highlighter-rouge\">BackgroundSubtractorMOG2</code> 함수를 사용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">Mat</span> <span class=\"n\">frame</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Mat</span><span class=\"p\">())</span>\n<span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">Mat</span> <span class=\"k\">remove</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Mat</span><span class=\"p\">())</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">video</code>의 프레임을 저장할 <code class=\"highlighter-rouge\">frame</code> 변수와 배경이 삭제된 후 출력할 <code class=\"highlighter-rouge\">remove</code>를 생성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">Window</span> <span class=\"n\">win_GMG</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"GMG\"</span><span class=\"p\">))</span>\n<span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">Window</span> <span class=\"n\">win_MOG</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"MOG\"</span><span class=\"p\">))</span>\n<span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">Window</span> <span class=\"n\">win_MOG2</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"MOG2\"</span><span class=\"p\">))</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Window</code>창을 선언하여 결과를 표시할 윈도우 창을 생성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">video</span><span class=\"p\">.</span><span class=\"n\">FrameWidth</span> <span class=\"p\">=</span> <span class=\"m\">640</span><span class=\"p\">;</span>\n<span class=\"n\">video</span><span class=\"p\">.</span><span class=\"n\">FrameHeight</span> <span class=\"p\">=</span> <span class=\"m\">480</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>프레임의 <code class=\"highlighter-rouge\">너비</code>와 <code class=\"highlighter-rouge\">높이</code>를 설정합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">WaitKey</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span> <span class=\"p\">&lt;</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">키 입력</code>이 있을 때 까지 <code class=\"highlighter-rouge\">반복</code>합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">video</span><span class=\"p\">.</span><span class=\"nf\">Read</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">frame</code>에 <strong>비디오 장치에서 읽어온 영상을 저장합니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">GMG</span><span class=\"p\">.</span><span class=\"nf\">Run</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"k\">remove</span><span class=\"p\">);</span>\n<span class=\"n\">win_GMG</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"k\">remove</span><span class=\"p\">);</span>\n\n<span class=\"n\">MOG</span><span class=\"p\">.</span><span class=\"nf\">Run</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"k\">remove</span><span class=\"p\">);</span>\n<span class=\"n\">win_MOG</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"k\">remove</span><span class=\"p\">);</span>\n\n<span class=\"n\">MOG2</span><span class=\"p\">.</span><span class=\"nf\">Run</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"k\">remove</span><span class=\"p\">);</span>\n<span class=\"n\">win_MOG2</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"k\">remove</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">GMG</code>, <code class=\"highlighter-rouge\">MOG</code>, <code class=\"highlighter-rouge\">MOG2</code>에 배경 삭제 함수를 적용합니다. <code class=\"highlighter-rouge\">*.Run(원본, 결과)</code>입니다.</p>\n\n<p>그 후, <code class=\"highlighter-rouge\">ShowImage(출력 이미지)</code>를 사용하여 결과를 표시합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : Window 창을 사용하지 않고 <code class=\"highlighter-rouge\">Form</code>에 띄울 경우 <code class=\"highlighter-rouge\">pictureBoxIpl1.ImageIpl = remove.ToIplImage();</code>를 사용합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"색상-적용\">색상 적용</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">GMG</span><span class=\"p\">.</span><span class=\"nf\">Run</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"k\">remove</span><span class=\"p\">);</span>\n<span class=\"n\">Cv2</span><span class=\"p\">.</span><span class=\"nf\">BitwiseAnd</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"k\">remove</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">GrayToBgr</span><span class=\"p\">),</span> <span class=\"k\">remove</span><span class=\"p\">);</span>\n<span class=\"n\">win_GMG</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"k\">remove</span><span class=\"p\">);</span>\n\n<span class=\"n\">MOG</span><span class=\"p\">.</span><span class=\"nf\">Run</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"k\">remove</span><span class=\"p\">);</span>\n<span class=\"n\">Cv2</span><span class=\"p\">.</span><span class=\"nf\">BitwiseAnd</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"k\">remove</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">GrayToBgr</span><span class=\"p\">),</span> <span class=\"k\">remove</span><span class=\"p\">);</span>\n<span class=\"n\">win_MOG</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"k\">remove</span><span class=\"p\">);</span>\n\n<span class=\"n\">MOG2</span><span class=\"p\">.</span><span class=\"nf\">Run</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"k\">remove</span><span class=\"p\">);</span>\n<span class=\"n\">Cv2</span><span class=\"p\">.</span><span class=\"nf\">BitwiseAnd</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"k\">remove</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">GrayToBgr</span><span class=\"p\">),</span> <span class=\"k\">remove</span><span class=\"p\">);</span>\n<span class=\"n\">win_MOG2</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"k\">remove</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Bitwise</code> 연산을 통하여 <code class=\"highlighter-rouge\">frame</code>과 <code class=\"highlighter-rouge\">remove</code> 영상을 <code class=\"highlighter-rouge\">And</code> 연산 후, <code class=\"highlighter-rouge\">remove</code>에 다시 저장하여 출력합니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"함수-적용\">함수 적용</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"nf\">BackgroundSubtractor</span><span class=\"p\">();</span></code></pre></figure>\n\n<p>실행될 구문에 함수를 적용합니다. <code class=\"highlighter-rouge\">Form 로드 이벤트</code> 또는 <code class=\"highlighter-rouge\">Button Click 이벤트</code> 등에 적용합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch43/1.PNG\"><img src=\"/assets/images/C/opencv/ch43/1.PNG\" alt=\"1\" /></a>\n<a href=\"/assets/images/C/opencv/ch43/2.png\"><img src=\"/assets/images/C/opencv/ch43/2.png\" alt=\"2\" /></a></p>\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 42강 - Bitwise (Mat)",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-42/",
      "date"     : "2018-03-11 00:00:00 +0900",
  "content"   : "<h3 id=\"비트-연산-bitwise\">비트 연산 (Bitwise)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch42/1.jpg\"><img src=\"/assets/images/C/opencv/ch42/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">Bitwise</code>를 사용하여 <strong>영상이나 이미지를 비트 연산을 할 수 있습니다.</strong> <code class=\"highlighter-rouge\">Mat</code> 형식의 이미지를 사용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">Mat 영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-39/\">39강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.CPlusPlus</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Mat</span> <span class=\"n\">m_src1</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Mat</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"n\">Mat</span> <span class=\"n\">m_src2</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Mat</span><span class=\"p\">(</span><span class=\"n\">src_bin</span><span class=\"p\">);</span>\n<span class=\"n\">Mat</span> <span class=\"n\">bitwise</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Mat</span><span class=\"p\">();</span>\n\n<span class=\"n\">Window</span> <span class=\"n\">win_src1</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"src1\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">m_src1</span><span class=\"p\">);</span>\n<span class=\"n\">Window</span> <span class=\"n\">win_src2</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"src2\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">m_src2</span><span class=\"p\">);</span>\n\n<span class=\"n\">Cv2</span><span class=\"p\">.</span><span class=\"nf\">BitwiseAnd</span><span class=\"p\">(</span><span class=\"n\">m_src1</span><span class=\"p\">,</span> <span class=\"n\">m_src2</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">GrayToBgr</span><span class=\"p\">),</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span>\n<span class=\"n\">Window</span> <span class=\"n\">win_And</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"BitwiseAnd\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span>\n\n<span class=\"n\">Cv2</span><span class=\"p\">.</span><span class=\"nf\">BitwiseOr</span><span class=\"p\">(</span><span class=\"n\">m_src1</span><span class=\"p\">,</span> <span class=\"n\">m_src2</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">GrayToBgr</span><span class=\"p\">),</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span>\n<span class=\"n\">Window</span> <span class=\"n\">win_Or</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"BitwiseOr\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span>\n\n<span class=\"n\">Cv2</span><span class=\"p\">.</span><span class=\"nf\">BitwiseXor</span><span class=\"p\">(</span><span class=\"n\">m_src1</span><span class=\"p\">,</span> <span class=\"n\">m_src2</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">GrayToBgr</span><span class=\"p\">),</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span>\n<span class=\"n\">Window</span> <span class=\"n\">win_Xor</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"BitwiseXor\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span>\n\n<span class=\"n\">Cv2</span><span class=\"p\">.</span><span class=\"nf\">BitwiseNot</span><span class=\"p\">(</span><span class=\"n\">m_src2</span><span class=\"p\">,</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span>\n<span class=\"n\">Window</span> <span class=\"n\">win_Not</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"BitwiseNot\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.CPlusPlus</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Bitwise</code> 함수를 사용하기 위해서는 <strong>네임스페이스</strong>에 <code class=\"highlighter-rouge\">using OpenCvSharp.CPlusPlus;</code>를 선언해야 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Mat</span> <span class=\"n\">m_src1</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Mat</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"n\">Mat</span> <span class=\"n\">m_src2</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Mat</span><span class=\"p\">(</span><span class=\"n\">src_bin</span><span class=\"p\">);</span>\n<span class=\"n\">Mat</span> <span class=\"n\">bitwise</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Mat</span><span class=\"p\">();</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Mat</code> 형식의 이미지를 생성합니다. <code class=\"highlighter-rouge\">new Mat(IplImage)</code>를 이용하면 <code class=\"highlighter-rouge\">IplImage</code> 형식의 이미지를 <code class=\"highlighter-rouge\">Mat</code> 형식으로 변경할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">m_src</code>는 비트 연산에 사용할 <code class=\"highlighter-rouge\">이미지1</code> 입니다.</p>\n\n<p><code class=\"highlighter-rouge\">m_src2</code>는 비트 연산에 사용할 <code class=\"highlighter-rouge\">이미지2</code> 입니다. <code class=\"highlighter-rouge\">이미지2</code>는 <strong>이미지1에 이진화를 적용한 이미지입니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">bitwise</code>는 비트 연산이 적용된 <code class=\"highlighter-rouge\">결과 이미지</code>입니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Window</span> <span class=\"n\">win_src1</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"src1\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">m_src1</span><span class=\"p\">);</span>\n<span class=\"n\">Window</span> <span class=\"n\">win_src2</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"src2\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">m_src2</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Window win</code>을 이용하여 <code class=\"highlighter-rouge\">m_src</code>와 <code class=\"highlighter-rouge\">m_src2</code>를 출력합니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"and-연산\">And 연산</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv2</span><span class=\"p\">.</span><span class=\"nf\">BitwiseAnd</span><span class=\"p\">(</span><span class=\"n\">m_src1</span><span class=\"p\">,</span> <span class=\"n\">m_src2</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">GrayToBgr</span><span class=\"p\">),</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span>\n<span class=\"n\">Window</span> <span class=\"n\">win_And</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"BitwiseAnd\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv2.BitwiseAnd()</code>를 이용하여 <code class=\"highlighter-rouge\">And</code> 연산을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv2.BitwiseAnd(이미지1, 이미지2, 결과, 마스크)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지2</code>가 흑백 이미지 일 경우, <code class=\"highlighter-rouge\">이미지2</code>의 <strong>흰색 부분만 출력합니다.</strong></p>\n\n<p><br /></p>\n\n<h2 id=\"or-연산\">Or 연산</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv2</span><span class=\"p\">.</span><span class=\"nf\">BitwiseOr</span><span class=\"p\">(</span><span class=\"n\">m_src1</span><span class=\"p\">,</span> <span class=\"n\">m_src2</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">GrayToBgr</span><span class=\"p\">),</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span>\n<span class=\"n\">Window</span> <span class=\"n\">win_Or</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"BitwiseOr\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv2.BitwiseOr()</code>를 이용하여 <code class=\"highlighter-rouge\">Or</code> 연산을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv2.BitwiseOr(이미지1, 이미지2, 결과, 마스크)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지2</code>가 흑백 이미지 일 경우, <code class=\"highlighter-rouge\">이미지2</code>의 <strong>검은색 부분만 출력합니다.</strong></p>\n\n<p><br /></p>\n\n<h2 id=\"xor-연산\">Xor 연산</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv2</span><span class=\"p\">.</span><span class=\"nf\">BitwiseOr</span><span class=\"p\">(</span><span class=\"n\">m_src1</span><span class=\"p\">,</span> <span class=\"n\">m_src2</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">GrayToBgr</span><span class=\"p\">),</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span>\n<span class=\"n\">Window</span> <span class=\"n\">win_Or</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"BitwiseOr\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv2.BitwiseXor()</code>를 이용하여 <code class=\"highlighter-rouge\">Xor</code> 연산을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv2.BitwiseXor(이미지1, 이미지2, 결과, 마스크)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지2</code>가 흑백 이미지 일 경우, <code class=\"highlighter-rouge\">이미지2</code>의 <strong>검은색 부분만 출력하며, 흰색 부분은 반전 출력합니다.</strong></p>\n\n<p><br /></p>\n\n<h2 id=\"not-연산\">Not 연산</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv2</span><span class=\"p\">.</span><span class=\"nf\">BitwiseNot</span><span class=\"p\">(</span><span class=\"n\">m_src2</span><span class=\"p\">,</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span>\n<span class=\"n\">Window</span> <span class=\"n\">win_Not</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Window</span><span class=\"p\">(</span><span class=\"s\">\"BitwiseNot\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">bitwise</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv2.BitwiseNot()</code>를 이용하여 <code class=\"highlighter-rouge\">Not</code> 연산을 실행합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv2.BitwiseNot(이미지, 결과, 마스크)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지</code>가 흑백 이미지 일 경우, <strong>반전 시켜 출력합니다.</strong></p>\n\n<p><br /></p>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>Tip : 비트 연산에 사용되는 모든 이미지는 <code class=\"highlighter-rouge\">Mat</code> 형식을 사용합니다.</p>\n  </li>\n  <li>\n    <p>Tip : <code class=\"highlighter-rouge\">이미지1</code>의 경우 채널이 3 이며, <code class=\"highlighter-rouge\">이미지2</code>의 경우 채널이 1 입니다.</p>\n  </li>\n  <li>\n    <p>Tip : <code class=\"highlighter-rouge\">이미지2</code>의 경우, <code class=\"highlighter-rouge\">이미지1</code>과 채널이 다르므로 <code class=\"highlighter-rouge\">m_src.CvtColor(ColorConversion.GrayToBgr)</code>을 이용하여 3개의 채널을 가지는 이미지로 즉각 변환이 가능합니다.</p>\n  </li>\n  <li>\n    <p>Tip : <code class=\"highlighter-rouge\">마스크</code>를 사용하지 않는 경우 <strong>생략이 가능합니다.</strong></p>\n  </li>\n  <li>\n    <p>Tip : <code class=\"highlighter-rouge\">이미지1</code>, <code class=\"highlighter-rouge\">이미지2</code>, <code class=\"highlighter-rouge\">결과</code>, <code class=\"highlighter-rouge\">마스크</code> 이미지들의 <strong>크기는 모두 같아야합니다.</strong></p>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch42/2.png\"><img src=\"/assets/images/C/opencv/ch42/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 41강 - Window (Mat)",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-41/",
      "date"     : "2018-03-11 00:00:00 +0900",
  "content"   : "<h3 id=\"윈도우-창-window\">윈도우 창 (Window)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch41/1.jpg\"><img src=\"/assets/images/C/opencv/ch41/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">Window</code>를 사용하여 <strong>윈도우 창을 띄워 영상이나 이미지를 출력할 수 있습니다.</strong> <code class=\"highlighter-rouge\">Mat</code> 형식의 이미지를 사용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">Mat 영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-39/\">39강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.CPlusPlus</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Mat</span> <span class=\"n\">m_src</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Mat</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"n\">Window</span> <span class=\"n\">win</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"076923.github.io\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">m_src</span><span class=\"p\">);</span>\n\n<span class=\"c1\">//win.Resize(640, 480);</span>\n<span class=\"c1\">//win.Move(100, 100);</span>\n<span class=\"c1\">//win.ShowImage(m_src2);</span>\n<span class=\"c1\">//win.Close();</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.CPlusPlus</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Window</code> 함수를 사용하기 위해서는 <strong>네임스페이스</strong>에 <code class=\"highlighter-rouge\">using OpenCvSharp.CPlusPlus;</code>를 선언해야 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Mat</span> <span class=\"n\">m_src</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Mat</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Mat m_src</code>을 선언하여 <code class=\"highlighter-rouge\">Mat</code> 형식의 이미지를 생성합니다. <code class=\"highlighter-rouge\">new Mat(IplImage)</code>를 이용하면 <code class=\"highlighter-rouge\">IplImage</code> 형식의 이미지를 <code class=\"highlighter-rouge\">Mat</code> 형식으로 변경할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Window</span> <span class=\"n\">win</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"076923.github.io\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">m_src</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Window win</code>을 이용하여 <code class=\"highlighter-rouge\">윈도우 창</code>을 생성합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Window win = new Window(\"제목\", 윈도우 모드, 이미지)</code>를 의미합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p><code class=\"highlighter-rouge\">제목</code> :  윈도우 창의 <strong>타이틀</strong>을 의미합니다.</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">윈도우 모드</code> : 윈도우 창의 <strong>크기 모드</strong>를 의미합니다.</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">WindowMode.None</code> : 플래그 없음</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.AutoSize</code> : 이미지의 크기로 출력, 윈도우 창 크기 조정 불가</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.OpenGL</code> : OpenGL을 지원하는 윈도우 창</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.ExpandedGui</code> : 향상된 GUI 표시</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.NormalGui</code> : 상태 표시줄 및 도구 모음이 없는 윈도우 창</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.StretchImage</code> : 이미지를 윈도우 창 크기에 맞춤</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.Fullscreen</code> : 전체 화면</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.FreeRatio</code> : 가로 세로 비율 수정</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.KeepRatio</code> : 이미지 비율 유지</li>\n    </ul>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">이미지</code> : <strong>출력될 이미지</strong>를 의미합니다.</p>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">Resize</span><span class=\"p\">(</span><span class=\"m\">640</span><span class=\"p\">,</span> <span class=\"m\">480</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">win.Reisze(너비, 높이)</code>를 이용하여 <code class=\"highlighter-rouge\">윈도우 창의 크기</code>를 설정합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">Move</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">win.Move(X, Y)</code>를 이용하여 <code class=\"highlighter-rouge\">윈도우 창의 위치</code>를 설정합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">m_src2</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">win.ShowImage(이미지)</code>를 이용하여 <code class=\"highlighter-rouge\">윈도우 창의 이미지</code>를 변경합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">close</span><span class=\"p\">();</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">win.Close()</code>를 이용하여 <code class=\"highlighter-rouge\">윈도우 창을 닫습니다.</code></p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch41/2.png\"><img src=\"/assets/images/C/opencv/ch41/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 40강 - Window",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-40/",
      "date"     : "2018-03-10 00:00:00 +0900",
  "content"   : "<h3 id=\"윈도우-창-cvwindow\">윈도우 창 (CvWindow)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch40/1.jpg\"><img src=\"/assets/images/C/opencv/ch40/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">CvWindow</code>를 사용하여 <strong>윈도우 창을 띄워 영상이나 이미지를 출력할 수 있습니다.</strong> <code class=\"highlighter-rouge\">IplImage</code> 형식의 이미지를 사용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvWindow</span> <span class=\"n\">win</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"076923.github.io\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">);</span>\n\n<span class=\"c1\">//win.Resize(640, 480);</span>\n<span class=\"c1\">//win.Move(100, 100);</span>\n<span class=\"c1\">//win.ShowImage(src2);</span>\n<span class=\"c1\">//win.Close();</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CvWindow</code> 함수를 사용하기 위해서는 <strong>네임스페이스</strong>에 <code class=\"highlighter-rouge\">using OpenCvSharp;</code>를 선언해야 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvWindow</span> <span class=\"n\">win</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"076923.github.io\"</span><span class=\"p\">,</span> <span class=\"n\">WindowMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CvWindow win</code>을 이용하여 <code class=\"highlighter-rouge\">윈도우 창</code>을 생성합니다.</p>\n\n<p><code class=\"highlighter-rouge\">CvWindow win = new CvWindow(\"제목\", 윈도우 모드, 이미지)</code>를 의미합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p><code class=\"highlighter-rouge\">제목</code> :  윈도우 창의 <strong>타이틀</strong>을 의미합니다.</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">윈도우 모드</code> : 윈도우 창의 <strong>크기 모드</strong>를 의미합니다.</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">WindowMode.None</code> : 플래그 없음</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.AutoSize</code> : 이미지의 크기로 출력, 윈도우 창 크기 조정 불가</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.OpenGL</code> : OpenGL을 지원하는 윈도우 창</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.ExpandedGui</code> : 향상된 GUI 표시</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.NormalGui</code> : 상태 표시줄 및 도구 모음이 없는 윈도우 창</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.StretchImage</code> : 이미지를 윈도우 창 크기에 맞춤</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.Fullscreen</code> : 전체 화면</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.FreeRatio</code> : 가로 세로 비율 수정</li>\n      <li><code class=\"highlighter-rouge\">WindowMode.KeepRatio</code> : 이미지 비율 유지</li>\n    </ul>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">이미지</code> : <strong>출력될 이미지</strong>를 의미합니다.</p>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">Resize</span><span class=\"p\">(</span><span class=\"m\">640</span><span class=\"p\">,</span> <span class=\"m\">480</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">win.Reisze(너비, 높이)</code>를 이용하여 <code class=\"highlighter-rouge\">윈도우 창의 크기</code>를 설정합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">Move</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">win.Move(X, Y)</code>를 이용하여 <code class=\"highlighter-rouge\">윈도우 창의 위치</code>를 설정합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">src2</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">win.ShowImage(이미지)</code>를 이용하여 <code class=\"highlighter-rouge\">윈도우 창의 이미지</code>를 변경합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">win</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">win.Close()</code>를 이용하여 <code class=\"highlighter-rouge\">윈도우 창을 닫습니다.</code></p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch40/2.png\"><img src=\"/assets/images/C/opencv/ch40/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 39강 - Camera 출력 (Mat)",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-39/",
      "date"     : "2018-03-10 00:00:00 +0900",
  "content"   : "<h3 id=\"프로젝트-구성\">프로젝트 구성</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch3/1.png\"><img src=\"/assets/images/C/opencv/ch3/1.png\" alt=\"1\" /></a>\n도구상자에서 <code class=\"highlighter-rouge\">PictureBoxIpl</code>, <code class=\"highlighter-rouge\">Timer</code>을 Form1에 생성합니다. 위의 이미지와 같이 배치합니다.</p>\n\n<p><br /></p>\n\n<p>속성을 아래와 같이 설정합니다.</p>\n\n<ol>\n  <li>\n    <p>PictureBoxIpl</p>\n\n    <ul>\n      <li>size : 640, 480</li>\n    </ul>\n  </li>\n  <li>\n    <p>Timer</p>\n\n    <ul>\n      <li>Enable : True</li>\n      <li>Interval : 33</li>\n    </ul>\n  </li>\n</ol>\n\n<p><br /></p>\n\n<h3 id=\"camera-출력\">Camera 출력</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.CPlusPlus</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">namespace</code>에 <code class=\"highlighter-rouge\">OpenCV</code>와 <code class=\"highlighter-rouge\">CPlusPlus</code> 사용할 수 있도록 선언합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">VideoCapture</span> <span class=\"n\">video</span><span class=\"p\">;</span>\n<span class=\"n\">Mat</span> <span class=\"n\">frame</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Mat</span><span class=\"p\">();</span></code></pre></figure>\n\n<p>카메라의 영상을 받아올 <code class=\"highlighter-rouge\">VideoCapture </code>와 영상을 출력해 줄 <code class=\"highlighter-rouge\">frame</code>를 선언합니다.</p>\n\n<p><code class=\"highlighter-rouge\">VideoCapture</code>는 <code class=\"highlighter-rouge\">Mat</code><strong>형식을 사용하여 영상을 출력합니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">try</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">video</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">VideoCapture</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">);</span>\n        <span class=\"n\">video</span><span class=\"p\">.</span><span class=\"n\">FrameWidth</span> <span class=\"p\">=</span> <span class=\"m\">640</span><span class=\"p\">;</span>\n        <span class=\"n\">video</span><span class=\"p\">.</span><span class=\"n\">FrameHeight</span> <span class=\"p\">=</span> <span class=\"m\">480</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">catch</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">timer1</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">try~catch</code>를 이용하여 카메라가 인식되지 않았을 때 오류가 발생하지 않도록 합니다. <code class=\"highlighter-rouge\">VideoCapture(0);</code>에서 <code class=\"highlighter-rouge\">0</code>은 카메라의 장치 번호입니다. 웹캠이 달려있는 노트북의 경우 <code class=\"highlighter-rouge\">0이 노트북 카메라</code> 입니다.</p>\n\n<ul>\n  <li>Tip : 카메라를 2개 이상 이용한다면 <code class=\"highlighter-rouge\">0</code>이 아닌 <code class=\"highlighter-rouge\">1</code>로 입력하면 <code class=\"highlighter-rouge\">외부 카메라로 인식</code>되어 출력됩니다.</li>\n</ul>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">video.FrameWidth</code>.<code class=\"highlighter-rouge\">video.FrameHeight</code>는 영상의 <code class=\"highlighter-rouge\">너비</code>와 <code class=\"highlighter-rouge\">높이</code>를 설정합니다. 장치가 인식되지 않을 경우 <code class=\"highlighter-rouge\">catch</code>로 넘어가며 <code class=\"highlighter-rouge\">timer1</code>를 사용하지 않게됩니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">timer1_Tick</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">video</span><span class=\"p\">.</span><span class=\"nf\">Read</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">);</span>\n    <span class=\"n\">pictureBoxIpl1</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">frame</span><span class=\"p\">.</span><span class=\"nf\">ToIplImage</span><span class=\"p\">();</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">video.Read()</code>를 이용하여 카메라의 영상을 받아오게 되고, <code class=\"highlighter-rouge\">frame</code>에 저장하게 됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">pictreuBoxIpl1</code>에 해당 영상을 출력하며, <code class=\"highlighter-rouge\">frame</code>의 형식은 <code class=\"highlighter-rouge\">Mat</code> 형식이므로 <code class=\"highlighter-rouge\">*.ToIplImage()</code>를 이용하여 형식을 변환합니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">timer1</code>은 33ms 마다 실행되며 그 때마다 영상을 출력합니다. <code class=\"highlighter-rouge\">Interval</code> 값을 수정하면 프레임의 수가 바뀌게 됩니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_FormClosing</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">FormClosingEventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">frame</span><span class=\"p\">.</span><span class=\"nf\">Dispose</span><span class=\"p\">();</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">메모리 관리</code>를 위하여 폼이 닫힐 때 <code class=\"highlighter-rouge\">Dispose()</code>를 이용하여 메모리 할당을 해제합니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">Dispose()</code>는 <code class=\"highlighter-rouge\">클래스등의 메모리 할당을 해제</code>합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"코드\">코드</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.CPlusPlus</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">VideoCapture</span> <span class=\"n\">video</span><span class=\"p\">;</span>\n        <span class=\"n\">Mat</span> <span class=\"n\">frame</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Mat</span><span class=\"p\">();</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">try</span>\n            <span class=\"p\">{</span> \n                <span class=\"n\">video</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">VideoCapture</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">);</span>\n                <span class=\"n\">video</span><span class=\"p\">.</span><span class=\"n\">FrameWidth</span> <span class=\"p\">=</span> <span class=\"m\">640</span><span class=\"p\">;</span>\n                <span class=\"n\">video</span><span class=\"p\">.</span><span class=\"n\">FrameHeight</span> <span class=\"p\">=</span> <span class=\"m\">480</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">catch</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">timer1</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">timer1_Tick</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">video</span><span class=\"p\">.</span><span class=\"nf\">Read</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">);</span>\n            <span class=\"n\">pictureBoxIpl1</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">frame</span><span class=\"p\">.</span><span class=\"nf\">ToIplImage</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n        \n         <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_FormClosing</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">FormClosingEventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">frame</span><span class=\"p\">.</span><span class=\"nf\">Dispose</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>       \n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 12강 -  Dictionary 기초 연산",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-12/",
      "date"     : "2018-03-08 00:00:00 +0900",
  "content"   : "<h3 id=\"사전-dictionary\">사전 (Dictionary)</h3>\n<hr />\n<p>Python에서는 <code class=\"highlighter-rouge\">중괄호({})</code>를 이용하여 <strong>사전을 생성할 수 있습니다.</strong> 사전은 <code class=\"highlighter-rouge\">매칭</code>에 사용되며 <code class=\"highlighter-rouge\">key</code>와 <code class=\"highlighter-rouge\">value</code>로 구성 되어있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">key</code>를 호출하여 <code class=\"highlighter-rouge\">value</code>를 불러옵니다. <code class=\"highlighter-rouge\">key</code>는 <strong>중복이 불가능하며</strong> <code class=\"highlighter-rouge\">value</code>는 <strong>중복이 가능합니다.</strong> <strong>순서는 무관합니다.</strong></p>\n\n<p><br /></p>\n\n<h3>생성</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">'one'</span><span class=\"p\">:</span><span class=\"s\">'하나'</span><span class=\"p\">,</span><span class=\"s\">'two'</span><span class=\"p\">:</span><span class=\"s\">'둘'</span><span class=\"p\">,</span> <span class=\"s\">'three'</span><span class=\"p\">:</span><span class=\"s\">'셋'</span><span class=\"p\">}</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"s\">'one'</span><span class=\"p\">])</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>하나</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">index</code>대신에 <code class=\"highlighter-rouge\">key</code>를 호출하여 <code class=\"highlighter-rouge\">value</code>를 출력합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>추가</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">'one'</span><span class=\"p\">:</span><span class=\"s\">'하나'</span><span class=\"p\">,</span><span class=\"s\">'two'</span><span class=\"p\">:</span><span class=\"s\">'둘'</span><span class=\"p\">,</span> <span class=\"s\">'three'</span><span class=\"p\">:</span><span class=\"s\">'셋'</span><span class=\"p\">}</span>\n\n<span class=\"n\">a</span><span class=\"p\">[</span><span class=\"s\">'four'</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"s\">'넷'</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"s\">'four'</span><span class=\"p\">])</span>\n\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"s\">'five'</span><span class=\"p\">:</span><span class=\"s\">'다섯'</span><span class=\"p\">,</span><span class=\"s\">'six'</span><span class=\"p\">:</span><span class=\"s\">'여섯'</span><span class=\"p\">})</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>넷<br />\n{‘one’: ‘하나’, ‘two’: ‘둘’, ‘three’: ‘셋’, ‘four’: ‘넷’, ‘five’: ‘다섯’, ‘six’: ‘여섯’}</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">사전[key]=value</code>를 이용하여 <strong>목록을 추가할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">사전.update({'key':'value', 'key':'value'})</code>를 이용하여 <strong>다수의 목록을 추가할 수 있습니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>수정</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">'one'</span><span class=\"p\">:</span><span class=\"s\">'하나'</span><span class=\"p\">,</span><span class=\"s\">'two'</span><span class=\"p\">:</span><span class=\"s\">'둘'</span><span class=\"p\">,</span> <span class=\"s\">'three'</span><span class=\"p\">:</span><span class=\"s\">'셋'</span><span class=\"p\">}</span>\n\n<span class=\"n\">a</span><span class=\"p\">[</span><span class=\"s\">'three'</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"s\">'둘'</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>{‘one’: ‘하나’, ‘two’: ‘둘’, ‘three’: ‘둘’}</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">사전[key]=value</code>를 이용하여 <code class=\"highlighter-rouge\">value</code>의 값을 <strong>수정 할 수 있습니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>병합</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">'one'</span><span class=\"p\">:</span><span class=\"s\">'하나'</span><span class=\"p\">,</span><span class=\"s\">'two'</span><span class=\"p\">:</span><span class=\"s\">'둘'</span><span class=\"p\">,</span> <span class=\"s\">'three'</span><span class=\"p\">:</span><span class=\"s\">'셋'</span><span class=\"p\">}</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">'five'</span><span class=\"p\">:</span><span class=\"s\">'다섯'</span><span class=\"p\">,</span><span class=\"s\">'six'</span><span class=\"p\">:</span><span class=\"s\">'여섯'</span><span class=\"p\">}</span>\n\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>{‘one’: ‘하나’, ‘two’: ‘둘’, ‘three’: ‘셋’, ‘five’: ‘다섯’, ‘six’: ‘여섯’}<br />\n{‘five’: ‘다섯’, ‘six’: ‘여섯’}</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">사전.update(사전)</code>을 이용하여 <strong>서로 다른 사전을 병합할 수 있습니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>삭제</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">'one'</span><span class=\"p\">:</span><span class=\"s\">'하나'</span><span class=\"p\">,</span><span class=\"s\">'two'</span><span class=\"p\">:</span><span class=\"s\">'둘'</span><span class=\"p\">,</span> <span class=\"s\">'three'</span><span class=\"p\">:</span><span class=\"s\">'셋'</span><span class=\"p\">}</span>\n<span class=\"k\">del</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"s\">'two'</span><span class=\"p\">]</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>{‘one’: ‘하나’, ‘three’: ‘셋’}<br />\n{}</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">del 사전['key']</code>을 이용하여 <strong>사전의 일부를 삭제할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">사전.clear()</code>을 이용하여 <strong>사전의 모든 값을 삭제합니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>조사</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">'one'</span><span class=\"p\">:</span><span class=\"s\">'하나'</span><span class=\"p\">,</span><span class=\"s\">'two'</span><span class=\"p\">:</span><span class=\"s\">'둘'</span><span class=\"p\">,</span> <span class=\"s\">'three'</span><span class=\"p\">:</span><span class=\"s\">'셋'</span><span class=\"p\">}</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'one'</span> <span class=\"ow\">in</span> <span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'four'</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>dict_keys([‘one’, ‘two’, ‘three’]) <br />\ndict_values([‘하나’, ‘둘’, ‘셋’])<br />\nTrue<br />\nTrue</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">사전.keys()</code>을 이용하여 <code class=\"highlighter-rouge\">key</code>의 <strong>모든 목록을 출력합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">사전.values()</code>을 이용하여 <code class=\"highlighter-rouge\">value</code>의 <strong>모든 목록을 출력합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">key in 사전</code>을 이용하여 <strong>사전에 key 값이 있는지 확인합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">key not in 사전</code>을 이용하여 <strong>사전에 key 값이 없는지 확인합니다.</strong></p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 11강 -  Tuple 기초 연산",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-11/",
      "date"     : "2018-03-04 00:00:00 +0900",
  "content"   : "<h3 id=\"튜플-tuple\">튜플 (Tuple)</h3>\n<hr />\n<p>Python에서는 <code class=\"highlighter-rouge\">소괄호(())</code>를 이용하여 <strong>튜플을 생성할 수 있습니다.</strong> 튜플은 <code class=\"highlighter-rouge\">정의</code>에 사용되며 <strong>변경이 불가하고 순서를 중요시합니다.</strong></p>\n\n<p><br /></p>\n\n<h3>생성</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>(1, 2, 3, 4, 5)</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">소괄호(())</code>를 이용하여 <code class=\"highlighter-rouge\">List</code>와 <strong>동일한 방법으로 튜플을 생성할 수 있습니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>참조</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">])</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>1<br />\n2<br />\n3<br />\n5<br />\n(1, 2)<br />\n(1, 2, 3, 4)<br />\n(1, 3)</dd>\n</dl>\n\n<p><br /></p>\n\n<p>튜플은 <code class=\"highlighter-rouge\">:</code>을 이용하여 <strong>튜플을 참조할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">튜플[index]</code>를 사용하면 <code class=\"highlighter-rouge\">index</code>의 값을 출력합니다.</p>\n\n<p><code class=\"highlighter-rouge\">튜플[start:end]</code>를 사용하면 <code class=\"highlighter-rouge\">start</code>부터 <code class=\"highlighter-rouge\">end</code>값 까지 출력합니다.</p>\n\n<p><code class=\"highlighter-rouge\">튜플[start:end:interval]</code>를 사용하면 <code class=\"highlighter-rouge\">start</code>부터 <code class=\"highlighter-rouge\">end</code>값 까지 <code class=\"highlighter-rouge\">interval</code> 간격만큼 출력합니다.</p>\n\n<p><strong>첫번째 값</strong>은 <code class=\"highlighter-rouge\">0</code>이며, <strong>우측의 첫번째 값</strong>은 <code class=\"highlighter-rouge\">-1</code>을 사용하여 출력이 가능합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>조사</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"mi\">6</span> <span class=\"ow\">in</span> <span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>5<br />\n5<br />\n1<br />\n2<br />\n1<br />\nFalse</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">len()</code>을 이용하여 튜플의 <code class=\"highlighter-rouge\">길이</code>를 확인할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">min()</code>을 이용하여 튜플에서 <code class=\"highlighter-rouge\">최솟값</code>을 가지는 원소의 값을 확인할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">max()</code>를 이용하여 튜플에서 <code class=\"highlighter-rouge\">최댓값</code>을 가지는 원소의 값을 확인할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">튜플.index()</code>를 이용하여 해당 값이 가지는 <code class=\"highlighter-rouge\">위치</code>를 확인 할 수 있습니다. <code class=\"highlighter-rouge\">(시작값=0)</code></p>\n\n<p><code class=\"highlighter-rouge\">튜플.count()</code>를 이용하여 해당 값이 가지는 <code class=\"highlighter-rouge\">개수</code>를 확인할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">값 in 튜플</code>을 이용하여 해당 값이 <code class=\"highlighter-rouge\">존재</code>하는지 확인할 수 있습니다.</p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 10강 -  문자열",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-10/",
      "date"     : "2018-02-18 00:00:00 +0900",
  "content"   : "<h3 id=\"문자열-string\">문자열 (String)</h3>\n<hr />\n<p>Python에서는 <code class=\"highlighter-rouge\">따옴표</code>를 이용하여 <strong>문자열을 생성할 수 있습니다.</strong> 또한 문자열의 <strong>문자들에 대한 값을 수정하거나 추가, 삭제 할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<h3>생성</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s\">'Python 3.6.4'</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"s\">\"It's you\"</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"s\">'It</span><span class=\"se\">\\'</span><span class=\"s\">s you'</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"s\">\"alpha</span><span class=\"se\">\\n</span><span class=\"s\">beta\"</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>Python 3.6.4<br />\nIt’s you<br />\nIt’s you<br />\nalpha<br />\nbeta</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">작은따옴표('')</code>를 사용하거나 <code class=\"highlighter-rouge\">큰따옴표(\"\")</code>를 사용하여 문자열을 생성할 수 있습니다.</p>\n\n<p>문자열 안에 <code class=\"highlighter-rouge\">따옴표를 포함</code>시키려면 <code class=\"highlighter-rouge\">\\</code>을 병기하여 사용가능합니다.</p>\n\n<p>줄바꿈은 <code class=\"highlighter-rouge\">\\n</code>을 사용하여 줄을 바꿀 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">\\</code>을 사용하는 이스케이프 코드는 <code class=\"highlighter-rouge\">\\n</code>을 비롯하여 <code class=\"highlighter-rouge\">수평 탭 : \\t</code>, <code class=\"highlighter-rouge\">\\ 문자 : \\\\</code>, <code class=\"highlighter-rouge\">백스페이스 : \\b</code> 등이 존재합니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3>연산</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s\">\"al\"</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"s\">\"pha\"</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"s\">\"alphabet\"</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">])</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>alpha<br />\nalal<br />\nl<br />\np<br />\napae</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">+</code>를 이용하여 <strong>문자열끼리 합칠 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">*</code>를 이용하여 <strong>문자열을 반복할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">문자열[index]</code>을 이용하여 <code class=\"highlighter-rouge\">index</code>에 위치한 문자를 출력합니다.</p>\n\n<p><code class=\"highlighter-rouge\">문자열[start:end]</code>을 이용하여 <code class=\"highlighter-rouge\">start</code>부터 <code class=\"highlighter-rouge\">end</code>까지의 문자열을 출력합니다.</p>\n\n<p><code class=\"highlighter-rouge\">문자열[start:end:step]</code>을 이용하여 <code class=\"highlighter-rouge\">start</code>부터 <code class=\"highlighter-rouge\">end</code>까지 <code class=\"highlighter-rouge\">step</code>간격의 문자열을 출력합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>포맷</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s\">\"</span><span class=\"si\">%</span><span class=\"s\">d </span><span class=\"si\">%</span><span class=\"s\">f </span><span class=\"si\">%</span><span class=\"s\">e\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"s\">\"</span><span class=\"si\">%</span><span class=\"s\">o </span><span class=\"si\">%</span><span class=\"s\">x\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">)</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"s\">\"</span><span class=\"si\">%</span><span class=\"s\">c </span><span class=\"si\">%</span><span class=\"s\">s\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"s\">'A'</span><span class=\"p\">,</span> <span class=\"s\">\"AAA\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>10 10.000000 1.000000e+01<br />\n10 10<br />\nA AAA</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">\"%포맷형식\" % (변수 또는 값)</code>의 형태로 포맷을 구성할 수 있습니다.</p>\n\n<p><br /></p>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">연산</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">%d</td>\n      <td style=\"text-align: center\">정수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">%f</td>\n      <td style=\"text-align: center\">실수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">%e</td>\n      <td style=\"text-align: center\">지수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">%o</td>\n      <td style=\"text-align: center\">8진법</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">%x</td>\n      <td style=\"text-align: center\">16진법</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">%c</td>\n      <td style=\"text-align: center\">문자</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">%s</td>\n      <td style=\"text-align: center\">문자열</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">%c</code>는 상수를 입력할 경우 <code class=\"highlighter-rouge\">아스키값</code>으로 판단하여 출력합니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3>변환</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s\">\"abcd\"</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"s\">\"ABCD\"</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">())</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">())</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>ABCD<br />\nabcd</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">문자열.upper()</code>은 <strong>소문자를 대문자로 변경합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">문자열.lower()</code>은 <strong>대문자를 소문자로 변경합니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>공백 제거</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s\">\"   l   aa   l   \"</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">rstrip</span><span class=\"p\">())</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">lstrip</span><span class=\"p\">())</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>l   aa   l<br />\n　　　l   aa   l<br />\nl   aa   l　　　</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">문자열.strip()</code>은 <strong>양측 공백을 제거합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">문자열.rstrip()</code>은 <strong>우측 공백을 제거합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">문자열.lstrip()</code>은 <strong>좌측 공백을 제거합니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>검출</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s\">\"Time is an illusion.\"</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s\">'x'</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"s\">'u'</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"s\">'i'</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>-1<br />\n14<br />\n4</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">문자열.find(x)</code>은 해당 문자가 <strong>가장 처음에 나온 위치를 반환합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">문자열.index(x)</code>은 해당 문자가 <strong>가장 처음에 나온 위치를 반환합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">문자열.count(x)</code>은 해당 문자의 <strong>횟수를 반환합니다.</strong></p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">find</code>와 <code class=\"highlighter-rouge\">index</code>의 차이점은 find의 경우 찾지 못했을 경우 <code class=\"highlighter-rouge\">-1</code>을 반환하며, index는 <code class=\"highlighter-rouge\">Error</code>가 발생합니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3>변환</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s\">\"Time is an illusion.\"</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"s\">\"/\"</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">())</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s\">\"Time\"</span><span class=\"p\">,</span> <span class=\"s\">\"Today\"</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s\">'/'</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[‘Time’, ‘is’, ‘an’, ‘illusion.’]<br />\nToday is an illusion.<br />\nT/i/m/e/ /i/s/ /a/n/ /i/l/l/u/s/i/o/n/.<br />\nTrue</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">문자열.split(x)</code>은 <strong>띄어쓰기마다 분리하여 리스트로 변환합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">문자열.relpace(x, y)</code>은 <strong>해당 문자를 다른 문자로 변경합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">문자열.join(x)</code>은 <strong>x 문자열 사이사이에 문자열을 삽입합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">문자열.startswith(x)</code>은 <strong>문자열이 x로 시작하는지 확인합니다.</strong></p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 9강 -  List 기초 연산 (2)",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-9/",
      "date"     : "2018-02-17 00:00:00 +0900",
  "content"   : "<h3 id=\"리스트-list\">리스트 (List)</h3>\n<hr />\n<p>Python에서는 List를 이용하여 <strong>원소들에 대한 값을 확인할 수 있습니다.</strong> 또한 리스트의 <strong>원소들에 대한 값을 수정하거나 추가, 삭제 할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<h3>조사</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">]</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">'a'</span><span class=\"p\">,</span> <span class=\"s\">'a'</span><span class=\"p\">,</span> <span class=\"s\">'b'</span><span class=\"p\">,</span> <span class=\"s\">'c'</span><span class=\"p\">,</span> <span class=\"s\">\"xyz\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"s\">'a'</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'a'</span> <span class=\"ow\">in</span> <span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>7<br />\n13<br />\n1<br />\n5<br />\n2<br />\nTrue</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">len()</code>을 이용하여 리스트의 <code class=\"highlighter-rouge\">길이</code>를 확인할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">min()</code>을 이용하여 리스트에서 <code class=\"highlighter-rouge\">최솟값</code>을 가지는 원소의 값을 확인할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">max()</code>를 이용하여 리스트에서 <code class=\"highlighter-rouge\">최댓값</code>을 가지는 원소의 값을 확인할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">리스트.index()</code>를 이용하여 해당 값이 가지는 <code class=\"highlighter-rouge\">위치</code>를 확인 할 수 있습니다. <code class=\"highlighter-rouge\">(시작값=0)</code></p>\n\n<p><code class=\"highlighter-rouge\">리스트.count()</code>를 이용하여 해당 값이 가지는 <code class=\"highlighter-rouge\">개수</code>를 확인할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">값 in 리스트</code>를 이용하여 해당 값이 <code class=\"highlighter-rouge\">존재</code>하는지 확인할 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <strong>문자열이나 리스트가 포함된 리스트에는 max(), min()을 이용할 수 없습니다.</strong></li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3>대입</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]</span>\n\n<span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[0, 2, 2, 3, 4, 5, 6, 7, 8, 9]</dd>\n</dl>\n\n<p><br /></p>\n\n<p>리스트의 값을 <strong>직접적으로 변경시켜 값을 변경할 수 있습니다.</strong></p>\n\n<p><br />\n<br /></p>\n\n<h3>삽입</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]</span>\n\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">리스트.insert(index, value)</code>를 이용하여 <code class=\"highlighter-rouge\">index</code>의 <strong>바로 앞자리</strong>에 <code class=\"highlighter-rouge\">value</code>를 삽입합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]</span>\n\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">리스트.append(value)</code>를 이용하여 리스트의 <strong>마지막 자리</strong>에 <code class=\"highlighter-rouge\">value</code>를 삽입합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">]</span>\n\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">리스트.extend(list)</code>를 이용하여 리스트의 마지막 자리에 <code class=\"highlighter-rouge\">list</code>의 원소들을 삽입합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3>삭제</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]</span>\n\n<span class=\"k\">del</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[0, 9]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">del 리스트[start, end]</code>를 이용하여 <code class=\"highlighter-rouge\">start</code>부터 <code class=\"highlighter-rouge\">end-1</code>까지의 원소를 삭제합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]</span>\n\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[0, 2, 3, 4, 5, 6, 7, 8, 9]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">리스트.pop(index)</code>를 이용하여 <code class=\"highlighter-rouge\">index</code>에 위치한 원소를 삭제합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <strong>index를 생략할 경우 index의 값을 -1로 간주합니다.</strong></li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">'x'</span><span class=\"p\">,</span> <span class=\"s\">'y'</span><span class=\"p\">,</span> <span class=\"s\">'z'</span><span class=\"p\">,</span> <span class=\"s\">'y'</span><span class=\"p\">]</span>\n\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"s\">'y'</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[‘x’, ‘z’, ‘y’]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">리스트.remove(value)</code>를 이용하여 <code class=\"highlighter-rouge\">value</code>와 동일한 값을 지니는 <strong>원소 하나</strong>를 삭제합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <strong>index가 0에 가까운 순서부터 삭제합니다.</strong></li>\n</ul>\n\n<p><br /></p>\n\n<h3>자르기</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">[:</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[0, 1, 2, 3]<br />\n[1, 2, 3]<br />\n[0, 1, 2, 3]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">a[start:end]</code>를 이용하여 리스트를 자를 수 있습니다. <code class=\"highlighter-rouge\">start</code>와 <code class=\"highlighter-rouge\">end</code>를 미입력시 각각 <code class=\"highlighter-rouge\">첫 번째 index</code>와 <code class=\"highlighter-rouge\">마지막 index</code>로 간주합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <strong>대입 연산을 하지 않으면 원본 리스트에는 영향을 주지 않습니다.</strong></li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3>정렬</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">()</span>\n    \n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[0, 1, 2, 3, 4]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">리스트.sort()</code>를 이용하여 리스트를 <code class=\"highlighter-rouge\">오름차순</code>으로 정렬합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    \n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[4, 3, 2, 1, 0]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">리스트.sort(reverse=True)</code>를 이용하여 리스트를 <code class=\"highlighter-rouge\">내림차순</code>으로 정렬합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <strong>reverse=False로 사용할 경우 오름차순으로 정렬합니다.</strong></li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">reverse</span><span class=\"p\">()</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[3, 4, 2, 0, 1]</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">리스트.reverse()</code>를 이용하여 리스트를 <code class=\"highlighter-rouge\">역순</code>으로 정렬합니다.</p>\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 8강 -  List 기초 연산 (1)",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-8/",
      "date"     : "2018-02-16 00:00:00 +0900",
  "content"   : "<h3 id=\"리스트-list\">리스트 (List)</h3>\n<hr />\n<p>Python에서는 List를 이용하여 <strong>다양한 연산이 가능</strong>합니다. 또한 <code class=\"highlighter-rouge\">데이터 형식과는 무관하게 저장</code>할 수 있으며 <code class=\"highlighter-rouge\">List안에 또 다른 List를 포함</code>시킬 수 있습니다.</p>\n\n<p>List는 <code class=\"highlighter-rouge\">대괄호([])</code>를 사용하며 순서를 중요시합니다. 또한 연산시 <strong>원소에 대한 값이 아닌 List 자체에 대한 연산을 실시</strong>합니다.</p>\n\n<p><br /></p>\n\n<h3>생성</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[1, 2, 3]<br />\n[4, 5, 6]</dd>\n</dl>\n\n<p><br /></p>\n\n<p>리스트는 <code class=\"highlighter-rouge\">대괄호([])</code>와 <code class=\"highlighter-rouge\">콤마(,)</code>를 이용하여 생성이 가능합니다.</p>\n\n<p><br /></p>\n\n<h3>이어 붙이기</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[1, 2, 3, 4, 5, 6]<br />\n[1, 2, 3, 9]</dd>\n</dl>\n\n<p><br /></p>\n\n<p>리스트는 <code class=\"highlighter-rouge\">+</code>를 이용하여 <strong>리스트끼리 합치거나 새로운 값을 추가할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<h3>반복</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"o\">*</span><span class=\"mi\">3</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[1, 2, 3, 1, 2, 3]<br />\n[4, 5, 6, 4, 5, 6, 4, 5, 6]</dd>\n</dl>\n\n<p><br /></p>\n\n<p>리스트는 <code class=\"highlighter-rouge\">*</code>를 이용하여 리스트를 반복시켜 <strong>리스트 자체의 크기가 커집니다.</strong></p>\n\n<p><br /></p>\n\n<h3>참조</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">])</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>1<br />\n2<br />\n3<br />\n3<br />\n[4]<br />\n[4, 5]<br />\n[1, 3, 5, 7]</dd>\n</dl>\n\n<p><br /></p>\n\n<p>리스트는 <code class=\"highlighter-rouge\">:</code>을 이용하여 <strong>리스트를 참조할 수 있습니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">리스트[index]</code>를 사용하면 <code class=\"highlighter-rouge\">index</code>의 값을 출력합니다.</p>\n\n<p><code class=\"highlighter-rouge\">리스트[start:end]</code>를 사용하면 <code class=\"highlighter-rouge\">start</code>부터 <code class=\"highlighter-rouge\">end</code>값 까지 출력합니다.</p>\n\n<p><code class=\"highlighter-rouge\">리스트[start:end:interval]</code>를 사용하면 <code class=\"highlighter-rouge\">start</code>부터 <code class=\"highlighter-rouge\">end</code>값 까지 <code class=\"highlighter-rouge\">interval</code> 간격만큼 출력합니다.</p>\n\n<p><strong>좌측의 첫번째 값</strong>은 <code class=\"highlighter-rouge\">0</code>이며, <strong>우측의 첫번째 값</strong>은 <code class=\"highlighter-rouge\">-1</code>을 사용하여 출력이 가능합니다.</p>\n\n<p><br /></p>\n\n<h3>포함</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[[1, 2, 3], [4, 5, 6]]</dd>\n</dl>\n\n<p><br /></p>\n\n<p>리스트안에 리스트를 포함시켜 <strong>리스트를 포함한 리스트 또한 생성이 가능합니다.</strong></p>\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 7강 - 수학 모듈",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-7/",
      "date"     : "2018-02-03 00:00:00 +0900",
  "content"   : "<h3 id=\"수학-모듈\">수학 모듈</h3>\n<hr />\n<p>Python에서는 수학 모듈을 이용하여 C/C++ 에서 <code class=\"highlighter-rouge\">while</code>, <code class=\"highlighter-rouge\">for</code> 등을 이용하여 구현해야 했던 함수들이 <code class=\"highlighter-rouge\">기본적으로 구현</code>되어 있습니다. 이를 사용하여 간편히 수학적인 계산을 해결할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">math</span></code></pre></figure>\n\n<p>상단에 <code class=\"highlighter-rouge\">import math</code>를 사용하여 수학 모듈을 포함시킵니다. 수학 함수의 사용방법은 <code class=\"highlighter-rouge\">math.*</code>을 이용하여 사용이 가능합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">from</span> <span class=\"nn\">math</span> <span class=\"kn\">import</span> <span class=\"o\">*</span></code></pre></figure>\n\n<p>위와 같이 <code class=\"highlighter-rouge\">import</code>시킬 시 수학 함수를 사용할 때 <code class=\"highlighter-rouge\">math.</code>를 입력하지 않아도 사용이 가능합니다.</p>\n\n<p><code class=\"highlighter-rouge\">*</code> 대신 함수를 직접 적는다면 해당 함수만 사용이 가능합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">from</span> <span class=\"nn\">math</span> <span class=\"kn\">import</span> <span class=\"nb\">pow</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">pow</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">pow()</code>는 정상 출력이 되지만 <code class=\"highlighter-rouge\">sqrt()</code>는 포함시키지 않아 에러가 발생합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"표현-함수\">표현 함수</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">연산</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">ceil(x)</td>\n      <td style=\"text-align: center\">올림</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">floor(x)</td>\n      <td style=\"text-align: center\">내림</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">trunc(x)</td>\n      <td style=\"text-align: center\">절사</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<h3 id=\"삼각-함수\">삼각 함수</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">연산</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cos(x)</td>\n      <td style=\"text-align: center\">코사인</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">sin(x)</td>\n      <td style=\"text-align: center\">사인</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tan(x)</td>\n      <td style=\"text-align: center\">탄젠트</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">acos(x)</td>\n      <td style=\"text-align: center\">아크코사인</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">asin(x)</td>\n      <td style=\"text-align: center\">아크사인</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">atan(x)</td>\n      <td style=\"text-align: center\">아크탄젠트</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">atan2(x, y)</td>\n      <td style=\"text-align: center\">x/y 아크탄젠트</td>\n    </tr>\n  </tbody>\n</table>\n\n<ul>\n  <li>Tip : 라디안값으로 반환합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"하이퍼볼릭-함수\">하이퍼볼릭 함수</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">연산</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">cosh(x)</td>\n      <td style=\"text-align: center\">하이퍼볼릭 코사인</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">sinh(x)</td>\n      <td style=\"text-align: center\">하이퍼볼릭 사인</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tanh(x)</td>\n      <td style=\"text-align: center\">하이퍼볼릭 탄젠트</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">acosh(x)</td>\n      <td style=\"text-align: center\">하이퍼볼릭 아크코사인</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">asinh(x)</td>\n      <td style=\"text-align: center\">하이퍼볼릭 아크사인</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">atanh(x)</td>\n      <td style=\"text-align: center\">하이퍼볼릭 아크탄젠트</td>\n    </tr>\n  </tbody>\n</table>\n\n<ul>\n  <li>Tip : 라디안값으로 반환합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"각도-변환\">각도 변환</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">연산</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">degrees(x)</td>\n      <td style=\"text-align: center\">60분법으로 변환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">radians(x)</td>\n      <td style=\"text-align: center\">호도법으로 변환</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<h3 id=\"논리-함수\">논리 함수</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">연산</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">isclose(x, y,   rel_tol=z)</td>\n      <td style=\"text-align: center\">x와 y가 (z*1e+02)% 내외로 가까우면  True, 아니면 False</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">isinf(x)</td>\n      <td style=\"text-align: center\">x가 inf이면 True, 아니면 False</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">isfinite(x)</td>\n      <td style=\"text-align: center\">x가 inf, nan이면 False, 아니면 True</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">isnan(x)</td>\n      <td style=\"text-align: center\">x가 nan이면 True, 아니면 False</td>\n    </tr>\n  </tbody>\n</table>\n\n<ul>\n  <li>Tip : isclose(x, y, rel_tol=z) 에서 rel_tol=z를 미입력시 기본값은 <code class=\"highlighter-rouge\">1e-09</code>로 계산합니다. <strong>두 값의 차이가 5% 이내라면 z=0.05를 사용합니다.</strong></li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"로그-함수\">로그 함수</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">연산</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">log(x, y)</td>\n      <td style=\"text-align: center\">y를 밑으로 하는 x 로그</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">log10(x)</td>\n      <td style=\"text-align: center\">10을 밑으로 하는 x로그</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">log1p(x)</td>\n      <td style=\"text-align: center\">e를 밑으로 하는 x+1로그</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">log2(x)</td>\n      <td style=\"text-align: center\">2를 밑으로 하는 x로그</td>\n    </tr>\n  </tbody>\n</table>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">log(x, y)</code>에서 y를 미입력 시 밑을 <code class=\"highlighter-rouge\">e</code>로 사용하여 자연로그로 이용합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"연산-함수\">연산 함수</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">연산</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">pow(x, y)</td>\n      <td style=\"text-align: center\">x의 y승</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">sqrt(x)</td>\n      <td style=\"text-align: center\">루트 x</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">erf(x)</td>\n      <td style=\"text-align: center\">오차함수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">       erfc(x)      </td>\n      <td style=\"text-align: center\">        여오차함수        </td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">exp(x)</td>\n      <td style=\"text-align: center\">e의 x승</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">expm1</td>\n      <td style=\"text-align: center\">e의 x-1승</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">frexp(x)</td>\n      <td style=\"text-align: center\">x를 (가수부, 지수부)로 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">ldexp(x, y)</td>\n      <td style=\"text-align: center\">x*(2^y)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">gamma(x)</td>\n      <td style=\"text-align: center\">감마함수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">lgamma(x)</td>\n      <td style=\"text-align: center\">감마함수의 자연로그</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">factorial(x)</td>\n      <td style=\"text-align: center\">팩토리얼</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">fsum([x, y, z, …])</td>\n      <td style=\"text-align: center\">리스트의 합</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">fmod(x, y)</td>\n      <td style=\"text-align: center\">x를 y로 나눈 나머지</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">fabs(x)</td>\n      <td style=\"text-align: center\">절대값</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">gcd(x, y)</td>\n      <td style=\"text-align: center\">x와 y의 최대공약수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">hypot(x, y)</td>\n      <td style=\"text-align: center\">유클리드 놈을 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">modf(x)</td>\n      <td style=\"text-align: center\">x를 (소수부, 정수부)로 반환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">copysign(x, y)</td>\n      <td style=\"text-align: center\">y의 부호를 사용하는 x를 반환</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<h3 id=\"상수\">상수</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">연산</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">e</td>\n      <td style=\"text-align: center\">e</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">pi</td>\n      <td style=\"text-align: center\">π</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">tau</td>\n      <td style=\"text-align: center\">τ</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">inf</td>\n      <td style=\"text-align: center\">∞</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">nan</td>\n      <td style=\"text-align: center\">Not a Number</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<h3 id=\"함수-수식\">함수 수식</h3>\n<hr />\n\n<h3>erf(x) : 오차함수</h3>\n<h3> $$ erf(x) = {2\\over \\sqrt\\pi}\\int_0^x e^{-t^2} dt $$ </h3>\n<p><br /></p>\n<h3>erfc(x) : 여오차함수</h3>\n<h3> $$ erfc(x) = 1-erf(x) = {2\\over \\sqrt\\pi}\\int_x^\\infty e^{-t^2} dt $$ </h3>\n<p><br /></p>\n<h3>frexp(x) : (가수부, 지수부) 반환</h3>\n<h3> $$ frexp(x) = {가수부} \\times 2^{지수부} $$ </h3>\n<p><br /></p>\n<h3>gamma(x) : 감마함수</h3>\n<h3> $$ gamma(x) = \\int_0^\\infty {t^{x-1}} {e^{-t}} dt $$ </h3>\n<p><br /></p>\n<h3>hypot(x, y) : 유클리드 노름</h3>\n<h3> $$ hypot(x, y) = {\\sqrt{x^2 + y^2}} $$ </h3>\n<p><br /></p>\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 6강 - 비트 연산",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-6/",
      "date"     : "2018-02-01 00:00:00 +0900",
  "content"   : "<h3 id=\"비트-연산-bitwise\">비트 연산 (Bitwise)</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">연산</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">x | y</td>\n      <td style=\"text-align: center\">or</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x &amp; y</td>\n      <td style=\"text-align: center\">and</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x ^ y</td>\n      <td style=\"text-align: center\">xor</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x « y</td>\n      <td style=\"text-align: center\">left shift</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x » y</td>\n      <td style=\"text-align: center\">right shift</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">~x</td>\n      <td style=\"text-align: center\">not</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><code class=\"highlighter-rouge\">비트 연산</code>을 통하여 <code class=\"highlighter-rouge\">2진법</code>으로 구성된 값을 계산할 수 있습니다. 각 자릿수를 서로 비교하여 결과를 반환합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">or</code> : 둘 중 하나의 값이 1일 경우 1을 반환</li>\n  <li><code class=\"highlighter-rouge\">and</code> : 둘 다 값이 1일 경우 1을 반환</li>\n  <li><code class=\"highlighter-rouge\">xor</code> : 둘 다 값이 다를 경우 1을 반환</li>\n  <li><code class=\"highlighter-rouge\">left shift</code> : 좌측으로 y회 비트 밀기</li>\n  <li><code class=\"highlighter-rouge\">right shift</code> : 우측으로 y회 비트 밀기</li>\n  <li><code class=\"highlighter-rouge\">not</code> : 반전</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mb\">0b0110</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"mb\">0b1010</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">bin</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">|</span><span class=\"n\">y</span><span class=\"p\">),</span> <span class=\"n\">x</span><span class=\"o\">|</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">bin</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&amp;</span><span class=\"n\">y</span><span class=\"p\">),</span> <span class=\"n\">x</span><span class=\"o\">&amp;</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">bin</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">^</span><span class=\"n\">y</span><span class=\"p\">),</span> <span class=\"n\">x</span><span class=\"o\">^</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">bin</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&lt;&lt;</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">x</span><span class=\"o\">&lt;&lt;</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">bin</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">&gt;&gt;</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">y</span><span class=\"o\">&gt;&gt;</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">bin</span><span class=\"p\">(</span><span class=\"o\">~</span><span class=\"n\">x</span><span class=\"p\">),</span> <span class=\"o\">~</span><span class=\"n\">x</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>0b1110 14<br />\n0b10 2<br />\n0b1100 12<br />\n0b1100 12<br />\n0b101 5<br />\n-0b111 -7<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">2진법</code>은 <code class=\"highlighter-rouge\">0b</code>를 포함하여 <code class=\"highlighter-rouge\">0</code>과 <code class=\"highlighter-rouge\">1</code>로 구성된 진법입니다. 맨 우측 첫 자릿수부터 <code class=\"highlighter-rouge\">2^n-1</code>을 의미합니다. (n=1)</p>\n\n<p><code class=\"highlighter-rouge\">0b0110</code>의 경우 <code class=\"highlighter-rouge\">0 / 1 / 1 / 0</code> 이므로 <code class=\"highlighter-rouge\">2^2 + 2^1</code>입니다. 즉, <code class=\"highlighter-rouge\">0b0110</code>=<code class=\"highlighter-rouge\">6</code>을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">0b1010</code>의 경우 <code class=\"highlighter-rouge\">1 / 0 / 1 / 0</code> 이므로 <code class=\"highlighter-rouge\">2^3 + 2^1</code>입니다. 즉, <code class=\"highlighter-rouge\">0b1010</code>=<code class=\"highlighter-rouge\">10</code>을 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">or</code>, <code class=\"highlighter-rouge\">and</code>, <code class=\"highlighter-rouge\">xor</code>은 각 자릿수들을 비교하여 반환하며 <strong>결과</strong>에서 확인 가능합니다.</p>\n\n<p><code class=\"highlighter-rouge\">shift</code>는 <code class=\"highlighter-rouge\">y</code>회 만큼 방향으로 이동하며 <strong>결과</strong>에서 확인 가능합니다.</p>\n\n<p><code class=\"highlighter-rouge\">not</code>의 경우 <code class=\"highlighter-rouge\">0 → 1</code>로 <code class=\"highlighter-rouge\">1 → 0</code>으로 반전시킵니다. 하지만 여기서 <code class=\"highlighter-rouge\">-6</code>이 아닌 -<code class=\"highlighter-rouge\">7</code>이 나오는데, <code class=\"highlighter-rouge\">2의 보수</code> 표현법을 사용하기 때문입니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">2의 보수</code>란 반전 시킨 값에 <code class=\"highlighter-rouge\">+1</code>을 더해주어 음수를 표현하기 위해 사용합니다. 맨 앞에 <code class=\"highlighter-rouge\">-</code>을 표현하여 <strong>반전을 대체</strong>합니다.</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"함수-사용\">함수 사용</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">L1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">L1</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">all</span><span class=\"p\">(</span><span class=\"n\">L1</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">L1</span><span class=\"p\">))</span>\n\n<span class=\"n\">L2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">L2</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">all</span><span class=\"p\">(</span><span class=\"n\">L2</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">L2</span><span class=\"p\">))</span>\n\n<span class=\"n\">L3</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"o\">&gt;</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"o\">&gt;</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">==</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">L3</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">all</span><span class=\"p\">(</span><span class=\"n\">L3</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">L3</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>[True, True, False]<br />\nFalse<br />\nTrue<br />\n[1, 1, 0]<br />\nFalse<br />\nTrue<br />\n[True, True, True]<br />\nTrue<br />\nTrue<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">all(목록)</code>을 사용하여 목록 내의 <code class=\"highlighter-rouge\">모든 원소</code>가 <code class=\"highlighter-rouge\">참</code>일 경우 <code class=\"highlighter-rouge\">True</code>를 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">any(목록)</code>을 사용하여 목록 내의 <code class=\"highlighter-rouge\">원소 중 하나라도</code> <code class=\"highlighter-rouge\">참</code>일 경우 <code class=\"highlighter-rouge\">True</code>를 반환합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">논리 형식</code>이나 <code class=\"highlighter-rouge\">상수형</code>, <code class=\"highlighter-rouge\">조건식</code> 등 <code class=\"highlighter-rouge\">True</code>나 <code class=\"highlighter-rouge\">False</code>로 반환되는 값은 사용이 가능합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">numb</span> <span class=\"o\">=</span> <span class=\"mf\">33.2</span>\n<span class=\"n\">L</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">numb</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">numb</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">))</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>False<br />\nTrue<br />\nTrue<br />\nFalse<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">isinstance(객체, 클래스)</code>를 사용하여 <code class=\"highlighter-rouge\">객체</code>가 <code class=\"highlighter-rouge\">클래스의 객체</code>인지를 확인합니다.</p>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 5강 - 기초 연산 (2)",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-5/",
      "date"     : "2018-01-31 00:00:00 +0900",
  "content"   : "<h3 id=\"기본-함수\">기본 함수</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">함수</th>\n      <th style=\"text-align: center\">결과</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">int(x)</td>\n      <td style=\"text-align: center\">int 형변환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">float(x)</td>\n      <td style=\"text-align: center\">float 형변환</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">pow(x, y)</td>\n      <td style=\"text-align: center\">x의 y승</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">divmod(x, y)</td>\n      <td style=\"text-align: center\">(몫, 나머지)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">abs(x)</td>\n      <td style=\"text-align: center\">절대값</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">max(x, y, z, …)</td>\n      <td style=\"text-align: center\">최대값</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">min(x, y, z, …)</td>\n      <td style=\"text-align: center\">최소값</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">round(x)</td>\n      <td style=\"text-align: center\">정수 반올림</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">round(x, n)</td>\n      <td style=\"text-align: center\">n번째 소수점 이하 반올림</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><code class=\"highlighter-rouge\">pow(x, y)</code>는 <code class=\"highlighter-rouge\">x**y</code>와 <strong>동일</strong>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">divmod(x, y)</code>는 <code class=\"highlighter-rouge\">(x//y, x%y)</code>와 <strong>동일</strong>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">abs(x)</code>는 <code class=\"highlighter-rouge\">x</code>의 값이 <code class=\"highlighter-rouge\">복소수</code>여도 <strong>절대값으로 반환</strong>합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"비교-연산\">비교 연산</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">연산</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">x &gt; y</td>\n      <td style=\"text-align: center\">크다</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x &gt;= y</td>\n      <td style=\"text-align: center\">크거나 같다</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x &lt; y</td>\n      <td style=\"text-align: center\">작다</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x &lt;= y</td>\n      <td style=\"text-align: center\">작거나 같다</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x == y</td>\n      <td style=\"text-align: center\">같다</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x != y</td>\n      <td style=\"text-align: center\">같지 않다</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>비교 연산은 결과값이 <code class=\"highlighter-rouge\">True</code> 또는 <code class=\"highlighter-rouge\">False</code>로 반환됩니다. 연산이 참일 경우 <code class=\"highlighter-rouge\">True</code>, 거짓일 경우 <code class=\"highlighter-rouge\">False</code>로 반환합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>0<br />\n1.0<br /></dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">True</code>와 <code class=\"highlighter-rouge\">False</code>의 상수 값은 각각 <code class=\"highlighter-rouge\">1</code>과 <code class=\"highlighter-rouge\">0</code>을 의미합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"논리-연산\">논리 연산</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">연산</th>\n      <th style=\"text-align: center\">의미</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">x or y</td>\n      <td style=\"text-align: center\">논리합</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x and y</td>\n      <td style=\"text-align: center\">논리곱</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">not x</td>\n      <td style=\"text-align: center\">부정</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>논리 연산은 결과값이 <code class=\"highlighter-rouge\">True</code> 또는 <code class=\"highlighter-rouge\">False</code>로 반환됩니다. <strong>비교 연산</strong>을 혼합하여 논리 연산의 사용이 가능합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span><span class=\"mi\">7</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"o\">&gt;</span><span class=\"mi\">9</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"o\">&gt;</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">&gt;</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">&gt;</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"o\">&gt;</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">x</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>False<br />\nFalse<br />\nFalse<br />\nTrue</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">논리합</code>의 경우 두 조건 중 하나만 <code class=\"highlighter-rouge\">참</code>이라면 <code class=\"highlighter-rouge\">True</code>를 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">논리곱</code>의 경우 두 조건 모두 <code class=\"highlighter-rouge\">참</code>이여야 <code class=\"highlighter-rouge\">True</code>를 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">부정</code>의 경우 결과값을 <code class=\"highlighter-rouge\">반전</code>시킵니다.</p>\n\n<p>논리 연산 자체에 <code class=\"highlighter-rouge\">True</code>와 <code class=\"highlighter-rouge\">False</code>를 직접 입력하여 사용 할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"논리-연산의-주의사항\">논리 연산의 주의사항</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"o\">&gt;</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"mi\">0</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"o\">&lt;</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"mi\">1</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"o\">&gt;</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"mi\">2</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"o\">&lt;</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"mi\">3</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>True<br />\n1<br />\n2<br />\nFalse</dd>\n</dl>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">논리 연산</code>의 경우 두 가지의 조건에서 앞의 조건을 확인 한 후, 뒤의 조건을 확인합니다. 이 때 <code class=\"highlighter-rouge\">논리합(or)</code>의 경우 앞의 조건이 참이면 뒤의 조건을 비교하지 않고 <code class=\"highlighter-rouge\">True</code>를 반환합니다. 만약 앞의 조건이 거짓일 경우 뒤의 조건을 검사하게 되는데 조건이 아닌 상수일 경우 상수를 대입해버립니다.</p>\n\n<p><code class=\"highlighter-rouge\">논리곱(and)</code>의 경우 <code class=\"highlighter-rouge\">논리합(or)</code>과 마찬가지로 앞의 조건을 검사 후, 뒤의 조건을 검사합니다. 이 역시 앞의 조건에서 <code class=\"highlighter-rouge\">False</code>가 반환되지 않으면 뒤의 조건에서 상수를 그대로 대입합니다.</p>\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 4강 - 기초 연산 (1)",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-4/",
      "date"     : "2018-01-30 00:00:00 +0900",
  "content"   : "<h3 id=\"대입-연산\">대입 연산</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">A</span><span class=\"o\">=</span><span class=\"n\">B</span><span class=\"o\">=</span><span class=\"n\">C</span><span class=\"o\">=</span><span class=\"mi\">3</span>\n<span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span>\n<span class=\"n\">C</span><span class=\"o\">+=</span><span class=\"mi\">1</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">C</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>3 3 4 1 2</dd>\n</dl>\n\n<p><br /></p>\n\n<p>Python에서는 <code class=\"highlighter-rouge\">세미콜론(;)</code>을 입력하지 않아도 연산이 가능합니다. 또한 <code class=\"highlighter-rouge\">대소문자를 구별</code>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">print()</code>를 이용하여 출력할 수 있습니다. <code class=\"highlighter-rouge\">콤마(,)</code>로 변수를 구별합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"사칙-연산\">사칙 연산</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">연산</th>\n      <th style=\"text-align: center\">결과</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">x + y</td>\n      <td style=\"text-align: center\">더하기</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x - y</td>\n      <td style=\"text-align: center\">빼기</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x * y</td>\n      <td style=\"text-align: center\">곱하기</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x / y</td>\n      <td style=\"text-align: center\">나누기</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x // y</td>\n      <td style=\"text-align: center\">정수 나누기</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x % y</td>\n      <td style=\"text-align: center\">나머지</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">-x</td>\n      <td style=\"text-align: center\">부호 변경</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">x ** y</td>\n      <td style=\"text-align: center\">제곱</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><code class=\"highlighter-rouge\">나누기</code>와 <code class=\"highlighter-rouge\">정수 나누기</code>의 차이점은 <code class=\"highlighter-rouge\">7/3</code>일 경우 결과는 <code class=\"highlighter-rouge\">2.3333333333333335</code>가 출력되며 <code class=\"highlighter-rouge\">7//3</code>일 경우 결과는 <code class=\"highlighter-rouge\">2</code>가 출력됩니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"복소수-표현\">복소수 표현</h3>\n<hr />\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">연산</th>\n      <th style=\"text-align: center\">결과</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">x + yj</td>\n      <td style=\"text-align: center\">복소수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">complex(x, y)</td>\n      <td style=\"text-align: center\">복소수</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">a.conjugate()</td>\n      <td style=\"text-align: center\">a의 공액복소수</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>복소수는 <code class=\"highlighter-rouge\">j</code>를 포함하면 복소수로 입력됩니다. <code class=\"highlighter-rouge\">허수 부분</code>에 <code class=\"highlighter-rouge\">j</code>를 붙여줍니다.</p>\n\n<p><code class=\"highlighter-rouge\">complex(x, y)</code>는 <code class=\"highlighter-rouge\">x + yj</code>로 표현됩니다.</p>\n\n<p>공액복소수는 <code class=\"highlighter-rouge\">허수의 부호를 변경</code>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">a.conjugate()</code>는 <code class=\"highlighter-rouge\">a</code>에 영향을 미치지 않습니다. 즉, <code class=\"highlighter-rouge\">a</code>의 값 자체가 바뀌지는 않습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"nb\">complex</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">conjugate</span><span class=\"p\">()</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"o\">+</span><span class=\"mf\">2j</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span></code></pre></figure>\n\n<dl>\n  <dt><strong>결과</strong></dt>\n  <dd>(3+2j)<br />\n(3-2j)<br />\n(3+2j)</dd>\n</dl>\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 3강 - 함수 &amp; 자료형",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-3/",
      "date"     : "2018-01-28 00:00:00 +0900",
  "content"   : "<h3 id=\"함수의-이해\">함수의 이해</h3>\n<hr />\n<p><a href=\"/assets/images/Python/ch3/1.png\"><img src=\"/assets/images/Python/ch3/1.png\" alt=\"1\" /></a>\n함수란 입력한 데이터를 받아 일련의 과정을 거쳐 결과를 반환하는 것을 의미합니다. <code class=\"highlighter-rouge\">입력 데이터를 인수(Factor)</code>, <code class=\"highlighter-rouge\">처리하는 동작을 함수(Function)</code>, <code class=\"highlighter-rouge\">처리한 데이터를 반환값(Return Value)</code>라 합니다. <strong>인수가 존재하지 않을 수도 있으며, 물론 반환값이 없는 경우도 있습니다.</strong></p>\n\n<p><br /></p>\n\n<script type=\"math/tex; mode=display\">y=x+1</script>\n\n<p><br /></p>\n\n<p>위와 같은 함수가 있다하면 <code class=\"highlighter-rouge\">인수는 x</code>, <code class=\"highlighter-rouge\">함수는 x+1</code>,  <code class=\"highlighter-rouge\">결과값은 y</code>가 됩니다. 인수가 1일 경우 함수를 통해서 결과값은 2가 됩니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"자료형\">자료형</h3>\n<hr />\n<p><a href=\"/assets/images/Python/ch3/2.png\"><img src=\"/assets/images/Python/ch3/2.png\" alt=\"2\" /></a>\nPython은 C/C++과는 다르게 존재하지 않는 자료형이 있습니다. 다양한 데이터를 다루기 위한 데이터형이 존재합니다. <code class=\"highlighter-rouge\">수치형</code>, <code class=\"highlighter-rouge\">문자열</code>, <code class=\"highlighter-rouge\">튜플</code>, <code class=\"highlighter-rouge\">리스트</code>, <code class=\"highlighter-rouge\">사전</code>, <code class=\"highlighter-rouge\">집합</code>으로 분류할 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>저장 모델</p>\n\n    <ul>\n      <li>\n        <p><code class=\"highlighter-rouge\">Literal</code> : 단일 종류</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">Container</code> : 종류에 무관</p>\n      </li>\n    </ul>\n  </li>\n  <li>\n    <p>변경 가능성</p>\n\n    <ul>\n      <li>\n        <p><code class=\"highlighter-rouge\">Immutable</code> : 변경 불가</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">Mutable</code> : 변경 가능</p>\n      </li>\n    </ul>\n  </li>\n  <li>\n    <p>접근 방법</p>\n\n    <ul>\n      <li>\n        <p><code class=\"highlighter-rouge\">Direct</code> : 직접 할당</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">Sequence</code> : 순서 중시</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">Mapping</code> : 순서 무관</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">Set</code> : 중복 불가</p>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">튜플</code>, <code class=\"highlighter-rouge\">리스트</code>, <code class=\"highlighter-rouge\">사전</code>, <code class=\"highlighter-rouge\">집합</code>은 C/C++ 등 의 배열과 비슷하나 약간 식 다른 차이를 가집니다. <code class=\"highlighter-rouge\">튜플</code>과 <code class=\"highlighter-rouge\">리스트</code>의 경우 둘 다 다양한 종류의 데이터를 저장하고 순서를 중요시 하지만, <code class=\"highlighter-rouge\">튜플</code>의 경우 <strong>최초에 입력한 데이터를 변경이 불가하며</strong> <code class=\"highlighter-rouge\">리스트</code>의 경우 <strong>최초에 입력한 데이터의 변경이 가능합니다.</strong> <code class=\"highlighter-rouge\">사전</code>은 <strong>순서에 상관 없지만 중복이 가능한 대신</strong>, <code class=\"highlighter-rouge\">집합</code>은 <strong>중복이 불가능합니다.</strong></p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 2강 - 프로젝트 생성",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-2/",
      "date"     : "2018-01-27 00:00:00 +0900",
  "content"   : "<h3 id=\"python-실행\">Python 실행</h3>\n<hr />\n<p><a href=\"/assets/images/Python/ch2/1.png\"><img src=\"/assets/images/Python/ch2/1.png\" alt=\"1\" /></a>\nPython을 사용하기 위해서는 <code class=\"highlighter-rouge\">IDLE(Python 3.6 32-bit)</code>을 실행시킵니다. 만약, 파일을 찾지 못한다면 <code class=\"highlighter-rouge\">idle.pyw</code>를 실행시킵니다. 경로는 다음과 같습니다.</p>\n\n<p><code class=\"highlighter-rouge\">설치된 경로\\Lib\\idlelib</code>에 포함되어 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"프로젝트-생성\">프로젝트 생성</h3>\n<hr />\n<p><a href=\"/assets/images/Python/ch2/2.png\"><img src=\"/assets/images/Python/ch2/2.png\" alt=\"2\" /></a>\n<code class=\"highlighter-rouge\">IDLE(Python 3.6 32-bit)</code>을 실행시키면 <code class=\"highlighter-rouge\">Python 3.6.4 Shell</code> 프로그램이 실행됩니다. 이 <code class=\"highlighter-rouge\">Shell</code>창에서 코드를 구현 시 <code class=\"highlighter-rouge\">Compile</code>과 <code class=\"highlighter-rouge\">link</code> 없이 바로 실행이 가능해집니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/ch2/3.png\"><img src=\"/assets/images/Python/ch2/3.png\" alt=\"3\" /></a>\n<strong>File → New File</strong>을 통하여 새로운 프로젝트를 생성할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/ch2/4.png\"><img src=\"/assets/images/Python/ch2/4.png\" alt=\"4\" /></a>\n<code class=\"highlighter-rouge\">Untitiled</code>창에서 코드를 구현할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"프로젝트-알아보기\">프로젝트 알아보기</h3>\n<hr />\n<p><a href=\"/assets/images/Python/ch2/5.png\"><img src=\"/assets/images/Python/ch2/5.png\" alt=\"5\" /></a>\n<strong>Run → Run Module</strong>을 통하여 프로젝트를 실행시킬 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/ch2/6.png\"><img src=\"/assets/images/Python/ch2/6.png\" alt=\"6\" /></a>\n프로젝트 창에 <code class=\"highlighter-rouge\">test=\"076923\"</code>을 입력 후 <code class=\"highlighter-rouge\">Run Module</code>로 실행시킵니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/ch2/7.png\"><img src=\"/assets/images/Python/ch2/7.png\" alt=\"7\" /></a>\n이제 프로젝트를 저장하게 되며, <code class=\"highlighter-rouge\">test.py</code>로 저장합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/ch2/8.png\"><img src=\"/assets/images/Python/ch2/8.png\" alt=\"7\" /></a>\n<code class=\"highlighter-rouge\">Python 3.6.4 Shell</code>을 종료했어도 새로이 <code class=\"highlighter-rouge\">Shell</code>창이 열려 프로젝트를 실행하게 됩니다. <code class=\"highlighter-rouge\">test</code>를 입력 시, <code class=\"highlighter-rouge\">076923</code>이 출력됩니다.</p>\n\n"
    } ,
  
    {
      "title"    : "Python 강좌 : 제 1강 - 소개 및 설치",
      "category" : "",
      "tags"     : "Python",
      "url"      : "/posts/Python-1/",
      "date"     : "2018-01-27 00:00:00 +0900",
  "content"   : "<h3 id=\"python-이란\">Python 이란</h3>\n<hr />\n<p>효율적이고 생산성이 높으며 <code class=\"highlighter-rouge\">객체 지향 프로그래밍(OOP)</code>입니다. <code class=\"highlighter-rouge\">Compile</code>, <code class=\"highlighter-rouge\">Link</code>가 필요가 없으며 <strong>자료형을 정의할 필요가 없어 간편하고 유연한 작업이 가능</strong>합니다. <code class=\"highlighter-rouge\">다양한 데이터형과 연산</code>이 가능하며 C언어와 결합하여 사용이 가능합니다.</p>\n\n<p><br /></p>\n\n<p>현재 강좌는 <code class=\"highlighter-rouge\">Python 3.6.4</code>를 기반으로 진행하겠습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"python-설치\">Python 설치</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">Python Software Foundation</code>의 <a href=\"https://www.python.org/downloads/\">Python 3.6.4</a>에서 무료로 다운받으실 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/Python/ch1/1.png\"><img src=\"/assets/images/Python/ch1/1.png\" alt=\"1\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">Download Python 3.6.4</code>를 클릭하여 설치합니다.</p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 38강 - 트랙바",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-38/",
      "date"     : "2018-01-26 00:00:00 +0900",
  "content"   : "<h3 id=\"트랙바-trackbar\">트랙바 (Trackbar)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch38/1.jpg\"><img src=\"/assets/images/C/opencv/ch38/1.jpg\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">CvWindowEx</code>를 사용하여 새롭게 띄운 윈도우 창에서는 <strong>C#에 포함되어 있는 트랙바를 사용할 수 없습니다.</strong> <code class=\"highlighter-rouge\">CreateTrackbar</code>을 사용하여 트랙바에 관한 이벤트를 실행할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.UserInterface</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">;</span>\n<span class=\"n\">CvWindowEx</span> <span class=\"n\">window</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">window</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindowEx</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">))</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">window</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"CvWindowEx Threshold\"</span><span class=\"p\">;</span>\n    <span class=\"n\">window</span><span class=\"p\">.</span><span class=\"nf\">CreateTrackbar</span><span class=\"p\">(</span><span class=\"s\">\"Threshold\"</span><span class=\"p\">,</span> <span class=\"m\">127</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">TrackbarEvent</span><span class=\"p\">);</span>\n    <span class=\"nf\">TrackbarEvent</span><span class=\"p\">(</span><span class=\"m\">127</span><span class=\"p\">);</span>\n    <span class=\"n\">CvWindowEx</span><span class=\"p\">.</span><span class=\"nf\">WaitKey</span><span class=\"p\">();</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">TrackbarEvent</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">pos</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">temp</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">())</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">temp</span><span class=\"p\">,</span> <span class=\"n\">pos</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span>\n        <span class=\"n\">window</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">temp</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.UserInterface</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CvWindowEx</code> 함수를 사용하기 위해서는 <strong>네임스페이스</strong>에 <code class=\"highlighter-rouge\">using OpenCvSharp.UserInterface;</code>를 선언해야 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvWindowEx</span> <span class=\"n\">window</span><span class=\"p\">;</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>전역 변수로 <code class=\"highlighter-rouge\">window</code>와 <code class=\"highlighter-rouge\">src</code>를 선언합니다. 이는 <code class=\"highlighter-rouge\">TrackbarEvent()</code>함수에서 지속적으로 사용되기 때문에 <code class=\"highlighter-rouge\">전역 변수</code>로 선언합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">window</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindowEx</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">))</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">window</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"CvWindowEx Threshold\"</span><span class=\"p\">;</span>\n    <span class=\"n\">window</span><span class=\"p\">.</span><span class=\"nf\">CreateTrackbar</span><span class=\"p\">(</span><span class=\"s\">\"Threshold\"</span><span class=\"p\">,</span> <span class=\"m\">127</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">TrackbarEvent</span><span class=\"p\">);</span> \n    <span class=\"nf\">TrackbarEvent</span><span class=\"p\">(</span><span class=\"m\">127</span><span class=\"p\">);</span>\n    <span class=\"n\">CvWindowEx</span><span class=\"p\">.</span><span class=\"nf\">WaitKey</span><span class=\"p\">();</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CvWindowEx</code>가 표시될 곳에 삽입합니다. 만약, 폼을 로드하자마자 사용한다면 <code class=\"highlighter-rouge\">private void Form1_Load(object sender, EventArgs e){}</code> 구문에 삽입합니다</p>\n\n<p><code class=\"highlighter-rouge\">window.Text</code>는 <code class=\"highlighter-rouge\">CvWindowEx</code>의 제목입니다.</p>\n\n<p><code class=\"highlighter-rouge\">window.CreateTrackbar()</code>를 이용하여 트랙바를 생성합니다. <code class=\"highlighter-rouge\">window.CreateTrackbar(\"내용\", 초기값, 최대값, 트랙바이벤트)</code>를 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">TrackbarEvent(127);</code>를 이용하여 초기값과 동일한 이미지를 띄웁니다.</p>\n\n<p><code class=\"highlighter-rouge\">CvWindowEx.WaitKey();</code>를 이용하여 <code class=\"highlighter-rouge\">CvWindowEx</code> 키를 누를때 까지 창이 종료되지 않게합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">TrackbarEvent</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">pos</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">temp</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Clone</span><span class=\"p\">())</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">temp</span><span class=\"p\">,</span> <span class=\"n\">pos</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span>\n        <span class=\"n\">window</span><span class=\"p\">.</span><span class=\"nf\">ShowImage</span><span class=\"p\">(</span><span class=\"n\">temp</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>트랙바에 대한 이벤트를 생성합니다. 임시 이미지인 <code class=\"highlighter-rouge\">temp</code>를 결과로 사용하기 위해서 <code class=\"highlighter-rouge\">src</code>를 복제하여 사용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">pos(Point Of Scale)</code>을 이용하여 값을 조정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.Threshold()</code>를 적용하고, <strong>임시(결과) 이미지</strong>를 <code class=\"highlighter-rouge\">window</code>에 띄웁니다.</p>\n\n<p><br /></p>\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch38/2.png\"><img src=\"/assets/images/C/opencv/ch38/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 37강 - 마우스 콜백",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-37/",
      "date"     : "2018-01-25 00:00:00 +0900",
  "content"   : "<h3 id=\"마우스-콜백-onmousecallback\">마우스 콜백 (OnMouseCallback)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch37/1.png\"><img src=\"/assets/images/C/opencv/ch37/1.png\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">CvWindow</code>를 사용하여 새롭게 띄운 윈도우 창에서는 <strong>C#에 포함되어 있는 이벤트를 사용할 수 없습니다.</strong> <code class=\"highlighter-rouge\">OnMouseCallback</code>을 사용하여 마우스에 관한 이벤트를 실행할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">Form에서 마우스 이벤트 사용하기</code> : <a href=\"https://076923.github.io/posts/C-6/\">6강 바로가기</a></p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvWindow</span> <span class=\"n\">win</span><span class=\"p\">;</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">win</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"OpenCV\"</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"n\">win</span><span class=\"p\">.</span><span class=\"n\">OnMouseCallback</span> <span class=\"p\">+=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMouseCallback</span><span class=\"p\">(</span><span class=\"n\">click</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">click</span><span class=\"p\">(</span><span class=\"n\">MouseEvent</span> <span class=\"n\">eve</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">MouseEvent</span> <span class=\"n\">flag</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">LButtonDown</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"kt\">string</span> <span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"s\">\"X : \"</span> <span class=\"p\">+</span> <span class=\"n\">x</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">()</span> <span class=\"p\">+</span> <span class=\"s\">\" Y : \"</span> <span class=\"p\">+</span> <span class=\"n\">y</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">();</span>\n        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">PutText</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvFont</span><span class=\"p\">(</span><span class=\"n\">FontFace</span><span class=\"p\">.</span><span class=\"n\">HersheyComplex</span><span class=\"p\">,</span> <span class=\"m\">0.5</span><span class=\"p\">,</span> <span class=\"m\">0.5</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">);</span>\n        <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"n\">Image</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">RButtonDown</span> <span class=\"p\">&amp;&amp;</span> <span class=\"p\">(</span><span class=\"n\">flag</span> <span class=\"p\">&amp;</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">FlagCtrlKey</span><span class=\"p\">)</span> <span class=\"p\">!=</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"m\">15</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">GreenYellow</span><span class=\"p\">);</span>\n        <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"n\">Image</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvWindow</span> <span class=\"n\">win</span><span class=\"p\">;</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>전역 변수로 <code class=\"highlighter-rouge\">win</code>와 <code class=\"highlighter-rouge\">src</code>를 선언합니다. 이는 <code class=\"highlighter-rouge\">click()</code>함수에서 지속적으로 사용되기 때문에 <code class=\"highlighter-rouge\">전역 변수</code>로 선언합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">win</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvWindow</span><span class=\"p\">(</span><span class=\"s\">\"OpenCV\"</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"n\">win</span><span class=\"p\">.</span><span class=\"n\">OnMouseCallback</span> <span class=\"p\">+=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMouseCallback</span><span class=\"p\">(</span><span class=\"n\">click</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CvWindow</code>가 표시될 곳에 삽입합니다. 만약, 폼을 로드하자마자 사용한다면 <code class=\"highlighter-rouge\">private void Form1_Load(object sender, EventArgs e){}</code> 구문에 삽입합니다.</p>\n\n<p><code class=\"highlighter-rouge\">win</code>을 선언하여 <code class=\"highlighter-rouge\">OpenCV</code>의 제목을 가지고 <code class=\"highlighter-rouge\">src</code> 이미지를 표시합니다.</p>\n\n<p><code class=\"highlighter-rouge\">win.OnMouseCallback += new CvMouseCallback(click);</code>를 사용하여 win 창에 <code class=\"highlighter-rouge\">마우스 콜백</code>과 <code class=\"highlighter-rouge\">사용될 함수</code>를 포함시킵니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">+=</code>으로 선언해야합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">click</span><span class=\"p\">(</span><span class=\"n\">MouseEvent</span> <span class=\"n\">eve</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">MouseEvent</span> <span class=\"n\">flag</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">click()</code> 사용자 정의 함수를 만듭니다. <code class=\"highlighter-rouge\">eve</code>는 <strong>마우스의 클릭</strong>에 대한 값을 의미하며 <code class=\"highlighter-rouge\">x</code>, <code class=\"highlighter-rouge\">y</code>는 <strong>마우스의 좌표</strong>입니다. <code class=\"highlighter-rouge\">flag</code>는 <strong>플래그 키</strong>를 의미합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">LButtonDown</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"kt\">string</span> <span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"s\">\"X : \"</span> <span class=\"p\">+</span> <span class=\"n\">x</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">()</span> <span class=\"p\">+</span> <span class=\"s\">\" Y : \"</span> <span class=\"p\">+</span> <span class=\"n\">y</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">();</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">PutText</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvFont</span><span class=\"p\">(</span><span class=\"n\">FontFace</span><span class=\"p\">.</span><span class=\"n\">HersheyComplex</span><span class=\"p\">,</span> <span class=\"m\">0.5</span><span class=\"p\">,</span> <span class=\"m\">0.5</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">);</span>\n    <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"n\">Image</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">마우스의 왼쪽 버튼을 클릭</code>할 때 작동하며 src에 그린 후, <code class=\"highlighter-rouge\">win.Image = src;</code>를 이용하여 다시 출력하는 방식입니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">eve</span> <span class=\"p\">==</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">RButtonDown</span> <span class=\"p\">&amp;&amp;</span> <span class=\"p\">(</span><span class=\"n\">flag</span> <span class=\"p\">&amp;</span> <span class=\"n\">MouseEvent</span><span class=\"p\">.</span><span class=\"n\">FlagCtrlKey</span><span class=\"p\">)</span> <span class=\"p\">!=</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"m\">15</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">GreenYellow</span><span class=\"p\">);</span>\n    <span class=\"n\">win</span><span class=\"p\">.</span><span class=\"n\">Image</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">마우스의 오른쪽 버튼을 클릭</code>과 <code class=\"highlighter-rouge\">Ctrl키를 클릭</code>을 동시에 할 때 작동하며 위와 같이 src에 그린 후 다시 출력하는 방식입니다. <code class=\"highlighter-rouge\">플래그 키</code>를 사용할 경우 <code class=\"highlighter-rouge\">(flag &amp; MouseEvent.FlagCtrlKey) != 0</code>을 사용해야 클릭한다는 것을 의미합니다. <code class=\"highlighter-rouge\">==</code>을 사용 시 클릭하지 않을 경우 입니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>마우스</p>\n\n    <ul>\n      <li>\n        <p><code class=\"highlighter-rouge\">LButtonDown</code> : 마우스 왼쪽 버튼을 누를 때</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">LButtonUp</code> : 마우스 왼쪽 버튼을 뗄 때</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">LButtonDoubleClick</code> : 마우스 왼쪽 버튼을 더블 클릭할 때</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">MButtonDown</code> : 마우스 휠 버튼을 누를 때</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">MButtonUp</code> : 마우스 휠 버튼을 뗄 때</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">MButtonDoubleClick</code> : 마우스 휠 버튼을 더블 클릭할 때</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">RButtonDown</code> : 마우스 오른쪽 버튼을 누를 때</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">RButtonUp</code> : 마우스 오른쪽 버튼을 뗄 때</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">RButtonDoubleClick</code> : 마우스 오른쪽 버튼을 더블 클릭할 때</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">MouseMove</code> : 마우스를 움직일 때</p>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>플래그 키</p>\n\n    <ul>\n      <li>\n        <p><code class=\"highlighter-rouge\">FlagLButton</code> : 마우스 왼쪽 버튼을 누른 상태로 드래그 할 때</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">FlagMButton</code> : 마우스 휠 버튼을 누른 상태로 드래그 할 때</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">FlagRButton</code> : 마우스 오른쪽 버튼을 누른 상태로 드래그 할 때</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">FlagShiftKey</code> : Shift 키를 눌렀을 때</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">FlagCtrlKey</code> : Ctrl 키를 눌렀을 때</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">FlagAltKey</code> : Alt 키를 눌렀을 때</p>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch37/2.png\"><img src=\"/assets/images/C/opencv/ch37/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 36강 - HDC",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-36/",
      "date"     : "2018-01-21 00:00:00 +0900",
  "content"   : "<h3 id=\"hdc-handle-to-the-device-context\">HDC (handle to the Device Context)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch36/1.jpg\"><img src=\"/assets/images/C/opencv/ch36/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지에서 <code class=\"highlighter-rouge\">Graphics</code>와 관련된 장치 컨텍스트에 대한 핸들을 가져와 작업할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing.Imaging</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.Extensions</span><span class=\"p\">;</span>\n\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">hdcgraphics</span><span class=\"p\">;</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">DrawToHdc</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">CvRect</span> <span class=\"n\">roi</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvRect</span><span class=\"p\">(</span><span class=\"m\">250</span><span class=\"p\">,</span> <span class=\"m\">250</span><span class=\"p\">,</span> <span class=\"m\">640</span><span class=\"p\">,</span> <span class=\"m\">480</span><span class=\"p\">);</span>\n            <span class=\"n\">hdcgraphics</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">roi</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n\n            <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">ROI</span> <span class=\"p\">=</span> <span class=\"n\">roi</span><span class=\"p\">;</span>\n            <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">Bitmap</span> <span class=\"n\">bitmap</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Bitmap</span><span class=\"p\">(</span><span class=\"n\">roi</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">roi</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">,</span> <span class=\"n\">PixelFormat</span><span class=\"p\">.</span><span class=\"n\">Format32bppArgb</span><span class=\"p\">))</span>\n            <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">Graphics</span> <span class=\"n\">grp</span> <span class=\"p\">=</span> <span class=\"n\">Graphics</span><span class=\"p\">.</span><span class=\"nf\">FromImage</span><span class=\"p\">(</span><span class=\"n\">bitmap</span><span class=\"p\">))</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">IntPtr</span> <span class=\"n\">hdc</span> <span class=\"p\">=</span> <span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">GetHdc</span><span class=\"p\">();</span>\n                <span class=\"n\">BitmapConverter</span><span class=\"p\">.</span><span class=\"nf\">DrawToHdc</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">hdc</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvRect</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">),</span> <span class=\"n\">roi</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">));</span>\n                <span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">ReleaseHdc</span><span class=\"p\">(</span><span class=\"n\">hdc</span><span class=\"p\">);</span>\n\n                <span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">DrawString</span><span class=\"p\">(</span><span class=\"s\">\"076923.github.io\"</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">Font</span><span class=\"p\">(</span><span class=\"s\">\"굴림체\"</span><span class=\"p\">,</span> <span class=\"m\">12</span><span class=\"p\">),</span> <span class=\"n\">Brushes</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">);</span>\n\n                <span class=\"n\">hdcgraphics</span><span class=\"p\">.</span><span class=\"nf\">CopyFrom</span><span class=\"p\">(</span><span class=\"n\">bitmap</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n            <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">ResetROI</span><span class=\"p\">();</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">hdcgraphics</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">hdcgraphics</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">hdcgraphics</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>   \n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing.Imaging</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.Extensions</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Bitmap</code> 함수를 사용하기 위해서는 <strong>네임스페이스</strong>에 <code class=\"highlighter-rouge\">using System.Drawing;</code>를 선언해야 사용할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">PixelFormat</code>를 사용하기 위해서는 <strong>네임스페이스</strong>에 <code class=\"highlighter-rouge\">using System.Drawing.Imaging;</code>을 선언해야 사용할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">DrawToHdc()</code>함수를 사용하기 위해서는 <strong>네임스페이스</strong> <code class=\"highlighter-rouge\">using OpenCvSharp.Extensions;</code>를 선언해야 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvRect</span> <span class=\"n\">roi</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvRect</span><span class=\"p\">(</span><span class=\"m\">250</span><span class=\"p\">,</span> <span class=\"m\">250</span><span class=\"p\">,</span> <span class=\"m\">640</span><span class=\"p\">,</span> <span class=\"m\">480</span><span class=\"p\">);</span>\n<span class=\"n\">hdcgraphics</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">roi</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CvRect</code>를 이용하여 <strong>관심 영역</strong>을 설정합니다. <code class=\"highlighter-rouge\">new CvRect(x좌표 시작점, y좌표 시작점, 넓이, 높이)</code>를 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">hdcgraphics</code>에 <code class=\"highlighter-rouge\">roi</code> 크기로 설정합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">ROI</span> <span class=\"p\">=</span> <span class=\"n\">roi</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">ROI(Region Of Interest)</code>의 의미는 관심 영역을 의미합니다. <code class=\"highlighter-rouge\">src</code>의 <strong>관심영역</strong>을 <code class=\"highlighter-rouge\">roi</code>로 설정합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">Bitmap</span> <span class=\"n\">bitmap</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Bitmap</span><span class=\"p\">(</span><span class=\"n\">roi</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">roi</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">,</span> <span class=\"n\">PixelFormat</span><span class=\"p\">.</span><span class=\"n\">Format32bppArgb</span><span class=\"p\">))</span>\n<span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">Graphics</span> <span class=\"n\">grp</span> <span class=\"p\">=</span> <span class=\"n\">Graphics</span><span class=\"p\">.</span><span class=\"nf\">FromImage</span><span class=\"p\">(</span><span class=\"n\">bitmap</span><span class=\"p\">))</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Graphics</code>는 <code class=\"highlighter-rouge\">Bitmap</code>에서 작업하므로 <code class=\"highlighter-rouge\">bitmap</code>과 <code class=\"highlighter-rouge\">grp</code>를 선언합니다. <code class=\"highlighter-rouge\">PixelFormat</code>을 사용하여 색 데이터의 형식을 설정합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IntPtr</span> <span class=\"n\">hdc</span> <span class=\"p\">=</span> <span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">GetHdc</span><span class=\"p\">();</span>\n<span class=\"n\">BitmapConverter</span><span class=\"p\">.</span><span class=\"nf\">DrawToHdc</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">hdc</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvRect</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">),</span> <span class=\"n\">roi</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">));</span>\n<span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">ReleaseHdc</span><span class=\"p\">(</span><span class=\"n\">hdc</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">hdc</code>에 <code class=\"highlighter-rouge\">Graphics</code>와 관련된 장치 컨텍스트에 대한 핸들을 가져옵니다.</p>\n\n<p><code class=\"highlighter-rouge\">BitmapConverter.DrawToHdc()</code>를 이용하여 HDC를 설정합니다. <code class=\"highlighter-rouge\">BitmapConverter.DrawToHdc(원본, hdc, 크기)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">ReleaseHdc()</code>를 이용하여 핸들을 해제합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">DrawString</span><span class=\"p\">(</span><span class=\"s\">\"076923.github.io\"</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">Font</span><span class=\"p\">(</span><span class=\"s\">\"굴림체\"</span><span class=\"p\">,</span> <span class=\"m\">12</span><span class=\"p\">),</span> <span class=\"n\">Brushes</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>좌측 모서리에 <code class=\"highlighter-rouge\">DrawString</code>을 적용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">hdcgraphics</span><span class=\"p\">.</span><span class=\"nf\">CopyFrom</span><span class=\"p\">(</span><span class=\"n\">bitmap</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">픽셀 데이터</code>를 <code class=\"highlighter-rouge\">IplImage</code>인 <code class=\"highlighter-rouge\">hdcgraphics</code>에 적용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">ResetROI</span><span class=\"p\">();</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">src</code>의 <code class=\"highlighter-rouge\">ROI</code>를 변경하였으므로 결과를 획득 후 <code class=\"highlighter-rouge\">초기화</code>하여 원본과 동일한 형태로 복구시킵니다.</p>\n\n<p><br /></p>\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch36/2.png\"><img src=\"/assets/images/C/opencv/ch36/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 35강 - 변환",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-35/",
      "date"     : "2018-01-15 00:00:00 +0900",
  "content"   : "<h3 id=\"변환-bitmap--iplimage-converter\">변환 (Bitmap &amp; IplImage Converter)</h3>\n<hr />\n\n<p><code class=\"highlighter-rouge\">IplImage</code>형식을 <code class=\"highlighter-rouge\">Bitmap</code>형식으로 <code class=\"highlighter-rouge\">Bitmap</code>형식을 <code class=\"highlighter-rouge\">IplImage</code>형식으로 변환할 수 있습니다. 또한 <code class=\"highlighter-rouge\">IplImage</code>형식을 <code class=\"highlighter-rouge\">Mat</code>형식으로 변환할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.Extensions</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"k\">public</span> <span class=\"n\">Bitmap</span> <span class=\"nf\">ConvertToBitmap</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">Bitmap</span> <span class=\"n\">bitmap</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">ToBitmap</span><span class=\"p\">();</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">bitmap</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">ConvertToIplImage</span><span class=\"p\">(</span><span class=\"n\">Bitmap</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">iplimage</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">ToIplImage</span><span class=\"p\">();</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">iplimage</span> <span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                   \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n                 \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.Extensions</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Bitmap</code> 함수를 사용하기 위해서는 <strong>네임스페이스</strong>에 <code class=\"highlighter-rouge\">using System.Drawing;</code>를 선언해야 사용할 수 있습니다.\n<code class=\"highlighter-rouge\">ToBitmap()</code>, <code class=\"highlighter-rouge\">ToIplImage()</code> 함수를 사용하기 위해서는 <strong>네임스페이스</strong> <code class=\"highlighter-rouge\">using OpenCvSharp.Extensions;</code>를 선언해야 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">Bitmap</span> <span class=\"nf\">ConvertToBitmap</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Bitmap</span> <span class=\"n\">bitmap</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">ToBitmap</span><span class=\"p\">();</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">bitmap</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n    \n<span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">ConvertToIplImage</span><span class=\"p\">(</span><span class=\"n\">Bitmap</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">IplImage</span> <span class=\"n\">iplimage</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">ToIplImage</span><span class=\"p\">();</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">iplimage</span> <span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">ConvertToBitmap()</code> 함수의 경우 반환값이 <code class=\"highlighter-rouge\">Bitmap</code>형식이기 때문에 반환 형식에 <code class=\"highlighter-rouge\">Bitmap</code>을 사용합니다. <code class=\"highlighter-rouge\">ConvertToIplImage()</code> 함수는 사용될 외부 변수가 <code class=\"highlighter-rouge\">Bitmap</code>이기 때문에 <code class=\"highlighter-rouge\">Bitmap src</code>를 사용합니다.</p>\n\n<p>IplImage의 경우 <code class=\"highlighter-rouge\">*.ToMat()</code>을 사용하여 <code class=\"highlighter-rouge\">Mat</code>형식으로도 변환이 가능합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>Tip : <code class=\"highlighter-rouge\">BitmapConverter</code>를 이용하여 변환이 가능합니다.</p>\n\n    <ul>\n      <li>Bitmap → IplImage : <code class=\"highlighter-rouge\">bitmap = BitmapConverter.ToIplImage(src);</code></li>\n      <li>IplImage → Bitmap : <code class=\"highlighter-rouge\">iplimage = BitmapConverter.ToBitmap(src);</code></li>\n      <li>IplImage → Mat : <code class=\"highlighter-rouge\">iplimage = BitmapConverter.ToMat(src);</code></li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 34강 - 경계 사각형",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-34/",
      "date"     : "2018-01-14 00:00:00 +0900",
  "content"   : "<h3 id=\"경계-사각형-bounding-rectangle\">경계 사각형 (Bounding Rectangle)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch34/1.png\"><img src=\"/assets/images/C/opencv/ch34/1.png\" alt=\"1\" /></a>\n영상이나 이미지에서 <strong>한 객체를 둘러싸고 있는 최소 직사각형</strong>으로, <code class=\"highlighter-rouge\">최소 경계 직사각형</code>이라고도 합니다. 이 객체들의 최소 직사각형을 구할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">bound</span><span class=\"p\">;</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">BoundingRectangle</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">bound</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n\n            <span class=\"kt\">int</span> <span class=\"n\">num</span> <span class=\"p\">=</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n            <span class=\"n\">CvRNG</span> <span class=\"n\">rng</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvRNG</span><span class=\"p\">(</span><span class=\"n\">DateTime</span><span class=\"p\">.</span><span class=\"n\">Now</span><span class=\"p\">);</span>\n            <span class=\"n\">CvPoint</span><span class=\"p\">[]</span> <span class=\"n\">points</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvPoint</span><span class=\"p\">[</span><span class=\"n\">num</span><span class=\"p\">];</span>\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">num</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">()</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)(</span><span class=\"n\">rng</span><span class=\"p\">.</span><span class=\"nf\">RandInt</span><span class=\"p\">()</span> <span class=\"p\">%</span> <span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">)),</span>\n                    <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)(</span><span class=\"n\">rng</span><span class=\"p\">.</span><span class=\"nf\">RandInt</span><span class=\"p\">()</span> <span class=\"p\">%</span> <span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">))</span>\n                <span class=\"p\">};</span>\n                <span class=\"n\">bound</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvColor</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">),</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"n\">FILLED</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"n\">CvRect</span> <span class=\"n\">rect</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">BoundingRect</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">);</span>\n            <span class=\"n\">bound</span><span class=\"p\">.</span><span class=\"nf\">Rectangle</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">+</span> <span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvColor</span><span class=\"p\">(</span><span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">),</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n   \n            <span class=\"k\">return</span> <span class=\"n\">bound</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                   \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">bound</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">num</span> <span class=\"p\">=</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n<span class=\"n\">CvRNG</span> <span class=\"n\">rng</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvRNG</span><span class=\"p\">(</span><span class=\"n\">DateTime</span><span class=\"p\">.</span><span class=\"n\">Now</span><span class=\"p\">);</span>\n<span class=\"n\">CvPoint</span><span class=\"p\">[]</span> <span class=\"n\">points</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvPoint</span><span class=\"p\">[</span><span class=\"n\">num</span><span class=\"p\">];</span>\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">num</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)(</span><span class=\"n\">rng</span><span class=\"p\">.</span><span class=\"nf\">RandInt</span><span class=\"p\">()</span> <span class=\"p\">%</span> <span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">)),</span>\n        <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)(</span><span class=\"n\">rng</span><span class=\"p\">.</span><span class=\"nf\">RandInt</span><span class=\"p\">()</span> <span class=\"p\">%</span> <span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">))</span>\n    <span class=\"p\">};</span>\n    <span class=\"n\">bound</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvColor</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">),</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"n\">FILLED</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">num</code>은 공간 안에 사용될 <strong>점의 개수</strong>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">CvRNG</code>를 이용하여 난수를 발생시킵니다. <code class=\"highlighter-rouge\">DateTime.Now</code>를 이용해 시간 데이터를 현재 시간으로 초기화합니다.</p>\n\n<p><code class=\"highlighter-rouge\">CvPoint[]</code>를 이용해 점이 <strong>저장될 배열을 선언</strong>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">for</code>문을 이용해 100개의 점에 <strong>임의의 좌표</strong>로 점들의 위치를 지정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">이미지의 너비와 높이</code>를 <strong>나머지 연산</strong>을 하여 <code class=\"highlighter-rouge\">너비와 높이</code>의 크기를 넘어가지 않게 합니다.</p>\n\n<p>이 후, 해당 지점의 원을 그려 <strong>시각화</strong>합니다.</p>\n\n<p>난수를 통해 얻어진 임의의 점 대신에 이미지에서 검출된 점들을 사용하여도 됩니다. 이 구문 대신에 <code class=\"highlighter-rouge\">코너</code>, <code class=\"highlighter-rouge\">중심점</code>, <code class=\"highlighter-rouge\">원</code> 등을 대체하여 사용 가능합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvRect</span> <span class=\"n\">rect</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">BoundingRect</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">);</span>\n<span class=\"n\">bound</span><span class=\"p\">.</span><span class=\"nf\">Rectangle</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">+</span> <span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvColor</span><span class=\"p\">(</span><span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">),</span> <span class=\"m\">2</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.BoundingRect(점이 저장된 배열)</code>를 이용하여 <code class=\"highlighter-rouge\">경계 사각형</code>을 구합니다.</p>\n\n<p>이 후, <code class=\"highlighter-rouge\">Rectangle</code>를 이용하여 <code class=\"highlighter-rouge\">Cv.BoundingRect</code>를 이용해 구해진 사각형의 <code class=\"highlighter-rouge\">좌표</code>와 <code class=\"highlighter-rouge\">너비와 높이</code>를 이용하여 <strong>시각화</strong>합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"num--2\">num = 2</h2>\n<p><a href=\"/assets/images/C/opencv/ch34/2.png\"><img src=\"/assets/images/C/opencv/ch34/2.png\" alt=\"2\" /></a>\n<br /></p>\n<h2 id=\"num--3\">num = 3</h2>\n<p><a href=\"/assets/images/C/opencv/ch34/3.png\"><img src=\"/assets/images/C/opencv/ch34/3.png\" alt=\"3\" /></a>\n<br /></p>\n<h2 id=\"num-4\">num =4</h2>\n<p><a href=\"/assets/images/C/opencv/ch34/4.png\"><img src=\"/assets/images/C/opencv/ch34/4.png\" alt=\"4\" /></a>\n<br /></p>\n<h2 id=\"num--8\">num = 8</h2>\n<p><a href=\"/assets/images/C/opencv/ch34/5.png\"><img src=\"/assets/images/C/opencv/ch34/5.png\" alt=\"5\" /></a>\n<br /></p>\n<h2 id=\"num-100\">num =100</h2>\n<p><a href=\"/assets/images/C/opencv/ch34/6.png\"><img src=\"/assets/images/C/opencv/ch34/6.png\" alt=\"6\" /></a>\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 33강 - Blob 윤곽선 검출",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-33/",
      "date"     : "2018-01-10 00:00:00 +0900",
  "content"   : "<h3 id=\"윤곽선-contour\">윤곽선 (Contour)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch33/1.png\"><img src=\"/assets/images/C/opencv/ch33/1.png\" alt=\"1\" /></a>\n영상이나 이미지에서 <code class=\"highlighter-rouge\">라벨링</code>된 이미지에서 윤곽선(컨투어)를 검출하기 위해 사용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.Blob</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">bin</span><span class=\"p\">;</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">blobcontour</span><span class=\"p\">;</span>\n    \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">bin</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">BlobContourImage</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">blobcontour</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvBlobs</span> <span class=\"n\">blobs</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvBlobs</span><span class=\"p\">();</span>\n            <span class=\"n\">blobs</span><span class=\"p\">.</span><span class=\"nf\">Label</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">);</span>\n\n            <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"n\">KeyValuePair</span><span class=\"p\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"n\">CvBlob</span><span class=\"p\">&gt;</span> <span class=\"n\">item</span> <span class=\"k\">in</span> <span class=\"n\">blobs</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">CvBlob</span> <span class=\"n\">b</span> <span class=\"p\">=</span> <span class=\"n\">item</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">;</span>\n                \n                <span class=\"n\">CvContourChainCode</span> <span class=\"n\">cc</span> <span class=\"p\">=</span> <span class=\"n\">b</span><span class=\"p\">.</span><span class=\"n\">Contour</span><span class=\"p\">;</span>\n                <span class=\"n\">cc</span><span class=\"p\">.</span><span class=\"nf\">Render</span><span class=\"p\">(</span><span class=\"n\">blobcontour</span><span class=\"p\">);</span>\n\n                <span class=\"n\">CvContourPolygon</span> <span class=\"n\">polygon</span> <span class=\"p\">=</span> <span class=\"n\">cc</span><span class=\"p\">.</span><span class=\"nf\">ConvertToPolygon</span><span class=\"p\">();</span>\n                <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"n\">CvPoint</span> <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"n\">polygon</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">blobcontour</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">blobcontour</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                   \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">bin</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">);</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">blobcontour</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">blobcontour</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.Blob</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CvBlobs</code> 함수를 사용하기 위해서는 <strong>네임스페이스</strong>에 <code class=\"highlighter-rouge\">using OpenCvSharp.Blob;</code>를 선언해야 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">blobcontour</span>  <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">bin</code>는 <code class=\"highlighter-rouge\">라벨링</code>에 사용될 이미지입니다. 이 이미지를 통하여 <strong>라벨링을 진행</strong>합니다. 라벨링은 <code class=\"highlighter-rouge\">이진화 이미지를 사용</code>합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvBlobs</span> <span class=\"n\">blobs</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvBlobs</span><span class=\"p\">();</span>\n<span class=\"n\">blobs</span><span class=\"p\">.</span><span class=\"nf\">Label</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CvBlobs blobs = new CvBlobs();</code>을 이용하여 라벨링을 하기 위해 <code class=\"highlighter-rouge\">생성자</code>를 만듭니다. <code class=\"highlighter-rouge\">blobs.Label(bin);</code>를 통하여 <code class=\"highlighter-rouge\">라벨링</code>을 진행합니다. <code class=\"highlighter-rouge\">이진화 이미지</code>를 사용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"n\">KeyValuePair</span><span class=\"p\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"n\">CvBlob</span><span class=\"p\">&gt;</span> <span class=\"n\">item</span> <span class=\"k\">in</span> <span class=\"n\">blobs</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">CvBlob</span> <span class=\"n\">b</span> <span class=\"p\">=</span> <span class=\"n\">item</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">;</span>\n\n    <span class=\"n\">CvContourChainCode</span> <span class=\"n\">cc</span> <span class=\"p\">=</span> <span class=\"n\">b</span><span class=\"p\">.</span><span class=\"n\">Contour</span><span class=\"p\">;</span>\n    <span class=\"n\">cc</span><span class=\"p\">.</span><span class=\"nf\">Render</span><span class=\"p\">(</span><span class=\"n\">blobcontour</span><span class=\"p\">);</span>\n\n    <span class=\"n\">CvContourPolygon</span> <span class=\"n\">polygon</span> <span class=\"p\">=</span> <span class=\"n\">cc</span><span class=\"p\">.</span><span class=\"nf\">ConvertToPolygon</span><span class=\"p\">();</span>\n    <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"n\">CvPoint</span> <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"n\">polygon</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">blobcontour</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">foreach</code>문을 이용하여 <code class=\"highlighter-rouge\">라벨링</code> 정보를 확인할 수 있습니다. <code class=\"highlighter-rouge\">item</code>값을 이용하여 라벨링 정보를 확인 가능합니다.</p>\n\n<p><code class=\"highlighter-rouge\">CvContourChainCode</code>를 이용하여 <code class=\"highlighter-rouge\">b</code>에서 <code class=\"highlighter-rouge\">Contour</code>값을 받아옵니다. 이후 <code class=\"highlighter-rouge\">cc.Render(blobcontour)</code>를 이용하여 blobcontour에 윤곽선(컨투어)를 그립니다.</p>\n\n<p><code class=\"highlighter-rouge\">CvContourPolygon</code>을 이용하여 <code class=\"highlighter-rouge\">폴리곤</code>형태로 변환합니다. 다시 한 번 <code class=\"highlighter-rouge\">foreach</code>문을 이용해 blobcontour에 폴리곤을 그립니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch33/2.png\"><img src=\"/assets/images/C/opencv/ch33/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 32강 - Blob 라벨링",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-32/",
      "date"     : "2018-01-09 00:00:00 +0900",
  "content"   : "<h3 id=\"라벨링-labeling\">라벨링 (Labeling)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch32/1.png\"><img src=\"/assets/images/C/opencv/ch32/1.png\" alt=\"1\" /></a>\n영상이나 이미지에서 <strong>인접한 화소들을 묶어 하나의 객체로 판단하는 방식</strong>입니다. 즉, 인접한(연결된) 화소끼리 <code class=\"highlighter-rouge\">같은 번호를 부여</code>합니다. <strong>여러 물체를 구분하기 위해서 사용</strong>합니다. <code class=\"highlighter-rouge\">라벨링</code> 또는 <code class=\"highlighter-rouge\">레이블링</code>이라 부릅니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.Blob</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">bin</span><span class=\"p\">;</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">blob</span><span class=\"p\">;</span>\n    \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">bin</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">BlobImage</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">blob</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n            \n            <span class=\"n\">CvBlobs</span> <span class=\"n\">blobs</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvBlobs</span><span class=\"p\">();</span>\n            <span class=\"n\">blobs</span><span class=\"p\">.</span><span class=\"nf\">Label</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">);</span>\n\n            <span class=\"n\">blobs</span><span class=\"p\">.</span><span class=\"nf\">RenderBlobs</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">blob</span><span class=\"p\">);</span>\n\n            <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"n\">KeyValuePair</span><span class=\"p\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"n\">CvBlob</span><span class=\"p\">&gt;</span> <span class=\"n\">item</span> <span class=\"k\">in</span> <span class=\"n\">blobs</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">CvBlob</span> <span class=\"n\">b</span> <span class=\"p\">=</span> <span class=\"n\">item</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">;</span>\n               \n                <span class=\"n\">blob</span><span class=\"p\">.</span><span class=\"nf\">PutText</span><span class=\"p\">(</span><span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">.</span><span class=\"n\">Label</span><span class=\"p\">),</span> <span class=\"n\">b</span><span class=\"p\">.</span><span class=\"n\">Centroid</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvFont</span><span class=\"p\">(</span><span class=\"n\">FontFace</span><span class=\"p\">.</span><span class=\"n\">HersheyComplex</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">blob</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                   \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">bin</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">);</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">blob</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">blob</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.Blob</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CvBlobs</code> 함수를 사용하기 위해서는 <strong>네임스페이스</strong>에 <code class=\"highlighter-rouge\">using OpenCvSharp.Blob;</code>를 선언해야 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">blob</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">bin</code>는 <code class=\"highlighter-rouge\">라벨링</code>에 사용될 이미지입니다. 이 이미지를 통하여 <strong>라벨링을 진행</strong>합니다. 라벨링은 <code class=\"highlighter-rouge\">이진화 이미지를 사용</code>합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvBlobs</span> <span class=\"n\">blobs</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvBlobs</span><span class=\"p\">();</span>\n<span class=\"n\">blobs</span><span class=\"p\">.</span><span class=\"nf\">Label</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CvBlobs blobs = new CvBlobs();</code>을 이용하여 라벨링을 하기 위해 <code class=\"highlighter-rouge\">생성자</code>를 만듭니다. <code class=\"highlighter-rouge\">blobs.Label(bin);</code>를 통하여 <code class=\"highlighter-rouge\">라벨링</code>을 진행합니다. <code class=\"highlighter-rouge\">이진화 이미지</code>를 사용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">blobs</span><span class=\"p\">.</span><span class=\"nf\">RenderBlobs</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">blob</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">blobs.RenderBlobs(원본, 결과);</code>를 통하여 <code class=\"highlighter-rouge\">라벨링</code> 결과를 확인할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"n\">KeyValuePair</span><span class=\"p\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">,</span> <span class=\"n\">CvBlob</span><span class=\"p\">&gt;</span> <span class=\"n\">item</span> <span class=\"k\">in</span> <span class=\"n\">blobs</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">CvBlob</span> <span class=\"n\">b</span> <span class=\"p\">=</span> <span class=\"n\">item</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">;</span>\n   \n    <span class=\"n\">blob</span><span class=\"p\">.</span><span class=\"nf\">PutText</span><span class=\"p\">(</span><span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">.</span><span class=\"n\">Label</span><span class=\"p\">),</span> <span class=\"n\">b</span><span class=\"p\">.</span><span class=\"n\">Centroid</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvFont</span><span class=\"p\">(</span><span class=\"n\">FontFace</span><span class=\"p\">.</span><span class=\"n\">HersheyComplex</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">foreach</code>문을 이용하여 <code class=\"highlighter-rouge\">라벨링</code> 정보를 확인할 수 있습니다. <code class=\"highlighter-rouge\">item</code>값을 이용하여 라벨링 정보를 확인 가능합니다. 아래의 목록을 <code class=\"highlighter-rouge\">foreach</code>문에 사이에 삽입하여 <strong>라벨링 번호에 따른 데이터를 확인 할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<ul>\n  <li>라벨링 번호 : b.Label</li>\n  <li>중심점 :  b.Centroid</li>\n  <li>면적(moment 00) :  b.Area</li>\n  <li>등고선 각도 : b.Angle() / Math.PI * 180</li>\n  <li>사각형 정보 : b.Rect</li>\n  <li>라벨링의 시작 위치 : b.Contour.StartingPoint</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"라벨링-부여-방식\">라벨링 부여 방식</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch32/2.png\"><img src=\"/assets/images/C/opencv/ch32/2.png\" alt=\"2\" /></a>\n라벨링은 <code class=\"highlighter-rouge\">좌측 상단부터 우측 상단방향</code>으로 이동해가면서 파악합니다. 가장 첫 줄의 파악이 끝나면 <strong>다음 줄 좌측 부터 우측방향으로 마지막 픽셀까지 파악</strong>합니다. 파악 중 가장 처음 만나는 픽셀이 라벨링 번호 1번이며 그 픽셀과 인접한 픽셀들을 <code class=\"highlighter-rouge\">모두 같은 번호를 부여</code>하게됩니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/opencv/ch32/3.png\"><img src=\"/assets/images/C/opencv/ch32/3.png\" alt=\"3\" /></a>\n위의 이미지에서 하얀색 원이 라벨링이 부여되는 시작 위치입니다. 좌측 상단부터 시작하면 <code class=\"highlighter-rouge\">076923</code>의 이미지에서 <code class=\"highlighter-rouge\">0</code>을 가장 처음 만나게 되고, 다음은 <code class=\"highlighter-rouge\">7</code>이 아닌 <code class=\"highlighter-rouge\">6</code>을 만나게 됩니다. 이 후, 순서대로 <code class=\"highlighter-rouge\">923</code>을 만나게 되며 마지막으로 <code class=\"highlighter-rouge\">7</code>을 만나게 됩니다. 즉 라벨링 순서는 <code class=\"highlighter-rouge\">069237</code>이 되게됩니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/opencv/ch32/4.png\"><img src=\"/assets/images/C/opencv/ch32/4.png\" alt=\"4\" /></a>\n위의 이미지에서 붉은 색으로 된 라벨링 번호를 확인 할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch32/5.png\"><img src=\"/assets/images/C/opencv/ch32/5.png\" alt=\"5\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 31강 - 이진화 메소드",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-31/",
      "date"     : "2018-01-07 00:00:00 +0900",
  "content"   : "<h3 id=\"이진화-메소드-binarizer\">이진화 메소드 (Binarizer)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch31/1.jpg\"><img src=\"/assets/images/C/opencv/ch31/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지를 어느 지점을 기준으로 <code class=\"highlighter-rouge\">흑색</code> 또는 <code class=\"highlighter-rouge\">흰색</code>의 색상으로 변환하기 위해서 사용합니다. <code class=\"highlighter-rouge\">Nick</code>, <code class=\"highlighter-rouge\">Sauvola</code>, <code class=\"highlighter-rouge\">Bernsen</code>의 방법으로 이진화 할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.Extensions</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">gray</span><span class=\"p\">;</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">bina</span><span class=\"p\">;</span> \n    \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">gray</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">BinarizerMethod</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">bina</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Binarizer</span><span class=\"p\">.</span><span class=\"nf\">Nick</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">bina</span><span class=\"p\">,</span> <span class=\"m\">61</span><span class=\"p\">,</span> <span class=\"m\">0.3</span><span class=\"p\">);</span>\n            <span class=\"c1\">//Binarizer.Niblack(gray, bina, 61, -0.5);</span>\n            <span class=\"c1\">//Binarizer.NiblackFast(gray, bina, 61, -0.5);</span>\n            <span class=\"c1\">//Binarizer.Sauvola(gray, bina, 77, 0.2, 64);</span>\n            <span class=\"c1\">//Binarizer.SauvolaFast(gray, bina, 77, 0.2, 64);</span>\n            <span class=\"c1\">//Binarizer.Bernsen(gray, bina, 51, 60, 150);</span>\n       \n            <span class=\"k\">return</span> <span class=\"n\">bina</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                   \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">gray</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">);</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">bina</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">bina</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp.Extensions</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Binarizer</code> 함수를 사용하기 위해서는 <strong>네임스페이스</strong>에 <code class=\"highlighter-rouge\">OpenCvSharp.Extensions;</code>를 선언해야 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">bina</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">gray</code>는 <code class=\"highlighter-rouge\">이진화 메소드</code>에 사용될 이미지입니다. 이 이미지를 통하여 <strong>이진화 메소드를 진행</strong>합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"nick-method\">Nick Method</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Binarizer</span><span class=\"p\">.</span><span class=\"nf\">Nick</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">bina</span><span class=\"p\">,</span> <span class=\"m\">61</span><span class=\"p\">,</span> <span class=\"m\">0.3</span><span class=\"p\">);</span>\n<span class=\"n\">Binarizer</span><span class=\"p\">.</span><span class=\"nf\">Niblack</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">bina</span><span class=\"p\">,</span> <span class=\"m\">61</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">0.5</span><span class=\"p\">);</span>\n<span class=\"n\">Binarizer</span><span class=\"p\">.</span><span class=\"nf\">NiblackFast</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">bina</span><span class=\"p\">,</span> <span class=\"m\">61</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">0.5</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Nick</code> 방법은 <code class=\"highlighter-rouge\">Binarizer.Nick(그레이스케일, 결과, 커널의 크기, 계수)</code>입니다. <code class=\"highlighter-rouge\">커널의 크기</code>는 <code class=\"highlighter-rouge\">홀수</code>만 가능하며 크기가 클수록 이미지가 깔끔해집니다. <code class=\"highlighter-rouge\">계수</code>는 커널의 크기와 이미지를 고려하여 <code class=\"highlighter-rouge\">적절한 값</code>을 대입합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"sauvola-method\">Sauvola Method</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Binarizer</span><span class=\"p\">.</span><span class=\"nf\">Sauvola</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">bina</span><span class=\"p\">,</span> <span class=\"m\">77</span><span class=\"p\">,</span> <span class=\"m\">0.2</span><span class=\"p\">,</span> <span class=\"m\">64</span><span class=\"p\">);</span>\n<span class=\"n\">Binarizer</span><span class=\"p\">.</span><span class=\"nf\">SauvolaFast</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">bina</span><span class=\"p\">,</span> <span class=\"m\">77</span><span class=\"p\">,</span> <span class=\"m\">0.2</span><span class=\"p\">,</span> <span class=\"m\">64</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Sauvola</code> 방법은 <code class=\"highlighter-rouge\">Binarizer.Sauvola(그레이스케일, 결과, 커널의 크기, 계수1, 계수2)</code>입니다. <code class=\"highlighter-rouge\">계수</code>는 <code class=\"highlighter-rouge\">적절한 값</code>을 대입합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"bernsen-method\">Bernsen Method</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Binarizer</span><span class=\"p\">.</span><span class=\"nf\">Bernsen</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">bina</span><span class=\"p\">,</span> <span class=\"m\">51</span><span class=\"p\">,</span> <span class=\"m\">60</span><span class=\"p\">,</span> <span class=\"m\">150</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Bernsen</code> 방법은 <code class=\"highlighter-rouge\">Binarizer.Bernsen(그레이스케일, 결과, 커널의 크기, 대비 최소값, 임계값)</code>입니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"nick\">Nick</h2>\n<p><a href=\"/assets/images/C/opencv/ch31/2.png\"><img src=\"/assets/images/C/opencv/ch31/2.png\" alt=\"2\" /></a>\n<br /></p>\n<h2 id=\"niblack\">Niblack</h2>\n<p><a href=\"/assets/images/C/opencv/ch31/3.png\"><img src=\"/assets/images/C/opencv/ch31/3.png\" alt=\"3\" /></a>\n<br /></p>\n<h2 id=\"niblackfast\">NiblackFast</h2>\n<p><a href=\"/assets/images/C/opencv/ch31/4.png\"><img src=\"/assets/images/C/opencv/ch31/4.png\" alt=\"4\" /></a>\n<br /></p>\n<h2 id=\"sauvola\">Sauvola</h2>\n<p><a href=\"/assets/images/C/opencv/ch31/5.png\"><img src=\"/assets/images/C/opencv/ch31/5.png\" alt=\"5\" /></a>\n<br /></p>\n<h2 id=\"sauvolafast\">SauvolaFast</h2>\n<p><a href=\"/assets/images/C/opencv/ch31/6.png\"><img src=\"/assets/images/C/opencv/ch31/6.png\" alt=\"6\" /></a>\n<br /></p>\n<h2 id=\"bernsen\">Bernsen</h2>\n<p><a href=\"/assets/images/C/opencv/ch31/7.png\"><img src=\"/assets/images/C/opencv/ch31/7.png\" alt=\"7\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 30강 - 감마 보정",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-30/",
      "date"     : "2018-01-03 00:00:00 +0900",
  "content"   : "<h3 id=\"감마-보정-gamma-correction\">감마 보정 (Gamma Correction)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch30/1.jpg\"><img src=\"/assets/images/C/opencv/ch30/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지의 <code class=\"highlighter-rouge\">명암을 보정</code>하기 위해 사용되는 알고리즘입니다. 모니터 등을 통하여 촬영된 이미지를 확인 시 <strong>밝거나 어둡게 보이는 경우</strong>가 있습니다. 이를 수정하기 위하여 <code class=\"highlighter-rouge\">감마 보정</code>을 실행합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">gamma</span><span class=\"p\">;</span>\n         \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GammaCorrect</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">gamma</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            \n            <span class=\"kt\">double</span> <span class=\"n\">gamma_value</span> <span class=\"p\">=</span> <span class=\"m\">0.5</span><span class=\"p\">;</span>\n\n            <span class=\"kt\">byte</span><span class=\"p\">[]</span> <span class=\"n\">lut</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">byte</span><span class=\"p\">[</span><span class=\"m\">256</span><span class=\"p\">];</span>\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">lut</span><span class=\"p\">.</span><span class=\"n\">Length</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">lut</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">byte</span><span class=\"p\">)(</span><span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Pow</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">/</span> <span class=\"m\">255.0</span><span class=\"p\">,</span> <span class=\"m\">1.0</span> <span class=\"p\">/</span> <span class=\"n\">gamma_value</span><span class=\"p\">)</span> <span class=\"p\">*</span> <span class=\"m\">255.0</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">LUT</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gamma</span><span class=\"p\">,</span> <span class=\"n\">lut</span><span class=\"p\">);</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">gamma</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                   \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">gamma</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">gamma</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">double</span> <span class=\"n\">gamma_value</span> <span class=\"p\">=</span> <span class=\"m\">0.5</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">gamma_value</code>는 <code class=\"highlighter-rouge\">감마 보정에 사용될 값</code>입니다. 이 값을 통하여 <strong>감마 보정을 진행</strong>합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">byte</span><span class=\"p\">[]</span> <span class=\"n\">lut</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">byte</span><span class=\"p\">[</span><span class=\"m\">256</span><span class=\"p\">];</span>\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">lut</span><span class=\"p\">.</span><span class=\"n\">Length</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">lut</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">byte</span><span class=\"p\">)(</span><span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Pow</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">/</span> <span class=\"m\">255.0</span><span class=\"p\">,</span> <span class=\"m\">1.0</span> <span class=\"p\">/</span> <span class=\"n\">gamma_value</span><span class=\"p\">)</span> <span class=\"p\">*</span> <span class=\"m\">255.0</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">LUT</code>를 진행하기 위해서 사용되는 공식입니다. LUT란 <code class=\"highlighter-rouge\">LookUp Talbe</code>의 약어로 <strong>배열 색인화 과정으로 대체하는 데 사용</strong>합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">LUT</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gamma</span><span class=\"p\">,</span> <span class=\"n\">lut</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.LUT(src, gamma, lut);</code>을 사용하여 <strong>감마 보정을 실행</strong>합니다. <code class=\"highlighter-rouge\">Cv.LUT(원본, 결과, LUT 계산식)</code>입니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"gamma_value---00\">gamma_value - 0.0##</h2>\n<p><a href=\"/assets/images/C/opencv/ch30/2.png\"><img src=\"/assets/images/C/opencv/ch30/2.png\" alt=\"2\" /></a>\n<br /></p>\n<h2 id=\"gamma_value---05\">gamma_value - 0.5##</h2>\n<p><a href=\"/assets/images/C/opencv/ch30/3.png\"><img src=\"/assets/images/C/opencv/ch30/3.png\" alt=\"3\" /></a>\n<br /></p>\n<h2 id=\"gamma_value---10\">gamma_value - 1.0##</h2>\n<p><a href=\"/assets/images/C/opencv/ch30/4.png\"><img src=\"/assets/images/C/opencv/ch30/4.png\" alt=\"4\" /></a>\n<br /></p>\n<h2 id=\"gamma_value---20\">gamma_value - 2.0##</h2>\n<p><a href=\"/assets/images/C/opencv/ch30/5.png\"><img src=\"/assets/images/C/opencv/ch30/5.png\" alt=\"5\" /></a>\n<br /></p>\n<h2 id=\"gamma_value---40\">gamma_value - 4.0##</h2>\n<p><a href=\"/assets/images/C/opencv/ch30/6.png\"><img src=\"/assets/images/C/opencv/ch30/6.png\" alt=\"6\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# 예제 : Splash Screen",
      "category" : "",
      "tags"     : "C# 예제",
      "url"      : "/exercise/C-SpalshScreen/",
      "date"     : "2018-01-02 00:00:00 +0900",
  "content"   : "<h3 id=\"splash-screen\">Splash Screen</h3>\n<hr />\n<p><a href=\"/assets/images/C/ex3/0.gif\"><img src=\"/assets/images/C/ex3/0.gif\" alt=\"0\" /></a>\nSplash Screen이란 프로그램을 시작했을 때, <strong>로딩 중에 표시되는 이미지를 의미</strong>합니다. <strong>프로그램에 대한 소개</strong>나 <strong>로딩 진행률</strong> 등을 표시합니다. 또한 이 Splash Screen을 이용하여 <code class=\"highlighter-rouge\">로그인창</code>, <code class=\"highlighter-rouge\">로딩창</code>, <code class=\"highlighter-rouge\">시작폼</code> 등에 응용할 수 있습니다.</p>\n\n<h3 id=\"항목-추가\">항목 추가</h3>\n<hr />\n<p><a href=\"/assets/images/C/ex3/1.png\"><img src=\"/assets/images/C/ex3/1.png\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">프로젝트(P)</code> → <code class=\"highlighter-rouge\">새 항목 추가(W)</code>를 눌러 <code class=\"highlighter-rouge\">Splash Screen</code>이 될 <code class=\"highlighter-rouge\">Form</code>을 추가합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/ex3/2.png\"><img src=\"/assets/images/C/ex3/2.png\" alt=\"2\" /></a>\n<code class=\"highlighter-rouge\">Windows Form</code>을 선택 한 후 이름을 <code class=\"highlighter-rouge\">SplashForm.cs</code>으로 변경하고 추가합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"programcs\">Program.cs</h3>\n<hr />\n<p><a href=\"/assets/images/C/ex3/3.png\"><img src=\"/assets/images/C/ex3/3.png\" alt=\"3\" /></a>\n<code class=\"highlighter-rouge\">솔루션 탐색기</code>에서 <code class=\"highlighter-rouge\">Program.cs</code>을 더블클릭하여 <code class=\"highlighter-rouge\">프로그램 주 진입점</code>으로 이동합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">static</span> <span class=\"k\">class</span> <span class=\"nc\">Program</span>\n    <span class=\"p\">{</span>\n        <span class=\"c1\">/// &lt;summary&gt;</span>\n        <span class=\"c1\">/// 해당 응용 프로그램의 주 진입점입니다.</span>\n        <span class=\"c1\">/// &lt;/summary&gt;</span>\n        <span class=\"p\">[</span><span class=\"n\">STAThread</span><span class=\"p\">]</span>\n        <span class=\"k\">static</span> <span class=\"k\">void</span> <span class=\"nf\">Main</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">Application</span><span class=\"p\">.</span><span class=\"nf\">EnableVisualStyles</span><span class=\"p\">();</span>\n            <span class=\"n\">Application</span><span class=\"p\">.</span><span class=\"nf\">SetCompatibleTextRenderingDefault</span><span class=\"p\">(</span><span class=\"k\">false</span><span class=\"p\">);</span>\n\n            <span class=\"n\">SplashForm</span> <span class=\"n\">SplashForm</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">SplashForm</span><span class=\"p\">();</span>\n            <span class=\"n\">Application</span><span class=\"p\">.</span><span class=\"nf\">Run</span><span class=\"p\">(</span><span class=\"n\">SplashForm</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Application</span><span class=\"p\">.</span><span class=\"nf\">Run</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">Form1</span><span class=\"p\">());</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>위와 같이 코드를 수정합니다. <code class=\"highlighter-rouge\">SplashForm</code>이 종료될 경우 <code class=\"highlighter-rouge\">Form1</code>이 실행되게 됩니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"splashformcs\">SplashForm.cs</h3>\n<hr />\n<p>SplashForm에 <code class=\"highlighter-rouge\">progressBar</code>를 추가합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">SplashForm</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">delegate</span> <span class=\"k\">void</span> <span class=\"nf\">ProgressDelegate</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">);</span>\n        <span class=\"k\">delegate</span> <span class=\"k\">void</span> <span class=\"nf\">CloseDelegate</span><span class=\"p\">();</span>\n\n        <span class=\"k\">public</span> <span class=\"nf\">SplashForm</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">SplashForm_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">Thread</span> <span class=\"n\">loading</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Thread</span><span class=\"p\">(</span><span class=\"n\">Thread</span><span class=\"p\">);</span>\n            <span class=\"n\">loading</span><span class=\"p\">.</span><span class=\"nf\">Start</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Step</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">progressBar1</span><span class=\"p\">.</span><span class=\"n\">Value</span> <span class=\"p\">=</span> <span class=\"n\">i</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">FormClose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Close</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Thread</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">=</span><span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">&lt;=</span><span class=\"m\">100</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Invoke</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">ProgressDelegate</span><span class=\"p\">(</span><span class=\"n\">Step</span><span class=\"p\">),</span> <span class=\"n\">i</span><span class=\"p\">);</span>\n                <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Threading</span><span class=\"p\">.</span><span class=\"n\">Thread</span><span class=\"p\">.</span><span class=\"nf\">Sleep</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n            <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Threading</span><span class=\"p\">.</span><span class=\"n\">Thread</span><span class=\"p\">.</span><span class=\"nf\">Sleep</span><span class=\"p\">(</span><span class=\"m\">1000</span><span class=\"p\">);</span>\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Invoke</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CloseDelegate</span><span class=\"p\">(</span><span class=\"n\">FormClose</span><span class=\"p\">));</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">SplashForm</code>이 로드될 때 <code class=\"highlighter-rouge\">loading</code>으로 선언된 쓰레드가 실행됩니다.</p>\n\n<p>사용자 정의 함수 <code class=\"highlighter-rouge\">Thread</code>로 넘어가게 되며, <code class=\"highlighter-rouge\">Step</code>이라는 사용자 정의 함수가 100회 실행되며 이후, 잠시 대기 한 후 <code class=\"highlighter-rouge\">SplashForm</code>을 종료합니다. <code class=\"highlighter-rouge\">Program.cs</code>에서 정의 된 순서대로 폼이 순차적으로 실행됩니다.</p>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 30강 - 쓰레드 (3)",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-30/",
      "date"     : "2017-12-31 00:00:00 +0900",
  "content"   : "<h3 id=\"쓰레드-thread\">쓰레드 (Thread)</h3>\n<hr />\n<p>쓰레드를 사용할 때 <strong>델리게이트 (delegate)</strong>를 이용하여 <code class=\"highlighter-rouge\">폼</code>과 <code class=\"highlighter-rouge\">컨트롤</code>을 비롯하여 <code class=\"highlighter-rouge\">사용자 정의 함수</code>를 이용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"프로젝트-구성\">프로젝트 구성</h3>\n<hr />\n<p><a href=\"/assets/images/C/ch30/1.png\"><img src=\"/assets/images/C/ch30/1.png\" alt=\"1\" /></a>\n도구상자에서 TextBox를 Form1에 생성하며, <strong>MultiLine</strong>에 체크합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"코드\">코드</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Thread</span> <span class=\"n\">ThreadA</span><span class=\"p\">;</span>\n        <span class=\"n\">Thread</span> <span class=\"n\">ThreadB</span><span class=\"p\">;</span>\n\n        <span class=\"k\">delegate</span> <span class=\"k\">void</span> <span class=\"nf\">ThreadDelegate_1</span><span class=\"p\">(</span><span class=\"kt\">string</span> <span class=\"n\">i</span><span class=\"p\">);</span>\n\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">ThreadA</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Thread</span><span class=\"p\">(</span><span class=\"n\">TEST_1</span><span class=\"p\">);</span>\n            <span class=\"n\">ThreadB</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Thread</span><span class=\"p\">(</span><span class=\"n\">TEST_2</span><span class=\"p\">);</span>\n\n            <span class=\"n\">ThreadA</span><span class=\"p\">.</span><span class=\"nf\">Start</span><span class=\"p\">();</span>\n            <span class=\"n\">ThreadB</span><span class=\"p\">.</span><span class=\"nf\">Start</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">TEST_1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">=</span><span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">&lt;</span><span class=\"m\">100</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Invoke</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">ThreadDelegate_1</span><span class=\"p\">(</span><span class=\"n\">TEXT</span><span class=\"p\">),</span> <span class=\"n\">i</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">());</span>\n                <span class=\"n\">Thread</span><span class=\"p\">.</span><span class=\"nf\">Sleep</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">);</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">==</span> <span class=\"m\">50</span><span class=\"p\">)</span> <span class=\"n\">ThreadA</span><span class=\"p\">.</span><span class=\"nf\">Suspend</span><span class=\"p\">();</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">TEST_2</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">=</span><span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">&lt;</span> <span class=\"m\">100</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">Thread</span><span class=\"p\">.</span><span class=\"nf\">Sleep</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n            <span class=\"n\">ThreadA</span><span class=\"p\">.</span><span class=\"nf\">Resume</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">TEXT</span><span class=\"p\">(</span><span class=\"kt\">string</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">textBox1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">i</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"델리게이트-delegate\">델리게이트 (delegate)</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">delegate</span> <span class=\"k\">void</span> <span class=\"nf\">ThreadDelegate_1</span><span class=\"p\">(</span><span class=\"kt\">string</span> <span class=\"n\">i</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">델리게이트</code>를 선언합니다. 사용될 인수를 포함할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Invoke</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">ThreadDelegate_1</span><span class=\"p\">(</span><span class=\"n\">TEXT</span><span class=\"p\">),</span> <span class=\"n\">i</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">());</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Invoke</code>와 <code class=\"highlighter-rouge\">delegate</code>를 이용하며 <strong>델리게이트</strong>와 <strong>사용자 정의 함수</strong>에서 사용되는 인자의 변수를 동일하게 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">this.Invoke(new 선언된델리게이트(사용자 정의 함수), 인수);</code>로 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"sleep\">Sleep</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">Thread.Sleep(ms);</code>을 통하여 <strong>밀리세컨드(millisecond) [ms]</strong> 동안 쓰레드를 <strong>중지</strong>할 수 있습니다. <code class=\"highlighter-rouge\">(1000 ms = 1s)</code></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">쓰레드의 이름</code>이나 <code class=\"highlighter-rouge\">사용자 정의 함수의 이름</code>을 <strong>Thread</strong> 선언했을 경우 <code class=\"highlighter-rouge\">System.Threading.Thread.Sleep(ms);</code>로 사용하여 <code class=\"highlighter-rouge\">Sleep</code>할 수 있습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"suspend\">Suspend</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">쓰레드이름.Suspend()</code>를 통하여 특정 쓰레드를 <code class=\"highlighter-rouge\">일시 중단</code> 시킬 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"resume\">Resume</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">쓰레드이름.Resume()</code>를 통하여 <code class=\"highlighter-rouge\">일시 중단</code>된 쓰레드를 <code class=\"highlighter-rouge\">다시 시작</code>할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/ch30/2.gif\"><img src=\"/assets/images/C/ch30/2.gif\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# 예제 : Tab Menu",
      "category" : "",
      "tags"     : "C# 예제",
      "url"      : "/exercise/C-tabmenu/",
      "date"     : "2017-12-30 00:00:00 +0900",
  "content"   : "<h3 id=\"tab-menu\">Tab Menu</h3>\n<hr />\n<p><a href=\"/assets/images/C/ex2/1.gif\"><img src=\"/assets/images/C/ex2/1.gif\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">SplitContainer</code>를 이용하여 <code class=\"highlighter-rouge\">Tab Menu</code>를 구현할 수 있습니다.</p>\n\n<h3 id=\"프로젝트-구성\">프로젝트 구성</h3>\n<hr />\n<p><a href=\"/assets/images/C/ex2/2.png\"><img src=\"/assets/images/C/ex2/2.png\" alt=\"2\" /></a>\n도구상자에서 <code class=\"highlighter-rouge\">SplitContainer</code>, <code class=\"highlighter-rouge\">Button</code>, <code class=\"highlighter-rouge\">TabControl</code>, <code class=\"highlighter-rouge\">Label</code>을 <code class=\"highlighter-rouge\">Form1</code>에 생성합니다. 위의 이미지와 같이 배치합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/ex2/3.png\"><img src=\"/assets/images/C/ex2/3.png\" alt=\"3\" /></a>\n속성을 다음과 같이 설정합니다.</p>\n\n<ol>\n  <li>\n    <p>splitContainer1</p>\n\n    <ul>\n      <li>IsSplitterFixed : True</li>\n      <li>Size : 284, 261</li>\n      <li>SplitterDistance : 100</li>\n      <li>SplitterWidth : 1</li>\n    </ul>\n  </li>\n  <li>\n    <p>button1</p>\n\n    <ul>\n      <li>Location : 0, 0</li>\n      <li>Size : 50, 50</li>\n      <li>Text : Menu</li>\n    </ul>\n  </li>\n  <li>\n    <p>button2</p>\n\n    <ul>\n      <li>Location : 0, 161</li>\n      <li>Size : 100, 50</li>\n      <li>Text : 1번 탭</li>\n    </ul>\n  </li>\n  <li>\n    <p>button3</p>\n\n    <ul>\n      <li>Location : 0, 211</li>\n      <li>Size : 100, 50</li>\n      <li>Text : 2번 탭</li>\n    </ul>\n  </li>\n  <li>\n    <p>tabControl1</p>\n\n    <ul>\n      <li>Location : 3, -21</li>\n      <li>Size : 180, 282</li>\n      <li>Text : 2번 탭</li>\n    </ul>\n  </li>\n  <li>\n    <p>label1</p>\n\n    <ul>\n      <li>Text : 1번 탭 내용</li>\n    </ul>\n  </li>\n  <li>\n    <p>label2</p>\n\n    <ul>\n      <li>Text : 2번 탭 내용</li>\n    </ul>\n  </li>\n</ol>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">IsSplitterFixed</code>을 이용하여 분할자를 고정시킬 수 있습니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">TabControl</code>의 위치를 <code class=\"highlighter-rouge\">음수</code>값으로 하여 상단의 <code class=\"highlighter-rouge\">tabPage</code>를 가릴 수 있습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">bool</span> <span class=\"n\">section</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button1_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">section</span> <span class=\"p\">==</span> <span class=\"k\">false</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">splitContainer1</span><span class=\"p\">.</span><span class=\"n\">SplitterDistance</span> <span class=\"p\">=</span> <span class=\"m\">50</span><span class=\"p\">;</span>\n        <span class=\"n\">tabControl1</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"n\">splitContainer1</span><span class=\"p\">.</span><span class=\"n\">Panel2</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span>\n        <span class=\"n\">section</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n        <span class=\"n\">button2</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"m\">50</span><span class=\"p\">;</span>\n        <span class=\"n\">button3</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"m\">50</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">splitContainer1</span><span class=\"p\">.</span><span class=\"n\">SplitterDistance</span> <span class=\"p\">=</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n        <span class=\"n\">tabControl1</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"n\">splitContainer1</span><span class=\"p\">.</span><span class=\"n\">Panel2</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span>\n        <span class=\"n\">section</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n        <span class=\"n\">button2</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n        <span class=\"n\">button3</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">button1</code>을 더블클릭하여 <strong>이벤트를 생성</strong>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">section</code>이라는 <code class=\"highlighter-rouge\">bool</code>변수를 생성하여 <code class=\"highlighter-rouge\">조건문</code>을 활용해 <strong>클릭 여부</strong>를 저장합니다.</p>\n\n<p><code class=\"highlighter-rouge\">splitContainer1.SplitterDistance</code>는 <strong>분할자의 위치</strong>를 의미합니다.</p>\n\n<p><code class=\"highlighter-rouge\">tabControl1.Width = splitContainer1.Panel2.Width;</code>를 이용해 <code class=\"highlighter-rouge\">TabControl</code>과 <code class=\"highlighter-rouge\">Panel</code>의 크기를 맞춥니다.</p>\n\n<p><code class=\"highlighter-rouge\">button.Width</code>를 이용하여 <code class=\"highlighter-rouge\">Button</code>의 크기를 <code class=\"highlighter-rouge\">Panel</code>의 크기와 맞춥니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button2_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">tabControl1</span><span class=\"p\">.</span><span class=\"n\">SelectedIndex</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button3_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">tabControl1</span><span class=\"p\">.</span><span class=\"n\">SelectedIndex</span> <span class=\"p\">=</span> <span class=\"m\">1</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">button2</code>와 <code class=\"highlighter-rouge\">button3</code>을 각각 더블클릭하여 <strong>이벤트를 생성</strong>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">tabControl1.SelectedIndex</code>는 <code class=\"highlighter-rouge\">TabControl</code>의 <code class=\"highlighter-rouge\">tabPage</code>의 번호를 의미합니다. 해당 Index의 <code class=\"highlighter-rouge\">tabPage</code>가 보여집니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"코드\">코드</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"kt\">bool</span> <span class=\"n\">section</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button1_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">section</span> <span class=\"p\">==</span> <span class=\"k\">false</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">splitContainer1</span><span class=\"p\">.</span><span class=\"n\">SplitterDistance</span> <span class=\"p\">=</span> <span class=\"m\">50</span><span class=\"p\">;</span>\n                <span class=\"n\">tabControl1</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"n\">splitContainer1</span><span class=\"p\">.</span><span class=\"n\">Panel2</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span>\n                <span class=\"n\">section</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n                <span class=\"n\">button2</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"m\">50</span><span class=\"p\">;</span>\n                <span class=\"n\">button3</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"m\">50</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">else</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">splitContainer1</span><span class=\"p\">.</span><span class=\"n\">SplitterDistance</span> <span class=\"p\">=</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n                <span class=\"n\">tabControl1</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"n\">splitContainer1</span><span class=\"p\">.</span><span class=\"n\">Panel2</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span>\n                <span class=\"n\">section</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n                <span class=\"n\">button2</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n                <span class=\"n\">button3</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">=</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button2_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">tabControl1</span><span class=\"p\">.</span><span class=\"n\">SelectedIndex</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button3_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">tabControl1</span><span class=\"p\">.</span><span class=\"n\">SelectedIndex</span> <span class=\"p\">=</span> <span class=\"m\">1</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 29강 - 쓰레드 (2)",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-29/",
      "date"     : "2017-12-30 00:00:00 +0900",
  "content"   : "<h3 id=\"쓰레드-thread\">쓰레드 (Thread)</h3>\n<hr />\n<p>쓰레드를 사용할 때 일정한 부분은 <code class=\"highlighter-rouge\">순차적</code>으로 <strong>실행되어야 정상적으로 프로그램이 구동</strong>됩니다. <code class=\"highlighter-rouge\">사용자 정의 함수</code>를 이용하면 이 부분을 해결 할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"프로젝트-구성\">프로젝트 구성</h3>\n<hr />\n<p><a href=\"/assets/images/C/ch29/1.png\"><img src=\"/assets/images/C/ch29/1.png\" alt=\"1\" /></a>\n도구상자에서 TextBox를 Form1에 생성하며, <strong>MultiLine</strong>에 체크합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"unsafe-방법\">UnSafe 방법</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">CrossThread</code>를 사용하지 않고 <code class=\"highlighter-rouge\">CheckForIllegalCrossThreadCalls = false;</code>을 선언하여 <code class=\"highlighter-rouge\">안전하지 않은 방법</code>으로 코드를 구성할 수 있습니다. 이 경우, <code class=\"highlighter-rouge\">Invoke</code>와 <code class=\"highlighter-rouge\">delegate</code>를 사용하지 않고 <code class=\"highlighter-rouge\">직접적으로 컨트롤을 호출</code>하여 사용할 수 있습니다. 하지만 <strong>중대한 오류가 발생할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<h3 id=\"코드\">코드</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n        \n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n            <span class=\"n\">CheckForIllegalCrossThreadCalls</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span> \n            <span class=\"n\">Thread</span> <span class=\"n\">Thread_A</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Thread</span><span class=\"p\">(</span><span class=\"n\">TEST_1</span><span class=\"p\">);</span>\n            <span class=\"n\">Thread</span> <span class=\"n\">Thread_B</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Thread</span><span class=\"p\">(</span><span class=\"n\">TEST_2</span><span class=\"p\">);</span>\n            <span class=\"n\">Thread</span> <span class=\"n\">Thread_C</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Thread</span><span class=\"p\">(</span><span class=\"n\">TEST_3</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Thread_A</span><span class=\"p\">.</span><span class=\"nf\">Start</span><span class=\"p\">();</span>\n            <span class=\"n\">Thread_B</span><span class=\"p\">.</span><span class=\"nf\">Start</span><span class=\"p\">();</span>\n            <span class=\"n\">Thread_C</span><span class=\"p\">.</span><span class=\"nf\">Start</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">TEST_1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"m\">100</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">textBox1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">+=</span> <span class=\"s\">\"A\"</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">TEST_2</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">&lt;</span> <span class=\"m\">70</span><span class=\"p\">;</span> <span class=\"n\">j</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">textBox1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">+=</span> <span class=\"s\">\"B\"</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">TEST_3</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">k</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">k</span> <span class=\"p\">&lt;</span> <span class=\"m\">50</span><span class=\"p\">;</span> <span class=\"n\">k</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">textBox1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">+=</span> <span class=\"s\">\"C\"</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CheckForIllegalCrossThreadCalls = false;</code> 을 선언하여 다른 쓰레드에서 컨트롤을 다룰 수 있습니다. 하지만, <code class=\"highlighter-rouge\">A가 100회</code>, <code class=\"highlighter-rouge\">B가 70회</code>, <code class=\"highlighter-rouge\">C가 50회</code>가 실행되지 않고 모두 합하여 <code class=\"highlighter-rouge\">100회</code>만 실행되는 것을 확인할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/ch29/2.png\"><img src=\"/assets/images/C/ch29/2.png\" alt=\"2\" /></a>\n<a href=\"/assets/images/C/ch29/3.png\"><img src=\"/assets/images/C/ch29/3.png\" alt=\"3\" /></a></p>\n\n<p><br /></p>\n\n<h3 id=\"safe-방법\">Safe 방법</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">CrossThread</code>를 사용하여 함수에 호출하는 방법으로 <strong>안전하게 코드</strong>를 구성하여야 오류가 발생하지 않습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"코드-1\">코드</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">Thread</span> <span class=\"n\">Thread_A</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Thread</span><span class=\"p\">(</span><span class=\"n\">TEST_1</span><span class=\"p\">);</span>\n            <span class=\"n\">Thread</span> <span class=\"n\">Thread_B</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Thread</span><span class=\"p\">(</span><span class=\"n\">TEST_2</span><span class=\"p\">);</span>\n            <span class=\"n\">Thread</span> <span class=\"n\">Thread_C</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Thread</span><span class=\"p\">(</span><span class=\"n\">TEST_3</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Thread_A</span><span class=\"p\">.</span><span class=\"nf\">Start</span><span class=\"p\">();</span>\n            <span class=\"n\">Thread_B</span><span class=\"p\">.</span><span class=\"nf\">Start</span><span class=\"p\">();</span>\n            <span class=\"n\">Thread_C</span><span class=\"p\">.</span><span class=\"nf\">Start</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">TEST_1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">CrossThread</span><span class=\"p\">(</span><span class=\"n\">textBox1</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"s\">\"A\"</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">TEST_2</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">CrossThread</span><span class=\"p\">(</span><span class=\"n\">textBox1</span><span class=\"p\">,</span> <span class=\"m\">70</span><span class=\"p\">,</span> <span class=\"s\">\"B\"</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">TEST_3</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">CrossThread</span><span class=\"p\">(</span><span class=\"n\">textBox1</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"s\">\"C\"</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">static</span> <span class=\"k\">void</span> <span class=\"nf\">CrossThread</span><span class=\"p\">(</span><span class=\"n\">Control</span> <span class=\"n\">item</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">num</span><span class=\"p\">,</span> <span class=\"kt\">string</span> <span class=\"n\">text</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">.</span><span class=\"n\">InvokeRequired</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">item</span><span class=\"p\">.</span><span class=\"nf\">BeginInvoke</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">MethodInvoker</span><span class=\"p\">(</span><span class=\"k\">delegate</span> <span class=\"p\">()</span>\n                <span class=\"p\">{</span>\n                    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">num</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"n\">item</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">+=</span> <span class=\"n\">text</span><span class=\"p\">;</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}));</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n    </code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">A가 100회</code>, <code class=\"highlighter-rouge\">B가 70회</code>, <code class=\"highlighter-rouge\">C가 50회</code>가 실행되고 <strong>연속적</strong>으로 A, B, C가 출력되는 것을 확인할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result-1\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/ch29/4.png\"><img src=\"/assets/images/C/ch29/4.png\" alt=\"4\" /></a>\n<a href=\"/assets/images/C/ch29/5.png\"><img src=\"/assets/images/C/ch29/5.png\" alt=\"5\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 28강 - 쓰레드 (1)",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-28/",
      "date"     : "2017-12-29 00:00:00 +0900",
  "content"   : "<h3 id=\"쓰레드-thread\">쓰레드 (Thread)</h3>\n<hr />\n<p>프로그램의 코드는 <code class=\"highlighter-rouge\">순차적</code>으로 실행되지만, 필요에 의해서 <code class=\"highlighter-rouge\">여러 작업을 한 번에</code> 해야할 경우가 생깁니다. 이 때 <strong>쓰레드를 이용하면 여러 프로세스를 나눠서 동시에 실행하는 것</strong>처럼 구성할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"프로젝트-구성\">프로젝트 구성</h3>\n<hr />\n<p><a href=\"/assets/images/C/ch28/1.png\"><img src=\"/assets/images/C/ch28/1.png\" alt=\"1\" /></a>\n도구상자에서 TextBox를 Form1에 생성하며, <strong>MultiLine</strong>에 체크합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"코드\">코드</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span> \n            <span class=\"n\">Thread</span> <span class=\"n\">Thread_A</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Thread</span><span class=\"p\">(()</span> <span class=\"p\">=&gt;</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"m\">100</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"nf\">CrossThread</span><span class=\"p\">(</span><span class=\"n\">textBox1</span><span class=\"p\">,</span> <span class=\"s\">\"A\"</span><span class=\"p\">);</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">});</span>\n\n            <span class=\"n\">Thread</span> <span class=\"n\">Thread_B</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Thread</span><span class=\"p\">(()</span> <span class=\"p\">=&gt;</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"m\">100</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"nf\">CrossThread</span><span class=\"p\">(</span><span class=\"n\">textBox1</span><span class=\"p\">,</span> <span class=\"s\">\"B\"</span><span class=\"p\">);</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">});</span>\n\n            <span class=\"n\">Thread</span> <span class=\"n\">Thread_C</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Thread</span><span class=\"p\">(()</span> <span class=\"p\">=&gt;</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"m\">100</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"nf\">CrossThread</span><span class=\"p\">(</span><span class=\"n\">textBox1</span><span class=\"p\">,</span> <span class=\"s\">\"C\"</span><span class=\"p\">);</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">});</span>\n\n            <span class=\"n\">Thread_A</span><span class=\"p\">.</span><span class=\"nf\">Start</span><span class=\"p\">();</span>\n            <span class=\"n\">Thread_B</span><span class=\"p\">.</span><span class=\"nf\">Start</span><span class=\"p\">();</span>\n            <span class=\"n\">Thread_C</span><span class=\"p\">.</span><span class=\"nf\">Start</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">static</span> <span class=\"k\">void</span> <span class=\"nf\">CrossThread</span><span class=\"p\">(</span><span class=\"n\">Control</span> <span class=\"n\">item</span><span class=\"p\">,</span> <span class=\"kt\">string</span> <span class=\"n\">text</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">.</span><span class=\"n\">InvokeRequired</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">item</span><span class=\"p\">.</span><span class=\"nf\">BeginInvoke</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">MethodInvoker</span><span class=\"p\">(</span><span class=\"k\">delegate</span> <span class=\"p\">()</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">item</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">+=</span> <span class=\"n\">text</span><span class=\"p\">;</span>\n                <span class=\"p\">}));</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"namespace\">namespace</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System.Threading</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Thread</code>를 사용하기 위하여 <code class=\"highlighter-rouge\">namespace</code>에 <code class=\"highlighter-rouge\">System.Threading</code>를 선언합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"thread-생성\">Thread 생성</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Thread</span> <span class=\"err\">쓰레드이름</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Thread</span><span class=\"p\">(()</span> <span class=\"p\">=&gt;</span>\n<span class=\"p\">{</span>\n    <span class=\"c1\">//코드</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">코드</code>를 입력하거나 <code class=\"highlighter-rouge\">메소드</code>, <code class=\"highlighter-rouge\">사용자정의함수</code>, <code class=\"highlighter-rouge\">델리게이트</code>, <code class=\"highlighter-rouge\">람다</code> 등을 넘겨줄 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"thread-코드\">Thread 코드</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Thread</span> <span class=\"n\">Thread_A</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Thread</span><span class=\"p\">(()</span> <span class=\"p\">=&gt;</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"m\">100</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n    <span class=\"p\">{</span>\n        <span class=\"nf\">CrossThread</span><span class=\"p\">(</span><span class=\"n\">textBox1</span><span class=\"p\">,</span> <span class=\"s\">\"A\"</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">for문</code>을 이용하여 <code class=\"highlighter-rouge\">100회</code>동안 <code class=\"highlighter-rouge\">CrossThread()</code>라는 사용자 정의 함수를 반복하는 코드를 구성합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"crossthread\">CrossThread</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"k\">static</span> <span class=\"k\">void</span> <span class=\"nf\">CrossThread</span><span class=\"p\">(</span><span class=\"n\">Control</span> <span class=\"n\">item</span><span class=\"p\">,</span> <span class=\"kt\">string</span> <span class=\"n\">text</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">.</span><span class=\"n\">InvokeRequired</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">item</span><span class=\"p\">.</span><span class=\"nf\">BeginInvoke</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">MethodInvoker</span><span class=\"p\">(</span><span class=\"k\">delegate</span> <span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">item</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">+=</span> <span class=\"n\">text</span><span class=\"p\">;</span>\n        <span class=\"p\">}));</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>쓰레드에 직접적으로 호출할 경우 아래와 같은 <code class=\"highlighter-rouge\">크로스 쓰레드(Cross Thread)</code> 문제가 발생합니다.</p>\n\n<p><strong>System.InvalidOperationException: ‘크로스 스레드 작업이 잘못되었습니다. ‘textBox1’ 컨트롤이 자신이 만들어진 스레드가 아닌 스레드에서 액세스되었습니다.’</strong></p>\n\n<p>이 문제는 <strong>컨트롤을 생성한 쓰레드가 아닌 다른 쓰레드에서 컨트롤을 다루려할 때 발생</strong>합니다. 이를 해결하기 위하여 <code class=\"highlighter-rouge\">Invoke</code>와 <code class=\"highlighter-rouge\">delegate</code>를 이용해 안전한 방법으로 폼의 컨트롤을 다룰 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"thread-실행\">Thread 실행</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"err\">쓰레드이름</span><span class=\"p\">.</span><span class=\"nf\">Start</span><span class=\"p\">();</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">쓰레드이름.Start();</code>를 이용하여 <strong>쓰레드를 실행</strong>할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/ch28/2.png\"><img src=\"/assets/images/C/ch28/2.png\" alt=\"2\" /></a>\n<a href=\"/assets/images/C/ch28/3.png\"><img src=\"/assets/images/C/ch28/3.png\" alt=\"3\" /></a></p>\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 29강 - 얼굴 검출",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-29/",
      "date"     : "2017-12-27 00:00:00 +0900",
  "content"   : "<h3 id=\"얼굴-검출-haar-classifier-cascade\">얼굴 검출 (Haar Classifier Cascade)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch29/1.jpg\"><img src=\"/assets/images/C/opencv/ch29/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지에서 <code class=\"highlighter-rouge\">얼굴이 존재하는 위치를 알려주는 알고리즘</code>입니다. 얼굴 인식이 아닌 얼굴 형태의 패턴을 찾아 <strong>얼굴을 검출해주는 알고리즘(Face Detection)</strong>입니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">Haar Classifier Cascade 다운로드</code> : <a href=\"https://github.com/076923/076923.github.io/raw/master/download/haarcascade_frontalface_alt.zip\">다운로드</a></p>\n\n<p><strong>위의 파일을 다운로드합니다. 압축 해제 후 xml파일을 프로젝트 경로에 저장합니다.</strong></p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">절대경로</code>, <code class=\"highlighter-rouge\">상대경로</code>란? : <a href=\"https://076923.github.io/posts/C-22/\">22강 바로가기</a></p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">haarface</span><span class=\"p\">;</span>\n         \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">FaceDetection</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">haarface</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">haarface</span><span class=\"p\">);</span>\n\n            <span class=\"k\">const</span> <span class=\"kt\">double</span> <span class=\"n\">scale</span> <span class=\"p\">=</span> <span class=\"m\">0.9</span><span class=\"p\">;</span>\n            <span class=\"k\">const</span> <span class=\"kt\">double</span> <span class=\"n\">scaleFactor</span> <span class=\"p\">=</span> <span class=\"m\">1.139</span><span class=\"p\">;</span>\n            <span class=\"k\">const</span> <span class=\"kt\">int</span> <span class=\"n\">minNeighbors</span> <span class=\"p\">=</span> <span class=\"m\">1</span><span class=\"p\">;</span>\n\n            <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">Detected_image</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Round</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">/</span> <span class=\"n\">scale</span><span class=\"p\">),</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Round</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">/</span> <span class=\"n\">scale</span><span class=\"p\">)),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">))</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">))</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Resize</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">Detected_image</span><span class=\"p\">,</span> <span class=\"n\">Interpolation</span><span class=\"p\">.</span><span class=\"n\">Linear</span><span class=\"p\">);</span>\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">EqualizeHist</span><span class=\"p\">(</span><span class=\"n\">Detected_image</span><span class=\"p\">,</span> <span class=\"n\">Detected_image</span><span class=\"p\">);</span>\n                <span class=\"p\">}</span>\n                \n                <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">CvHaarClassifierCascade</span> <span class=\"n\">cascade</span> <span class=\"p\">=</span> <span class=\"n\">CvHaarClassifierCascade</span><span class=\"p\">.</span><span class=\"nf\">FromFile</span><span class=\"p\">(</span><span class=\"s\">\"../../haarcascade_frontalface_alt.xml\"</span><span class=\"p\">))</span>\n                <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">CvMemStorage</span> <span class=\"n\">storage</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMemStorage</span><span class=\"p\">())</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvAvgComp</span><span class=\"p\">&gt;</span> <span class=\"n\">faces</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">HaarDetectObjects</span><span class=\"p\">(</span><span class=\"n\">Detected_image</span><span class=\"p\">,</span> <span class=\"n\">cascade</span><span class=\"p\">,</span> <span class=\"n\">storage</span><span class=\"p\">,</span> <span class=\"n\">scaleFactor</span><span class=\"p\">,</span> <span class=\"n\">minNeighbors</span><span class=\"p\">,</span> <span class=\"n\">HaarDetectionType</span><span class=\"p\">.</span><span class=\"n\">ScaleImage</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"m\">90</span><span class=\"p\">,</span> <span class=\"m\">90</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">));</span>\n\n                    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">faces</span><span class=\"p\">.</span><span class=\"n\">Total</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"n\">CvRect</span> <span class=\"n\">r</span> <span class=\"p\">=</span> <span class=\"n\">faces</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">Value</span><span class=\"p\">.</span><span class=\"n\">Rect</span><span class=\"p\">;</span>\n                        <span class=\"n\">CvPoint</span> <span class=\"n\">center</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvPoint</span>\n                        <span class=\"p\">{</span>\n                            <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Round</span><span class=\"p\">((</span><span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">*</span> <span class=\"m\">0.5</span><span class=\"p\">)</span> <span class=\"p\">*</span> <span class=\"n\">scale</span><span class=\"p\">),</span>\n                            <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Round</span><span class=\"p\">((</span><span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">+</span> <span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">*</span> <span class=\"m\">0.5</span><span class=\"p\">)</span> <span class=\"p\">*</span> <span class=\"n\">scale</span><span class=\"p\">)</span>\n                        <span class=\"p\">};</span>\n                        <span class=\"kt\">int</span> <span class=\"n\">radius</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Round</span><span class=\"p\">((</span><span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">)</span> <span class=\"p\">*</span> <span class=\"m\">0.25</span> <span class=\"p\">*</span> <span class=\"n\">scale</span><span class=\"p\">);</span>\n                        <span class=\"n\">haarface</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">center</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Black</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n                <span class=\"k\">return</span> <span class=\"n\">haarface</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n       \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">haarface</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">haarface</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">haarface</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">haarface</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">haarface</code>는 원본을 복사한 이미지입니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">const</span> <span class=\"kt\">double</span> <span class=\"n\">scale</span> <span class=\"p\">=</span> <span class=\"m\">0.9</span><span class=\"p\">;</span>\n<span class=\"k\">const</span> <span class=\"kt\">double</span> <span class=\"n\">scaleFactor</span> <span class=\"p\">=</span> <span class=\"m\">1.139</span><span class=\"p\">;</span>\n<span class=\"k\">const</span> <span class=\"kt\">int</span> <span class=\"n\">minNeighbors</span> <span class=\"p\">=</span> <span class=\"m\">1</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">scale</code>은 검출되는 이미지의 비율입니다. <code class=\"highlighter-rouge\">scaleFactor</code>와 <code class=\"highlighter-rouge\">minNeighbors</code>의 값은 얼굴 검출시에 사용되는 상수입니다.</p>\n\n<p><code class=\"highlighter-rouge\">scaleFactor</code>는 <code class=\"highlighter-rouge\">1</code> 이상의 값을 사용합니다. <code class=\"highlighter-rouge\">minNeighbors</code> 또한 <code class=\"highlighter-rouge\">1</code> 이상의 값을 사용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">Detected_image</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Round</span><span class=\"p\">(</span><span class=\"n\">haarface</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">/</span> <span class=\"n\">scale</span><span class=\"p\">),</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Round</span><span class=\"p\">(</span><span class=\"n\">haarface</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">/</span> <span class=\"n\">scale</span><span class=\"p\">)),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">))</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>검출되는 이미지인 <code class=\"highlighter-rouge\">Detected_image</code>를 <code class=\"highlighter-rouge\">scale</code>의 비율에 맞게 재조정합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">haarface</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">))</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">haarface</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Resize</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">Detected_image</span><span class=\"p\">,</span> <span class=\"n\">Interpolation</span><span class=\"p\">.</span><span class=\"n\">Linear</span><span class=\"p\">);</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">EqualizeHist</span><span class=\"p\">(</span><span class=\"n\">Detected_image</span><span class=\"p\">,</span> <span class=\"n\">Detected_image</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n    </code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.CvtColor</code>와 <code class=\"highlighter-rouge\">Cv.Resize</code>를 통하여 <strong>이미지의 크기를 조정</strong>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.EqualizeHist(원본, 결과)</code>를 통하여 <code class=\"highlighter-rouge\">GrayScale</code> 이미지의 화상을 평탄화 시킵니다. 이 작업을 통하여 <strong>매우 어둡거나 매우 밝은 부분들이 일정하게 조정</strong>됩니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">CvHaarClassifierCascade</span> <span class=\"n\">cascade</span> <span class=\"p\">=</span> <span class=\"n\">CvHaarClassifierCascade</span><span class=\"p\">.</span><span class=\"nf\">FromFile</span><span class=\"p\">(</span><span class=\"s\">\"../../haarcascade_frontalface_alt.xml\"</span><span class=\"p\">))</span>\n<span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">CvMemStorage</span> <span class=\"n\">storage</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMemStorage</span><span class=\"p\">())</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">cascade</code>에 <code class=\"highlighter-rouge\">haarcascade_frontalface_alt.xml</code> 파일의 경로를 입력합니다. <code class=\"highlighter-rouge\">storage</code>를 선언하여 메모리 저장소를 생성합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvAvgComp</span><span class=\"p\">&gt;</span> <span class=\"n\">faces</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">HaarDetectObjects</span><span class=\"p\">(</span><span class=\"n\">Detected_image</span><span class=\"p\">,</span> <span class=\"n\">cascade</span><span class=\"p\">,</span> <span class=\"n\">storage</span><span class=\"p\">,</span> <span class=\"n\">scaleFactor</span><span class=\"p\">,</span> <span class=\"n\">minNeighbors</span><span class=\"p\">,</span> <span class=\"n\">HaarDetectionType</span><span class=\"p\">.</span><span class=\"n\">ScaleImage</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"m\">90</span><span class=\"p\">,</span> <span class=\"m\">90</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">));</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.HaarDetectObjects()</code>를 이용하여 <code class=\"highlighter-rouge\">faces</code>에 검출된 얼굴의 좌표를 저장합니다. <code class=\"highlighter-rouge\">Cv.HaarDetectObjects(탐지이미지, 객체 감지 파일, 메모리 저장소, 스케일팩터, 이웃수, 작동 모드, 최소 크기, 최대 크기)</code>입니다.</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">Detected_image</code> : 탐지할 이미지입니다.</li>\n  <li><code class=\"highlighter-rouge\">cascade</code> : 객체를 감지할 파일의 경로가 저장된 <code class=\"highlighter-rouge\">HaarClassifierCascade</code>입니다.</li>\n  <li><code class=\"highlighter-rouge\">storage</code> : 매모리가 저장될 저장소입니다.</li>\n  <li><code class=\"highlighter-rouge\">scaleFactor</code> : 이미지 크기가 <strong>감소되는 양</strong>입니다.</li>\n  <li><code class=\"highlighter-rouge\">minNeighbors</code> : 검출 시 유지해야하는 인접한 얼굴의 수입니다. <strong>0일 경우 중복해서 찾거나, 너무 높을 경우 가까운 얼굴은 찾지 못합니다.</strong></li>\n  <li>\n    <p><code class=\"highlighter-rouge\">HaarDetectionType.*</code> : <strong>작동 모드</strong>입니다.</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">HaarDetectionType.Zero</code> : <strong>최적화를 수행하지 않습니다.</strong></li>\n      <li><code class=\"highlighter-rouge\">HaarDetectionType.DoCannyPruning</code> : Canny Edge detector를 사용하여 <strong>가장자리가 너무 적거나 많은 경우 탐색하지 않습니다.</strong></li>\n      <li><code class=\"highlighter-rouge\">HaarDetectionType.ScaleImage</code> : 확대/축소를 하지 않고 <strong>downscale을 통하여 cascade에서 수행합니다.</strong></li>\n      <li><code class=\"highlighter-rouge\">HaarDetectionType.FindBiggestObject</code> : <strong>가장 큰 객체 1명만 검출합니다.</strong></li>\n      <li><code class=\"highlighter-rouge\">HaarDetectionType.DoRoughSearch</code> : 객체를 충분히 찾으면 <strong>작은 크기의 객체는 검출하지 않습니다.</strong></li>\n    </ul>\n  </li>\n  <li><code class=\"highlighter-rouge\">MinSize</code> : 검출할 얼굴의 <strong>최소 크기를 설정</strong>합니다.</li>\n  <li><code class=\"highlighter-rouge\">MaxSize</code> : 검출할 얼굴의 <strong>최대 크기를 설정</strong>합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">CvSize(0, 0)</code>으로 설정 시 <strong>제한 크기를 설정하지 않고 찾습니다.</strong></li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">faces</span><span class=\"p\">.</span><span class=\"n\">Total</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">CvRect</span> <span class=\"n\">r</span> <span class=\"p\">=</span> <span class=\"n\">faces</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">Value</span><span class=\"p\">.</span><span class=\"n\">Rect</span><span class=\"p\">;</span>\n    <span class=\"n\">CvPoint</span> <span class=\"n\">center</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvPoint</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Round</span><span class=\"p\">((</span><span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">*</span> <span class=\"m\">0.5</span><span class=\"p\">)</span> <span class=\"p\">*</span> <span class=\"n\">scale</span><span class=\"p\">),</span>\n        <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Round</span><span class=\"p\">((</span><span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">+</span> <span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">*</span> <span class=\"m\">0.5</span><span class=\"p\">)</span> <span class=\"p\">*</span> <span class=\"n\">scale</span><span class=\"p\">)</span>\n    <span class=\"p\">};</span>\n    <span class=\"kt\">int</span> <span class=\"n\">radius</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Round</span><span class=\"p\">((</span><span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"n\">r</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">)</span> <span class=\"p\">*</span> <span class=\"m\">0.25</span> <span class=\"p\">*</span> <span class=\"n\">scale</span><span class=\"p\">);</span>\n    <span class=\"n\">haarface</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">center</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Black</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">for</code>문을 이용하여 검출된 얼굴의 위치에 <code class=\"highlighter-rouge\">Circle</code>을 그립니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch29/2.png\"><img src=\"/assets/images/C/opencv/ch29/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 27강 - 난수",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-27/",
      "date"     : "2017-12-26 00:00:00 +0900",
  "content"   : "<h3 id=\"난수-random\">난수 (Random)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">특정한 순서나 규칙을 가지지 않은 무작위의 숫자</code>를 발생시키는 함수입니다. <strong>임의의 숫자</strong>나 <strong>확률</strong>이 필요한 알고리즘이나 코드에 사용합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"next\">Next()</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Random</span> <span class=\"n\">rand</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Random</span><span class=\"p\">();</span>\n<span class=\"kt\">int</span> <span class=\"n\">number</span> <span class=\"p\">=</span> <span class=\"n\">rand</span><span class=\"p\">.</span><span class=\"nf\">Next</span><span class=\"p\">();</span>\n<span class=\"n\">textBox1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Random rand = new Random();</code>의 생성자를 통하여 <code class=\"highlighter-rouge\">난수를 발생</code>시킬 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">rand.Next()</code>를 이용하여 <strong>음수가 아닌 임의의 정수</strong>를 반환합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"nextn\">Next(n)</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Random</span> <span class=\"n\">rand</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Random</span><span class=\"p\">();</span>\n<span class=\"kt\">int</span> <span class=\"n\">number</span> <span class=\"p\">=</span> <span class=\"n\">rand</span><span class=\"p\">.</span><span class=\"nf\">Next</span><span class=\"p\">(</span><span class=\"m\">10</span><span class=\"p\">);</span>\n<span class=\"n\">textBox1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">rand.Next(n)</code>을 이용하여 <strong>n보다 작은 음수가 아닌 임의의 정수</strong>를 반환합니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">0</code>~<code class=\"highlighter-rouge\">n-1</code> 사이의 값을 반환합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"nextn-m\">Next(n, m)</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Random</span> <span class=\"n\">rand</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Random</span><span class=\"p\">();</span>\n<span class=\"kt\">int</span> <span class=\"n\">number</span> <span class=\"p\">=</span> <span class=\"n\">rand</span><span class=\"p\">.</span><span class=\"nf\">Next</span><span class=\"p\">(</span><span class=\"m\">6</span><span class=\"p\">,</span> <span class=\"m\">12</span><span class=\"p\">);</span>\n<span class=\"n\">textBox1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">rand.Next(n, m)</code>을 이용하여 <strong>n보다 같거나 크며 m보다 작은 음수가 아닌 임의의 정수</strong>를 반환합니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">n</code>~<code class=\"highlighter-rouge\">m-1</code> 사이의 값을 반환합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"nextdouble\">NextDouble()</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Random</span> <span class=\"n\">rand</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Random</span><span class=\"p\">();</span>\n<span class=\"kt\">double</span> <span class=\"n\">number</span> <span class=\"p\">=</span> <span class=\"n\">rand</span><span class=\"p\">.</span><span class=\"nf\">NextDouble</span><span class=\"p\">();</span>\n<span class=\"n\">textBox1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">rand.NextDouble()</code>을 이용하여 <strong>0.0과 1.0사이의 임의의 부동 소수점 난수</strong>를 반환합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"nextbytesarray\">NextBytes(array)</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Random</span> <span class=\"n\">rand</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Random</span><span class=\"p\">();</span>\n<span class=\"n\">Byte</span><span class=\"p\">[]</span> <span class=\"n\">array</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">Byte</span><span class=\"p\">[</span><span class=\"m\">10</span><span class=\"p\">];</span>\n<span class=\"n\">rand</span><span class=\"p\">.</span><span class=\"nf\">NextBytes</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">);</span>\n\n<span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">=</span><span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">&lt;</span><span class=\"m\">10</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span> \n    <span class=\"n\">textBox1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">+=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">+</span><span class=\"m\">1</span> <span class=\"p\">+</span> <span class=\"s\">\"회 : \"</span> <span class=\"p\">+</span> <span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"p\">+</span> <span class=\"n\">Environment</span><span class=\"p\">.</span><span class=\"n\">NewLine</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><a href=\"/assets/images/C/ch27/1.png\"><img src=\"/assets/images/C/ch27/1.png\" alt=\"1\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">rand.NextBytes(array)</code>을 이용하여 <code class=\"highlighter-rouge\">byte형식의 배열에 난수</code>를 채웁니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">Textbox</code> 또한 <code class=\"highlighter-rouge\">+=</code> 연산이 가능하여 <strong>누적적으로 입력이 가능</strong>합니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">Environment.NewLine</code>는 <code class=\"highlighter-rouge\">Textbox</code>의 <strong>줄 바꿈 명령어</strong>입니다.</li>\n</ul>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 26강 - 오버플로 &amp; 언더플로",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-26/",
      "date"     : "2017-12-23 00:00:00 +0900",
  "content"   : "<h3 id=\"오버플로-overflow--언더플로-underflow\">오버플로 (Overflow) &amp; 언더플로 (Underflow)</h3>\n<hr />\n<p>데이터 형식의 범위 밖의 연산이 발생하였을 때 <code class=\"highlighter-rouge\">범위보다 큰 수나 작은 수</code>가 입력되어 <code class=\"highlighter-rouge\">값이 달라지는 현상</code>입니다. 산술적인 연산을 해야하는 프로그램에서 <strong>오버플로(오버플로우)</strong>나 <strong>언더플로(언더플로우)</strong>가 발생하면 결과값이 달라지는 오류가 발생합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">데이터 형식 범위 알아보기</code> : <a href=\"https://076923.github.io/posts/C-9/\">9강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"오버플로-overflow\">오버플로 (Overflow)</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">flow</span> <span class=\"p\">=</span> <span class=\"m\">2147483647</span><span class=\"p\">;</span>\n    <span class=\"n\">textBox1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">(</span><span class=\"n\">flow</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><a href=\"/assets/images/C/ch26/1.png\"><img src=\"/assets/images/C/ch26/1.png\" alt=\"1\" /></a></p>\n\n<p>데이터 형식의 범위를 넘어가는 값일 경우 <code class=\"highlighter-rouge\">오버플로</code>가 발생하여 <strong>제일 작은 음수 값</strong>으로 넘어가게됩니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"언더플로-underflow\">언더플로 (Underflow)</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">flow</span> <span class=\"p\">=</span> <span class=\"p\">-</span><span class=\"m\">2147483648</span><span class=\"p\">;</span>\n    <span class=\"n\">textBox1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">(</span><span class=\"n\">flow</span> <span class=\"p\">-</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><a href=\"/assets/images/C/ch26/2.png\"><img src=\"/assets/images/C/ch26/2.png\" alt=\"2\" /></a></p>\n\n<p>데이터 형식의 범위를 넘어가는 값일 경우 <code class=\"highlighter-rouge\">언더플로</code>가 발생하여 <strong>제일 큰 양수 값</strong>으로 넘어가게 됩니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"플로-해결\">플로 해결</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">오버플로</code>나 <code class=\"highlighter-rouge\">언더플로</code>가 발생 시, 명시적으로 알기 어렵습니다. 변수를 <strong>명시적으로 범위가 더 큰 변수로 변경시켜주거나 산술 연산시 빌드 설정을 통하여</strong> 명시적으로 알 수 있습니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/ch26/3.png\"><img src=\"/assets/images/C/ch26/3.png\" alt=\"3\" /></a>\n상단의 메뉴에서 <code class=\"highlighter-rouge\">프로젝트</code>→<code class=\"highlighter-rouge\">프로젝트 속성</code>으로 들어갑니다.</p>\n\n<p><a href=\"/assets/images/C/ch26/4.png\"><img src=\"/assets/images/C/ch26/4.png\" alt=\"4\" /></a>\n왼쪽의 탭 메뉴 중 <code class=\"highlighter-rouge\">빌드</code>를 선택하고 가장 아래의 <code class=\"highlighter-rouge\">고급</code>버튼을 클릭합니다.</p>\n\n<p><a href=\"/assets/images/C/ch26/5.png\"><img src=\"/assets/images/C/ch26/5.png\" alt=\"5\" /></a>\n<code class=\"highlighter-rouge\">고급 빌드 설정</code>에서 <code class=\"highlighter-rouge\">산술 연산 오버플로/언더플로 확인(K)</code>에 체크한 후 확인 버튼을 클릭합니다.</p>\n\n<p><a href=\"/assets/images/C/ch26/6.png\"><img src=\"/assets/images/C/ch26/6.png\" alt=\"6\" /></a>\n<code class=\"highlighter-rouge\">오버플로</code>나 <code class=\"highlighter-rouge\">언더플로</code> 발생 시 <strong>오류 메세지를 통하여 플로를 확인</strong>할 수 있습니다.</p>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 25강 - 메세지 박스",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-25/",
      "date"     : "2017-12-13 00:00:00 +0900",
  "content"   : "<h3 id=\"메세지-박스-messagebox\">메세지 박스 (MessageBox)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">텍스트</code>, <code class=\"highlighter-rouge\">단추</code> 및 <code class=\"highlighter-rouge\">기호</code>를 알리고 사용자에게 지시를 포함 하는 <strong>메세지 박스를 표시</strong>할 수 있습니다. 단추의 반환에 따라 활용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"메세지-박스-사용\">메세지 박스 사용</h2>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">MessageBox</span><span class=\"p\">.</span><span class=\"nf\">Show</span><span class=\"p\">(</span><span class=\"s\">\"TEXT\"</span><span class=\"p\">,</span> <span class=\"s\">\"CAPTION\"</span><span class=\"p\">,</span> <span class=\"n\">MessageBoxButtons</span><span class=\"p\">.*,</span> <span class=\"n\">MessageBoxIcon</span><span class=\"p\">.*,</span> <span class=\"n\">MessageBoxDefaultButton</span><span class=\"p\">.*,</span> <span class=\"n\">MessageBoxOptions</span><span class=\"p\">.*);</span></code></pre></figure>\n\n<ol>\n  <li><code class=\"highlighter-rouge\">TEXT</code> : 메세지 박스의 내용을 입력합니다.</li>\n  <li><code class=\"highlighter-rouge\">CAPTION</code> : 메세지 박스의 제목을 입력합니다.</li>\n  <li><code class=\"highlighter-rouge\">MessageBoxButtons.*</code> : 메세지 박스의 단추(버튼)를 설정합니다.</li>\n  <li><code class=\"highlighter-rouge\">MessageBoxIcon.*</code> : 메세지 박스의 아이콘을 설정합니다.</li>\n  <li><code class=\"highlighter-rouge\">MessageBoxDefaultButton.*</code> : 메세지 박스의 단추(버튼)의 초기 위치를 설정합니다.</li>\n  <li><code class=\"highlighter-rouge\">MessageBoxOption.*</code> : 메세지 박스의 세부 옵션을 설정합니다.</li>\n</ol>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 메세지 박스는 <code class=\"highlighter-rouge\">TEXT</code>만을 포함해도 사용이 가능하며, 그 이외의 설정사항은 <strong>선택사항입니다.</strong></li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"messageboxbuttons-멤버\">MessageBoxButtons 멤버</h2>\n\n<ol>\n  <li>AbortRetryIgnore : <code class=\"highlighter-rouge\">중단</code>, <code class=\"highlighter-rouge\">다시 시도</code>, <code class=\"highlighter-rouge\">무시</code> 단추</li>\n  <li>OK : <code class=\"highlighter-rouge\">확인</code> 단추</li>\n  <li>OKCancel : <code class=\"highlighter-rouge\">확인</code>, <code class=\"highlighter-rouge\">취소</code> 단추</li>\n  <li>RetryCancel : <code class=\"highlighter-rouge\">다시 시도</code>, <code class=\"highlighter-rouge\">취소</code> 단추</li>\n  <li>YesNo : <code class=\"highlighter-rouge\">예</code>, <code class=\"highlighter-rouge\">아니요</code> 단추</li>\n  <li>YesNoCancel : <code class=\"highlighter-rouge\">예</code>, <code class=\"highlighter-rouge\">아니요</code>, <code class=\"highlighter-rouge\">취소</code> 단추</li>\n</ol>\n\n<p><br /></p>\n\n<h2 id=\"messageboxicon-멤버\">MessageBoxIcon 멤버</h2>\n\n<ol>\n  <li>Asterisk : 원 안에 i 기호 아이콘, <code class=\"highlighter-rouge\">정보 아이콘</code></li>\n  <li>Error : 붉은 원 안에 x 기호 아이콘, <code class=\"highlighter-rouge\">경고 아이콘</code></li>\n  <li>Exclamation : 노란 삼각형 안에 ! 기호 아이콘, <code class=\"highlighter-rouge\">주의 아이콘</code></li>\n  <li>Hand : 붉은 원 안에 x 기호 아이콘, <code class=\"highlighter-rouge\">금지 아이콘</code></li>\n  <li>Information : 푸른 원 안에 i 기호 아이콘, <code class=\"highlighter-rouge\">정보 아이콘</code></li>\n  <li>None : 아이콘 없음</li>\n  <li>Question : 원 안에 ? 기호 아이콘, <code class=\"highlighter-rouge\">질문 아이콘</code></li>\n  <li>Stop : 붉은 원 안에 x 기호 아이콘, <code class=\"highlighter-rouge\">금지 아이콘</code></li>\n  <li>Warning : 노란 삼각형 안에 ! 기호 아이콘, <code class=\"highlighter-rouge\">주의 아이콘</code></li>\n</ol>\n\n<p><br /></p>\n\n<p>Tip : <code class=\"highlighter-rouge\">[Asterisk = Information]</code>, <code class=\"highlighter-rouge\">[Error = Hand = Stop]</code>, <code class=\"highlighter-rouge\">[Exclamation = Warning]</code></p>\n\n<p><br /></p>\n\n<h2 id=\"messageboxdefaultbutton-멤버\">MessageBoxDefaultButton 멤버</h2>\n\n<ol>\n  <li>Button1 : <code class=\"highlighter-rouge\">첫 번째 단추</code>를 기본 단추로 설정합니다.</li>\n  <li>Button2 : <code class=\"highlighter-rouge\">두 번째 단추</code>를 기본 단추로 설정합니다.</li>\n  <li>Button3 : <code class=\"highlighter-rouge\">세 번째 단추</code>를 기본 단추로 설정합니다.</li>\n</ol>\n\n<p><br /></p>\n\n<h2 id=\"messageboxoption-멤버\">MessageBoxOption 멤버</h2>\n\n<ol>\n  <li>DefaultDesktopOnly : 메세지 박스를 <code class=\"highlighter-rouge\">활성화된 데스크톱</code>에 표시합니다.</li>\n  <li>RightAlign : 메세지 박스의 <code class=\"highlighter-rouge\">TEXT를 오른쪽 정렬</code>합니다.</li>\n  <li>RtlReading : 메세지 박스의 <code class=\"highlighter-rouge\">순서를 왼쪽으로 변경</code>합니다.</li>\n  <li>ServiceNotification : 메세지 박스를 <code class=\"highlighter-rouge\">활성화된 데스크톱</code>에 표시합니다.</li>\n</ol>\n\n<p><br /></p>\n\n<h2 id=\"메세지-박스-응용\">메세지 박스 응용</h2>\n<hr />\n<p>메세지 박스에서 받아온 단추들을 이용하여 작업을 진행할 수 있습니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">var</span> <span class=\"n\">result</span> <span class=\"p\">=</span> <span class=\"n\">MessageBox</span><span class=\"p\">.</span><span class=\"nf\">Show</span><span class=\"p\">(</span><span class=\"s\">\"TEXT\"</span><span class=\"p\">,</span> <span class=\"s\">\"CAPTION\"</span><span class=\"p\">,</span> <span class=\"n\">MessageBoxButtons</span><span class=\"p\">.*,</span> <span class=\"n\">MessageBoxIcon</span><span class=\"p\">.*,</span> <span class=\"n\">MessageBoxDefaultButton</span><span class=\"p\">.*,</span> <span class=\"n\">MessageBoxOptions</span><span class=\"p\">.*);</span>\n\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">result</span> <span class=\"p\">==</span> <span class=\"n\">DialogResult</span><span class=\"p\">.*)</span>\n<span class=\"p\">{</span>\n    <span class=\"c1\">// 작업 내용</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">MessageBox</code>의 단추를 <code class=\"highlighter-rouge\">result</code>에 저장시켜 <code class=\"highlighter-rouge\">DialogResult</code>값을 비교합니다. DialogResult의 멤버는 단추 이름과 같습니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"dialogresult-멤버\">DialogResult 멤버</h2>\n\n<ol>\n  <li>None : 메세지 박스가 <code class=\"highlighter-rouge\">실행 중</code></li>\n  <li>OK : <code class=\"highlighter-rouge\">확인</code> 단추</li>\n  <li>Cancel : <code class=\"highlighter-rouge\">취소</code> 단추</li>\n  <li>Abort : <code class=\"highlighter-rouge\">중단</code> 단추</li>\n  <li>Retry : <code class=\"highlighter-rouge\">다시 시도</code> 단추</li>\n  <li>Ignore : <code class=\"highlighter-rouge\">무시</code> 단추</li>\n  <li>Yes : <code class=\"highlighter-rouge\">예</code> 단추</li>\n  <li>No : <code class=\"highlighter-rouge\">아니요</code> 단추</li>\n</ol>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 24강 - 수학 함수",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-24/",
      "date"     : "2017-12-05 00:00:00 +0900",
  "content"   : "<h3 id=\"수학-함수-systemmath\">수학 함수 (System.Math)</h3>\n<hr />\n<p>삼각, 로그 및 기타 일반 수학 함수에 대한 상수 및 정적 메서드를 제공하는 함수입니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"소수점이-있는-나눗셈\">소수점이 있는 나눗셈</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">double</span> <span class=\"n\">a</span> <span class=\"p\">=</span> <span class=\"m\">1</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span> <span class=\"n\">a</span> <span class=\"p\">=</span> <span class=\"m\">1.0</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span> <span class=\"n\">a</span> <span class=\"p\">=</span> <span class=\"m\">1</span> <span class=\"p\">/</span> <span class=\"m\">2.0</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span> <span class=\"n\">a</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">double</span><span class=\"p\">)</span><span class=\"m\">1</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span> <span class=\"n\">a</span> <span class=\"p\">=</span> <span class=\"m\">1</span> <span class=\"p\">/</span> <span class=\"p\">(</span><span class=\"kt\">double</span><span class=\"p\">)</span><span class=\"m\">2</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">a / b</code> : 정수 / 정수일 경우 소수점 이하는 표현하지 않습니다. 1 / 2의 경우 0을 반환합니다.</p>\n\n<ul>\n  <li>Tip : a 또는 b에서 double형태라는 것을 명시적으로 표현해야합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"나머지\">나머지</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">IEEERemainder</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">);</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">DivRem</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">div</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">IEEERemainder(a, b)</code> : a를 b로 나눴을 때 절대값을 취한 나머지 값이 적은 쪽으로 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">DivRem(a, b, out div)</code> : a를 b로 나눈 나머지를 반환합니다. out 변수로 반환합니다.</p>\n\n<ul>\n  <li>Tip : IEEERemainder()에서 a=13, b=7일 경우 나머지가 6이 아닌 -1입니다. (나머지 6의 몫 1, 나머지-1의 몫 2)</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"제곱제곱근\">제곱/제곱근</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Pow</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">);</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Sqrt</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Pow(x, y)</code> : x의 y승을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Sqrt(x)</code> : x의 제곱근을 반환합니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"최대최소\">최대/최소</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Max</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">);</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Min</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Max(x, y)</code> : x와 y 중 더 큰 값을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Min(x, y)</code> : x와 y 중 더 작은 값을 반환합니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"비교\">비교</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Equals</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">);</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">ReferenceEquals</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Equals(x, y)</code> : x와 y가 동일한지 판단합니다.</p>\n\n<p><code class=\"highlighter-rouge\">ReferenceEquals(x, y)</code> : x와 y의 인스턴스가 동일한지 판단합니다.</p>\n\n<ul>\n  <li>Tip : 반환값은 True, False 입니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"log-함수\">Log 함수</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Log</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">);</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Log10</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Log(x, y)</code> : y를 밑으로 하는 x에 대한 로그값을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Log(x)</code> : e를 밑으로 하는 x에 대한 로그값을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Log10(x)</code> : 10을 밑으로 하는 x에 대한 로그값을 반환합니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"삼각함수\">삼각함수</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Sin</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span> \n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Cos</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Tan</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Asin</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Acos</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Atan</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Atan2</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Sin(x)</code> : 라디안 x 각도의 sin값을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cos(x)</code> : 라디안 x 각도의 cos값을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Tan(x)</code> : 라디안 x 각도의 tan값을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Asin(x)</code> : sin을 적용했을 때 x가 나오는 라디안 각도 값을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Acos(x)</code> : cos을 적용했을 때 x가 나오는 라디안 각도 값을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Atan(x)</code> : tan을 적용했을 때 x가 나오는 라디안 각도 값을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Atan2(x)</code> : tan을 적용햇을 때 (x, y)가 나오는 라디안 각도 값을 반환합니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"하이퍼볼릭-삼각함수\">하이퍼볼릭 삼각함수</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Sinh</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span> \n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Cosh</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Tanh</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Sinh(x)</code> : 라디안 x의 하이퍼볼릭 sin값을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cosh(x)</code> : 라디안 x의 하이퍼볼릭 cos값을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Tanh(x)</code> : 라디안 x의 하이퍼볼릭 tan값을 반환합니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"기타\">기타</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Sign</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Round</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">);</span> \n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Ceiling</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Floor</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Truncate</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Abs</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Exp</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Sign(x)</code> : x에 대해 부호를 반환합니다. 양수의 경우 1, 0의 경우 0, 음수의 경우 -1을 반환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Round(x)</code> : x에 대해 a 자릿수에서 반올림합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Ceiling(x)</code> : x에 대해 올림합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Floor(x)</code> : x에 대해 내림합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Truncate(x)</code> : x에 대해 소수점을 제거합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Abs(x)</code> : x에 대해 절대값을 취합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Math.Exp(x)</code> : 자연로그 e를 x만큼 거듭제곱합니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"상수\">상수</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"n\">E</span><span class=\"p\">;</span>\n<span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"n\">PI</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">E</code> : 자연로그 e (2.718281…)</p>\n\n<p><code class=\"highlighter-rouge\">PI</code> :  원주율 π (3.141592…)</p>\n\n"
    } ,
  
    {
      "title"    : "C# Dynamixel 강좌 : 제 3강 - Dynamixel Serial 통신",
      "category" : "",
      "tags"     : "C#-Dynamixel",
      "url"      : "/posts/C-dynamixel-3/",
      "date"     : "2017-12-02 00:00:00 +0900",
  "content"   : "<h3 id=\"dynamixel--c\">Dynamixel &amp; C#</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">Dynamixel</code>과 <code class=\"highlighter-rouge\">C#</code>에서 <code class=\"highlighter-rouge\">Serial 통신</code>하여 액추에이터를 제어할 수 있습니다.</p>\n\n<p><br /></p>\n<h3 id=\"main\">Main</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.IO.Ports</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">Dynamixel</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">static</span> <span class=\"n\">SerialPort</span> <span class=\"n\">serial</span><span class=\"p\">;</span>\n        \n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">try</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">serial</span> <span class=\"p\">==</span> <span class=\"k\">null</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">serial</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">SerialPort</span><span class=\"p\">(</span><span class=\"s\">\"COM10\"</span><span class=\"p\">,</span> <span class=\"m\">1000000</span><span class=\"p\">);</span>\n                    <span class=\"n\">serial</span><span class=\"p\">.</span><span class=\"nf\">Open</span><span class=\"p\">();</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">catch</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">MessageBox</span><span class=\"p\">.</span><span class=\"nf\">Show</span><span class=\"p\">(</span><span class=\"s\">\"Serial Port가 없습니다.\"</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>     \n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">private</span> <span class=\"k\">static</span> <span class=\"k\">void</span> <span class=\"nf\">Dynamixel</span><span class=\"p\">(</span><span class=\"kt\">byte</span> <span class=\"n\">ID</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"kt\">byte</span> <span class=\"n\">speed</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"kt\">byte</span> <span class=\"n\">length</span> <span class=\"p\">=</span> <span class=\"m\">7</span><span class=\"p\">;</span>\n            \n            <span class=\"kt\">byte</span> <span class=\"n\">pos_l</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">byte</span><span class=\"p\">)(</span><span class=\"n\">position</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xff</span><span class=\"p\">);</span>\n            <span class=\"kt\">byte</span> <span class=\"n\">pos_h</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">byte</span><span class=\"p\">)((</span><span class=\"n\">position</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xff00</span><span class=\"p\">)</span> <span class=\"p\">&gt;&gt;</span> <span class=\"m\">8</span><span class=\"p\">);</span>\n\n            <span class=\"kt\">byte</span> <span class=\"n\">speed_l</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">byte</span><span class=\"p\">)(</span><span class=\"n\">speed</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xff</span><span class=\"p\">);</span>\n            <span class=\"kt\">byte</span> <span class=\"n\">speed_h</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">byte</span><span class=\"p\">)((</span><span class=\"n\">speed</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xff00</span><span class=\"p\">)</span> <span class=\"p\">&gt;&gt;</span> <span class=\"m\">8</span><span class=\"p\">);</span>\n\n            <span class=\"kt\">byte</span> <span class=\"n\">checkSum</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">byte</span><span class=\"p\">)(~((</span><span class=\"n\">ID</span> <span class=\"p\">+</span> <span class=\"n\">length</span> <span class=\"p\">+</span> <span class=\"m\">0x03</span> <span class=\"p\">+</span> <span class=\"m\">0x1E</span> <span class=\"p\">+</span> <span class=\"n\">pos_h</span> <span class=\"p\">+</span> <span class=\"n\">pos_l</span> <span class=\"p\">+</span> <span class=\"n\">speed_h</span> <span class=\"p\">+</span> <span class=\"n\">speed_l</span><span class=\"p\">)</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xff</span><span class=\"p\">));</span>\n            <span class=\"kt\">byte</span><span class=\"p\">[]</span> <span class=\"n\">buffer</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"m\">0xFF</span><span class=\"p\">,</span> <span class=\"m\">0xFF</span><span class=\"p\">,</span> <span class=\"n\">ID</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"p\">,</span> <span class=\"m\">0x03</span><span class=\"p\">,</span> <span class=\"m\">0x1E</span><span class=\"p\">,</span> <span class=\"n\">pos_l</span><span class=\"p\">,</span> <span class=\"n\">pos_h</span><span class=\"p\">,</span> <span class=\"n\">speed_l</span><span class=\"p\">,</span> <span class=\"n\">speed_h</span><span class=\"p\">,</span> <span class=\"n\">checkSum</span> <span class=\"p\">};</span>\n            <span class=\"n\">serial</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">buffer</span><span class=\"p\">.</span><span class=\"n\">Length</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System.IO.Ports</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Serial 통신</code>을 위하여 <code class=\"highlighter-rouge\">namespace</code>에 <code class=\"highlighter-rouge\">IO.Ports</code>를 선언합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">static</span> <span class=\"n\">SerialPort</span> <span class=\"n\">serial</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Dynamixel</code>과의 통신을 위하여 <code class=\"highlighter-rouge\">serial</code>이라는 변수를 선언합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">try</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">serial</span> <span class=\"p\">==</span> <span class=\"k\">null</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">serial</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">SerialPort</span><span class=\"p\">(</span><span class=\"s\">\"COM10\"</span><span class=\"p\">,</span> <span class=\"m\">1000000</span><span class=\"p\">);</span>\n            <span class=\"n\">serial</span><span class=\"p\">.</span><span class=\"nf\">Open</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">catch</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">MessageBox</span><span class=\"p\">.</span><span class=\"nf\">Show</span><span class=\"p\">(</span><span class=\"s\">\"Serial 포트가 없습니다.\"</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>     \n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Form1</code> 로드 시 <code class=\"highlighter-rouge\">serial</code>의 포트를 설정합니다. <code class=\"highlighter-rouge\">Dynamixel Wizard</code> 또는 <code class=\"highlighter-rouge\">장치관리자</code>에서 <strong>포트 번호를 확인할 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">static</span> <span class=\"k\">void</span> <span class=\"nf\">Dynamixel</span><span class=\"p\">(</span><span class=\"kt\">byte</span> <span class=\"n\">ID</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"kt\">byte</span> <span class=\"n\">speed</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"kt\">byte</span> <span class=\"n\">length</span> <span class=\"p\">=</span> <span class=\"m\">7</span><span class=\"p\">;</span>\n    \n    <span class=\"kt\">byte</span> <span class=\"n\">pos_l</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">byte</span><span class=\"p\">)(</span><span class=\"n\">position</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xff</span><span class=\"p\">);</span>\n    <span class=\"kt\">byte</span> <span class=\"n\">pos_h</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">byte</span><span class=\"p\">)((</span><span class=\"n\">position</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xff00</span><span class=\"p\">)</span> <span class=\"p\">&gt;&gt;</span> <span class=\"m\">8</span><span class=\"p\">);</span>\n\n    <span class=\"kt\">byte</span> <span class=\"n\">speed_l</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">byte</span><span class=\"p\">)(</span><span class=\"n\">speed</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xff</span><span class=\"p\">);</span>\n    <span class=\"kt\">byte</span> <span class=\"n\">speed_h</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">byte</span><span class=\"p\">)((</span><span class=\"n\">speed</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xff00</span><span class=\"p\">)</span> <span class=\"p\">&gt;&gt;</span> <span class=\"m\">8</span><span class=\"p\">);</span>\n\n    <span class=\"kt\">byte</span> <span class=\"n\">checkSum</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"kt\">byte</span><span class=\"p\">)(~((</span><span class=\"n\">ID</span> <span class=\"p\">+</span> <span class=\"n\">length</span> <span class=\"p\">+</span> <span class=\"m\">0x03</span> <span class=\"p\">+</span> <span class=\"m\">0x1E</span> <span class=\"p\">+</span> <span class=\"n\">pos_h</span> <span class=\"p\">+</span> <span class=\"n\">pos_l</span> <span class=\"p\">+</span> <span class=\"n\">speed_h</span> <span class=\"p\">+</span> <span class=\"n\">speed_l</span><span class=\"p\">)</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xff</span><span class=\"p\">));</span>\n    <span class=\"kt\">byte</span><span class=\"p\">[]</span> <span class=\"n\">buffer</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"m\">0xFF</span><span class=\"p\">,</span> <span class=\"m\">0xFF</span><span class=\"p\">,</span> <span class=\"n\">ID</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"p\">,</span> <span class=\"m\">0x03</span><span class=\"p\">,</span> <span class=\"m\">0x1E</span><span class=\"p\">,</span> <span class=\"n\">pos_l</span><span class=\"p\">,</span> <span class=\"n\">pos_h</span><span class=\"p\">,</span> <span class=\"n\">speed_l</span><span class=\"p\">,</span> <span class=\"n\">speed_h</span><span class=\"p\">,</span> <span class=\"n\">checkSum</span> <span class=\"p\">};</span>\n    <span class=\"n\">serial</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">buffer</span><span class=\"p\">.</span><span class=\"n\">Length</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>위의 코드를 활용하여 <code class=\"highlighter-rouge\">Dynamixel</code>의 <code class=\"highlighter-rouge\">목표 위치</code>와 <code class=\"highlighter-rouge\">속도</code>를 제어할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"nf\">Dynamixel</span><span class=\"p\">(</span><span class=\"n\">ID</span><span class=\"p\">,</span> <span class=\"n\">POSITION</span><span class=\"p\">,</span> <span class=\"n\">SPEED</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>Dynamixel이 작동할 부분에 위의 <code class=\"highlighter-rouge\">사용자 정의 함수</code>를 이용해 제어할 수 있습니다. <code class=\"highlighter-rouge\">POSITION</code>은 <code class=\"highlighter-rouge\">0~2047</code> 또는 <code class=\"highlighter-rouge\">0~4095</code> 등의 범위를 가지며, <code class=\"highlighter-rouge\">SPEED</code>는 <code class=\"highlighter-rouge\">0~2047</code> 등의 값을 가집니다. 추가적인 제어가 필요하다면 <code class=\"highlighter-rouge\">checkSum</code>과 <code class=\"highlighter-rouge\">buffer</code>를 수정하여 제어가 가능합니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">Dynamixel</code>의 종류마다 <code class=\"highlighter-rouge\">POSITION</code>과 <code class=\"highlighter-rouge\">SPEED</code> 등의 값이 다릅니다. <code class=\"highlighter-rouge\">ROBOTIS E-Manual</code>을 통해 값을 확인이 가능합니다.</li>\n</ul>\n\n<p><br />\n<code class=\"highlighter-rouge\">ROBOTIS e-Manual</code> : <a href=\"http://support.robotis.com/ko/\">바로가기</a></p>\n\n"
    } ,
  
    {
      "title"    : "C# Dynamixel 강좌 : 제 2강 - Dynamixel 설정",
      "category" : "",
      "tags"     : "C#-Dynamixel",
      "url"      : "/posts/C-dynamixel-2/",
      "date"     : "2017-12-02 00:00:00 +0900",
  "content"   : "<h3 id=\"dynamixel-setting\">Dynamixel Setting</h3>\n<hr />\n<p><a href=\"/assets/images/C/dynamixel/ch2/1.PNG\"><img src=\"/assets/images/C/dynamixel/ch2/1.PNG\" alt=\"1\" /></a> \n<code class=\"highlighter-rouge\">Dynamixel</code>을 설정하기 위해서 로보티즈의 로봇 전용 소프트웨어 <code class=\"highlighter-rouge\">RoboPlus</code> 프로그램을 설치합니다. 설치 후, <code class=\"highlighter-rouge\">전문가</code>탭에서 <code class=\"highlighter-rouge\">Dynamixel Wizard</code>를 실행시킵니다.</p>\n\n<p><code class=\"highlighter-rouge\">RoboPlus 설치 바로가기</code> : <a href=\"http://www.robotis.com/service/downloadpage.php?cate=software\">ROBOTIS 고객지원 다운로드</a></p>\n\n<p><br />\n<a href=\"/assets/images/C/dynamixel/ch2/2.PNG\"><img src=\"/assets/images/C/dynamixel/ch2/2.PNG\" alt=\"2\" /></a> \n프로그램 상단에서 <code class=\"highlighter-rouge\">포트 설정</code> 후 <code class=\"highlighter-rouge\">포트 연결</code> 버튼을 누릅니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/dynamixel/ch2/3.PNG\"><img src=\"/assets/images/C/dynamixel/ch2/3.PNG\" alt=\"3\" /></a> \n<code class=\"highlighter-rouge\">DXL 1.0</code>에 체크합니다. 그 후, <code class=\"highlighter-rouge\">상세 검색</code>을 선택한 다음 <code class=\"highlighter-rouge\">검색 시작</code> 버튼을 눌러 <code class=\"highlighter-rouge\">Dynamixel</code>을 검색합니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/dynamixel/ch2/4.PNG\"><img src=\"/assets/images/C/dynamixel/ch2/4.PNG\" alt=\"4\" /></a>\n검색 된 <code class=\"highlighter-rouge\">Dynamixel</code>을 눌러 정보 창을 띄웁니다. <code class=\"highlighter-rouge\">ID</code>, <code class=\"highlighter-rouge\">통신 속도</code> 등 초기 설정을 할 수 있으며 테스트 또한 가능합니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/dynamixel/ch2/5.PNG\"><img src=\"/assets/images/C/dynamixel/ch2/5.PNG\" alt=\"5\" /></a>\n<code class=\"highlighter-rouge\">ID</code>를 <code class=\"highlighter-rouge\">1</code>, <code class=\"highlighter-rouge\">통신 속도</code>를 <code class=\"highlighter-rouge\">1(1000000bps)</code>로 적용합니다. 이 외 사용할 성능에 맞는 <code class=\"highlighter-rouge\">최대 토크</code>, <code class=\"highlighter-rouge\">PID Gain</code> 등을 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">ID</code>는 사용할 <code class=\"highlighter-rouge\">Dynamixel</code>의 고유 식별 번호이며, <code class=\"highlighter-rouge\">통신 속도</code>는 <code class=\"highlighter-rouge\">C#</code>과의 <code class=\"highlighter-rouge\">Serial 통신 속도</code>입니다.</p>\n\n<p><br /></p>\n<h3 id=\"manual\">Manual</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">ROBOTIS e-Manual</code> : <a href=\"http://support.robotis.com/ko/\">바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">ROBOTIS 튜토리얼</code> : <a href=\"http://www.robotis.com/model/board.php?bo_table=tutorial_vod&amp;page=4\">바로가기</a></p>\n\n"
    } ,
  
    {
      "title"    : "C# Dynamixel 강좌 : 제 1강 - Dynamixel 회로도",
      "category" : "",
      "tags"     : "C#-Dynamixel",
      "url"      : "/posts/C-dynamixel-1/",
      "date"     : "2017-12-02 00:00:00 +0900",
  "content"   : "<h3 id=\"dynamixel\">Dynamixel</h3>\n<hr />\n<p><a href=\"/assets/images/C/dynamixel/ch1/1.JPG\"><img src=\"/assets/images/C/dynamixel/ch1/1.JPG\" alt=\"1\" /></a> \n<code class=\"highlighter-rouge\">ROBOTIS</code>사의 액추에이터 <code class=\"highlighter-rouge\">Dynamxiel</code>을 <code class=\"highlighter-rouge\">C#</code>과 <code class=\"highlighter-rouge\">Serial 통신</code>하여 제어할 수 있습니다. <code class=\"highlighter-rouge\">RX-64</code>와 <code class=\"highlighter-rouge\">CH340 USB to RS485 커넥터 어댑터</code>를 사용합니다. 이 외의 다이나믹셀 <code class=\"highlighter-rouge\">RX-24</code>, <code class=\"highlighter-rouge\">RX-64</code> 등과 <code class=\"highlighter-rouge\">RS485 통신 모듈</code>이라면 동일하게 적용이 가능합니다.</p>\n\n<p><br /></p>\n<h3 id=\"dynamixel-circuit\">Dynamixel Circuit</h3>\n<hr />\n<p><a href=\"/assets/images/C/dynamixel/ch1/2.png\"><img src=\"/assets/images/C/dynamixel/ch1/2.png\" alt=\"2\" /></a>\n<code class=\"highlighter-rouge\">CH340 USB to RS485 커넥터 어댑터</code>을 컴퓨터 또는 노트북의 <code class=\"highlighter-rouge\">USB Port</code>에 부착하고 점퍼선을 <code class=\"highlighter-rouge\">녹색 부분</code>에 연결합니다. <code class=\"highlighter-rouge\">D+</code>, <code class=\"highlighter-rouge\">D-</code>의 위치를 숙지합니다. 해당 위치는 <code class=\"highlighter-rouge\">녹색 부분</code>에 적혀있습니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/dynamixel/ch1/3.png\"><img src=\"/assets/images/C/dynamixel/ch1/3.png\" alt=\"3\" /></a>\n<code class=\"highlighter-rouge\">Dynamixel</code>의 <code class=\"highlighter-rouge\">Pinout</code>을 확인하여 점퍼선을 이용해 다이나믹셀과 연결합니다. <code class=\"highlighter-rouge\">Dynamixel</code>은 좌, 우의 <code class=\"highlighter-rouge\">Pinout</code>이 다르니 <code class=\"highlighter-rouge\">주의</code>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">VDD</code>는 <code class=\"highlighter-rouge\">양극(+)</code>를 의미하고, <code class=\"highlighter-rouge\">GND</code>는 <code class=\"highlighter-rouge\">음극(-), 접지</code>를 의미합니다. 전원은 <code class=\"highlighter-rouge\">Power Supply</code> 또는 <code class=\"highlighter-rouge\">SMPS</code>의 <code class=\"highlighter-rouge\">12V</code>를 사용합니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/dynamixel/ch1/4.png\"><img src=\"/assets/images/C/dynamixel/ch1/4.png\" alt=\"4\" /></a>\n위와 같은 회로도가 간단하게 나오게 되며, <code class=\"highlighter-rouge\">Dynamixel</code>을 여러개 부착하여 <strong>하나의 전원과 하나의 통신 모듈</strong>로 연결된 모든 <code class=\"highlighter-rouge\">Dynamixel</code>을 제어할 수 있습니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/dynamixel/ch1/5.png\"><img src=\"/assets/images/C/dynamixel/ch1/5.png\" alt=\"5\" /></a>\n<code class=\"highlighter-rouge\">다이나믹셀</code>끼리의 연결은 위와 같이 연결합니다.</p>\n"
    } ,
  
    {
      "title"    : "C# Tesseract 강좌 : 제 3강 - 한글 판독",
      "category" : "",
      "tags"     : "C#-Tesseract",
      "url"      : "/posts/C-tesseract-3/",
      "date"     : "2017-11-24 00:00:00 +0900",
  "content"   : "<h3 id=\"tesseract-korea-ocr\">Tesseract Korea OCR</h3>\n<hr />\n<p><a href=\"/assets/images/C/tesseract/ch3/1.png\"><img src=\"/assets/images/C/tesseract/ch3/1.png\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">Tesseract - OCR</code>를 이용하여 <code class=\"highlighter-rouge\">Bitmap</code>으로된 이미지 파일에서 한글을 인식하여 <code class=\"highlighter-rouge\">string</code>형식으로 반환하여 인식합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"tesseract-준비\">Tesseract 준비</h3>\n<hr />\n<p><a href=\"/assets/images/C/tesseract/ch3/2.png\"><img src=\"/assets/images/C/tesseract/ch3/2.png\" alt=\"2\" /></a>\n1강에서 설치한 <code class=\"highlighter-rouge\">Tesseract 언어 데이터 파일</code>을 <code class=\"highlighter-rouge\">프로젝트/bin/Debug</code>에 저장합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Tesseract 설치하기</code> : <a href=\"https://076923.github.io/posts/C-tesseract-1/\">1강 바로가기</a></p>\n\n<p><br />\n<a href=\"/assets/images/C/tesseract/ch3/3.png\"><img src=\"/assets/images/C/tesseract/ch3/3.png\" alt=\"3\" /></a>\n<code class=\"highlighter-rouge\">tessdata</code> 폴더에 위와 같은 <code class=\"highlighter-rouge\">kor.traineddata</code> 파일이 정상적으로 저장되어있는지 확인합니다.</p>\n\n<p><br /></p>\n<h3 id=\"프로젝트-구성\">프로젝트 구성</h3>\n<hr />\n<p><a href=\"/assets/images/C/tesseract/ch3/4.png\"><img src=\"/assets/images/C/tesseract/ch3/4.png\" alt=\"4\" /></a>\n<code class=\"highlighter-rouge\">Form</code>창에 위와 같이 <code class=\"highlighter-rouge\">pictureBox</code>와 <code class=\"highlighter-rouge\">button</code>을 배치합니다. <code class=\"highlighter-rouge\">pictureBox</code>에 이미지를 등록합니다.</p>\n\n<p><br /></p>\n<h3 id=\"main\">Main</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">Tesseract</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">tesseract</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button1_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">Bitmap</span> <span class=\"n\">img</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Bitmap</span><span class=\"p\">(</span><span class=\"n\">pictureBox1</span><span class=\"p\">.</span><span class=\"n\">Image</span><span class=\"p\">);</span>\n            <span class=\"kt\">var</span> <span class=\"n\">ocr</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">TesseractEngine</span><span class=\"p\">(</span><span class=\"s\">\"./tessdata\"</span><span class=\"p\">,</span> <span class=\"s\">\"kor\"</span><span class=\"p\">,</span> <span class=\"n\">EngineMode</span><span class=\"p\">.</span><span class=\"n\">Default</span><span class=\"p\">);</span>\n            <span class=\"kt\">var</span> <span class=\"n\">texts</span> <span class=\"p\">=</span> <span class=\"n\">ocr</span><span class=\"p\">.</span><span class=\"nf\">Process</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">);</span>\n            <span class=\"n\">MessageBox</span><span class=\"p\">.</span><span class=\"nf\">Show</span><span class=\"p\">(</span><span class=\"n\">texts</span><span class=\"p\">.</span><span class=\"nf\">GetText</span><span class=\"p\">());</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">Tesseract</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">namespace</code>에 <code class=\"highlighter-rouge\">Tesseract</code>를 사용할 수 있도록 선언합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Bitmap</span> <span class=\"n\">img</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Bitmap</span><span class=\"p\">(</span><span class=\"n\">pictureBox1</span><span class=\"p\">.</span><span class=\"n\">Image</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">pictureBox1</code>의 이미지를 Bitmap으로 변환하여 <code class=\"highlighter-rouge\">img</code> 변수에 저장합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">var</span> <span class=\"n\">ocr</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">TesseractEngine</span><span class=\"p\">(</span><span class=\"s\">\"./tessdata\"</span><span class=\"p\">,</span> <span class=\"s\">\"kor\"</span><span class=\"p\">,</span> <span class=\"n\">EngineMode</span><span class=\"p\">.</span><span class=\"n\">Default</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">ocr</code> 변수에 <code class=\"highlighter-rouge\">TesseractEngine()</code>을 이용하여 <code class=\"highlighter-rouge\">언어 데이터 파일</code>을 사용하여 판독합니다. <code class=\"highlighter-rouge\">TesseractEngine(언어 데이터 파일 경로, 언어, 엔진모드)</code>입니다. 한글의 경우 <code class=\"highlighter-rouge\">kor</code>입니다.</p>\n\n<ul>\n  <li>Tip : 한글은 <code class=\"highlighter-rouge\">EngineMode.Default</code>만 지원합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">var</span> <span class=\"n\">texts</span> <span class=\"p\">=</span> <span class=\"n\">ocr</span><span class=\"p\">.</span><span class=\"nf\">Process</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">);</span>\n<span class=\"n\">MessageBox</span><span class=\"p\">.</span><span class=\"nf\">Show</span><span class=\"p\">(</span><span class=\"n\">texts</span><span class=\"p\">.</span><span class=\"nf\">GetText</span><span class=\"p\">());</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">texts</code>에 <code class=\"highlighter-rouge\">ocr</code>에서 셋팅된 방법으로 <code class=\"highlighter-rouge\">img</code>를 이용해 판독할 <code class=\"highlighter-rouge\">문자들</code>을 저장합니다. <code class=\"highlighter-rouge\">texts.GetText()</code>를 이용하여 <code class=\"highlighter-rouge\">string</code>형태로 불러올 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/tesseract/ch3/5.png\"><img src=\"/assets/images/C/tesseract/ch3/5.png\" alt=\"5\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# Tesseract 강좌 : 제 2강 - 영문자 판독",
      "category" : "",
      "tags"     : "C#-Tesseract",
      "url"      : "/posts/C-tesseract-2/",
      "date"     : "2017-11-23 00:00:00 +0900",
  "content"   : "<h3 id=\"tesseract-english-ocr\">Tesseract English OCR</h3>\n<hr />\n<p><a href=\"/assets/images/C/tesseract/ch2/1.png\"><img src=\"/assets/images/C/tesseract/ch2/1.png\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">Tesseract - OCR</code>를 이용하여 <code class=\"highlighter-rouge\">Bitmap</code>으로된 이미지 파일에서 영문자를 인식하여 <code class=\"highlighter-rouge\">string</code>형식으로 반환하여 인식합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"tesseract-준비\">Tesseract 준비</h3>\n<hr />\n<p><a href=\"/assets/images/C/tesseract/ch2/2.png\"><img src=\"/assets/images/C/tesseract/ch2/2.png\" alt=\"2\" /></a>\n1강에서 설치한 <code class=\"highlighter-rouge\">Tesseract 언어 데이터 파일</code>을 <code class=\"highlighter-rouge\">프로젝트/bin/Debug</code>에 저장합니다.</p>\n\n<p><code class=\"highlighter-rouge\">Tesseract 설치하기</code> : <a href=\"https://076923.github.io/posts/C-tesseract-1/\">1강 바로가기</a></p>\n\n<p><br />\n<a href=\"/assets/images/C/tesseract/ch2/3.png\"><img src=\"/assets/images/C/tesseract/ch2/3.png\" alt=\"3\" /></a>\n<code class=\"highlighter-rouge\">tessdata</code> 폴더에 위와 같은 <code class=\"highlighter-rouge\">eng.*</code> 파일이 정상적으로 저장되어있는지 확인합니다.</p>\n\n<p><br /></p>\n<h3 id=\"프로젝트-구성\">프로젝트 구성</h3>\n<hr />\n<p><a href=\"/assets/images/C/tesseract/ch2/4.png\"><img src=\"/assets/images/C/tesseract/ch2/4.png\" alt=\"4\" /></a>\n<code class=\"highlighter-rouge\">Form</code>창에 위와 같이 <code class=\"highlighter-rouge\">pictureBox</code>와 <code class=\"highlighter-rouge\">button</code>을 배치합니다. <code class=\"highlighter-rouge\">pictureBox</code>에 이미지를 등록합니다.</p>\n\n<p><br /></p>\n<h3 id=\"main\">Main</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">Tesseract</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">tesseract</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button1_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">Bitmap</span> <span class=\"n\">img</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Bitmap</span><span class=\"p\">(</span><span class=\"n\">pictureBox1</span><span class=\"p\">.</span><span class=\"n\">Image</span><span class=\"p\">);</span>\n            <span class=\"kt\">var</span> <span class=\"n\">ocr</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">TesseractEngine</span><span class=\"p\">(</span><span class=\"s\">\"./tessdata\"</span><span class=\"p\">,</span> <span class=\"s\">\"eng\"</span><span class=\"p\">,</span> <span class=\"n\">EngineMode</span><span class=\"p\">.</span><span class=\"n\">TesseractAndCube</span><span class=\"p\">);</span>\n            <span class=\"kt\">var</span> <span class=\"n\">texts</span> <span class=\"p\">=</span> <span class=\"n\">ocr</span><span class=\"p\">.</span><span class=\"nf\">Process</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">);</span>\n            <span class=\"n\">MessageBox</span><span class=\"p\">.</span><span class=\"nf\">Show</span><span class=\"p\">(</span><span class=\"n\">texts</span><span class=\"p\">.</span><span class=\"nf\">GetText</span><span class=\"p\">());</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">Tesseract</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">namespace</code>에 <code class=\"highlighter-rouge\">Tesseract</code>를 사용할 수 있도록 선언합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Bitmap</span> <span class=\"n\">img</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Bitmap</span><span class=\"p\">(</span><span class=\"n\">pictureBox1</span><span class=\"p\">.</span><span class=\"n\">Image</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">pictureBox1</code>의 이미지를 Bitmap으로 변환하여 <code class=\"highlighter-rouge\">img</code> 변수에 저장합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">var</span> <span class=\"n\">ocr</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">TesseractEngine</span><span class=\"p\">(</span><span class=\"s\">\"./tessdata\"</span><span class=\"p\">,</span> <span class=\"s\">\"eng\"</span><span class=\"p\">,</span> <span class=\"n\">EngineMode</span><span class=\"p\">.</span><span class=\"n\">TesseractAndCube</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">ocr</code> 변수에 <code class=\"highlighter-rouge\">TesseractEngine()</code>을 이용하여 <code class=\"highlighter-rouge\">언어 데이터 파일</code>을 사용하여 판독합니다. <code class=\"highlighter-rouge\">TesseractEngine(언어 데이터 파일 경로, 언어, 엔진모드)</code>입니다. 영어의 경우 <code class=\"highlighter-rouge\">eng</code>입니다.</p>\n\n<ul>\n  <li>\n    <p><code class=\"highlighter-rouge\"> EngineMode.*</code></p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">EngineMode.Default</code> : 기본값으로 판독</li>\n      <li><code class=\"highlighter-rouge\">EngineMode.CubeOnly</code> : 큐브 방식으로 정확도는 높아지지만, 속도가 느림</li>\n      <li><code class=\"highlighter-rouge\">EngineMode.TesseractOnly</code> : Tesseract 방식만 실행하며, 속도가 가장 빠름</li>\n      <li><code class=\"highlighter-rouge\">EngineMode.TesseractAndCube</code> : 큐브와 Tesseract 방식의 결합, 가장 높은 정확도</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">var</span> <span class=\"n\">texts</span> <span class=\"p\">=</span> <span class=\"n\">ocr</span><span class=\"p\">.</span><span class=\"nf\">Process</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">);</span>\n<span class=\"n\">MessageBox</span><span class=\"p\">.</span><span class=\"nf\">Show</span><span class=\"p\">(</span><span class=\"n\">texts</span><span class=\"p\">.</span><span class=\"nf\">GetText</span><span class=\"p\">());</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">texts</code>에 <code class=\"highlighter-rouge\">ocr</code>에서 셋팅된 방법으로 <code class=\"highlighter-rouge\">img</code>를 이용해 판독할 <code class=\"highlighter-rouge\">문자들</code>을 저장합니다. <code class=\"highlighter-rouge\">texts.GetText()</code>를 이용하여 <code class=\"highlighter-rouge\">string</code>형태로 불러올 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/tesseract/ch2/5.png\"><img src=\"/assets/images/C/tesseract/ch2/5.png\" alt=\"5\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# Tesseract 강좌 : 제 1강 - Tesseract 설치",
      "category" : "",
      "tags"     : "C#-Tesseract",
      "url"      : "/posts/C-tesseract-1/",
      "date"     : "2017-11-23 00:00:00 +0900",
  "content"   : "<h3 id=\"tesseract\">Tesseract</h3>\n<hr />\n<p><a href=\"/assets/images/tesseract.PNG\"><img src=\"/assets/images/tesseract.PNG\" alt=\"0\" /></a>\n<code class=\"highlighter-rouge\">Tesseract - OCR</code>은 <strong>문자를 판독</strong>해주는 오픈 소스 라이브러리입니다. 약 60여개 국가의 이미지로된 언어를 판독하여 <code class=\"highlighter-rouge\">text</code>형식으로 반환해줍니다. <code class=\"highlighter-rouge\">자동차 번호판 인식</code>, <code class=\"highlighter-rouge\">명함의 문자 인식</code>, <code class=\"highlighter-rouge\">문서의 문자 인식</code> 등에 이용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"tesseract-설치\">Tesseract 설치</h3>\n<hr />\n<p><a href=\"/assets/images/C/tesseract/ch1/1.png\"><img src=\"/assets/images/C/tesseract/ch1/1.png\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">프로젝트</code> → <code class=\"highlighter-rouge\">NuGet 패키지 관리(N)...</code>을 통하여 Tesseract를 쉽게 설치할 수 있습니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/tesseract/ch1/2.png\"><img src=\"/assets/images/C/tesseract/ch1/2.png\" alt=\"2\" /></a>\n위와 같은 화면이 나오게 되고 <code class=\"highlighter-rouge\">찾아보기</code>를 눌러 <code class=\"highlighter-rouge\">검색창</code>에 <code class=\"highlighter-rouge\">tesseract</code>를 검색합니다. 현재 NuGet 패키지를 통해 설치할 수 있는 최신 버전은 <code class=\"highlighter-rouge\">3.0.2</code>버전입니다.</p>\n\n<p>이후, 상단의 <code class=\"highlighter-rouge\">▶시작</code> 버튼을 눌러 <code class=\"highlighter-rouge\">Tesseract</code>를 프로젝트에 등록합니다.</p>\n\n<p>NuGet 패키지를 통하여 <code class=\"highlighter-rouge\">3.0.2</code> 버전을 설치를 완료하셨다면 <code class=\"highlighter-rouge\">언어 데이터 파일</code>을 설치하셔야합니다. 아래의 <code class=\"highlighter-rouge\">다운로드</code>링크를 통하면 별도의 추가 설치 없이 사용 가능합니다.</p>\n\n<p><code class=\"highlighter-rouge\">한국어 / 영어 언어 데이터 파일</code> : <a href=\"https://github.com/076923/076923.github.io/raw/master/download/tesseract-ocr/tessdata.zip\">다운로드</a></p>\n\n<p><br /></p>\n\n<h3 id=\"tesseract-다른-버전--언어-데이터-파일\">Tesseract 다른 버전 / 언어 데이터 파일</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">3.0.2 버전보다 높거나 낮은 버전을 설치 시</code> : <a href=\"https://www.nuget.org/packages/Tesseract/\">Tesseract alpha 버전 / 구 버전 설치</a></p>\n\n<p><code class=\"highlighter-rouge\">3.0.2 버전과 다른 경우 또는 다른 언어 사용 시</code> : <a href=\"https://github.com/tesseract-ocr/tesseract/wiki/Data-Files#data-files-for-version-302/\">언어 데이터 파일</a></p>\n\n<p><br /></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 28강 - 모폴로지 - 연산",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-28/",
      "date"     : "2017-11-22 00:00:00 +0900",
  "content"   : "<h3 id=\"모폴로지-연산morphologyex\">모폴로지 연산(MorphologyEx)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch28/1.jpg\"><img src=\"/assets/images/C/opencv/ch28/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지의 <code class=\"highlighter-rouge\">화소값을 대체</code>하기 위해 사용합니다. 영상이나 이미지에서 <code class=\"highlighter-rouge\">MorphologyEx</code>를 이용해 이미지를 <code class=\"highlighter-rouge\">고급 형태학적 작업</code>을 할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">팽창(Dilate)</code>과 <code class=\"highlighter-rouge\">침식(Erode)</code>을 기본으로 하여 연산해 <code class=\"highlighter-rouge\">고급 형태학</code>을 적용할 수 있습니다. <code class=\"highlighter-rouge\">MorphologyEx</code>사용하지 않고, 팽창(Dilate), 침식(Erode)으로도 구현이 가능합니다.</p>\n\n<p><code class=\"highlighter-rouge\">팽창과 침식 알아보기</code> : <a href=\"https://076923.github.io/posts/C-opencv-27/\">27강 바로가기</a></p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">morp</span><span class=\"p\">;</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Morphology</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">morp</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n                    \n            <span class=\"n\">IplConvKernel</span> <span class=\"n\">element</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplConvKernel</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">ElementShape</span><span class=\"p\">.</span><span class=\"n\">Ellipse</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">MorphologyEx</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">morp</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">element</span><span class=\"p\">,</span> <span class=\"n\">MorphologyOperation</span><span class=\"p\">.</span><span class=\"n\">Open</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n                    \n            <span class=\"k\">return</span> <span class=\"n\">morp</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>        \n                  \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">morp</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">morp</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">morp</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">모폴로지</code> 연산이 적용된 이미지를 선언합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplConvKernel</span> <span class=\"n\">element</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplConvKernel</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">ElementShape</span><span class=\"p\">.</span><span class=\"n\">Ellipse</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>모폴로지(Morphology)의 형태학적 작업을 위해 <code class=\"highlighter-rouge\">IplConvKernel</code>을 이용하여 지정된 크기와 구조 요소를 반환합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">IplConvKernel 알아보기</code> : <a href=\"https://076923.github.io/posts/C-opencv-27/\">27강 바로가기</a></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">MorphologyEx</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">morp</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">element</span><span class=\"p\">,</span> <span class=\"n\">MorphologyOperation</span><span class=\"p\">.</span><span class=\"n\">Open</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.MorphologyEx()</code>를 이용하여 <code class=\"highlighter-rouge\">모폴로지 연산</code>을 적용할 수 있습니다. <code class=\"highlighter-rouge\">Cv.MorphologyEx(원본, 결과, 임시, 요소, 연산 방법, 반복횟수)</code> 입니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">임시(Temp)</code> 이미지는 <strong>크기가 동일한 이미지를 입력합니다.</strong> (연산 중 이미지를 잠시동안 교체하기 위한 용도)</li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p><code class=\"highlighter-rouge\">MorphologyOperation.*</code></p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">MorphologyOperation.Open</code> : 열기 연산</li>\n      <li><code class=\"highlighter-rouge\">MorphologyOperation.Close</code> : 닫기 연산</li>\n      <li><code class=\"highlighter-rouge\">MorphologyOperation.Gradient</code> : 그라디언트 연산</li>\n      <li><code class=\"highlighter-rouge\">MorphologyOperation.TopHat</code> : 탑햇 연산</li>\n      <li><code class=\"highlighter-rouge\">MorphologyOperation.BlackHat</code> : 블랙햇 연산</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"열기-연산\">열기 연산</h3>\n\n<p>침식(Erode) 후, 팽창(Dilate) 적용합니다. <code class=\"highlighter-rouge\">Open = Dilate(Erode(src))</code>와 동일합니다.</p>\n\n<p>영역의 크기를 유지하며 <code class=\"highlighter-rouge\">밝은 영역을 감소</code>시킵니다.</p>\n\n<p><br /></p>\n<h3 id=\"닫기-연산\">닫기 연산</h3>\n\n<p>팽창(Dilate) 후, 침식(Erode) 적용합니다 <code class=\"highlighter-rouge\">Close = Erode(Dilate(src))</code>와 동일합니다.</p>\n\n<p>영역의 크기를 유지하며 <code class=\"highlighter-rouge\">어두운 영역을 감소</code>시킵니다.</p>\n\n<p><br /></p>\n<h3 id=\"그라디언트-연산\">그라디언트 연산</h3>\n\n<p>팽창(Dilate)에서 침식(Erode)을 제외합니다. <code class=\"highlighter-rouge\">Gradient = Dilate(src) - Erode(src)</code>와 동일합니다.</p>\n\n<p><br /></p>\n<h3 id=\"탑햇-연산\">탑햇 연산</h3>\n\n<p>원본에서 열기 연산을 제외합니다. <code class=\"highlighter-rouge\">TopHat = src - Open</code>와 동일합니다.</p>\n\n<p><br /></p>\n<h3 id=\"블랙햇-연산\">블랙햇 연산</h3>\n\n<p>닫기 연산에서 원본을 제외합니다. <code class=\"highlighter-rouge\">BlackHat = Close - src</code>와 동일합니다.</p>\n\n<p><br /></p>\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"열기-연산-1\">열기 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch28/2.png\"><img src=\"/assets/images/C/opencv/ch28/2.png\" alt=\"2\" /></a>\n<br /></p>\n\n<h2 id=\"닫기-연산-1\">닫기 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch28/3.png\"><img src=\"/assets/images/C/opencv/ch28/3.png\" alt=\"3\" /></a>\n<br /></p>\n\n<h2 id=\"그라디언트-연산-1\">그라디언트 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch28/4.png\"><img src=\"/assets/images/C/opencv/ch28/4.png\" alt=\"4\" /></a>\n<br /></p>\n\n<h2 id=\"탑햇-연산-1\">탑햇 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch28/6.png\"><img src=\"/assets/images/C/opencv/ch28/6.png\" alt=\"5\" /></a>\n<br /></p>\n\n<h2 id=\"블랙햇-연산-1\">블랙햇 연산</h2>\n<p><a href=\"/assets/images/C/opencv/ch28/5.png\"><img src=\"/assets/images/C/opencv/ch28/5.png\" alt=\"6\" /></a>\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 27강 - 모폴로지 - 팽창 &amp; 침식",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-27/",
      "date"     : "2017-11-21 00:00:00 +0900",
  "content"   : "<h3 id=\"모폴로지-팽창--침식-dilate--erode\">모폴로지 팽창 &amp; 침식 (Dilate &amp; Erode)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch27/1.png\"><img src=\"/assets/images/C/opencv/ch27/1.png\" alt=\"1\" /></a>\n영상이나 이미지의 <code class=\"highlighter-rouge\">화소값을 대체</code>하기 위해 사용합니다. 영상이나 이미지에서 <code class=\"highlighter-rouge\">Dilate</code>와 <code class=\"highlighter-rouge\">Erode</code>를 이용해 이미지의 <code class=\"highlighter-rouge\">정확도</code>를 높일 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">팽창(Dilate)</code> : 구조 요소를 사용하여 이웃한 화소를 <code class=\"highlighter-rouge\">최대 픽셀로 대체</code>합니다. 즉, <strong>어두운 영역이 줄어들며 밝은 영역이 늘어납니다.</strong> 노이즈 제거 후 줄어든 <code class=\"highlighter-rouge\">크기를 복구</code>하고자 할 때 주로 사용합니다.</p>\n\n<p><code class=\"highlighter-rouge\">침식(Erode)</code> : 구조 요소를 사용하여 이웃한 화소를 <code class=\"highlighter-rouge\">최소 픽셀로 대체</code>합니다. 즉, <strong>밝은 영역이 줄어들며 어두운 영역이 늘어납니다.</strong> <code class=\"highlighter-rouge\">노이즈 제거</code>에 주로 사용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">dil</span><span class=\"p\">;</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">ero</span><span class=\"p\">;</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">DilateImage</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">dil</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n\n            <span class=\"n\">IplConvKernel</span> <span class=\"n\">element</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplConvKernel</span><span class=\"p\">(</span><span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"n\">ElementShape</span><span class=\"p\">.</span><span class=\"n\">Custom</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">]);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Dilate</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">dil</span><span class=\"p\">,</span> <span class=\"n\">element</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">dil</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">ErodeImage</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">ero</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n\n            <span class=\"n\">IplConvKernel</span> <span class=\"n\">element</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplConvKernel</span><span class=\"p\">(</span><span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"n\">ElementShape</span><span class=\"p\">.</span><span class=\"n\">Custom</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">]);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Erode</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">ero</span><span class=\"p\">,</span> <span class=\"n\">element</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">ero</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>        \n                  \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">dil</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">dil</span><span class=\"p\">);</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">ero</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">ero</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">dil</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">ero</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">dil</code>과 <code class=\"highlighter-rouge\">ero</code>는 <code class=\"highlighter-rouge\">팽창</code>과 <code class=\"highlighter-rouge\">침식</code>된 이미지입니다. <code class=\"highlighter-rouge\">Binary</code> 또는 <code class=\"highlighter-rouge\">GrayScale</code> 이미지 이용 시 채널은 <code class=\"highlighter-rouge\">1</code>로 대체합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">IplConvKernel</span> <span class=\"n\">element</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplConvKernel</span><span class=\"p\">(</span><span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"n\">ElementShape</span><span class=\"p\">.</span><span class=\"n\">Custom</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">]);</span></code></pre></figure>\n\n<p>모폴로지(Morphology)의 형태학적 작업을 위해 <code class=\"highlighter-rouge\">IplConvKernel</code>을 이용하여 지정된 크기와 구조 요소를 반환합니다. <code class=\"highlighter-rouge\">IplConvKernel(너비, 높이, X좌표, Y좌표, 형태, 커스텀형태)</code>입니다.</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">너비(cols)</code> : 구조 요소의 너비</li>\n  <li><code class=\"highlighter-rouge\">높이(rows)</code> : 구조 요소의 높이</li>\n  <li><code class=\"highlighter-rouge\">X좌표(anchorX)</code> : 앵커의 X 좌표</li>\n  <li><code class=\"highlighter-rouge\">Y좌표(anchorY)</code> : 앵커의 Y 좌표</li>\n  <li>\n    <p><code class=\"highlighter-rouge\">형태(ElementShape.*)</code> : 구조 요소의 형태</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">ElementShape.Cross</code> : 십자형 구조 요소</li>\n      <li><code class=\"highlighter-rouge\">ElementShape.Custom</code> : 사용자 정의 구조 요소</li>\n      <li><code class=\"highlighter-rouge\">ElementShape.Ellipse</code> : 타원형(직사각형에 채워진 타원) 구조 요소</li>\n      <li><code class=\"highlighter-rouge\">ElementShape.Rect</code> : 직사각형 구조 요소</li>\n    </ul>\n  </li>\n  <li><code class=\"highlighter-rouge\">커스텀형태(values)</code> : 사용자 정의 구조 요소의 형태, <code class=\"highlighter-rouge\">ElementShape.Custom</code>를 이용할 때 사용하며 <code class=\"highlighter-rouge\">new int[n, m]</code>으로 선언</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Dilate</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">dil</span><span class=\"p\">,</span> <span class=\"n\">element</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Erode</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">ero</span><span class=\"p\">,</span> <span class=\"n\">element</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Dilate()</code>와 <code class=\"highlighter-rouge\">Cv.Erode()</code>를 이용하여 <code class=\"highlighter-rouge\">팽창</code>과 <code class=\"highlighter-rouge\">침식</code> 할 수 있습니다. <code class=\"highlighter-rouge\">Cv.*(원본, 결과, 구조 요소, 반복횟수)</code>입니다. <code class=\"highlighter-rouge\">반복횟수</code>만큼 적용합니다.</p>\n\n<p><br /></p>\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"팽창dilate\">팽창(Dilate)</h2>\n<p><a href=\"/assets/images/C/opencv/ch27/2.png\"><img src=\"/assets/images/C/opencv/ch27/2.png\" alt=\"2\" /></a>\n<br /></p>\n\n<h2 id=\"침식erode\">침식(Erode)</h2>\n<p><a href=\"/assets/images/C/opencv/ch27/3.png\"><img src=\"/assets/images/C/opencv/ch27/3.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 26강 - 원 검출",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-26/",
      "date"     : "2017-11-20 00:00:00 +0900",
  "content"   : "<h3 id=\"원-검출-hough-transform-circles\">원 검출 (Hough Transform Circles)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch26/1.jpg\"><img src=\"/assets/images/C/opencv/ch26/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지의 <code class=\"highlighter-rouge\">원을 찾기</code> 위해 사용합니다. 영상이나 이미지에서 <code class=\"highlighter-rouge\">HoughCircles</code>를 이용해 <code class=\"highlighter-rouge\">원</code>을 찾을 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">houcircle</span><span class=\"p\">;</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">HoughCircles</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">houcircle</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n <span class=\"err\"> </span> <span class=\"err\"> </span> <span class=\"err\"> </span> <span class=\"err\"> </span> <span class=\"err\"> </span> <span class=\"err\"> </span><span class=\"n\">IplImage</span> <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">houcircle</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Smooth</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">SmoothType</span><span class=\"p\">.</span><span class=\"n\">Gaussian</span><span class=\"p\">,</span> <span class=\"m\">9</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvMemStorage</span> <span class=\"n\">Storage</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMemStorage</span><span class=\"p\">();</span>\n            <span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvCircleSegment</span><span class=\"p\">&gt;</span> <span class=\"n\">circles</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">HoughCircles</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"n\">HoughCirclesMethod</span><span class=\"p\">.</span><span class=\"n\">Gradient</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">150</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n\n            <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"n\">CvCircleSegment</span> <span class=\"n\">item</span> <span class=\"k\">in</span> <span class=\"n\">circles</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">houcircle</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"p\">.</span><span class=\"n\">Center</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">item</span><span class=\"p\">.</span><span class=\"n\">Radius</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Blue</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">return</span> <span class=\"n\">houcircle</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                  \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">houcircle</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">houcircle</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">houcircle</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">houcircle</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Smooth</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">SmoothType</span><span class=\"p\">.</span><span class=\"n\">Gaussian</span><span class=\"p\">,</span> <span class=\"m\">9</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">houcircle</code>은 원본을 복사한 이미지입니다. <code class=\"highlighter-rouge\">gray</code>이미지는 <code class=\"highlighter-rouge\">GrayScale</code>과 <code class=\"highlighter-rouge\">Blur</code>를 적용한 이미지입니다. <code class=\"highlighter-rouge\">Hough Transform Circles</code>은 <code class=\"highlighter-rouge\">GrayScale</code>의 이미지를 사용하며, 정확도를 높이기 위하여 <code class=\"highlighter-rouge\">Gaussian Blur</code>를 적용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">Blur Parameter 알아보기</code> : <a href=\"https://076923.github.io/posts/C-opencv-13/\">13강 바로가기</a></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvMemStorage</span> <span class=\"n\">Storage</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMemStorage</span><span class=\"p\">();</span>\n<span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvCircleSegment</span><span class=\"p\">&gt;</span> <span class=\"n\">circles</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">HoughCircles</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"n\">HoughCirclesMethod</span><span class=\"p\">.</span><span class=\"n\">Gradient</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">150</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>원(Circles)을 검출하기 위하여 <code class=\"highlighter-rouge\">Storage</code>, <code class=\"highlighter-rouge\">circles</code>를 선언하고 <code class=\"highlighter-rouge\">Cv.HoughCircles()</code>를 적용합니다. \n<code class=\"highlighter-rouge\">Cv.HoughCircles(그레이스케일, 메모리 저장소, 계산 방법, 분해능, 최소거리, Edge 임계값, 중심 임계값, 최소반지름, 최대반지름)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">계산 방법</code>은 <code class=\"highlighter-rouge\">HoughCirclesMethod.Gradient</code>만 지원합니다.</p>\n\n<p><code class=\"highlighter-rouge\">분해능</code>은 화면 최대크기에 대한 축소율입니다. 1을 사용할 경우 이미지와 동일한 크기를 사용합니다. 2를 사용할 경우 이미지의 절반 크기로 사용합니다.  </p>\n\n<p><code class=\"highlighter-rouge\">최소거리</code>는 원과 원 사이의 최소한의 거리입니다.</p>\n\n<p><code class=\"highlighter-rouge\">Edge 임계값</code>은 Canny Edge의 상위 임계값입니다. 하위 임계값은 상위 임계값의 절반으로 자동으로 설정됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">중심 임계값</code>은 CV_HOUGH_GRADIENT에 적용된 중심 Histogram에 대한 임계값입니다.</p>\n\n<p><code class=\"highlighter-rouge\">최소반지름</code>, <code class=\"highlighter-rouge\">최대반지름</code>은 검출될 원의 반지름의 범위입니다. <code class=\"highlighter-rouge\">0</code>을 입력 시, 검출 할 수 있는 최소, 최대 반경으로 <code class=\"highlighter-rouge\">모든 원을 검색</code>합니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">Edge 임계값</code>이 낮을 수록 같은 위치의 더 많은 원을 검출합니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">중심 임계값</code>이 낮을 수록 다른 위치의 더 많은 원을 검출합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"n\">CvCircleSegment</span> <span class=\"n\">circle</span> <span class=\"k\">in</span> <span class=\"n\">circles</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">houcircle</span><span class=\"p\">,</span> <span class=\"n\">circle</span><span class=\"p\">.</span><span class=\"n\">Center</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">circle</span><span class=\"p\">.</span><span class=\"n\">Radius</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Blue</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">foreach</code>문을 이용하여 <code class=\"highlighter-rouge\">검출된 원</code>을 <code class=\"highlighter-rouge\">circle</code>으로 사용합니다. <code class=\"highlighter-rouge\">Cv.Circle()</code>을 이용하여 원을 그립니다.</p>\n\n<p><code class=\"highlighter-rouge\">circle</code>에는 <code class=\"highlighter-rouge\">중심점(Center)</code>와 <code class=\"highlighter-rouge\">반지름(Radius)</code> 값이 저장됩니다. <code class=\"highlighter-rouge\">circle.Center.X</code>와  <code class=\"highlighter-rouge\">circle.Center.Y</code>를 이용하여 중심점의 <code class=\"highlighter-rouge\">(x, y)</code>를 따로 얻을 수 있습니다.</p>\n\n<p><br /></p>\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch26/2.png\"><img src=\"/assets/images/C/opencv/ch26/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 25강 - 직선 검출",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-25/",
      "date"     : "2017-11-20 00:00:00 +0900",
  "content"   : "<h3 id=\"직선-검출-hough-transform-lines\">직선 검출 (Hough Transform Lines)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch25/1.jpg\"><img src=\"/assets/images/C/opencv/ch25/1.jpg\" alt=\"1\" /></a>\n영상이나 이미지의 <code class=\"highlighter-rouge\">직선을 찾기</code> 위해 사용합니다. 영상이나 이미지에서 <code class=\"highlighter-rouge\">HoughLines2</code>를 이용해 <code class=\"highlighter-rouge\">직선</code>을 찾을 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">bin</span><span class=\"p\">;</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">canny</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">houline</span><span class=\"p\">;</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">RgbToGray</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"m\">120</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">bin</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>  \n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">CannyEdge</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">canny</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Canny</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">canny</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">canny</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">HoughLines</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">houline</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">canny</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n                    \n            <span class=\"n\">canny</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">CannyEdge</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">));</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">canny</span><span class=\"p\">,</span> <span class=\"n\">houline</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">GrayToBgr</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvMemStorage</span> <span class=\"n\">Storage</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMemStorage</span><span class=\"p\">();</span>\n\n            <span class=\"c1\">//Standard 방법</span>\n            <span class=\"n\">CvSeq</span> <span class=\"n\">lines</span> <span class=\"p\">=</span> <span class=\"n\">canny</span><span class=\"p\">.</span><span class=\"nf\">HoughLines2</span><span class=\"p\">(</span><span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"n\">HoughLinesMethod</span><span class=\"p\">.</span><span class=\"n\">Standard</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"n\">PI</span> <span class=\"p\">/</span> <span class=\"m\">180</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Min</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">.</span><span class=\"n\">Total</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">CvLineSegmentPolar</span> <span class=\"n\">element</span> <span class=\"p\">=</span> <span class=\"n\">lines</span><span class=\"p\">.</span><span class=\"n\">GetSeqElem</span><span class=\"p\">&lt;</span><span class=\"n\">CvLineSegmentPolar</span><span class=\"p\">&gt;(</span><span class=\"n\">i</span><span class=\"p\">).</span><span class=\"n\">Value</span><span class=\"p\">;</span>\n\n                <span class=\"kt\">float</span> <span class=\"n\">r</span> <span class=\"p\">=</span> <span class=\"n\">element</span><span class=\"p\">.</span><span class=\"n\">Rho</span><span class=\"p\">;</span>\n                <span class=\"kt\">float</span> <span class=\"n\">theta</span> <span class=\"p\">=</span> <span class=\"n\">element</span><span class=\"p\">.</span><span class=\"n\">Theta</span><span class=\"p\">;</span>\n\n                <span class=\"kt\">double</span> <span class=\"n\">a</span> <span class=\"p\">=</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Cos</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">);</span>\n                <span class=\"kt\">double</span> <span class=\"n\">b</span> <span class=\"p\">=</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Sin</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">);</span>\n                <span class=\"kt\">double</span> <span class=\"n\">x0</span> <span class=\"p\">=</span> <span class=\"n\">r</span> <span class=\"p\">*</span> <span class=\"n\">a</span><span class=\"p\">;</span>\n                <span class=\"kt\">double</span> <span class=\"n\">y0</span> <span class=\"p\">=</span> <span class=\"n\">r</span> <span class=\"p\">*</span> <span class=\"n\">b</span><span class=\"p\">;</span>\n                <span class=\"kt\">int</span> <span class=\"n\">scale</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span>\n\n                <span class=\"n\">CvPoint</span> <span class=\"n\">pt1</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToInt32</span><span class=\"p\">(</span><span class=\"n\">x0</span> <span class=\"p\">-</span> <span class=\"n\">scale</span> <span class=\"p\">*</span> <span class=\"n\">b</span><span class=\"p\">),</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToInt32</span><span class=\"p\">(</span><span class=\"n\">y0</span> <span class=\"p\">+</span> <span class=\"n\">scale</span> <span class=\"p\">*</span> <span class=\"n\">a</span><span class=\"p\">));</span>\n                <span class=\"n\">CvPoint</span> <span class=\"n\">pt2</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToInt32</span><span class=\"p\">(</span><span class=\"n\">x0</span> <span class=\"p\">+</span> <span class=\"n\">scale</span> <span class=\"p\">*</span> <span class=\"n\">b</span><span class=\"p\">),</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToInt32</span><span class=\"p\">(</span><span class=\"n\">y0</span> <span class=\"p\">-</span> <span class=\"n\">scale</span> <span class=\"p\">*</span> <span class=\"n\">a</span><span class=\"p\">));</span>\n\n                <span class=\"n\">houline</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">((</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">y0</span><span class=\"p\">),</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Yellow</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n                <span class=\"n\">houline</span><span class=\"p\">.</span><span class=\"nf\">Line</span><span class=\"p\">(</span><span class=\"n\">pt1</span><span class=\"p\">,</span> <span class=\"n\">pt2</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n            \n            <span class=\"c1\">//Probabilistic 방법</span>\n            <span class=\"c1\">//CvSeq lines = canny.HoughLines2(Storage, HoughLinesMethod.Probabilistic, 1, Math.PI / 180, 140, 50, 10);</span>\n            \n            <span class=\"c1\">//for (int i = 0; i &lt; lines.Total; i++)</span>\n            <span class=\"c1\">//{</span>\n            <span class=\"c1\">//    CvLineSegmentPoint element = lines.GetSeqElem&lt;CvLineSegmentPoint&gt;(i).Value;</span>\n            <span class=\"c1\">//    houline.Line(element.P1, element.P2, CvColor.Yellow, 1, LineType.AntiAlias);</span>\n            <span class=\"c1\">//}</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">houline</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                  \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">bin</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">);</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">canny</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">canny</span><span class=\"p\">);</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">houline</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">houline</span><span class=\"p\">);</span>        \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">houline</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">canny</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n        \n<span class=\"n\">canny</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">CannyEdge</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">));</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">canny</span><span class=\"p\">,</span> <span class=\"n\">houline</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">GrayToBgr</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">houline</code>은 <code class=\"highlighter-rouge\">CannyEdge</code>를 적용한 이미지에 Drawing을 색상을 하기 위해 3채널로 사용합니다. 즉, CannyEdge 위에 <code class=\"highlighter-rouge\">색상있는 Circle 또는 Line</code>을 사용하기 위해 적용합니다. 계산을 위한 <code class=\"highlighter-rouge\">canny</code>를 선언한 후, <code class=\"highlighter-rouge\">CannyEdge</code>를 적용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvMemStorage</span> <span class=\"n\">Storage</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMemStorage</span><span class=\"p\">();</span>\n<span class=\"n\">CvSeq</span> <span class=\"n\">lines</span> <span class=\"p\">=</span> <span class=\"n\">canny</span><span class=\"p\">.</span><span class=\"nf\">HoughLines2</span><span class=\"p\">(</span><span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"n\">HoughLinesMethod</span><span class=\"p\">.</span><span class=\"n\">Standard</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"n\">PI</span> <span class=\"p\">/</span> <span class=\"m\">180</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>직선(Lines)을 검출하기 위하여 <code class=\"highlighter-rouge\">Storage</code>, <code class=\"highlighter-rouge\">lines</code>를 선언하고 <code class=\"highlighter-rouge\">canny.HoughLines2()</code>를 적용합니다. <code class=\"highlighter-rouge\">canny</code>를 계산을 위한 이미지로 사용햇기 때문에, 이 이미지에 <code class=\"highlighter-rouge\">HoughLines2()</code>를 적용합니다. <code class=\"highlighter-rouge\">lines</code>에 <code class=\"highlighter-rouge\">길이</code>와 <code class=\"highlighter-rouge\">각도</code>가 저장됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">*.HoughLines2(메모리 저장소, 변환 방법, rho, theta, 임계값, 파라미터1, 파라미터2)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">rho</code>는 누산기의 <code class=\"highlighter-rouge\">거리 분해능</code>입니다. <code class=\"highlighter-rouge\">theta</code>는 누산기의 <code class=\"highlighter-rouge\">각도 분해능</code>입니다. 단위는 라디안이므로 각도 단위로 입력합니다.</p>\n\n<p>변환방법이 <code class=\"highlighter-rouge\">Standard</code>이므로 <strong>파라미터의 값은 사용하지 않습니다.</strong></p>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>변환방법</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">HoughLinesMethod.Standard</code> : rho와 theta 반환</li>\n      <li><code class=\"highlighter-rouge\">HoughLinesMethod.Probabilistic</code> : 시작점과 끝점 반환</li>\n      <li><code class=\"highlighter-rouge\">HoughLinesMethod.MultiScale</code> : 고전적 Hough Transform 방법,  rho와 theta 반환</li>\n    </ul>\n  </li>\n  <li>\n    <p>파라미터</p>\n\n    <ul>\n      <li>\n        <p><code class=\"highlighter-rouge\">파라미터1</code></p>\n\n        <ul>\n          <li><code class=\"highlighter-rouge\">Standard 사용 시</code> : 사용 안함</li>\n          <li><code class=\"highlighter-rouge\">Probabilistic 사용 시</code> : 최소 선 길이</li>\n          <li><code class=\"highlighter-rouge\">MultiScale 사용 시</code> : rho에 대한 약수</li>\n        </ul>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">파라미터2</code></p>\n\n        <ul>\n          <li><code class=\"highlighter-rouge\">Standard 사용 시</code> : 사용 안함</li>\n          <li><code class=\"highlighter-rouge\">Probabilistic 사용 시</code> : 최대 선 간격</li>\n          <li><code class=\"highlighter-rouge\">MultiScale 사용 시</code> : theta에 대한 약수</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"standard-code\">Standard Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Min</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">.</span><span class=\"n\">Total</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">CvLineSegmentPolar</span> <span class=\"n\">element</span> <span class=\"p\">=</span> <span class=\"n\">lines</span><span class=\"p\">.</span><span class=\"n\">GetSeqElem</span><span class=\"p\">&lt;</span><span class=\"n\">CvLineSegmentPolar</span><span class=\"p\">&gt;(</span><span class=\"n\">i</span><span class=\"p\">).</span><span class=\"n\">Value</span><span class=\"p\">;</span>\n\n    <span class=\"kt\">float</span> <span class=\"n\">r</span> <span class=\"p\">=</span> <span class=\"n\">element</span><span class=\"p\">.</span><span class=\"n\">Rho</span><span class=\"p\">;</span>\n    <span class=\"kt\">float</span> <span class=\"n\">theta</span> <span class=\"p\">=</span> <span class=\"n\">element</span><span class=\"p\">.</span><span class=\"n\">Theta</span><span class=\"p\">;</span>\n\n    <span class=\"kt\">double</span> <span class=\"n\">a</span> <span class=\"p\">=</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Cos</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">);</span>\n    <span class=\"kt\">double</span> <span class=\"n\">b</span> <span class=\"p\">=</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"nf\">Sin</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">);</span>\n    <span class=\"kt\">double</span> <span class=\"n\">x0</span> <span class=\"p\">=</span> <span class=\"n\">r</span> <span class=\"p\">*</span> <span class=\"n\">a</span><span class=\"p\">;</span>\n    <span class=\"kt\">double</span> <span class=\"n\">y0</span> <span class=\"p\">=</span> <span class=\"n\">r</span> <span class=\"p\">*</span> <span class=\"n\">b</span><span class=\"p\">;</span>\n    <span class=\"kt\">int</span> <span class=\"n\">scale</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">+</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span>\n\n    <span class=\"n\">CvPoint</span> <span class=\"n\">pt1</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToInt32</span><span class=\"p\">(</span><span class=\"n\">x0</span> <span class=\"p\">-</span> <span class=\"n\">scale</span> <span class=\"p\">*</span> <span class=\"n\">b</span><span class=\"p\">),</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToInt32</span><span class=\"p\">(</span><span class=\"n\">y0</span> <span class=\"p\">+</span> <span class=\"n\">scale</span> <span class=\"p\">*</span> <span class=\"n\">a</span><span class=\"p\">));</span>\n    <span class=\"n\">CvPoint</span> <span class=\"n\">pt2</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToInt32</span><span class=\"p\">(</span><span class=\"n\">x0</span> <span class=\"p\">+</span> <span class=\"n\">scale</span> <span class=\"p\">*</span> <span class=\"n\">b</span><span class=\"p\">),</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToInt32</span><span class=\"p\">(</span><span class=\"n\">y0</span> <span class=\"p\">-</span> <span class=\"n\">scale</span> <span class=\"p\">*</span> <span class=\"n\">a</span><span class=\"p\">));</span>\n\n    <span class=\"n\">houline</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">((</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">y0</span><span class=\"p\">),</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Yellow</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n    <span class=\"n\">houline</span><span class=\"p\">.</span><span class=\"nf\">Line</span><span class=\"p\">(</span><span class=\"n\">pt1</span><span class=\"p\">,</span> <span class=\"n\">pt2</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">for</code>문과 <code class=\"highlighter-rouge\">Math.Min(lines.Total, 3)</code>은 lines의 값이 3보다 낮은 값만 사용하게끔 하여 반복합니다. <code class=\"highlighter-rouge\">Math.Min()</code>에서 3보다 높아질 경우, <code class=\"highlighter-rouge\">더 많은 선들을 검출</code>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">element</code>를 선언하고, 검출된 선의 <code class=\"highlighter-rouge\">거리</code>와 <code class=\"highlighter-rouge\">각도</code>를 가져옵니다.</p>\n\n<p>먼저, HoughLines의 검출 방법은 <code class=\"highlighter-rouge\">모든 점들을 직선의 방정식</code>을 만듭니다. 이 직선의 방정식이 <code class=\"highlighter-rouge\">교차하는 점이 가장 많은 점을 기준으로 직선으로 판별</code>합니다. 이 방법을 기준으로 선을 검출합니다.</p>\n\n<p><a href=\"/assets/images/C/opencv/ch25/2.png\"><img src=\"/assets/images/C/opencv/ch25/2.png\" alt=\"2\" /></a>\n검출된 선의 그래프는 위와 같습니다.  거리(r)는 <code class=\"highlighter-rouge\">element.Rho</code>을 의미하며, 각도(theta)는 <code class=\"highlighter-rouge\">element.Theta</code>를 의미합니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/opencv/ch25/3.png\"><img src=\"/assets/images/C/opencv/ch25/3.png\" alt=\"3\" /></a>\n좌표를 찾기 위하여 수식을 만듭니다. x와 y는 위와 같습니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/opencv/ch25/4.png\"><img src=\"/assets/images/C/opencv/ch25/4.png\" alt=\"4\" /></a>\n양변에 각각 cosΘ와 sinΘ 곱합니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/opencv/ch25/5.png\"><img src=\"/assets/images/C/opencv/ch25/5.png\" alt=\"5\" /></a>\n두 식을 더하여 r에 대해 정리합니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/opencv/ch25/6.png\"><img src=\"/assets/images/C/opencv/ch25/6.png\" alt=\"6\" /></a>\nr에 대한 함수는 위와 같이 얻을 수 있습니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/opencv/ch25/3.png\"><img src=\"/assets/images/C/opencv/ch25/3.png\" alt=\"3\" /></a>\n<code class=\"highlighter-rouge\">x0</code>와 <code class=\"highlighter-rouge\">y0</code>는 위 식을 사용합니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/opencv/ch25/7.png\"><img src=\"/assets/images/C/opencv/ch25/7.png\" alt=\"7\" /></a>\n<code class=\"highlighter-rouge\">x0</code>와 <code class=\"highlighter-rouge\">y0</code>는 위 그래프의 지점에 위치하며 이에 따른 직선을 그리기 위하여 <code class=\"highlighter-rouge\">scale</code> 만큼 범위를 띄웁니다. <code class=\"highlighter-rouge\">scale</code>은 적절한 값으로 조정하시면됩니다.</p>\n\n<p>위와 같이 <code class=\"highlighter-rouge\">pt1</code>과 <code class=\"highlighter-rouge\">pt2</code>를 구해진 지점에서 <strong>각도와 스케일</strong>을 이용하여 검출된 직선을 표시할 수 있습니다. 검출된 지점은 결과에서 <code class=\"highlighter-rouge\">노란원</code>으로 확인할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"probabilistic-code\">Probabilistic Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">lines</span><span class=\"p\">.</span><span class=\"n\">Total</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">CvLineSegmentPoint</span> <span class=\"n\">element</span> <span class=\"p\">=</span> <span class=\"n\">lines</span><span class=\"p\">.</span><span class=\"n\">GetSeqElem</span><span class=\"p\">&lt;</span><span class=\"n\">CvLineSegmentPoint</span><span class=\"p\">&gt;(</span><span class=\"n\">i</span><span class=\"p\">).</span><span class=\"n\">Value</span><span class=\"p\">;</span>\n    <span class=\"n\">houline</span><span class=\"p\">.</span><span class=\"nf\">Line</span><span class=\"p\">(</span><span class=\"n\">element</span><span class=\"p\">.</span><span class=\"n\">P1</span><span class=\"p\">,</span> <span class=\"n\">element</span><span class=\"p\">.</span><span class=\"n\">P2</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Yellow</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CvLineSegmentPoint</code> 형식의 <code class=\"highlighter-rouge\">element</code>를 선언하고, 검출된 선의 <code class=\"highlighter-rouge\">시작점</code>과 <code class=\"highlighter-rouge\">도착점</code>을 가져옵니다.</p>\n\n<p><code class=\"highlighter-rouge\">시작점</code>은 <code class=\"highlighter-rouge\">P1</code>을 의미하며, <code class=\"highlighter-rouge\">도착점</code>은 <code class=\"highlighter-rouge\">P2</code>를 의미합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<h4 id=\"standard\">Standard</h4>\n<p><a href=\"/assets/images/C/opencv/ch25/8.png\"><img src=\"/assets/images/C/opencv/ch25/8.png\" alt=\"8\" /></a>\n<br /></p>\n<h4 id=\"probabilistic\">Probabilistic</h4>\n<p><a href=\"/assets/images/C/opencv/ch25/9.png\"><img src=\"/assets/images/C/opencv/ch25/9.png\" alt=\"9\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 24강 - 중심점",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-24/",
      "date"     : "2017-11-16 00:00:00 +0900",
  "content"   : "<h3 id=\"중심점-moments\">중심점 (Moments)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch24/1.png\"><img src=\"/assets/images/C/opencv/ch24/1.png\" alt=\"1\" /></a>\n영상이나 이미지의 <code class=\"highlighter-rouge\">중심점을 찾기</code> 위해 사용합니다. 영상이나 이미지에서 <code class=\"highlighter-rouge\">Contour</code>와 <code class=\"highlighter-rouge\">Moments</code>를 이용해 물체(덩어리)의 중심점을 찾을 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">bin</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">mom</span><span class=\"p\">;</span>        \n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">RgbToGray</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"m\">150</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">bin</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Moment</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">mom</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">mom</span><span class=\"p\">);</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvMemStorage</span> <span class=\"n\">Storage</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMemStorage</span><span class=\"p\">();</span>\n            <span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">contours</span><span class=\"p\">;</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FindContours</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">ContourRetrieval</span><span class=\"p\">.</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">ContourChain</span><span class=\"p\">.</span><span class=\"n\">ApproxNone</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">apcon_seq</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ApproxPoly</span><span class=\"p\">(</span><span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"n\">ApproxPolyMethod</span><span class=\"p\">.</span><span class=\"n\">DP</span> <span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"k\">true</span><span class=\"p\">);</span>\n                    \n            <span class=\"n\">CvMoments</span> <span class=\"n\">moments</span><span class=\"p\">;</span>\n            <span class=\"kt\">int</span> <span class=\"n\">cX</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">cY</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">c</span> <span class=\"p\">=</span> <span class=\"n\">apcon_seq</span><span class=\"p\">;</span> <span class=\"n\">c</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">;</span> <span class=\"n\">c</span> <span class=\"p\">=</span> <span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">HNext</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">Total</span> <span class=\"p\">&gt;</span> <span class=\"m\">4</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Moments</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">moments</span><span class=\"p\">,</span> <span class=\"k\">true</span><span class=\"p\">);</span>\n\n                    <span class=\"n\">cX</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToInt32</span><span class=\"p\">(</span><span class=\"n\">moments</span><span class=\"p\">.</span><span class=\"n\">M10</span> <span class=\"p\">/</span> <span class=\"n\">moments</span><span class=\"p\">.</span><span class=\"n\">M00</span><span class=\"p\">);</span>\n                    <span class=\"n\">cY</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToInt32</span><span class=\"p\">(</span><span class=\"n\">moments</span><span class=\"p\">.</span><span class=\"n\">M01</span> <span class=\"p\">/</span> <span class=\"n\">moments</span><span class=\"p\">.</span><span class=\"n\">M00</span><span class=\"p\">);</span>\n\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">mom</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">cX</span><span class=\"p\">,</span> <span class=\"n\">cY</span><span class=\"p\">),</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">return</span> <span class=\"n\">mom</span><span class=\"p\">;</span>  \n        <span class=\"p\">}</span>            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">bin</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">);</span>        \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">mom</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">mom</span><span class=\"p\">);</span>        \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">mom</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">mom</span><span class=\"p\">);</span>\n<span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>원본 이미지를 복사한 <code class=\"highlighter-rouge\">mom</code>과 Binary 이미지인 <code class=\"highlighter-rouge\">bin</code>을 선언하고 적용시킵니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvMemStorage</span> <span class=\"n\">Storage</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMemStorage</span><span class=\"p\">();</span>\n<span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">contours</span><span class=\"p\">;</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FindContours</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">ContourRetrieval</span><span class=\"p\">.</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">ContourChain</span><span class=\"p\">.</span><span class=\"n\">ApproxNone</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>윤곽(Contour)을 검출하기 위하여 <code class=\"highlighter-rouge\">Storage</code>, <code class=\"highlighter-rouge\">contours</code>를 선언하고 <code class=\"highlighter-rouge\">Cv.FindContours()</code>를 적용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">Contour 알아보기</code> : <a href=\"https://076923.github.io/posts/C-opencv-21/\">20강 바로가기</a></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">apcon_seq</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ApproxPoly</span><span class=\"p\">(</span><span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"n\">ApproxPolyMethod</span><span class=\"p\">.</span><span class=\"n\">DP</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"k\">true</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>다각형 곡선을 근사화 하기 위해 <code class=\"highlighter-rouge\">Cv.ApproxPoly()</code>를 사용하여 근사합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">ApproxPoly 알아보기</code> : <a href=\"https://076923.github.io/posts/C-opencv-22/\">22강 바로가기</a></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvMoments</span> <span class=\"n\">moments</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">cX</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">cY</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">moments</code>를 선언하여 <code class=\"highlighter-rouge\">중심점에 관한 정보</code>를 포함하고 있습니다. <code class=\"highlighter-rouge\">cX</code>와 <code class=\"highlighter-rouge\">cY</code>를 선언하여 중심점의 좌표(center_x, center_y)로 사용합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">c</span> <span class=\"p\">=</span> <span class=\"n\">apcon_seq</span><span class=\"p\">;</span> <span class=\"n\">c</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">;</span> <span class=\"n\">c</span> <span class=\"p\">=</span> <span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">HNext</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">Total</span> <span class=\"p\">&gt;</span> <span class=\"m\">4</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Moments</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">moments</span><span class=\"p\">,</span> <span class=\"k\">true</span><span class=\"p\">);</span>\n\n        <span class=\"n\">cX</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToInt32</span><span class=\"p\">(</span><span class=\"n\">moments</span><span class=\"p\">.</span><span class=\"n\">M10</span> <span class=\"p\">/</span> <span class=\"n\">moments</span><span class=\"p\">.</span><span class=\"n\">M00</span><span class=\"p\">);</span>\n        <span class=\"n\">cY</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToInt32</span><span class=\"p\">(</span><span class=\"n\">moments</span><span class=\"p\">.</span><span class=\"n\">M01</span> <span class=\"p\">/</span> <span class=\"n\">moments</span><span class=\"p\">.</span><span class=\"n\">M00</span><span class=\"p\">);</span>\n\n        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">mom</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"n\">cX</span><span class=\"p\">,</span> <span class=\"n\">cY</span><span class=\"p\">),</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>  </code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">if</code>문 까지는 <code class=\"highlighter-rouge\">22강</code>과 흡사합니다. 코너를 검출하기 위해 사용합니다. 자세한 사항은 <code class=\"highlighter-rouge\">22강</code>의 설명을 참고하시기 바랍니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.Moments()</code>를 이용하여 중심점에 대한 정보를 받아옵니다. <code class=\"highlighter-rouge\">Cv.Moments(물체의 코너점들, 중심점 데이터, Binary조건)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">out moments</code>를 통하여 검출된 <code class=\"highlighter-rouge\">moments</code>를 저장하며, <code class=\"highlighter-rouge\">Binary조건</code>은 <strong>참일 경우 0의 값이 아닌 이미지 픽셀은 1의 값으로 처리하게됩니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">cX</code>, <code class=\"highlighter-rouge\">cY</code>에 중심점을 계산하여 저장합니다. <code class=\"highlighter-rouge\">moments.*</code>은 <code class=\"highlighter-rouge\">double</code>형이기 때문에 <code class=\"highlighter-rouge\">int</code>형식으로 변환합니다.</p>\n\n<p><code class=\"highlighter-rouge\">moments.*</code>에는 <code class=\"highlighter-rouge\">Spatial Moments</code>, <code class=\"highlighter-rouge\">Central Moments</code>가 저장되어 있으며, 계산을 통하여 <code class=\"highlighter-rouge\">Central Normalized Moments</code>를 얻을 수 있습니다.</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">Spatial Moments</code> : M00, M01, M02, M03, M10, M11, M12, M20, M21, M30</li>\n  <li><code class=\"highlighter-rouge\">Central Moments</code> : Mu02, Mu03, Mu11, Mu12, Mu20, Mu21, Mu30</li>\n  <li><code class=\"highlighter-rouge\">Central Normalized Moments</code> : Nu02, Nu03, Nu11, Nu12, Nu20, Nu21, Nu30</li>\n  <li>Mu00 = M00, Mu01 = 0, Mu10 = 0</li>\n  <li>Nu00 = 1, Nu01 = 0, Nu10 = 0</li>\n</ul>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">질량 중심 공식</code>\n<a href=\"/assets/images/C/opencv/ch24/2.png\"><img src=\"/assets/images/C/opencv/ch24/2.png\" alt=\"2\" /></a>\n<br />\n<code class=\"highlighter-rouge\">Central Normalized Moments 공식</code>\n<a href=\"/assets/images/C/opencv/ch24/3.PNG\"><img src=\"/assets/images/C/opencv/ch24/3.PNG\" alt=\"3\" /></a>\n<br /></p>\n\n<p>위의 공식을 이용하여 <code class=\"highlighter-rouge\">중심점</code>과 <code class=\"highlighter-rouge\">Central Normalized Moments</code>를 구할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch24/4.PNG\"><img src=\"/assets/images/C/opencv/ch24/4.PNG\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 23강 - 블록 껍질",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-23/",
      "date"     : "2017-11-15 00:00:00 +0900",
  "content"   : "<h3 id=\"블록-껍질-convexhull\">블록 껍질 (ConvexHull)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch23/1.png\"><img src=\"/assets/images/C/opencv/ch23/1.png\" alt=\"1\" /></a>\n영상이나 이미지의 <code class=\"highlighter-rouge\">외곽점들을 잇기</code> 위해 사용합니다. 영상이나 이미지에서 <code class=\"highlighter-rouge\">Contour</code>와 <code class=\"highlighter-rouge\">ConvexHull2</code>를 이용해 최외곽점들이 연결된 다각형을 만들 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">bin</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">convex</span><span class=\"p\">;</span>        \n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">RgbToGray</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"m\">150</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">bin</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">ConvexHull</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">convex</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvMemStorage</span> <span class=\"n\">Storage</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMemStorage</span><span class=\"p\">();</span>\n            <span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">contours</span><span class=\"p\">;</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FindContours</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">ContourRetrieval</span><span class=\"p\">.</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">ContourChain</span><span class=\"p\">.</span><span class=\"n\">ApproxNone</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">apcon_seq</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ApproxPoly</span><span class=\"p\">(</span><span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"n\">ApproxPolyMethod</span><span class=\"p\">.</span><span class=\"n\">DP</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"k\">true</span><span class=\"p\">);</span>\n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">c</span> <span class=\"p\">=</span> <span class=\"n\">apcon_seq</span><span class=\"p\">;</span> <span class=\"n\">c</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">;</span> <span class=\"n\">c</span> <span class=\"p\">=</span> <span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">HNext</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">CvPoint</span><span class=\"p\">[]</span> <span class=\"n\">ptseq</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvPoint</span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">Total</span><span class=\"p\">];</span>\n\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">Total</span> <span class=\"p\">&gt;</span> <span class=\"m\">4</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">Total</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"n\">CvPoint</span><span class=\"p\">?</span> <span class=\"n\">p</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetSeqElem</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">);</span>\n                        <span class=\"n\">ptseq</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvPoint</span>\n                        <span class=\"p\">{</span>\n                            <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">,</span>\n                            <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">.</span><span class=\"n\">Y</span>\n                        <span class=\"p\">};</span>\n                    <span class=\"p\">}</span>\n\n                    <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"n\">CvPoint</span> <span class=\"n\">pt</span> <span class=\"k\">in</span> <span class=\"n\">ptseq</span><span class=\"p\">)</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">convex</span><span class=\"p\">,</span> <span class=\"n\">pt</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n                    <span class=\"p\">}</span>\n\n                    <span class=\"n\">CvPoint</span><span class=\"p\">[]</span> <span class=\"n\">hull</span><span class=\"p\">;</span>\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ConvexHull2</span><span class=\"p\">(</span><span class=\"n\">ptseq</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">hull</span><span class=\"p\">,</span> <span class=\"n\">ConvexHullOrientation</span><span class=\"p\">.</span><span class=\"n\">Clockwise</span><span class=\"p\">);</span>\n\n                    <span class=\"n\">CvPoint</span> <span class=\"n\">pt0</span> <span class=\"p\">=</span> <span class=\"n\">hull</span><span class=\"p\">.</span><span class=\"nf\">Last</span><span class=\"p\">();</span>\n                    <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"n\">CvPoint</span> <span class=\"n\">pt</span> <span class=\"k\">in</span> <span class=\"n\">hull</span><span class=\"p\">)</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Line</span><span class=\"p\">(</span><span class=\"n\">convex</span><span class=\"p\">,</span> <span class=\"n\">pt0</span><span class=\"p\">,</span> <span class=\"n\">pt</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Green</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n                        <span class=\"n\">pt0</span> <span class=\"p\">=</span> <span class=\"n\">pt</span><span class=\"p\">;</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>  \n            <span class=\"k\">return</span> <span class=\"n\">convex</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">bin</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">);</span>        \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">convex</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">convex</span><span class=\"p\">);</span>        \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">convex</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>검은 이미지인 <code class=\"highlighter-rouge\">convex</code>과 Binary 이미지인 <code class=\"highlighter-rouge\">bin</code>을 선언하고 적용시킵니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">convex</code>는 원본을 복사하지 않아 <code class=\"highlighter-rouge\">검은색 이미지</code>입니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvMemStorage</span> <span class=\"n\">Storage</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMemStorage</span><span class=\"p\">();</span>\n<span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">contours</span><span class=\"p\">;</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FindContours</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">ContourRetrieval</span><span class=\"p\">.</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">ContourChain</span><span class=\"p\">.</span><span class=\"n\">ApproxNone</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>윤곽(Contour)을 검출하기 위하여 <code class=\"highlighter-rouge\">Storage</code>, <code class=\"highlighter-rouge\">contours</code>를 선언하고 <code class=\"highlighter-rouge\">Cv.FindContours()</code>를 적용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">Contour 알아보기</code> : <a href=\"https://076923.github.io/posts/C-opencv-21/\">20강 바로가기</a></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">apcon_seq</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ApproxPoly</span><span class=\"p\">(</span><span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"n\">ApproxPolyMethod</span><span class=\"p\">.</span><span class=\"n\">DP</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"k\">true</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>다각형 곡선을 근사화 하기 위해 <code class=\"highlighter-rouge\">Cv.ApproxPoly()</code>를 사용하여 근사합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">ApproxPoly 알아보기</code> : <a href=\"https://076923.github.io/posts/C-opencv-22/\">22강 바로가기</a></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">c</span> <span class=\"p\">=</span> <span class=\"n\">apcon_seq</span><span class=\"p\">;</span> <span class=\"n\">c</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">;</span> <span class=\"n\">c</span> <span class=\"p\">=</span> <span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">HNext</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">CvPoint</span><span class=\"p\">[]</span> <span class=\"n\">ptseq</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvPoint</span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">Total</span><span class=\"p\">];</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">Total</span> <span class=\"p\">&gt;</span> <span class=\"m\">4</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">Total</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">CvPoint</span><span class=\"p\">?</span> <span class=\"n\">p</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetSeqElem</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">);</span>\n            <span class=\"n\">ptseq</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvPoint</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">,</span>\n                <span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">.</span><span class=\"n\">Y</span>\n            <span class=\"p\">};</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"n\">CvPoint</span> <span class=\"n\">pt</span> <span class=\"k\">in</span> <span class=\"n\">ptseq</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">convex</span><span class=\"p\">,</span> <span class=\"n\">pt</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">CvPoint</span><span class=\"p\">[]</span> <span class=\"n\">hull</span><span class=\"p\">;</span>\n        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ConvexHull2</span><span class=\"p\">(</span><span class=\"n\">ptseq</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">hull</span><span class=\"p\">,</span> <span class=\"n\">ConvexHullOrientation</span><span class=\"p\">.</span><span class=\"n\">Clockwise</span><span class=\"p\">);</span>\n\n        <span class=\"n\">CvPoint</span> <span class=\"n\">pt0</span> <span class=\"p\">=</span> <span class=\"n\">hull</span><span class=\"p\">.</span><span class=\"nf\">Last</span><span class=\"p\">();</span>\n        <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"n\">CvPoint</span> <span class=\"n\">pt</span> <span class=\"k\">in</span> <span class=\"n\">hull</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Line</span><span class=\"p\">(</span><span class=\"n\">convex</span><span class=\"p\">,</span> <span class=\"n\">pt0</span><span class=\"p\">,</span> <span class=\"n\">pt</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Green</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n            <span class=\"n\">pt0</span> <span class=\"p\">=</span> <span class=\"n\">pt</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>  </code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">if</code>문 까지는 <code class=\"highlighter-rouge\">22강</code>과 흡사합니다. 코너를 검출하기 위해 사용합니다. 자세한 사항은 <code class=\"highlighter-rouge\">22강</code>의 설명을 참고하시기 바랍니다.</p>\n\n<p><code class=\"highlighter-rouge\">CvPoint[] ptseq = new CvPoint[c.Total]</code>을 이용하여 다각형을 만들기 위해 생성자를 만듭니다. 생성될 <strong>다각형과 다각형 안의 모든 점의 개수</strong>는 <code class=\"highlighter-rouge\">c.Total</code>값과 동일합니다.</p>\n\n<p><code class=\"highlighter-rouge\">ptseq[i] = new CvPoint</code>를 이용하여 하나의 <strong>다각형 안에 있는 점의 좌표들을 배열로 저장</strong>합니다. 이 정보들을 통하여 최외곽점들을 알 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">ptseq[i] = new CvPoint{ ... }</code>에서 각 점들의 위치를 저장합니다.</p>\n\n<p><code class=\"highlighter-rouge\">foreach</code>문을 이용하여 모든 점들을 그립니다. 이 구문은 점을 표현하기 위한 구문이므로 <strong>생략하셔도 가능</strong>합니다.</p>\n\n<p><code class=\"highlighter-rouge\">CvPoint[] hull</code>을 선언합니다. 이 구문은 최 상단의 <code class=\"highlighter-rouge\">for</code>문 밖에 선언하셔도 됩니다. 코드의 원활한 설명을 위하여 <code class=\"highlighter-rouge\">for</code>문 안에 삽입하였습니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.ConvexHull2()</code>를 이용하여 블록 껍질을 찾습니다. <code class=\"highlighter-rouge\">ConvexHull2(코너점들의 집합, 최외곽 점, 회전 방향)</code>입니다. 코너점들을 이용하여 최외곽점들을 찾습니다. <code class=\"highlighter-rouge\">ConvexHullOrientation</code>은 시계방향인 <code class=\"highlighter-rouge\">Clockwise</code>와 반시계방향인 <code class=\"highlighter-rouge\">Counterclockwise</code>가 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">CvPoint pt0 = hull.Last()</code>을 이용하여 블록 껍질을 만들기 위해 <strong>최초 지점</strong>을 설정합니다.</p>\n\n<p>모든 점들을 그리는 방법과 동일하게 <code class=\"highlighter-rouge\">foreach</code>문을 이용하여 선들을 연결합니다. <code class=\"highlighter-rouge\">pt0</code>를 현재의 <code class=\"highlighter-rouge\">pt</code>점으로 대체해서 <strong>다음 지점과 연결</strong>되게 만듭니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch23/2.png\"><img src=\"/assets/images/C/opencv/ch23/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 22강 - 코너 검출 (2)",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-22/",
      "date"     : "2017-11-14 00:00:00 +0900",
  "content"   : "<h3 id=\"코너-corner\">코너 (Corner)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch22/1.png\"><img src=\"/assets/images/C/opencv/ch22/1.png\" alt=\"1\" /></a>\n영상이나 이미지의 <code class=\"highlighter-rouge\">모서리(코너)를 검출</code>하기 위해 사용합니다. 영상이나 이미지에서 <code class=\"highlighter-rouge\">Contour</code>와 <code class=\"highlighter-rouge\">ApproxPoly</code>를 이용하여 검출 할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">bin</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">apcon</span><span class=\"p\">;</span>        \n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">RgbToGray</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"m\">200</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">bin</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">ApproxPoly_Contour</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">apcon</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">apcon</span><span class=\"p\">);</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvMemStorage</span> <span class=\"n\">Storage</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMemStorage</span><span class=\"p\">();</span>\n            <span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">contours</span><span class=\"p\">;</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FindContours</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">ContourRetrieval</span><span class=\"p\">.</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">ContourChain</span><span class=\"p\">.</span><span class=\"n\">ApproxNone</span><span class=\"p\">);</span>\n\n            <span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">apcon_seq</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ApproxPoly</span><span class=\"p\">(</span><span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"n\">ApproxPolyMethod</span><span class=\"p\">.</span><span class=\"n\">DP</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"k\">true</span><span class=\"p\">);</span>\n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">c</span> <span class=\"p\">=</span> <span class=\"n\">apcon_seq</span><span class=\"p\">;</span> <span class=\"n\">c</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">;</span> <span class=\"n\">c</span> <span class=\"p\">=</span> <span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">HNext</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">Total</span> <span class=\"p\">&gt;</span> <span class=\"m\">4</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">Total</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"n\">CvPoint</span><span class=\"p\">?</span> <span class=\"n\">p</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetSeqElem</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">);</span>\n                        <span class=\"n\">CvPoint</span> <span class=\"n\">conpt</span><span class=\"p\">;</span>\n                        <span class=\"n\">conpt</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">;</span>\n                        <span class=\"n\">conpt</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">;</span>\n\n                        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">apcon</span><span class=\"p\">,</span> <span class=\"n\">conpt</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Black</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">return</span> <span class=\"n\">apcon</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">bin</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">);</span>        \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">apcon</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">apcon</span><span class=\"p\">);</span>        \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">apcon</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">apcon</span><span class=\"p\">);</span>\n<span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>원본 이미지를 복사한 <code class=\"highlighter-rouge\">apcon</code>과 Binary 이미지인 <code class=\"highlighter-rouge\">bin</code>을 선언하고 적용시킵니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvMemStorage</span> <span class=\"n\">Storage</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMemStorage</span><span class=\"p\">();</span>\n<span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">contours</span><span class=\"p\">;</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FindContours</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">ContourRetrieval</span><span class=\"p\">.</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">ContourChain</span><span class=\"p\">.</span><span class=\"n\">ApproxNone</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>윤곽(Contour)을 검출하기 위하여 <code class=\"highlighter-rouge\">Storage</code>, <code class=\"highlighter-rouge\">contours</code>를 선언하고 <code class=\"highlighter-rouge\">Cv.FindContours()</code>를 적용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">Contour 알아보기</code> : <a href=\"https://076923.github.io/posts/C-opencv-20/\">20강 바로가기</a></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">apcon_seq</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ApproxPoly</span><span class=\"p\">(</span><span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"n\">ApproxPolyMethod</span><span class=\"p\">.</span><span class=\"n\">DP</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"k\">true</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.ApproxPoly()</code>를 이용하여 다각형 곡선을 근사합니다. <code class=\"highlighter-rouge\">Cv.ApproxPoly(시퀸스, 자료구조의 크기, 메모리 저장소, 근사방법, 근사정확도, 시퀀스결정)</code>입니다. <code class=\"highlighter-rouge\">근사정확도</code>의 값이 낮을수록 세밀하며, <strong>너무 높거나 낮을 경우 코너점이 너무 많이 검출되거나 적게 검출됩니다.</strong> <code class=\"highlighter-rouge\">시퀀스결정</code>은 단일시퀀스로 근사화하기 위해 <code class=\"highlighter-rouge\">true</code>로 설정합니다.</p>\n\n<ul>\n  <li>Tip : 근사방법은 <code class=\"highlighter-rouge\">Douglas-Peucker Algorithm</code>인 ApproxPolyMethod.DP만 사용할 수 있습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">c</span> <span class=\"p\">=</span> <span class=\"n\">apcon_seq</span><span class=\"p\">;</span> <span class=\"n\">c</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">;</span> <span class=\"n\">c</span> <span class=\"p\">=</span> <span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">HNext</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">Total</span> <span class=\"p\">&gt;</span> <span class=\"m\">4</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">Total</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">CvPoint</span><span class=\"p\">?</span> <span class=\"n\">p</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetSeqElem</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">);</span>\n            <span class=\"n\">CvPoint</span> <span class=\"n\">conpt</span><span class=\"p\">;</span>\n            <span class=\"n\">conpt</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">=</span> <span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">;</span>\n            <span class=\"n\">conpt</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">=</span> <span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">;</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">apcon</span><span class=\"p\">,</span> <span class=\"n\">conpt</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Black</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">for</code>문을 이용하여 코너를 검출합니다. <code class=\"highlighter-rouge\">apcon_seq</code>를 변수로 하여 검출합니다. <code class=\"highlighter-rouge\">c</code>값이 <code class=\"highlighter-rouge\">null</code>값이 라면 멈추며, <code class=\"highlighter-rouge\">c.HNext</code>를 이용하여 다음 값으로 넘어갑니다.</p>\n\n<p><code class=\"highlighter-rouge\">if</code>문을 이용하여 코너점의 개수를 파악하여 <code class=\"highlighter-rouge\">4개보다 적으면 무시</code>하게 합니다. 화면상의 각 모서리도 하나의 물체(덩어리)이며 코너점으로 판단하게됩니다. 화면의 모서리 부분을 무시하기 위해 <strong>5개 이상의 코너점부터 검출합니다.</strong></p>\n\n<p><code class=\"highlighter-rouge\">c</code>는 검출된 하나의 물체(덩어리)이며, 그때의 <code class=\"highlighter-rouge\">c.Total</code>이 그 물체(덩어리)에 포함된 코너점입니다.</p>\n\n<p>다시 <code class=\"highlighter-rouge\">for</code>문을 이용하여 검출된 코너점들을 그려줍니다. <code class=\"highlighter-rouge\">Cv.GetSeqElem()</code>을 이용하여 해당 인덱스에 따라 시퀀스 요소에 대한 포인터를 반환합니다. <code class=\"highlighter-rouge\">Cv.GetSeqElem(시퀀스, 인덱스)</code>입니다. <code class=\"highlighter-rouge\">conpt.X</code>와 <code class=\"highlighter-rouge\">conpt.Y</code>에 받아온 포인터의 값을 저장합니다.</p>\n\n<p>그 후, <code class=\"highlighter-rouge\">Cv.Circle()</code>을 이용하여 원을 그려 확인합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"no-change\">No Change</h2>\n<p><a href=\"/assets/images/C/opencv/ch22/2.png\"><img src=\"/assets/images/C/opencv/ch22/2.png\" alt=\"2\" /></a>\n<br /></p>\n<h2 id=\"approxpoly---근사정확도--1\">ApproxPoly - 근사정확도 = 1</h2>\n<p><a href=\"/assets/images/C/opencv/ch22/3.png\"><img src=\"/assets/images/C/opencv/ch22/3.png\" alt=\"3\" /></a>\n<br /></p>\n<h2 id=\"approxpoly---시퀀스결정--false\">ApproxPoly - 시퀀스결정 = false</h2>\n<p><a href=\"/assets/images/C/opencv/ch22/4.png\"><img src=\"/assets/images/C/opencv/ch22/4.png\" alt=\"4\" /></a>\n<br /></p>\n<h2 id=\"if---ctotal--3\">if - c.total &gt; 3</h2>\n<p><a href=\"/assets/images/C/opencv/ch22/5.png\"><img src=\"/assets/images/C/opencv/ch22/5.png\" alt=\"4\" /></a>\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 21강 - 코너 검출 (1)",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-21/",
      "date"     : "2017-11-09 00:00:00 +0900",
  "content"   : "<h3 id=\"코너-corner\">코너 (Corner)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch21/1.png\"><img src=\"/assets/images/C/opencv/ch21/1.png\" alt=\"1\" /></a>\n영상이나 이미지의 <code class=\"highlighter-rouge\">모서리(코너)를 검출</code>하기 위해 사용합니다. 영상이나 이미지에서 <code class=\"highlighter-rouge\">Good Feature to Track</code> 방법과 <code class=\"highlighter-rouge\">Harris Corner Detector</code> 방법을 이용하여 검출 할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h2 id=\"good-feature-to-track\">Good Feature to Track</h2>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">gray</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">corner</span><span class=\"p\">;</span>        \n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">gray</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GoodFeaturesToTrack</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">corner</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>   \n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">eigImg</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">tempImg</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">corner</span><span class=\"p\">);</span>        \n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n            \n            <span class=\"n\">CvPoint2D32f</span><span class=\"p\">[]</span> <span class=\"n\">corners</span><span class=\"p\">;</span>\n            <span class=\"kt\">int</span> <span class=\"n\">cornerCount</span> <span class=\"p\">=</span> <span class=\"m\">150</span><span class=\"p\">;</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GoodFeaturesToTrack</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">eigImg</span><span class=\"p\">,</span> <span class=\"n\">tempImg</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">corners</span><span class=\"p\">,</span> <span class=\"k\">ref</span> <span class=\"n\">cornerCount</span><span class=\"p\">,</span> <span class=\"m\">0.01</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">);</span>\n            \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FindCornerSubPix</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">corners</span><span class=\"p\">,</span> <span class=\"n\">cornerCount</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(-</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvTermCriteria</span><span class=\"p\">(</span><span class=\"m\">20</span><span class=\"p\">,</span> <span class=\"m\">0.03</span><span class=\"p\">));</span>                 \n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">cornerCount</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>        \n                <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">corner</span><span class=\"p\">,</span> <span class=\"n\">corners</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Black</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>       \n            <span class=\"p\">}</span> \n                          \n            <span class=\"k\">return</span> <span class=\"n\">corner</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">gray</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">);</span>        \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">corner</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">corner</span><span class=\"p\">);</span>        \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">corner</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>   \n<span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">eigImg</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">tempImg</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>코너는 <code class=\"highlighter-rouge\">8Bit 단일 채널</code>, <code class=\"highlighter-rouge\">GrayScale</code> 영상으로 검출합니다. 출력할 이미지인 <code class=\"highlighter-rouge\">corner</code>와 검색할 이미지인 <code class=\"highlighter-rouge\">gray</code>를 만듭니다. 또한, <code class=\"highlighter-rouge\">GoodFeaturesToTrack</code>에 사용하기 위한 매개변수 이미지 <code class=\"highlighter-rouge\">eigImg</code>, <code class=\"highlighter-rouge\">tempImg</code>를 만들어줍니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">corner</span><span class=\"p\">);</span>        \n<span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">corner</code>에 원본 이미지를 복사하여 덮어씌웁니다. <code class=\"highlighter-rouge\">gray</code>는 <code class=\"highlighter-rouge\">GrayScale</code>을 적용시킵니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvPoint2D32f</span><span class=\"p\">[]</span> <span class=\"n\">corners</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">cornerCount</span> <span class=\"p\">=</span> <span class=\"m\">150</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">corners</code>는 검색된 코너의 벡터 값이며, <code class=\"highlighter-rouge\">cornerCount</code>는 반환할 코너의 최대 개수입니다. 이 값 보다 더 많은 코너가 검출되면 가장 값이 높은 코너가 반환됩니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GoodFeaturesToTrack</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">eigImg</span><span class=\"p\">,</span> <span class=\"n\">tempImg</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">corners</span><span class=\"p\">,</span> <span class=\"k\">ref</span> <span class=\"n\">cornerCount</span><span class=\"p\">,</span> <span class=\"m\">0.01</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.GoodFeaturesToTrack()</code>를 이용하여 <code class=\"highlighter-rouge\">코너</code>들을 검출합니다. <code class=\"highlighter-rouge\">Cv.GoodFeaturesToTrack(그레이스케일, eigImg, tempImg, 코너점, 코너의 개수, 퀄리티레벨, 최소거리)</code>입니다.</p>\n\n<ul>\n  <li>\n    <p><code class=\"highlighter-rouge\">qualityLevel(퀄리티레벨)</code> : <code class=\"highlighter-rouge\">가장 좋은 코너의 측정 값에 퀄리티레벨 수치를 곱한 값 보다 낮은 값이면 그 코너들은 무시</code>됩니다. 만약, 가장 좋은 코너의 측정 값이 1000에 퀄리티레벨이 0.01이라면 10이하의 코너 측정값은 검출하지 않습니다.</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">minDistance(최소거리)</code> : 검출된 코너들의 최소거리입니다. <code class=\"highlighter-rouge\">최소거리의 이상의 값만 검출</code>합니다. 만약 최소거리가 5라면, 최소거리가 5 이하인 값은 코너로 검출하지 않습니다.</p>\n  </li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FindCornerSubPix</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">corners</span><span class=\"p\">,</span> <span class=\"n\">cornerCount</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(-</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvTermCriteria</span><span class=\"p\">(</span><span class=\"m\">20</span><span class=\"p\">,</span> <span class=\"m\">0.03</span><span class=\"p\">));</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.FindCornerSubPix()</code>를 이용하여 코너점들의 위치를 수정합니다. <code class=\"highlighter-rouge\">Cv.FindCornerSubPix(그레이스케일, 코너점, 코너의 개수, win Size, zeroZone Size, 기준)</code>입니다.</p>\n\n<ul>\n  <li>\n    <p><code class=\"highlighter-rouge\">win Size</code> : 검출하려는 부분의 절반 크기입니다. 만약, (3, 3) 일 경우 (3 * 2 + 1) x (3 * 2 + 1) = 7x7 의 부분을 검색합니다.</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">zeroZone Size</code> : 검출에서 제외하려는 부분의 절반 크기입니다. win과 동일한 계산방법을 사용합니다.  (-1, -1)은 검출에서 제외하려는 부분이 없음을 의미합니다.</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">Criteria(기준)</code> : 코너 정밀화 반복작업입니다. <code class=\"highlighter-rouge\">new CvTermCriteria(maxlter, epsilon)</code>입니다. <code class=\"highlighter-rouge\">maxlter</code>는 입력된 수치 만큼 반복작업하며, <code class=\"highlighter-rouge\">epsilon</code>보다 값이 낮아지면 종료합니다.</p>\n  </li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">cornerCount</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>        \n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">corner</span><span class=\"p\">,</span> <span class=\"n\">corners</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Black</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>       \n<span class=\"p\">}</span> </code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">for</code>문과 <code class=\"highlighter-rouge\">Cv.Circle</code>을 이용하여 검출된 코너점들을 <code class=\"highlighter-rouge\">corner</code>이미지에 그립니다.</p>\n\n<h2 id=\"good-feature-to-track---harris-corner-detector\">Good Feature to Track - Harris Corner Detector</h2>\n\n<h3 id=\"class-1\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">gray</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">corner</span><span class=\"p\">;</span>        \n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">gray</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GoodFeaturesToTrack</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">corner</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>   \n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">eigImg</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">tempImg</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">corner</span><span class=\"p\">);</span>\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n            \n            <span class=\"n\">CvPoint2D32f</span><span class=\"p\">[]</span> <span class=\"n\">corners</span><span class=\"p\">;</span>\n            <span class=\"kt\">int</span> <span class=\"n\">cornerCount</span> <span class=\"p\">=</span> <span class=\"m\">150</span><span class=\"p\">;</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GoodFeaturesToTrack</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">eigImg</span><span class=\"p\">,</span> <span class=\"n\">tempImg</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">corners</span><span class=\"p\">,</span> <span class=\"k\">ref</span> <span class=\"n\">cornerCount</span><span class=\"p\">,</span> <span class=\"m\">0.01</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"k\">true</span><span class=\"p\">,</span> <span class=\"m\">0.01</span><span class=\"p\">);</span>\n                    \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FindCornerSubPix</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">corners</span><span class=\"p\">,</span> <span class=\"n\">cornerCount</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(-</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvTermCriteria</span><span class=\"p\">(</span><span class=\"m\">20</span><span class=\"p\">,</span> <span class=\"m\">0.03</span><span class=\"p\">));</span>                 \n\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">cornerCount</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>        \n                <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Circle</span><span class=\"p\">(</span><span class=\"n\">corner</span><span class=\"p\">,</span> <span class=\"n\">corners</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Black</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>       \n            <span class=\"p\">}</span> \n                          \n            <span class=\"k\">return</span> <span class=\"n\">corner</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">gray</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">);</span>        \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">corner</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">corner</span><span class=\"p\">);</span>        \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<h3 id=\"class-code-1\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GoodFeaturesToTrack</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">eigImg</span><span class=\"p\">,</span> <span class=\"n\">tempImg</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">corners</span><span class=\"p\">,</span> <span class=\"k\">ref</span> <span class=\"n\">cornerCount</span><span class=\"p\">,</span> <span class=\"m\">0.01</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"k\">true</span><span class=\"p\">,</span> <span class=\"m\">0.01</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.GoodFeaturesToTrack()</code>를 그대로 이용하여 <code class=\"highlighter-rouge\">Harris Corner Detector</code>를 적용할 수 있습니다. <code class=\"highlighter-rouge\">Cv.GoodFeaturesToTrack()</code>를 이용하여 <code class=\"highlighter-rouge\">코너</code>들을 검출합니다. <code class=\"highlighter-rouge\">Cv.GoodFeaturesToTrack(그레이스케일, eigImg, tempImg, 코너점, 코너의 개수, 퀄리티레벨, 최소거리, 마스크, 블록크기, Harris 방법 사용 유/무, ksize)</code>입니다.</p>\n\n<ul>\n  <li>\n    <p><code class=\"highlighter-rouge\">mask(마스크)</code> : 코너가 감지되는 영역을 지정합니다.</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">blockSize(블록크기)</code> : 코너 계산을 위한 평균 블록의 크기입니다.</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">useHarrisDetector(Haris 방법 사용 유/무)</code> : Harris 방법을 사용할지에 대한 bool값 입니다.</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">ksize</code> : Harris 방법의 매개 변수입니다.</p>\n  </li>\n</ul>\n\n<h2 id=\"harris-corner-detector\">Harris Corner Detector</h2>\n\n<h3 id=\"class-2\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">gray</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">corner</span><span class=\"p\">;</span>        \n                \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">gray</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">HarrisCorner</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">corner</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">F32</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CornerHarris</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">corner</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">ApertureSize</span><span class=\"p\">.</span><span class=\"n\">Size3</span><span class=\"p\">,</span> <span class=\"m\">0.05</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Dilate</span><span class=\"p\">(</span><span class=\"n\">corner</span><span class=\"p\">,</span> <span class=\"n\">corner</span><span class=\"p\">);</span>\n                    \n            <span class=\"k\">return</span> <span class=\"n\">corner</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">gray</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">);</span>        \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">corner</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">corner</span><span class=\"p\">);</span>        \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<h3 id=\"class-code-2\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CornerHarris</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">corner</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">ApertureSize</span><span class=\"p\">.</span><span class=\"n\">Size3</span><span class=\"p\">,</span> <span class=\"m\">0.05</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.CornerHarris()</code>를 이용하여 Harris 방법을 적용합니다. <code class=\"highlighter-rouge\">CvCornerHarris(그레이스케일, 반환이미지, ApertureSize, kisze)</code>를 사용합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Dilate</span><span class=\"p\">(</span><span class=\"n\">corner</span><span class=\"p\">,</span> <span class=\"n\">corner</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Dilate(corner, corner)</code>를 이용하여 이미지에서 이웃한 화소들 중 최대 화소값으로 대체하여 선명하게 만듭니다.</p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"good-feature-to-track-1\">Good Feature to Track</h2>\n<p><a href=\"/assets/images/C/opencv/ch21/2.png\"><img src=\"/assets/images/C/opencv/ch21/2.png\" alt=\"2\" /></a>\n<br /></p>\n<h2 id=\"good-feature-to-track---harris-corner-detector-1\">Good Feature to Track - Harris Corner Detector</h2>\n<p><a href=\"/assets/images/C/opencv/ch21/3.png\"><img src=\"/assets/images/C/opencv/ch21/3.png\" alt=\"3\" /></a>\n<br /></p>\n<h2 id=\"harris-corner-detector-1\">Harris Corner Detector</h2>\n<p><a href=\"/assets/images/C/opencv/ch21/4.png\"><img src=\"/assets/images/C/opencv/ch21/4.png\" alt=\"4\" /></a>\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 20강 - 윤곽선 검출",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-20/",
      "date"     : "2017-11-07 00:00:00 +0900",
  "content"   : "<h3 id=\"윤곽선-contour\">윤곽선 (Contour)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch20/1.png\"><img src=\"/assets/images/C/opencv/ch20/1.png\" alt=\"1\" /></a>\n영상이나 이미지의 <code class=\"highlighter-rouge\">윤곽선(컨투어)을 검출</code>하기 위해 사용합니다. 영상이나 이미지에서 <code class=\"highlighter-rouge\">외곽과 내곽</code>의 <strong>윤곽선(컨투어)을 검출</strong> 할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h2 id=\"findcontours\">FindContours</h2>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">bin</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">con</span><span class=\"p\">;</span>        \n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">RgbToGray</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"m\">150</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">bin</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Contour</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">con</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">con</span><span class=\"p\">);</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n            \n            <span class=\"n\">CvMemStorage</span> <span class=\"n\">Storage</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMemStorage</span><span class=\"p\">();</span>\n            <span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">contours</span><span class=\"p\">;</span>\n                    \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FindContours</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">ContourRetrieval</span><span class=\"p\">.</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">ContourChain</span><span class=\"p\">.</span><span class=\"n\">ApproxNone</span><span class=\"p\">);</span>        \n            \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawContours</span><span class=\"p\">(</span><span class=\"n\">con</span><span class=\"p\">,</span> <span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Yellow</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">);</span>      \n            \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ClearSeq</span><span class=\"p\">(</span><span class=\"n\">contours</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseMemStorage</span><span class=\"p\">(</span><span class=\"n\">Storage</span><span class=\"p\">);</span>             \n                                         \n            <span class=\"k\">return</span> <span class=\"n\">con</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">bin</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">);</span>        \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">con</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">con</span><span class=\"p\">);</span>        \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">con</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>컨투어는 <code class=\"highlighter-rouge\">8Bit 단일 채널</code>, <code class=\"highlighter-rouge\">Binary</code> 영상으로 검출합니다. 출력할 이미지인 <code class=\"highlighter-rouge\">con</code>과 검색할 이미지인 <code class=\"highlighter-rouge\">bin</code>을 만듭니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">con</span><span class=\"p\">);</span>\n<span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">con</code>과 <code class=\"highlighter-rouge\">bin</code>을 만들고 이미지를 복사하고 덮어씌웁니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvMemStorage</span> <span class=\"n\">Storage</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMemStorage</span><span class=\"p\">();</span>\n<span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">contours</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Storage</code>는 윤곽선(컨투어)의 <code class=\"highlighter-rouge\">메모리를 저장</code>합니다. 점의 좌표들이 저장됩니다. <code class=\"highlighter-rouge\">contours</code>는 윤곽선(컨투어)의 <code class=\"highlighter-rouge\">정보</code>와 정수의 <code class=\"highlighter-rouge\">2D 좌표</code>를 저장합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FindContours</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"k\">out</span> <span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">ContourRetrieval</span><span class=\"p\">.</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">ContourChain</span><span class=\"p\">.</span><span class=\"n\">ApproxNone</span><span class=\"p\">);</span> </code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.FindContours()</code>를 이용하여 <code class=\"highlighter-rouge\">모든 윤곽선(컨투어)를 검색</code>합니다. <code class=\"highlighter-rouge\">Cv,FindContours(이진화 이미지, 메모리 저장소, 윤곽선 저장, 자료구조의 크기, 검색 방법, 근사화 방법)</code>을 의미합니다.</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">검색 방법 (ContourRetrieval.*)</code></li>\n</ul>\n\n<p>   * <code class=\"highlighter-rouge\">ContourRetrieval.CComp</code> : 모든 윤곽선을 검색하여 2 단계 계층 구조로 구성합니다. 최상위 레벨은 구성 요소의 외곽(외부) 경계이고, 두 번째 레벨은 내곽(홀)의 경계입니다.</p>\n\n<p>   * <code class=\"highlighter-rouge\">ContourRetrieval.External</code> : 외곽 윤곽선만 검출합니다.</p>\n\n<p>   * <code class=\"highlighter-rouge\">ContourRetrieval.List</code> : 모든 윤곽선을 검출하여 list에 넣습니다.</p>\n\n<p>   * <code class=\"highlighter-rouge\">ContourRetrieval.Tree</code> : 모든 윤곽선을 검출하여 Tree계층 구조로 만듭니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">근사화 방법(ContourChain.*)</code></li>\n</ul>\n\n<p>   * <code class=\"highlighter-rouge\">ContourChain.ApproxNone</code> : 윤곽점들의 모든 점을 반환합니다.</p>\n\n<p>   * <code class=\"highlighter-rouge\">ContourChain.ApproxSimple</code> : 윤곽점들 단순화 수평, 수직 및 대각선 요소를 압축하고 끝점만 남겨 둡니다.</p>\n\n<p>   * <code class=\"highlighter-rouge\">ContourChain.Code</code> : 프리먼 체인 코드에서의 윤곽선으로 적용합니다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>* `ContourChain.ApproxTC89KCOS`, `ContourChain.ApproxTC89L1` : Teh-chin 알고리즘 적용합니다.\n</code></pre></div></div>\n\n<p>   * <code class=\"highlighter-rouge\">ContourChain.LinkRuns</code> : 하나의 수평 세그먼트를 연결하여 완전히 다른 윤곽선 검색 알고리즘을 사용합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawContours</span><span class=\"p\">(</span><span class=\"n\">con</span><span class=\"p\">,</span> <span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Yellow</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.DrawContours()</code>를 이용하여 컨투어를 그립니다. <code class=\"highlighter-rouge\">Cv.DrawContours(결과, 윤곽선, 외곽윤곽색상, 내곽윤곽색상, 최대레벨, 두께, 선형타입)</code>입니다.</p>\n\n<p>최대레벨은 0일 경우 지정된 윤곽선만 그리며, 1일 경우 윤곽선과 중첩 된 모든 윤곽선을 그립니다. 2일 경우 윤곽선과 중첩된 윤곽선, 중첩에 중첩된 모든 윤곽선을 그립니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ClearSeq</span><span class=\"p\">(</span><span class=\"n\">contours</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseMemStorage</span><span class=\"p\">(</span><span class=\"n\">Storage</span><span class=\"p\">);</span>        </code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.ClearSeq()</code>와 <code class=\"highlighter-rouge\">Cv.ReleaseMemStorage()</code>를 이용하여 초기화 및 메모리를 해제합니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"cvcontourscanner\">CvContourScanner</h2>\n\n<h3 id=\"class-1\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">bin</span><span class=\"p\">;</span>    \n        <span class=\"n\">IplImage</span> <span class=\"n\">con</span><span class=\"p\">;</span>        \n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">RgbToGray</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"m\">150</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">bin</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n                \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Contour</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">con</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">con</span><span class=\"p\">);</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n            \n            <span class=\"n\">CvMemStorage</span> <span class=\"n\">Storage</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvMemStorage</span><span class=\"p\">();</span>\n            <span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">contours</span><span class=\"p\">;</span>\n                    \n            <span class=\"n\">CvContourScanner</span> <span class=\"n\">scanner</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">StartFindContours</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">ContourRetrieval</span><span class=\"p\">.</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">ContourChain</span><span class=\"p\">.</span><span class=\"n\">ApproxNone</span><span class=\"p\">);</span> \n            \n            <span class=\"c1\">// #1        </span>\n            <span class=\"k\">while</span><span class=\"p\">(</span><span class=\"k\">true</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">contours</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FindNextContour</span><span class=\"p\">(</span><span class=\"n\">scanner</span><span class=\"p\">);</span>\n\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">contours</span> <span class=\"p\">==</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"k\">break</span><span class=\"p\">;</span>\n                <span class=\"k\">else</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawContours</span><span class=\"p\">(</span><span class=\"n\">con</span><span class=\"p\">,</span> <span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Yellow</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">);</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">EndFindContours</span><span class=\"p\">(</span><span class=\"n\">scanner</span><span class=\"p\">);</span>                \n           \n            <span class=\"c1\">// #2        </span>\n            <span class=\"c1\">//foreach (CvSeq&lt;CvPoint&gt; c in scanner)</span>\n            <span class=\"c1\">//{</span>\n            <span class=\"c1\">//    con.DrawContours(c, CvColor.Yellow, CvColor.Red, 1, 4, LineType.AntiAlias);</span>\n            <span class=\"c1\">//}</span>\n            <span class=\"c1\">//Cv.ClearSeq(contours);</span>\n            \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseMemStorage</span><span class=\"p\">(</span><span class=\"n\">Storage</span><span class=\"p\">);</span>             \n                                         \n            <span class=\"k\">return</span> <span class=\"n\">con</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">bin</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">);</span>        \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">con</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">con</span><span class=\"p\">);</span>        \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code-1\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvContourScanner</span> <span class=\"n\">scanner</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">StartFindContours</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"n\">CvContour</span><span class=\"p\">.</span><span class=\"n\">SizeOf</span><span class=\"p\">,</span> <span class=\"n\">ContourRetrieval</span><span class=\"p\">.</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">ContourChain</span><span class=\"p\">.</span><span class=\"n\">ApproxNone</span><span class=\"p\">);</span> </code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.StartFindContours()</code>는 <code class=\"highlighter-rouge\">하나의 윤곽선(컨투어)</code>를 찾는데 사용합니다. <code class=\"highlighter-rouge\">Cv.StartFindContours(이진화 이미지, 메모리 저장소, 객체 할당, 검색 방법, 근사화 방법)</code>을 의미합니다. <code class=\"highlighter-rouge\">CvContourScanner</code>는 시퀀스의 정보를 가지고 있습니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">while</span><span class=\"p\">(</span><span class=\"k\">true</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">contours</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">FindNextContour</span><span class=\"p\">(</span><span class=\"n\">scanner</span><span class=\"p\">);</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">contours</span> <span class=\"p\">==</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"k\">else</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawContours</span><span class=\"p\">(</span><span class=\"n\">con</span><span class=\"p\">,</span> <span class=\"n\">contours</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Yellow</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">EndFindContours</span><span class=\"p\">(</span><span class=\"n\">scanner</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">while(true)</code>를 이용하여 한 개씩 찾아 모든 컨투어를 표시합니다. <code class=\"highlighter-rouge\">contours = Cv.FindNextContour(scanner)</code>는 순차적으로 검사합니다. 검사할 컨투어가 없는 경우 <code class=\"highlighter-rouge\">null</code> 값을 반환합니다.</p>\n\n<p>이를 이용하여 <code class=\"highlighter-rouge\">if(contours == null)</code>이 될 때 <code class=\"highlighter-rouge\">while</code>문을 종료합니다. 그렇지 않으면 <code class=\"highlighter-rouge\">Cv.DrawContours()</code>를 이용하여 컨투어를 하나씩 그려냅니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.EndFindContours()</code>는 스캐닝이 끝나면 스캐너를 완료상태로 만듭니다. 시퀀스의 첫 원소에 대한 포인터를 반환합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"class-code-2\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"n\">CvSeq</span><span class=\"p\">&lt;</span><span class=\"n\">CvPoint</span><span class=\"p\">&gt;</span> <span class=\"n\">cont</span> <span class=\"k\">in</span> <span class=\"n\">scanner</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">con</span><span class=\"p\">.</span><span class=\"nf\">DrawContours</span><span class=\"p\">(</span><span class=\"n\">cont</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Yellow</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"n\">LineType</span><span class=\"p\">.</span><span class=\"n\">AntiAlias</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ClearSeq</span><span class=\"p\">(</span><span class=\"n\">contours</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">foreach</code>문을 이용하여 <code class=\"highlighter-rouge\">scanner</code>로 찾은 모든 컨투어를 그려주는 방법입니다.</p>\n\n<p>3 가지의 방법을 통하여 모든 컨투어 또는 일부 컨투어만 검출 할 수 있습니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">if</code>, <code class=\"highlighter-rouge\">for</code>, <code class=\"highlighter-rouge\">배열</code> 등을 이용하여 <code class=\"highlighter-rouge\">일부 컨투어만을 검출</code> 할 수 있습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch20/2.png\"><img src=\"/assets/images/C/opencv/ch20/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 19강 - 캡쳐 및 녹화",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-19/",
      "date"     : "2017-10-31 00:00:00 +0900",
  "content"   : "<h3 id=\"캡쳐-및-녹화-capture--record\">캡쳐 및 녹화 (Capture &amp; Record)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch19/1.png\"><img src=\"/assets/images/C/opencv/ch19/1.png\" alt=\"1\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">캡쳐하거나 녹화</code>하기 위해 사용합니다. 영상이나 이미지를 <code class=\"highlighter-rouge\">연속적 또는 순간적으로 캡쳐하거나 녹화</code>할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"프로젝트-구성\">프로젝트 구성</h3>\n<hr />\n<p>도구상자에서 <code class=\"highlighter-rouge\">Timer</code>, <code class=\"highlighter-rouge\">Button</code>을 Form1에 생성합니다.</p>\n\n<p><code class=\"highlighter-rouge\">timer2</code>, <code class=\"highlighter-rouge\">button1</code>, <code class=\"highlighter-rouge\">button2</code>,<code class=\"highlighter-rouge\">button3</code>를 생성하며 <code class=\"highlighter-rouge\">timer2</code>의 <code class=\"highlighter-rouge\">Enable</code>은 <code class=\"highlighter-rouge\">False</code>로 <code class=\"highlighter-rouge\">Interval</code>은 <code class=\"highlighter-rouge\">33</code>으로 설정합니다.</p>\n\n<p><code class=\"highlighter-rouge\">3강</code> 또는 <code class=\"highlighter-rouge\">4강</code>의 프로젝트를 그대로 이어서 사용하시면 됩니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"캡쳐-capture\">캡쳐 (Capture)</h3>\n<hr />\n\n<h2 id=\"단일-캡쳐\">단일 캡쳐</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button1_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SaveImage</span><span class=\"p\">(</span><span class=\"s\">\"../../capture.jpg\"</span> <span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.SaveImage()</code>을 사용하여 영상이나 이미지를 캡쳐하여 저장합니다. <code class=\"highlighter-rouge\">Cv.SaveImage(\"경로및이름\", 저장영상)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">Button1</code>을 클릭하면 그 시점의 영상이 캡쳐되어 지정된 경로로 저장됩니다.</p>\n\n<ul>\n  <li>Tip : 연속적으로 캡쳐된 이미지는 <code class=\"highlighter-rouge\">capture.jpg</code>에 덮어씌워집니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"다중-캡쳐\">다중 캡쳐</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button1_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"kt\">string</span> <span class=\"n\">save_name</span> <span class=\"p\">=</span> <span class=\"n\">DateTime</span><span class=\"p\">.</span><span class=\"n\">Now</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">(</span><span class=\"s\">\"yyyy-MM-dd-hh시mm분ss초\"</span><span class=\"p\">);</span>  \n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SaveImage</span><span class=\"p\">(</span><span class=\"s\">\"../../\"</span> <span class=\"p\">+</span> <span class=\"n\">save_name</span> <span class=\"p\">+</span> <span class=\"s\">\".jpg\"</span> <span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Button1</code>을 클릭하면 그 시점의 영상이 캡쳐되어 지정된 경로에 현재시간의 제목으로 저장됩니다.</p>\n\n<p><code class=\"highlighter-rouge\">DateTime.Now</code>을 이용하여 실행된 순간의 시간을 받아옵니다. 이를 제목으로 사용하여 연속된 캡쳐도 저장되게 합니다. <code class=\"highlighter-rouge\">초 단위</code>로 캡쳐시 <code class=\"highlighter-rouge\">단일 캡쳐</code>처럼 덮어씌워지는데, <code class=\"highlighter-rouge\">초 단위</code> 캡쳐를 이용하려면 <code class=\"highlighter-rouge\">배열 또는 타이머</code>등을 이용합니다.</p>\n\n<ul>\n  <li>Tip : 연속적으로 캡쳐된 이미지는 <code class=\"highlighter-rouge\">현재시간</code>을 제목으로 저장됩니다.</li>\n  <li>Tip : 파일의 이름에는 <code class=\"highlighter-rouge\">\\</code>, <code class=\"highlighter-rouge\">/</code>, <code class=\"highlighter-rouge\">:</code>, <code class=\"highlighter-rouge\">*</code>, <code class=\"highlighter-rouge\">?</code>, <code class=\"highlighter-rouge\">\"</code>, <code class=\"highlighter-rouge\">&lt;</code>, <code class=\"highlighter-rouge\">&gt;</code>, <code class=\"highlighter-rouge\">|</code>은 입력될 수 없습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"녹화-record\">녹화 (Record)</h3>\n<hr />\n\n<h2 id=\"단일-녹화\">단일 녹화</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvVideoWriter</span> <span class=\"n\">OpenCV_video</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvVideoWriter</span><span class=\"p\">(</span><span class=\"s\">\"../../Record.avi\"</span><span class=\"p\">,</span> <span class=\"s\">\"XVID\"</span><span class=\"p\">,</span> <span class=\"m\">15</span><span class=\"p\">,</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Size</span><span class=\"p\">(</span><span class=\"m\">640</span><span class=\"p\">,</span> <span class=\"m\">480</span><span class=\"p\">));</span>\n\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">timer2_Tick</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">OpenCV_video</span><span class=\"p\">.</span><span class=\"nf\">WriteFrame</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button2_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">timer2</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button3_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">timer2</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">timer2</code>를 켰다가 끄는 방식으로 원하는 지점에서의 영상을 시작합니다. <code class=\"highlighter-rouge\">button2</code>는 <code class=\"highlighter-rouge\">timer2</code>를 <code class=\"highlighter-rouge\">Enable = true</code>하여 녹화를 시작하며, <code class=\"highlighter-rouge\">button3</code>은 <code class=\"highlighter-rouge\">timer2</code>를 <code class=\"highlighter-rouge\">Enable = false</code>하여 녹화를 중지합니다.</p>\n\n<p>전역변수 <code class=\"highlighter-rouge\">OpenCV_Video</code>를 생성하여 <code class=\"highlighter-rouge\">단일 녹화</code>를 할 수있게 생성합니다. <code class=\"highlighter-rouge\">CvVideoWriter</code>를 사용합니다. <code class=\"highlighter-rouge\">CvVideoWriter(\"경로및이름\", \"FourCC\", fps, 영상크기)</code>를 입력합니다.</p>\n\n<ul>\n  <li>\n    <p>Tip : <code class=\"highlighter-rouge\">FourCC(Four Character Code)</code> : 디지털 미디어 포맷 코드입니다. 즉, 코덱의 인코딩 방식을 의미합니다.</p>\n\n    <ul>\n      <li><code class=\"highlighter-rouge\">CVID</code>, <code class=\"highlighter-rouge\">Default</code>, <code class=\"highlighter-rouge\">DIB</code>, <code class=\"highlighter-rouge\">DIVX</code>, <code class=\"highlighter-rouge\">H261</code>, <code class=\"highlighter-rouge\">H263</code>, <code class=\"highlighter-rouge\">H264</code>, <code class=\"highlighter-rouge\">IV32</code>, <code class=\"highlighter-rouge\">IV41</code>, <code class=\"highlighter-rouge\">IV50</code>, <code class=\"highlighter-rouge\">IYUB</code>, <code class=\"highlighter-rouge\">MJPG</code>, <code class=\"highlighter-rouge\">MP42</code>, <code class=\"highlighter-rouge\">MP43</code>, <code class=\"highlighter-rouge\">MPG4</code>, <code class=\"highlighter-rouge\">MSVC</code>, <code class=\"highlighter-rouge\">PIM1</code>, <code class=\"highlighter-rouge\">Prompt</code>, <code class=\"highlighter-rouge\">XVID</code>가 있습니다.</li>\n    </ul>\n  </li>\n  <li>\n    <p>Tip : <code class=\"highlighter-rouge\">fps(Frame Per Second)</code> : 영상이 바뀌는 속도를 의미합니다. 즉, 화면의 부드러움을 의미합니다.</p>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">button2</code>를 누르는 순간부터 <code class=\"highlighter-rouge\">button3</code>을 누를 때까지 영상이 녹화되며, 다시 <code class=\"highlighter-rouge\">button2</code>를 누르고 <code class=\"highlighter-rouge\">button3</code>을 누르면 새롭게 저장되는 것이 아니라 영상이 <code class=\"highlighter-rouge\">덧 붙여져서 하나의 영상으로 생성</code>됩니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"다중-녹화\">다중 녹화</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvVideoWriter</span> <span class=\"n\">OpenCV_video</span>\n\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">timer2_Tick</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">OpenCV_video</span><span class=\"p\">.</span><span class=\"nf\">WriteFrame</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button2_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"kt\">string</span> <span class=\"n\">save_name</span> <span class=\"p\">=</span> <span class=\"n\">DateTime</span><span class=\"p\">.</span><span class=\"n\">Now</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">(</span><span class=\"s\">\"yyyy-MM-dd-hh시mm분ss초\"</span><span class=\"p\">);</span>\n    <span class=\"n\">OpenCV_video</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvVideoWriter</span><span class=\"p\">(</span><span class=\"s\">\"../../\"</span> <span class=\"p\">+</span> <span class=\"n\">save_name</span> <span class=\"p\">+</span> <span class=\"s\">\".avi\"</span><span class=\"p\">,</span> <span class=\"s\">\"XVID\"</span><span class=\"p\">,</span> <span class=\"m\">15</span><span class=\"p\">,</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetSize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">));</span>\n    <span class=\"n\">timer2</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button3_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">timer2</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">다중 캡쳐</code> 방식과 동일하며, 다른 점은 <code class=\"highlighter-rouge\">OpenCV_video</code>를 프로그램 실행시 생성시키는 것이 아니라 <code class=\"highlighter-rouge\">button2</code>의 <code class=\"highlighter-rouge\">녹화 시작을 눌렀을 때 생성</code>합니다. 이와 같은 방법은 <code class=\"highlighter-rouge\">button2</code>를 누를 때마다 새롭게 그 때의 시간으로 영상제목을 <code class=\"highlighter-rouge\">생성하여 저장</code>합니다.</p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 18강 - 기하학적 변환",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-18/",
      "date"     : "2017-10-26 00:00:00 +0900",
  "content"   : "<h3 id=\"기하학적-변환-warp-perspective\">기하학적 변환 (Warp Perspective)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch18/1.png\"><img src=\"/assets/images/C/opencv/ch18/1.png\" alt=\"1\" /></a>\n영상이나 이미지 위에 <code class=\"highlighter-rouge\">기하학적으로 변환</code>하기 위해 사용합니다. 영상이나 이미지를 <code class=\"highlighter-rouge\">펼치거나 좁힐 수 있습니다.</code></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">WarpPerspective</code>의 경우 4개의 점을 매핑합니다. <strong>(4개의 점을 이용한 변환)</strong></li>\n  <li>Tip : <code class=\"highlighter-rouge\">WarpAffine</code>의 경우 3개의 점을 매핑합니다. <strong>(3개의 점을 이용한 변환)</strong></li>\n</ul>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">WarpAffie 알아보기</code> : <a href=\"https://076923.github.io/posts/C-opencv-6/\">6강 바로가기</a></p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">perspective</span><span class=\"p\">;</span>        \n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">PerspectiveTransform</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">perspective</span><span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n        \n            <span class=\"kt\">float</span> <span class=\"n\">width</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span>\n            <span class=\"kt\">float</span> <span class=\"n\">height</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span>\n        \n            <span class=\"n\">CvPoint2D32f</span><span class=\"p\">[]</span> <span class=\"n\">srcPoint</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvPoint2D32f</span><span class=\"p\">[</span><span class=\"m\">4</span><span class=\"p\">];</span> \n            <span class=\"n\">CvPoint2D32f</span><span class=\"p\">[]</span> <span class=\"n\">dstPoint</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvPoint2D32f</span><span class=\"p\">[</span><span class=\"m\">4</span><span class=\"p\">];</span>\n        \n            <span class=\"n\">srcPoint</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"m\">195.0f</span><span class=\"p\">,</span> <span class=\"m\">200.0f</span><span class=\"p\">);</span>\n            <span class=\"n\">srcPoint</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"m\">45.0f</span><span class=\"p\">,</span> <span class=\"m\">400.0f</span><span class=\"p\">);</span>\n            <span class=\"n\">srcPoint</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"m\">435.0f</span><span class=\"p\">,</span> <span class=\"m\">200.0f</span><span class=\"p\">);</span>\n            <span class=\"n\">srcPoint</span><span class=\"p\">[</span><span class=\"m\">3</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"m\">575.0f</span><span class=\"p\">,</span> <span class=\"m\">400.0f</span><span class=\"p\">);</span>\n        \n            <span class=\"n\">dstPoint</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"m\">0.0f</span><span class=\"p\">,</span> <span class=\"m\">0.0f</span><span class=\"p\">);</span>\n            <span class=\"n\">dstPoint</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"m\">0.0f</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">);</span>\n            <span class=\"n\">dstPoint</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"m\">0.0f</span><span class=\"p\">);</span>\n            <span class=\"n\">dstPoint</span><span class=\"p\">[</span><span class=\"m\">3</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">);</span>\n        \n            <span class=\"n\">CvMat</span> <span class=\"n\">mapMatrix</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetPerspectiveTransform</span><span class=\"p\">(</span><span class=\"n\">srcPoint</span><span class=\"p\">,</span> <span class=\"n\">dstPoint</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">WarpPerspective</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">perspective</span><span class=\"p\">,</span> <span class=\"n\">mapMatrix</span><span class=\"p\">,</span> <span class=\"n\">Interpolation</span><span class=\"p\">.</span><span class=\"n\">Linear</span><span class=\"p\">,</span> <span class=\"n\">CvScalar</span><span class=\"p\">.</span><span class=\"nf\">ScalarAll</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">));</span>\n        \n            <span class=\"k\">return</span> <span class=\"n\">perspective</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">perspective</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">perspective</span><span class=\"p\">);</span>        \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">warp</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n\n<span class=\"kt\">float</span> <span class=\"n\">width</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">;</span>\n<span class=\"kt\">float</span> <span class=\"n\">height</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">warp</code>, <code class=\"highlighter-rouge\">width</code>, <code class=\"highlighter-rouge\">height</code>를 선언합니다. <code class=\"highlighter-rouge\">CvPoint2D32f()</code>가 <code class=\"highlighter-rouge\">float형 2D</code>형식으로 값을 받기 때문에 <code class=\"highlighter-rouge\">float</code>로 선언합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvPoint2D32f</span><span class=\"p\">[]</span> <span class=\"n\">srcPoint</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvPoint2D32f</span><span class=\"p\">[</span><span class=\"m\">4</span><span class=\"p\">];</span> \n<span class=\"n\">CvPoint2D32f</span><span class=\"p\">[]</span> <span class=\"n\">dstPoint</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">CvPoint2D32f</span><span class=\"p\">[</span><span class=\"m\">4</span><span class=\"p\">];</span>\n\n<span class=\"n\">srcPoint</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"m\">195.0f</span><span class=\"p\">,</span> <span class=\"m\">200.0f</span><span class=\"p\">);</span>\n<span class=\"n\">srcPoint</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"m\">45.0f</span><span class=\"p\">,</span> <span class=\"m\">400.0f</span><span class=\"p\">);</span>\n<span class=\"n\">srcPoint</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"m\">435.0f</span><span class=\"p\">,</span> <span class=\"m\">200.0f</span><span class=\"p\">);</span>\n<span class=\"n\">srcPoint</span><span class=\"p\">[</span><span class=\"m\">3</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"m\">575.0f</span><span class=\"p\">,</span> <span class=\"m\">400.0f</span><span class=\"p\">);</span>\n\n<span class=\"n\">dstPoint</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"m\">0.0f</span><span class=\"p\">,</span> <span class=\"m\">0.0f</span><span class=\"p\">);</span>\n<span class=\"n\">dstPoint</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"m\">0.0f</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">);</span>\n<span class=\"n\">dstPoint</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"m\">0.0f</span><span class=\"p\">);</span>\n<span class=\"n\">dstPoint</span><span class=\"p\">[</span><span class=\"m\">3</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint2D32f</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.GetPerspectiveTransform()</code>가 <code class=\"highlighter-rouge\">CvPoint2D32f</code>형식으로 값을 받기 때문에 <code class=\"highlighter-rouge\">CvPoint2D32f</code>로 선언합니다. <code class=\"highlighter-rouge\">4개의 점</code>을 이용한 변환이기 때문에 배열의 크기를 <code class=\"highlighter-rouge\">4</code>로 선언합니다.</p>\n\n<p><code class=\"highlighter-rouge\">srcPoint[]</code>는 <code class=\"highlighter-rouge\">변환될 4개의 지점</code>을 선택하고 <code class=\"highlighter-rouge\">dstPoint[]</code>는<code class=\"highlighter-rouge\"> 변환되어 이미지를 출력할 4개의 지점</code>을 선택합니다.</p>\n\n<p>포인트의 순서는 <code class=\"highlighter-rouge\">0:좌상</code>, <code class=\"highlighter-rouge\">1:좌하</code>, <code class=\"highlighter-rouge\">2:우상</code>, <code class=\"highlighter-rouge\">3:우하</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">srcPoint[]</code>에서 변환될 4개의 임의의 지점을 선택하고 <code class=\"highlighter-rouge\">dstPoint[]</code>에서 출력될 화면 크기에 맞게 설정합니다.</p>\n\n<ul>\n  <li>Tip : 아래의 <code class=\"highlighter-rouge\">Result</code> 소제목에서 <strong>포인트의 위치를 확인</strong>할 수 있습니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">0:좌상-빨강</code>, <code class=\"highlighter-rouge\">1:좌하-초록</code>, <code class=\"highlighter-rouge\">2:우상-파랑</code>, <code class=\"highlighter-rouge\">3:우하-노랑</code></li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvMat</span> <span class=\"n\">mapMatrix</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetPerspectiveTransform</span><span class=\"p\">(</span><span class=\"n\">srcPoint</span><span class=\"p\">,</span> <span class=\"n\">dstPoint</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">WarpPerspective</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">perspective</span><span class=\"p\">,</span> <span class=\"n\">mapMatrix</span><span class=\"p\">,</span> <span class=\"n\">Interpolation</span><span class=\"p\">.</span><span class=\"n\">Linear</span><span class=\"p\">,</span> <span class=\"n\">CvScalar</span><span class=\"p\">.</span><span class=\"nf\">ScalarAll</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">));</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">CvMat</code>을 이용하여 <code class=\"highlighter-rouge\">mapMatrix</code>를 선언해 <strong>변환된 이미지의 값을 계산</strong>합니다. <code class=\"highlighter-rouge\">Cv.GetPerspectiveTransform(변환될 지점, 변환된 지점)</code>입니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.WarpPerspective()</code>를 이용하여 변환시킵니다. <code class=\"highlighter-rouge\">Cv.WarpPerspective(원본, 결과, Matrix, 보간법, 여백색상)</code>입니다. 보간은 <code class=\"highlighter-rouge\">선형 보간</code>을 사용하였습니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">CvScalar.ScalarAll(0)</code>는 여백을 <code class=\"highlighter-rouge\">검은색</code>으로 채웁니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl1</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">DrawingImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">PerspectiveTransform</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">DrawingImage()</code>은 <code class=\"highlighter-rouge\">임의로 그려낸 이미지</code>를 표시합니다. <code class=\"highlighter-rouge\">WarpPerspectiveTransform()</code>은 <code class=\"highlighter-rouge\">변환된 이미지</code>를 표시합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch18/2.png\"><img src=\"/assets/images/C/opencv/ch18/2.png\" alt=\"1\" /></a>\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 17강 - Drawing",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-17/",
      "date"     : "2017-10-25 00:00:00 +0900",
  "content"   : "<h3 id=\"drawing\">Drawing</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch17/0.png\"><img src=\"/assets/images/C/opencv/ch17/0.png\" alt=\"0\" /></a>\n영상이나 이미지 위에 <code class=\"highlighter-rouge\">그래픽</code>을 그리기 위해 사용합니다. <code class=\"highlighter-rouge\">선, 원, 사각형</code>등을 그릴 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">src = new IplImage(Cv.Size(640, 480), BitDepth.U8, 3);</code> 을 사용하면 검은 화면으로 그릴 수 있습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>  \n        <span class=\"n\">IplImage</span> <span class=\"n\">draw</span><span class=\"p\">;</span>        \n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">DrawingImage</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">draw</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">draw</span><span class=\"p\">);</span>\n                    \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"m\">630</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Blue</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"m\">40</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">630</span><span class=\"p\">,</span> <span class=\"m\">40</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvColor</span><span class=\"p\">(</span><span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">),</span> <span class=\"m\">5</span><span class=\"p\">);</span>\n            \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawCircle</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"m\">60</span><span class=\"p\">,</span> <span class=\"m\">150</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Orange</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawCircle</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">200</span><span class=\"p\">,</span> <span class=\"m\">150</span><span class=\"p\">),</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Plum</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n            \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawRect</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"m\">300</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">400</span><span class=\"p\">,</span> <span class=\"m\">200</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Green</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawRect</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">450</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">550</span><span class=\"p\">,</span> <span class=\"m\">200</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span>\n            \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawEllipse</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">300</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">),</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">45</span><span class=\"p\">,</span> <span class=\"m\">360</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Beige</span><span class=\"p\">);</span>\n            \n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">PutText</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"s\">\"Open CV\"</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">200</span><span class=\"p\">,</span> <span class=\"m\">300</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvFont</span><span class=\"p\">(</span><span class=\"n\">FontFace</span><span class=\"p\">.</span><span class=\"n\">HersheyComplex</span><span class=\"p\">,</span> <span class=\"m\">0.7</span><span class=\"p\">,</span> <span class=\"m\">0.7</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvColor</span><span class=\"p\">(</span><span class=\"m\">15</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">));</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">PutText</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"s\">\"Open CV\"</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">350</span><span class=\"p\">,</span> <span class=\"m\">300</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvFont</span><span class=\"p\">(</span><span class=\"n\">FontFace</span><span class=\"p\">.</span><span class=\"n\">HersheyTriplex</span><span class=\"p\">,</span> <span class=\"m\">0.1</span><span class=\"p\">,</span> <span class=\"m\">3.0</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvColor</span><span class=\"p\">(</span><span class=\"m\">15</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">));</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">draw</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">);</span>        \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">draw</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">draw</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Copy()</code>를 이용하여 원본을 <code class=\"highlighter-rouge\">복사</code>해 작업할 공간을 새로 만듭니다. <code class=\"highlighter-rouge\">Cv.Copy(원본, 결과)</code>입니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"line\">Line</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"m\">630</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Blue</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"m\">40</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">630</span><span class=\"p\">,</span> <span class=\"m\">40</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvColor</span><span class=\"p\">(</span><span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">),</span> <span class=\"m\">5</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.DrawLine()</code>를 이용하여 <code class=\"highlighter-rouge\">선</code>을 그립니다. <code class=\"highlighter-rouge\">Cv.DrawLine(원본, x1, y1, x2, y2, 색상, 두께)</code>입니다. 또는 <code class=\"highlighter-rouge\">Cv.DrawLine(원본, new CvPoint(x1, y1), new CvPoint(x2, y2), new CvColor(R, G, B), 두께)</code>입니다. <code class=\"highlighter-rouge\">(x1, y1)은 시작점</code>, <code class=\"highlighter-rouge\">(x2, y2) 도착점</code> 입니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">생성자 new</code>를 이용하여 <code class=\"highlighter-rouge\">CvPoint()</code>등을 선언해야 합니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">new CvColor()</code>는 <code class=\"highlighter-rouge\">R ,G, B</code>값을 이용합니다. 범위는 <code class=\"highlighter-rouge\">0 ~ 255</code>입니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"circle\">Circle</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawCircle</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"m\">60</span><span class=\"p\">,</span> <span class=\"m\">150</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Orange</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawCircle</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">200</span><span class=\"p\">,</span> <span class=\"m\">150</span><span class=\"p\">),</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Plum</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.DrawCircle()</code>를 이용하여 <code class=\"highlighter-rouge\">원</code>을 그립니다. <code class=\"highlighter-rouge\">Cv.Cricle(원본, x, y, 반지름, 색상, 두께)</code>입니다. 또는 <code class=\"highlighter-rouge\">Cv.DrawCircle(원본, new CvPoint(x, y), new CvColor(R, G, B), 두께)</code>입니다. <code class=\"highlighter-rouge\">(x, y)는 중심점</code>입니다.</p>\n\n<ul>\n  <li>Tip : 두께를 <code class=\"highlighter-rouge\">-1</code>로 할 경우 내부가 채워집니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"rectangle\">rectangle</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawRect</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"m\">300</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">400</span><span class=\"p\">,</span> <span class=\"m\">200</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Green</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawRect</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">450</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">550</span><span class=\"p\">,</span> <span class=\"m\">200</span><span class=\"p\">),</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.DrawRect()</code>를 이용하여 <code class=\"highlighter-rouge\">사각형</code>을 그립니다. <code class=\"highlighter-rouge\">Cv.DrawRect(원본, x1, y1, x2, y2, 색상, 두께)</code>입니다. 또는 <code class=\"highlighter-rouge\">Cv.DrawRect(원본, new CvPoint(x1, y1), new CvPoint(x2, y2), new CvColor(R, G, B), 두께)</code>입니다. <code class=\"highlighter-rouge\">(x1, y1)은 시작점</code>, <code class=\"highlighter-rouge\">(x2, y2) 도착점</code> 입니다.</p>\n\n<ul>\n  <li>Tip : 두께를 <code class=\"highlighter-rouge\">-1</code>로 할 경우 내부가 채워집니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"ellipse--arc\">Ellipse / Arc</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">DrawEllipse</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">300</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvSize</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">),</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">45</span><span class=\"p\">,</span> <span class=\"m\">360</span><span class=\"p\">,</span> <span class=\"n\">CvColor</span><span class=\"p\">.</span><span class=\"n\">Beige</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.DrawEllipse()</code>를 이용하여 <code class=\"highlighter-rouge\">타원</code> 또는 <code class=\"highlighter-rouge\">호</code>을 그립니다. <code class=\"highlighter-rouge\">Cv.DrawEllipse(원본, new CvPoint(x, y), new CvSize(width, height), 기준각도, 시작각도, 종료각도, 색상)</code>입니다. <code class=\"highlighter-rouge\">(x, y)는 중심점</code>입니다.</p>\n\n<ul>\n  <li>Tip : 각도의 범위는 <code class=\"highlighter-rouge\">0 ~ 360</code>입니다. <code class=\"highlighter-rouge\">0°는 3시 방향</code>으로 <code class=\"highlighter-rouge\">반시계방향(CCW)으로 각도가 커집니다.</code></li>\n  <li>Tip : 기준각도를 기준으로 회전하여 시작각도가 선정됩니다. <strong>기준각도 0°에 시작각도 90°</strong> 라면 <code class=\"highlighter-rouge\">6시 방향이 시작각도</code>가 됩니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"text\">Text</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">PutText</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"s\">\"Open CV\"</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">200</span><span class=\"p\">,</span> <span class=\"m\">300</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvFont</span><span class=\"p\">(</span><span class=\"n\">FontFace</span><span class=\"p\">.</span><span class=\"n\">HersheyComplex</span><span class=\"p\">,</span> <span class=\"m\">0.7</span><span class=\"p\">,</span> <span class=\"m\">0.7</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvColor</span><span class=\"p\">(</span><span class=\"m\">15</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">));</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">PutText</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">,</span> <span class=\"s\">\"Open CV\"</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvPoint</span><span class=\"p\">(</span><span class=\"m\">350</span><span class=\"p\">,</span> <span class=\"m\">300</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvFont</span><span class=\"p\">(</span><span class=\"n\">FontFace</span><span class=\"p\">.</span><span class=\"n\">HersheyTriplex</span><span class=\"p\">,</span> <span class=\"m\">0.1</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">),</span> <span class=\"k\">new</span> <span class=\"nf\">CvColor</span><span class=\"p\">(</span><span class=\"m\">15</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">));</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.PutText()</code>를 이용하여 <code class=\"highlighter-rouge\">글</code>을 그립니다. <code class=\"highlighter-rouge\">Cv.PutText(원본, new CvPoint(x, y), new CvFont(FontFace.*, hscale, vscale),  색상)</code>입니다. <code class=\"highlighter-rouge\">(x, y)</code>는 글자의 <code class=\"highlighter-rouge\">좌측 아래가 기준점</code>입니다.</p>\n\n<ul>\n  <li>Tip : FontFace는 <code class=\"highlighter-rouge\">글자모양</code>을 의미합니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">hscale</code>, <code class=\"highlighter-rouge\">vscale</code>을 이용하여 글자의 <code class=\"highlighter-rouge\">크기</code>를 설정합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">DrawingImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">DrawingImage()</code>은 <code class=\"highlighter-rouge\">임의로 그려낸 이미지</code>를 표시합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch17/1.png\"><img src=\"/assets/images/C/opencv/ch17/1.png\" alt=\"1\" /></a>\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 16강 - Split &amp; Merge",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-16/",
      "date"     : "2017-10-24 00:00:00 +0900",
  "content"   : "<h3 id=\"split--merge\">Split &amp; Merge</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch16/0.png\"><img src=\"/assets/images/C/opencv/ch16/0.png\" alt=\"0\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">채널</code>을 나누고 합치기 위해 사용합니다. 채널을 <code class=\"highlighter-rouge\">B(Blue)</code>, <code class=\"highlighter-rouge\">G(Green)</code>, <code class=\"highlighter-rouge\">R(Red)</code>로 분리하여 채널을 변환할 수 있습니다.\n<br /></p>\n\n<ul>\n  <li>Tip : OpenCV의 가산혼합의 삼원색 <strong>기본 배열순서</strong>는 <code class=\"highlighter-rouge\">BGR</code>입니다.</li>\n</ul>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">b</span><span class=\"p\">;</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">g</span><span class=\"p\">;</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">r</span><span class=\"p\">;</span>        \n        \n        <span class=\"n\">IplImage</span> <span class=\"n\">merge</span><span class=\"p\">;</span>        \n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Split</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">b</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">g</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">r</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Split</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">);</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">r</span><span class=\"p\">;</span>\n            <span class=\"c1\">//return g;</span>\n            <span class=\"c1\">//return b;                </span>\n        <span class=\"p\">}</span>\n        \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Merge</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">merge</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">b</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">g</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">r</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Split</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Merge</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">,</span> <span class=\"n\">merge</span><span class=\"p\">);</span>\n                    \n            <span class=\"k\">return</span> <span class=\"n\">merge</span><span class=\"p\">;</span>        \n        <span class=\"p\">}</span>                \n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">b</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">);</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">g</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">g</span><span class=\"p\">);</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">);</span> \n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">merge</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">merge</span><span class=\"p\">);</span>               \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<h2 id=\"split\">Split</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">b</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">g</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">r</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">bgr</code> 각각은 <code class=\"highlighter-rouge\">단색</code>이기 때문에 채널은 <code class=\"highlighter-rouge\">1</code>입니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Split</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Split()</code>를 이용하여 각각의 <code class=\"highlighter-rouge\">채널</code>을 분리합니다. <code class=\"highlighter-rouge\">Cv,Split(원본, 채널1, 채널2, 채널3, 채널4)</code>입니다. <code class=\"highlighter-rouge\">채널4</code>의 경우 필요하지 않기 때문에 <code class=\"highlighter-rouge\">null</code>로 입력합니다.</p>\n\n<ul>\n  <li>Tip : 선택된 채널의 색상이 <code class=\"highlighter-rouge\">흰색</code>으로 변하고 나머지는 <code class=\"highlighter-rouge\">검은색</code>으로 처리됩니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"split-result\">Split Result</h3>\n<hr />\n<h2 id=\"return-b\">return b</h2>\n<p><a href=\"/assets/images/C/opencv/ch16/1.png\"><img src=\"/assets/images/C/opencv/ch16/1.png\" alt=\"1\" /></a>\n<br /></p>\n\n<h2 id=\"return-g\">return g</h2>\n<p><a href=\"/assets/images/C/opencv/ch16/2.png\"><img src=\"/assets/images/C/opencv/ch16/2.png\" alt=\"2\" /></a>\n<br /></p>\n\n<h2 id=\"return-r\">return r</h2>\n<p><a href=\"/assets/images/C/opencv/ch16/3.png\"><img src=\"/assets/images/C/opencv/ch16/3.png\" alt=\"3\" /></a>\n<br /></p>\n\n<p><br /></p>\n\n<h3 id=\"class-code-1\">Class Code</h3>\n<hr />\n\n<h2 id=\"merge\">Merge</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">merge</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n<span class=\"n\">b</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">g</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"n\">r</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">merge</code>의 경우 채널은 <code class=\"highlighter-rouge\">3</code>이며 <code class=\"highlighter-rouge\">bgr</code> 각각은 <code class=\"highlighter-rouge\">단색</code>이기 때문에 채널은 <code class=\"highlighter-rouge\">1</code>입니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Split</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Merge</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">,</span> <span class=\"n\">merge</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Merge()</code>를 이용하여 각 채널을 합칩니다. <code class=\"highlighter-rouge\">Cv.Merge(채널1, 채널2, 채널3, 채널4, 결과)</code>입니다. <code class=\"highlighter-rouge\">채널4</code>의 경우 필요하지 않기 때문에 <code class=\"highlighter-rouge\">null</code>로 입력합니다.\n<br />\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">b, g, r의 파리미터</code>와 <code class=\"highlighter-rouge\">채널의 색상</code>으로 혼합하여 보여줍니다. <code class=\"highlighter-rouge\">b, g ,r</code>과 <code class=\"highlighter-rouge\">채널 순서</code>를 이용하여 특정 색상 채널을 다른 색상 채널 계열로 <code class=\"highlighter-rouge\">혼합</code> 및 <code class=\"highlighter-rouge\">제거</code>할 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">채널1</code> : Blue 계열 채널입니다.</li>\n  <li><code class=\"highlighter-rouge\">채널2</code> : Green 계열 채널입니다.</li>\n  <li><code class=\"highlighter-rouge\">채널3</code> : Red 계열 채널입니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">흰색</code>은 해당 채널의 색상으로 설정됩니다.</li>\n  <li>Tip : 삽입된 채널 이외의 색상에는 <code class=\"highlighter-rouge\">검은색</code>으로 처리합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"merge-result\">Merge Result</h3>\n<hr />\n<h2 id=\"mergeb-null-null-null-merge\">merge(b, null, null, null, merge)</h2>\n<p><a href=\"/assets/images/C/opencv/ch16/4.png\"><img src=\"/assets/images/C/opencv/ch16/4.png\" alt=\"4\" /></a>\n<br /></p>\n\n<h2 id=\"mergeg-null-null-null-merge\">merge(g, null, null, null, merge)</h2>\n<p><a href=\"/assets/images/C/opencv/ch16/5.png\"><img src=\"/assets/images/C/opencv/ch16/5.png\" alt=\"5\" /></a>\n<br /></p>\n\n<h2 id=\"merger-null-null-null-merge\">merge(r, null, null, null, merge)</h2>\n<p><a href=\"/assets/images/C/opencv/ch16/6.png\"><img src=\"/assets/images/C/opencv/ch16/6.png\" alt=\"6\" /></a>\n<br /></p>\n\n<h2 id=\"mergenull-b-null-null-merge\">merge(null, b, null, null, merge)</h2>\n<p><a href=\"/assets/images/C/opencv/ch16/7.png\"><img src=\"/assets/images/C/opencv/ch16/7.png\" alt=\"7\" /></a>\n<br /></p>\n\n<h2 id=\"mergenull-null-b-null-merge\">merge(null, null, b, null, merge)</h2>\n<p><a href=\"/assets/images/C/opencv/ch16/8.png\"><img src=\"/assets/images/C/opencv/ch16/8.png\" alt=\"8\" /></a>\n<br /></p>\n\n<h2 id=\"mergeb-b-b-null-merge\">merge(b, b, b, null, merge)</h2>\n<p><a href=\"/assets/images/C/opencv/ch16/9.png\"><img src=\"/assets/images/C/opencv/ch16/9.png\" alt=\"9\" /></a>\n<br /></p>\n\n<h2 id=\"merger-g-b-null-merge\">merge(r, g, b, null, merge)</h2>\n<p><a href=\"/assets/images/C/opencv/ch16/10.png\"><img src=\"/assets/images/C/opencv/ch16/10.png\" alt=\"10\" /></a>\n<br /></p>\n\n<h2 id=\"mergeb-g-r-null-merge\">merge(b, g, r, null, merge)</h2>\n<p><a href=\"/assets/images/C/opencv/ch16/11.png\"><img src=\"/assets/images/C/opencv/ch16/11.png\" alt=\"11\" /></a>\n<br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">Split</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">//</span>\n\n<span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">Merge</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Split</code>은 <code class=\"highlighter-rouge\">분리된 채널</code>의 이미지를 표시합니다. <code class=\"highlighter-rouge\">Merge</code>는 <code class=\"highlighter-rouge\">혼합된 채널</code>의 이미지를 표시합니다.</p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 15강 - HSV",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-15/",
      "date"     : "2017-10-23 00:00:00 +0900",
  "content"   : "<h3 id=\"hsv-hue-saturation-value\">HSV (Hue, Saturation, Value)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch15/1.png\"><img src=\"/assets/images/C/opencv/ch15/1.png\" alt=\"1\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">색상</code>을 검출 하기 위해 사용합니다. 채널을 <code class=\"highlighter-rouge\">Hue</code>, <code class=\"highlighter-rouge\">Saturation</code>, <code class=\"highlighter-rouge\">Value</code>로 분리하여 변환할 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">색상 (Hue)</code> : <code class=\"highlighter-rouge\">색의 질</code>입니다. 빨강, 노랑, 파랑이라고 하는 표현으로 나타내는 성질입니다.</li>\n  <li><code class=\"highlighter-rouge\">채도 (Saturation)</code> : <code class=\"highlighter-rouge\">색의 선명도</code>입니다. 아무것도 섞지 않아 맑고 깨끗하며 원색에 가까운 것을 채도가 높다고 표현합니다.</li>\n  <li><code class=\"highlighter-rouge\">명도 (Value)</code> : <code class=\"highlighter-rouge\">색의 밝기</code>입니다. 명도가 높을수록 백색에, 명도가 낮을수록 흑색에 가까워집니다.</li>\n</ul>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">hsv</span><span class=\"p\">;</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">HSV</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">hsv</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">h</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">s</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">IplImage</span> <span class=\"n\">v</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToHsv</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Split</span><span class=\"p\">(</span><span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">);</span>\n            <span class=\"n\">hsv</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">();</span>\n\n            <span class=\"c1\">//Hue//        </span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">InRangeS</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">MIN</span><span class=\"p\">,</span> <span class=\"n\">MAX</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">);</span>\n                    \n            <span class=\"c1\">//Saturation//     </span>\n            <span class=\"c1\">//Cv.InRangeS(s, MIN, MAX, s);</span>\n            <span class=\"c1\">//Cv.Copy(src, hsv, s);   </span>\n                                     \n            <span class=\"c1\">//Value//        </span>\n            <span class=\"c1\">//Cv.InRangeS(v, MIN, MAX, v); //</span>\n            <span class=\"c1\">//Cv.Copy(src, hsv, v);</span>\n                            \n            <span class=\"k\">return</span> <span class=\"n\">hsv</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">hsv</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">hsv</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">HSV</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">hsv</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n    <span class=\"n\">IplImage</span> <span class=\"n\">h</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n    <span class=\"n\">IplImage</span> <span class=\"n\">s</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n    <span class=\"n\">IplImage</span> <span class=\"n\">v</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">HSV</code>의 각각의 경우 <code class=\"highlighter-rouge\">단색</code>이기 때문에 채널은 <code class=\"highlighter-rouge\">1</code>입니다. 채널을 각각 <code class=\"highlighter-rouge\">Hue(h)</code>, <code class=\"highlighter-rouge\">Saturation(s)</code>, <code class=\"highlighter-rouge\">Value(v)</code>로 분리하였습니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToHsv</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.CvtColor()</code>를 이용하여 <code class=\"highlighter-rouge\">HSV</code>로 변환합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Split</span><span class=\"p\">(</span><span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">hsv</code>의 채널을 1 개의 채널로 분리하기 위해서 <code class=\"highlighter-rouge\">Cv.Split()</code>을 이용하여 <code class=\"highlighter-rouge\">h</code>, <code class=\"highlighter-rouge\">s</code>, <code class=\"highlighter-rouge\">v</code>로 분리합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">hsv</span><span class=\"p\">.</span><span class=\"nf\">SetZero</span><span class=\"p\">();</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">hsv</code>의 배열을 초기화 시킵니다.</p>\n\n<ul>\n  <li>Tip : 배열을 초기화하지 않았을 경우 결과가 다르게 나올 수 있습니다.</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"c1\">//Hue//        </span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">InRangeS</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">MIN</span><span class=\"p\">,</span> <span class=\"n\">MAX</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">);</span>\n\n<span class=\"c1\">//Saturation//     </span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">InRangeS</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">MIN</span><span class=\"p\">,</span> <span class=\"n\">MAX</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">);</span>   \n                         \n<span class=\"c1\">//Value//        </span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">InRangeS</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">MIN</span><span class=\"p\">,</span> <span class=\"n\">MAX</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">);</span> <span class=\"c1\">//</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">hsv</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.InRangeS()</code>를 사용하여 채널의 최소치와 최대치를 설정합니다. <code class=\"highlighter-rouge\">Cv.InRangeS(원본, 최소, 최대, 결과)</code>입니다. 원본에 결과를 덧씌우기 때문에, 원본과 결과의 변수가 동일합니다.\n<br />\n<br /></p>\n<ul>\n  <li>색상 (Hue) : 0 ~ 180의 값을 지닙니다.</li>\n  <li>채도 (Saturation) : 0 ~ 255의 값을 지닙니다.</li>\n  <li>명도 (Value) : 0 ~ 255의 값을 지닙니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"hue-parameter\">Hue Parameter</h2>\n<p><a href=\"/assets/images/C/opencv/ch15/2.png\"><img src=\"/assets/images/C/opencv/ch15/2.png\" alt=\"2\" /></a></p>\n\n<h2 id=\"saturation--value\">Saturation &amp; Value</h2>\n<p><a href=\"/assets/images/C/opencv/ch15/3.png\"><img src=\"/assets/images/C/opencv/ch15/3.png\" alt=\"3\" /></a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">HSV</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">HSV</code>는 <code class=\"highlighter-rouge\">보여질 색상</code>이 적용된 이미지를 표시합니다. 그 이외의 색은 <code class=\"highlighter-rouge\">흑색</code>으로 처리됩니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<h2 id=\"hue---90--135\">Hue - 90 ~ 135</h2>\n<p><a href=\"/assets/images/C/opencv/ch15/4.png\"><img src=\"/assets/images/C/opencv/ch15/4.png\" alt=\"4\" /></a>\n<br /></p>\n\n<h2 id=\"hue---90--135-hsvsetzero-미적용\">Hue - 90 ~ 135 (hsv.SetZero() 미적용)</h2>\n<p><a href=\"/assets/images/C/opencv/ch15/7.png\"><img src=\"/assets/images/C/opencv/ch15/7.png\" alt=\"7\" /></a>\n<br /></p>\n\n<h2 id=\"saturation---100--255\">Saturation - 100 ~ 255</h2>\n<p><a href=\"/assets/images/C/opencv/ch15/5.png\"><img src=\"/assets/images/C/opencv/ch15/5.png\" alt=\"5\" /></a>\n<br /></p>\n\n<h2 id=\"value---50--200\">Value - 50 ~ 200</h2>\n<p><a href=\"/assets/images/C/opencv/ch15/6.png\"><img src=\"/assets/images/C/opencv/ch15/6.png\" alt=\"6\" /></a>\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 14강 - 가장자리 검출",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-14/",
      "date"     : "2017-10-20 00:00:00 +0900",
  "content"   : "<h3 id=\"가장자리-검출-edge\">가장자리 검출 (Edge)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch14/1.png\"><img src=\"/assets/images/C/opencv/ch14/1.png\" alt=\"1\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">가장자리</code>를 검출 하기 위해 사용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">canny</span><span class=\"p\">;</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">sobel</span><span class=\"p\">;</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">laplace</span><span class=\"p\">;</span>        \n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">CannyEdge</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">canny</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Canny</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">canny</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">canny</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">SobelEdge</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">sobel</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Copy</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">sobel</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Sobel</span><span class=\"p\">(</span><span class=\"n\">sobel</span><span class=\"p\">,</span> <span class=\"n\">sobel</span><span class=\"p\">,</span> <span class=\"m\">1</span> <span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">ApertureSize</span><span class=\"p\">.</span><span class=\"n\">Size3</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">sobel</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">LaplaceEdge</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">laplace</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Laplace</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">laplace</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">laplace</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">canny</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">canny</span><span class=\"p\">);</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">sobel</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">sobel</span><span class=\"p\">);</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">laplace</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">laplace</span><span class=\"p\">);</span>                \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<h2 id=\"canny-edge\">Canny Edge</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">CannyEdge</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">canny</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Canny</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">canny</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"n\">canny</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Canny Edge</code>의 경우 <code class=\"highlighter-rouge\">단색</code>이기 때문에 채널은 <code class=\"highlighter-rouge\">1</code>입니다. <code class=\"highlighter-rouge\">Cv.Canny()</code>를 이용해서 가장자리를 검출 할 수 있습니다. <code class=\"highlighter-rouge\">Cv.Canny(원본, 결과, 임계값1, 임계값2)</code>를 설정합니다. 그라디언트는 Edge에 수직한다는 것을 이용하여 Edge가 아니면 제거합니다.</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">임계값1</code> : 임계값1 <code class=\"highlighter-rouge\">이하</code>에 포함된 가장자리는 가장자리에서 <code class=\"highlighter-rouge\">제외</code>합니다.</li>\n  <li><code class=\"highlighter-rouge\">임계값2</code> : 임계값2 <code class=\"highlighter-rouge\">이상</code>에 포함된 가장자리는 가장자리로 <code class=\"highlighter-rouge\">간주</code>합니다.</li>\n</ul>\n\n<h2 id=\"sobel-edge\">Sobel Edge</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">SobelEdge</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">sobel</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Sobel</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">sobel</span><span class=\"p\">,</span> <span class=\"m\">1</span> <span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">ApertureSize</span><span class=\"p\">.</span><span class=\"n\">Size3</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"n\">sobel</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Sobel Edge</code>는 <code class=\"highlighter-rouge\">x방향 미분값</code>과 <code class=\"highlighter-rouge\">y방향 미분값</code>을 이용하여 가장자리를 검출합니다. <code class=\"highlighter-rouge\">Cv.Sobel()</code>를 이용해서 가장자리를 검출 할 수 있습니다. <code class=\"highlighter-rouge\">Cv.Sobel(원본, 결과, x방향 미분, y방향 미분, 커널의 크기)</code>를 설정합니다.</p>\n\n<h2 id=\"laplace-edge\">Laplace Edge</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">LaplaceEdge</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">laplace</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Laplace</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">laplace</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"n\">laplace</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Laplace Edge</code>는  <code class=\"highlighter-rouge\">Cv.Laplace()</code>를 이용해서 가장자리를 검출 할 수 있습니다. <code class=\"highlighter-rouge\">Cv.Laplace(원본, 결과)</code>를 설정합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">CannyEdge</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">//</span>\n\n<span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">SobelEdge</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">//</span>\n\n<span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">LaplaceEdge</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">*Edge</code>는 <code class=\"highlighter-rouge\">가장자리 검출</code>이 적용된 이미지를 표시합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><br /></p>\n<h2 id=\"cannyedge---0-255\"><code class=\"highlighter-rouge\">CannyEdge</code> - 0, 255</h2>\n<p><a href=\"/assets/images/C/opencv/ch14/2.png\"><img src=\"/assets/images/C/opencv/ch14/2.png\" alt=\"2\" /></a>\n<br /></p>\n<h2 id=\"cannyedge---100-255\"><code class=\"highlighter-rouge\">CannyEdge</code> - 100, 255</h2>\n<p><a href=\"/assets/images/C/opencv/ch14/3.png\"><img src=\"/assets/images/C/opencv/ch14/3.png\" alt=\"3\" /></a>\n<br /></p>\n<h2 id=\"cannyedge---0-100\"><code class=\"highlighter-rouge\">CannyEdge</code> - 0, 100</h2>\n<p><a href=\"/assets/images/C/opencv/ch13/4.png\"><img src=\"/assets/images/C/opencv/ch14/4.png\" alt=\"4\" /></a>\n<br /></p>\n<h2 id=\"sobeledge---0-1\"><code class=\"highlighter-rouge\">SobelEdge</code> - 0, 1</h2>\n<p><a href=\"/assets/images/C/opencv/ch14/5.png\"><img src=\"/assets/images/C/opencv/ch14/5.png\" alt=\"5\" /></a>\n<br /></p>\n<h2 id=\"sobeledge---1-0\"><code class=\"highlighter-rouge\">SobelEdge</code> - 1, 0</h2>\n<p><a href=\"/assets/images/C/opencv/ch14/6.png\"><img src=\"/assets/images/C/opencv/ch14/6.png\" alt=\"6\" /></a>\n<br /></p>\n<h2 id=\"laplaceedge\"><code class=\"highlighter-rouge\">LaplaceEdge</code>##</h2>\n<p><a href=\"/assets/images/C/opencv/ch14/7.png\"><img src=\"/assets/images/C/opencv/ch14/7.png\" alt=\"6\" /></a>\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 13강 - 흐림 효과",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-13/",
      "date"     : "2017-10-19 00:00:00 +0900",
  "content"   : "<h3 id=\"흐림-효과-blur\">흐림 효과 (Blur)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch13/1.png\"><img src=\"/assets/images/C/opencv/ch13/1.png\" alt=\"1\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">흐림 효과</code>를 주어 번지게 하기 위해 사용합니다. 해당 픽셀의 <code class=\"highlighter-rouge\">주변값들과 비교</code>하고 계산하여 픽셀들의 <code class=\"highlighter-rouge\">색상 값을 재조정</code>합니다.</p>\n\n<p><a href=\"/assets/images/C/opencv/ch13/7.png\"><img src=\"/assets/images/C/opencv/ch13/7.png\" alt=\"7\" /></a>\n<code class=\"highlighter-rouge\">param1</code> * <code class=\"highlighter-rouge\">param2</code>의 크기가 <code class=\"highlighter-rouge\">파란색</code>의 사각형이며 <code class=\"highlighter-rouge\">붉은색</code>이 흐림 처리될 픽셀입니다. 각 픽셀마다 주변의 픽셀들의 값을 비교하고 계산하여 픽셀들의 값을 <code class=\"highlighter-rouge\">재조정</code>하게 됩니다. 단순 블러의 경우 파란 사각형 안의 평균값으로 붉은색 값을 재조정하게 되고, <code class=\"highlighter-rouge\">모든 픽셀들에 대하여 적용</code>합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">blur</span><span class=\"p\">;</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Blur</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">blur</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Smooth</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">blur</span><span class=\"p\">,</span> <span class=\"n\">SmoothType</span><span class=\"p\">.</span><span class=\"n\">Gaussian</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">blur</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">blur</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">blur</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Blur</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Blur</code>에서 영상을 <code class=\"highlighter-rouge\">흐림 효과</code>로 번지게 합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">blur</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">blur</code>에 메모리 확보를 위하여 선언합니다. <code class=\"highlighter-rouge\">IplImage(크기, 정밀도, 채널)</code>을 입력합니다. 단색일 경우 채널은 <code class=\"highlighter-rouge\">1</code>이며, 다색일 경우 채널은 <code class=\"highlighter-rouge\">3</code>입니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Smooth</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">blur</span><span class=\"p\">,</span> <span class=\"n\">SmoothType</span><span class=\"p\">.</span><span class=\"n\">Gaussian</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Smooth()</code>를 이용하여 <code class=\"highlighter-rouge\">흐림 효과</code>로 번지게 합니다. <code class=\"highlighter-rouge\">Cv.Smooth(원본, 결과, 효과종류, param1, param2, param3, param4)</code>를 설정합니다.\n<br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">param*</code>은 생략할 수 있습니다.</li>\n</ul>\n\n<p>   1. <code class=\"highlighter-rouge\">SmoothType.Bilateral</code> - 양방향 블러 : 픽셀의 색상(param1)과 색상 차이(param2)에 대한 블러\n    2. <code class=\"highlighter-rouge\">SmoothType.Blur</code> - 단순 블러 : param1 * param2 크기 픽셀들의 평균\n    3. <code class=\"highlighter-rouge\">SmoothType.BlurNoScale</code> - 스케일링이 없는 단순 블러 : param1 * param2 크기 픽셀들의 합\n    4. <code class=\"highlighter-rouge\">SmoothType.Gaussian</code> - 가우시안 블러 : param1 * param2 크기 픽셀들의 가중치 합, 가로 방향 표준편차(param3), 세로 방향 표준 편차(parma4)\n    5. <code class=\"highlighter-rouge\">SmoothType.Median</code> - 중간값 블러 : param1 * param2 크기 픽셀들의 중간값</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 가우시안 블러에서 param3, param4 자체적 계산에 의해 계산합니다. 주로 <code class=\"highlighter-rouge\">3*3, 5*5, 7*7</code>을 사용합니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">중간값</code>이란? 평균이 아닌 순서들의 중간에 있는 값입니다. <code class=\"highlighter-rouge\">1, 2, 3, 100, 10000</code>이라면 중간 값은 <code class=\"highlighter-rouge\">3</code>입니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">Blur</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Blur</code>은 <code class=\"highlighter-rouge\">흐림효과</code>가 적용된 이미지를 표시합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><br /></p>\n<h2 id=\"smoothtypebilateral---양방향-블러\"><code class=\"highlighter-rouge\">SmoothType.Bilateral</code> - 양방향 블러</h2>\n<p><a href=\"/assets/images/C/opencv/ch13/2.png\"><img src=\"/assets/images/C/opencv/ch13/2.png\" alt=\"2\" /></a>\n<br /></p>\n<h2 id=\"smoothtypeblur---단순-블러\"><code class=\"highlighter-rouge\">SmoothType.Blur</code> - 단순 블러</h2>\n<p><a href=\"/assets/images/C/opencv/ch13/3.png\"><img src=\"/assets/images/C/opencv/ch13/3.png\" alt=\"3\" /></a>\n<br /></p>\n<h2 id=\"smoothtypeblurnoscale---스케일링이-없는-단순-블러\"><code class=\"highlighter-rouge\">SmoothType.BlurNoScale</code> - 스케일링이 없는 단순 블러</h2>\n<p><a href=\"/assets/images/C/opencv/ch13/4.png\"><img src=\"/assets/images/C/opencv/ch13/4.png\" alt=\"4\" /></a>\n<br /></p>\n<h2 id=\"smoothtypegaussian---가우시안-블러\"><code class=\"highlighter-rouge\">SmoothType.Gaussian</code> - 가우시안 블러</h2>\n<p><a href=\"/assets/images/C/opencv/ch13/5.png\"><img src=\"/assets/images/C/opencv/ch13/5.png\" alt=\"5\" /></a>\n<br /></p>\n<h2 id=\"smoothtypemedian---중간값-블러\"><code class=\"highlighter-rouge\">SmoothType.Median</code> - 중간값 블러</h2>\n<p><a href=\"/assets/images/C/opencv/ch13/6.png\"><img src=\"/assets/images/C/opencv/ch13/6.png\" alt=\"6\" /></a>\n<br /></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 12강 - 이진화",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-12/",
      "date"     : "2017-10-17 00:00:00 +0900",
  "content"   : "<h3 id=\"이진화-binary\">이진화 (Binary)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch12/1.png\"><img src=\"/assets/images/C/opencv/ch12/1.png\" alt=\"1\" /></a>\n영상이나 이미지를 어느 지점을 기준으로 <code class=\"highlighter-rouge\">흑색</code> 또는 <code class=\"highlighter-rouge\">흰색</code>의 색상으로 변환하기 위해서 사용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">bin</span><span class=\"p\">;</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">RgbToGray</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">bin</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">bin</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Binary</code>에서 영상을 <code class=\"highlighter-rouge\">이진화</code>로 변하게 됩니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">bin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">bin</code>에 메모리 확보를 위하여 선언합니다. <code class=\"highlighter-rouge\">IplImage(크기, 정밀도, 채널)</code>을 입력합니다. 단색일 경우 채널은 <code class=\"highlighter-rouge\">1</code>이며, 다색일 경우 채널은 <code class=\"highlighter-rouge\">3</code>입니다.</p>\n\n<ul>\n  <li>Tip : 이진화는 <code class=\"highlighter-rouge\">단색</code>이기 때문에, 채널은 <code class=\"highlighter-rouge\">1</code>입니다.</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">RgbToGray</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.CvtColor()</code>을 이용하여 <code class=\"highlighter-rouge\">그레이스케일</code>로 만듭니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">그레이스케일 알아보기</code> : <a href=\"https://076923.github.io/posts/C-opencv-10/\">10강 바로가기</a></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Threshold</span><span class=\"p\">(</span><span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"n\">bin</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">255</span><span class=\"p\">,</span> <span class=\"n\">ThresholdType</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Threshold()</code>를 이용하여 임계점과 최댓값을 설정합니다. <code class=\"highlighter-rouge\">Cv.Threshold(원본, 결과, 임계값, 최댓값, 임계값종류)</code>를 설정합니다. <code class=\"highlighter-rouge\">원본</code>이 <code class=\"highlighter-rouge\">그레이스케일</code>된 <code class=\"highlighter-rouge\">bin</code>이기 때문에 원본에  결과를 덧씌웁니다.\n<br />\n<br />\n<code class=\"highlighter-rouge\">임계값</code>은 100일 경우 100을 기준으로 <code class=\"highlighter-rouge\">100보다 이하면 0</code>으로 <code class=\"highlighter-rouge\">100보다 이상이면 최댓값</code>으로 변경합니다.\n<br />\n<br />\n<code class=\"highlighter-rouge\">임계값종류</code>는 이진화할 방법을 선택합니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">0</code>은 <code class=\"highlighter-rouge\">흑색</code>, <code class=\"highlighter-rouge\">255</code>는 <code class=\"highlighter-rouge\">백색</code>을 의미합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">Binary</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Binary</code>은 <code class=\"highlighter-rouge\">이진화 된</code> 이미지를 표시합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><br /></p>\n<h2 id=\"100-255-thresholdtypebinary\">100, 255, ThresholdType.Binary</h2>\n<p><a href=\"/assets/images/C/opencv/ch12/2.png\"><img src=\"/assets/images/C/opencv/ch12/2.png\" alt=\"2\" /></a>\n<br /></p>\n<h2 id=\"100-255-thresholdtypebinaryinv\">100, 255, ThresholdType.BinaryInv</h2>\n<p><a href=\"/assets/images/C/opencv/ch12/8.png\"><img src=\"/assets/images/C/opencv/ch12/8.png\" alt=\"8\" /></a>\n<br /></p>\n<h2 id=\"100-255-thresholdtypeotsu\">100, 255, ThresholdType.Otsu</h2>\n<p><a href=\"/assets/images/C/opencv/ch12/9.png\"><img src=\"/assets/images/C/opencv/ch12/9.png\" alt=\"9\" /></a>\n<br /></p>\n<h2 id=\"100-255-thresholdtypetozero\">100, 255, ThresholdType.ToZero</h2>\n<p><a href=\"/assets/images/C/opencv/ch12/10.png\"><img src=\"/assets/images/C/opencv/ch12/10.png\" alt=\"10\" /></a>\n<br /></p>\n<h2 id=\"100-255-thresholdtypetozeroinv\">100, 255, ThresholdType.ToZeroInv</h2>\n<p><a href=\"/assets/images/C/opencv/ch12/11.png\"><img src=\"/assets/images/C/opencv/ch12/11.png\" alt=\"11\" /></a>\n<br /></p>\n<h2 id=\"100-255-thresholdtypetruncate\">100, 255, ThresholdType.Truncate</h2>\n<p><a href=\"/assets/images/C/opencv/ch12/12.png\"><img src=\"/assets/images/C/opencv/ch12/12.png\" alt=\"12\" /></a>\n<br /></p>\n<h2 id=\"50-255-thresholdtypebinary\">50, 255, ThresholdType.Binary</h2>\n<p><a href=\"/assets/images/C/opencv/ch12/3.png\"><img src=\"/assets/images/C/opencv/ch12/3.png\" alt=\"3\" /></a>\n<br /></p>\n<h2 id=\"150-255-thresholdtypebinary\">150, 255, ThresholdType.Binary</h2>\n<p><a href=\"/assets/images/C/opencv/ch12/4.png\"><img src=\"/assets/images/C/opencv/ch12/4.png\" alt=\"4\" /></a>\n<br /></p>\n<h2 id=\"200-255-thresholdtypebinary\">200, 255, ThresholdType.Binary</h2>\n<p><a href=\"/assets/images/C/opencv/ch12/5.png\"><img src=\"/assets/images/C/opencv/ch12/5.png\" alt=\"5\" /></a>\n<br /></p>\n<h2 id=\"50-200-thresholdtypebinary\">50, 200, ThresholdType.Binary</h2>\n<p><a href=\"/assets/images/C/opencv/ch12/6.png\"><img src=\"/assets/images/C/opencv/ch12/6.png\" alt=\"6\" /></a>\n<br /></p>\n<h2 id=\"100-200-thresholdtypebinary\">100, 200, ThresholdType.Binary</h2>\n<p><a href=\"/assets/images/C/opencv/ch12/7.png\"><img src=\"/assets/images/C/opencv/ch12/7.png\" alt=\"7\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 11강 - 역상",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-11/",
      "date"     : "2017-10-17 00:00:00 +0900",
  "content"   : "<h3 id=\"역상reverse-image\">역상(Reverse Image)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch11/1.png\"><img src=\"/assets/images/C/opencv/ch11/1.png\" alt=\"1\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">반전 된 색상</code>으로 변환하기 위해서 사용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">reverse</span><span class=\"p\">;</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">ReverseImage</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">reverse</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Not</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">reverse</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">reverse</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">reverse</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">reverse</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">ReverseImage</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">ReverseImage</code>에서 영상을 <code class=\"highlighter-rouge\">반전 된 색상</code>으로 변하게 됩니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">reverse</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">reverse</code>에 메모리 확보를 위하여 선언합니다. <code class=\"highlighter-rouge\">IplImage(크기, 정밀도, 채널)</code>을 입력합니다. 단색일 경우 채널은 <code class=\"highlighter-rouge\">1</code>이며, 다색일 경우 채널은 <code class=\"highlighter-rouge\">3</code>입니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Not</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">reverse</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Not()</code>을 이용하여 <code class=\"highlighter-rouge\">반전</code> 시킵니다. <code class=\"highlighter-rouge\">Cv.Not(원본, 결과)</code>을 의미합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ReverseImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">ReverseImage</code>은 <code class=\"highlighter-rouge\">반전 된</code> 이미지를 표시합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><br /></p>\n<h2 id=\"reverse\">Reverse</h2>\n<p><a href=\"/assets/images/C/opencv/ch11/2.png\"><img src=\"/assets/images/C/opencv/ch11/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 10강 - 그레이스케일",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-10/",
      "date"     : "2017-10-16 00:00:00 +0900",
  "content"   : "<h3 id=\"그레이스케일grayscale\">그레이스케일(GrayScale)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch10/1.png\"><img src=\"/assets/images/C/opencv/ch10/1.png\" alt=\"1\" /></a>\n영상이나 이미지의 색상을 <code class=\"highlighter-rouge\">흑백</code> 색상으로 변환하기 위해서 사용합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">gray</span><span class=\"p\">;</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">gray</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">gray</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">gray</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">GrayScale</code>에서 영상을 <code class=\"highlighter-rouge\">흑백</code>으로 변하게 됩니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">gray</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">gray</code>에 메모리 확보를 위하여 선언합니다. <code class=\"highlighter-rouge\">IplImage(크기, 정밀도, 채널)</code>을 입력합니다. 단색일 경우 채널은 <code class=\"highlighter-rouge\">1</code>이며, 다색일 경우 채널은 <code class=\"highlighter-rouge\">3</code>입니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">GrayScale</code>은 단색이기 때문에 채널은 <code class=\"highlighter-rouge\">1</code>입니다.</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">CvtColor</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">gray</span><span class=\"p\">,</span> <span class=\"n\">ColorConversion</span><span class=\"p\">.</span><span class=\"n\">BgrToGray</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.CvtColor()</code>을 이용하여 <code class=\"highlighter-rouge\">변환될 색상</code>을 설정합니다. <code class=\"highlighter-rouge\">Cv.CvtColor(원본, 결과, 변환)</code>을 의미합니다. <code class=\"highlighter-rouge\">ColorConversion.BgrToGray</code>를 이용하여 <code class=\"highlighter-rouge\">Bgr색상</code>을 <code class=\"highlighter-rouge\">Gray색상</code>으로 변환합니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">ColorConversion.*</code>을 이용하여 다른 변환도 가능합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">GrayScale</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">))</span> <span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">GrayScale</code>은 <code class=\"highlighter-rouge\">흑백</code>의 이미지를 표시합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><br /></p>\n<h2 id=\"grayscale\">GrayScale</h2>\n<p><a href=\"/assets/images/C/opencv/ch10/2.png\"><img src=\"/assets/images/C/opencv/ch10/2.png\" alt=\"2\" /></a></p>\n\n<p><br /></p>\n<h2 id=\"bgrtocrcb-채널--3\">BgrToCrcb (채널 : 3)</h2>\n<p><a href=\"/assets/images/C/opencv/ch10/3.png\"><img src=\"/assets/images/C/opencv/ch10/3.png\" alt=\"3\" /></a></p>\n\n<p><br /></p>\n<h2 id=\"bgrtolab-채널--3\">BgrToLab (채널 : 3)</h2>\n<p><a href=\"/assets/images/C/opencv/ch10/4.png\"><img src=\"/assets/images/C/opencv/ch10/4.png\" alt=\"4\" /></a></p>\n\n<p><br /></p>\n<h2 id=\"bgrtoluv-채널--3\">BgrToLuv (채널 : 3)</h2>\n<p><a href=\"/assets/images/C/opencv/ch10/5.png\"><img src=\"/assets/images/C/opencv/ch10/5.png\" alt=\"5\" /></a></p>\n\n<p><br /></p>\n<h2 id=\"bgrtoxyz-채널--3\">BgrToXyz (채널 : 3)</h2>\n<p><a href=\"/assets/images/C/opencv/ch10/6.png\"><img src=\"/assets/images/C/opencv/ch10/6.png\" alt=\"6\" /></a></p>\n\n<p><br /></p>\n<h2 id=\"bgrtoyuv-채널--3\">BgrToYuv (채널 : 3)</h2>\n<p><a href=\"/assets/images/C/opencv/ch10/7.png\"><img src=\"/assets/images/C/opencv/ch10/7.png\" alt=\"7\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 9강 - 자르기",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-9/",
      "date"     : "2017-10-15 00:00:00 +0900",
  "content"   : "<h3 id=\"자르기slice\">자르기(Slice)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch9/1.png\"><img src=\"/assets/images/C/opencv/ch9/1.png\" alt=\"0\" /></a>\n영상이나 이미지의 <code class=\"highlighter-rouge\">원하는 부분만 자를 수 있습니다.</code></p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">slice</span><span class=\"p\">;</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Slice</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">slice</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Size</span><span class=\"p\">(</span><span class=\"m\">165</span><span class=\"p\">,</span> <span class=\"m\">35</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SetImageROI</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvRect</span><span class=\"p\">(</span><span class=\"m\">240</span><span class=\"p\">,</span> <span class=\"m\">280</span><span class=\"p\">,</span> <span class=\"n\">slice</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">slice</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">));</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Resize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">slice</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ResetImageROI</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">slice</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">slice</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">slice</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>                    </code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Slice</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Slice</code>에서 영상을 원하는 부분을 <code class=\"highlighter-rouge\">자르게</code> 됩니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">slice</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Size</span><span class=\"p\">(</span><span class=\"m\">165</span><span class=\"p\">,</span> <span class=\"m\">35</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">slice</code>에 메모리 확보를 위하여 선언합니다. <code class=\"highlighter-rouge\">IplImage(크기, 정밀도, 채널)</code>을 입력합니다. 단색일 경우 채널은 <code class=\"highlighter-rouge\">1</code>이며, 다색일 경우 채널은 <code class=\"highlighter-rouge\">3</code>입니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">Cv.Size()</code>를 이용하여 <code class=\"highlighter-rouge\">자를 부분</code>의 크기를 설정합니다.</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">SetImageROI</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">CvRect</span><span class=\"p\">(</span><span class=\"m\">240</span><span class=\"p\">,</span> <span class=\"m\">280</span><span class=\"p\">,</span> <span class=\"n\">slice</span><span class=\"p\">.</span><span class=\"n\">Width</span><span class=\"p\">,</span> <span class=\"n\">slice</span><span class=\"p\">.</span><span class=\"n\">Height</span><span class=\"p\">));</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Resize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">slice</span><span class=\"p\">);</span>\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ResetImageROI</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.SetImageROI()</code>을 이용하여 <code class=\"highlighter-rouge\">자를 부분</code>을 설정합니다. <code class=\"highlighter-rouge\">Cv.SetImageROI(소스, new  CvRect(x좌표 시작점, y좌표 시작점, 넓이, 높이))</code>를 의미합니다.</p>\n\n<ul>\n  <li>Tip : 좌표는 <strong>왼측 상단이 (0, 0)이며 우측 하단이 (max, max)입니다.</strong> 보통 사용하는 좌표계와 약간 다르니 주의하시기 바랍니다. 시작점에서 <code class=\"highlighter-rouge\">우측방향과 하단 방향으로 도착점</code>이 됩니다.</li>\n</ul>\n\n<p><code class=\"highlighter-rouge\">Cv.Reisze()</code>를 이용하여 <code class=\"highlighter-rouge\">slice</code>에 잘라진 <code class=\"highlighter-rouge\">src</code>를 넣어줍니다. 크기는 같기 때문에 보간할 필요가 없습니다.</p>\n\n<p><code class=\"highlighter-rouge\">Cv.ResetImageROI(src)</code>를 이용하여 <code class=\"highlighter-rouge\">잘라진 src</code>를 <code class=\"highlighter-rouge\">초기 상태의 src</code>로 변경합니다.</p>\n\n<ul>\n  <li>Tip : 잘라진 <code class=\"highlighter-rouge\">src</code>를 반환하여 사용하여도 되는데, 이렇게 하지 않는 이유는 부가적인 작업을 추가적으로 할 때, 원본 src를 사용하게 되면 <code class=\"highlighter-rouge\">잘라진 src를 사용하기 때문</code>에 원본으로 작업하였으면 <code class=\"highlighter-rouge\">초기화</code>시켜주어야합니다.</li>\n</ul>\n\n<p><br />\n<code class=\"highlighter-rouge\">그래픽스 알아보기</code> : <a href=\"https://076923.github.io/posts/C-6/\">6강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">Slice</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Slice</code>은 <code class=\"highlighter-rouge\">(240, 280) ~ (405, 315)</code>까지의 이미지를 표시합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><br /></p>\n<h2 id=\"원본\">원본</h2>\n<p><a href=\"/assets/images/C/opencv/ch9/1.png\"><img src=\"/assets/images/C/opencv/ch9/1.png\" alt=\"1\" /></a></p>\n\n<p><br /></p>\n<h2 id=\"240-280--405-315\">(240, 280) ~ (405, 315)</h2>\n<p><a href=\"/assets/images/C/opencv/ch9/2.png\"><img src=\"/assets/images/C/opencv/ch9/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 8강 - 크기 조절",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-8/",
      "date"     : "2017-10-15 00:00:00 +0900",
  "content"   : "<h3 id=\"크기-조절-resize\">크기 조절 (Resize)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch8/1.png\"><img src=\"/assets/images/C/opencv/ch8/1.png\" alt=\"0\" /></a>\n영상이나 이미지의 크기를 <code class=\"highlighter-rouge\">원하는 크기로 조절</code>할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">resize</span><span class=\"p\">;</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">ResizeImage</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">resize</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Size</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">+</span> <span class=\"m\">100</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Resize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">resize</span><span class=\"p\">,</span> <span class=\"n\">Interpolation</span><span class=\"p\">.</span><span class=\"n\">Linear</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">resize</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n            \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">resize</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">resize</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>                    </code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">ResizeImage</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">ResizeImage</code>에서 영상을 크기를 <code class=\"highlighter-rouge\">조절</code>하게 됩니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">resize</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Size</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">+</span> <span class=\"m\">100</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">resize</code>에 메모리 확보를 위하여 선언합니다. <code class=\"highlighter-rouge\">IplImage(크기, 정밀도, 채널)</code>을 입력합니다. 단색일 경우 채널은 <code class=\"highlighter-rouge\">1</code>이며, 다색일 경우 채널은 <code class=\"highlighter-rouge\">3</code>입니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">Cv.Size()</code>를 이용하여 <code class=\"highlighter-rouge\">조절</code>될 크기를 설정합니다.</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Resize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">resize</span><span class=\"p\">,</span> <span class=\"n\">Interpolation</span><span class=\"p\">.</span><span class=\"n\">Linear</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Reisze()</code>을 이용하여 화면을 <code class=\"highlighter-rouge\">조절</code>합니다. <code class=\"highlighter-rouge\">Cv.Reisze(원본, 결과, 보간법)</code>를 의미합니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">Interpolation.Linear</code>은 영상이나 이미지의 보간을 위해 보편적으로 사용되는 보간법입니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ResizeImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">ResizeImage</code>은 <code class=\"highlighter-rouge\">원본 넓이의 절반</code>, <code class=\"highlighter-rouge\">원본 높이의 +100</code>을 주었습니다.\n<br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><br /></p>\n<h2 id=\"원본\">원본</h2>\n<p><a href=\"/assets/images/C/opencv/ch8/1.png\"><img src=\"/assets/images/C/opencv/ch8/1.png\" alt=\"1\" /></a></p>\n\n<p><br /></p>\n<h2 id=\"넓이-2배-높이--100\">넓이 2배, 높이 + 100##</h2>\n<p><a href=\"/assets/images/C/opencv/ch8/2.png\"><img src=\"/assets/images/C/opencv/ch8/2.png\" alt=\"2\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 7강 - 확대 &amp; 축소 ",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-7/",
      "date"     : "2017-10-15 00:00:00 +0900",
  "content"   : "<h3 id=\"이미지-피라미드-image-pyramid\">이미지 피라미드 (Image Pyramid)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch7/1.png\"><img src=\"/assets/images/C/opencv/ch7/1.png\" alt=\"0\" /></a>\n<code class=\"highlighter-rouge\">이미지 피라미드 (Image Pyramid)</code>란 이미지의 크기를 변화시켜 <code class=\"highlighter-rouge\">원하는 단계까지 샘플링</code>하는 작업입니다. 영상이나 이미지를 <code class=\"highlighter-rouge\">확대</code>, <code class=\"highlighter-rouge\">축소</code>시켜 띄울 수 있습니다.</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">라플라시안 피라미드(Laplacian pyramid)</code> :  <code class=\"highlighter-rouge\">다운 샘플링</code>을 통해 이미지를 <code class=\"highlighter-rouge\">1/2</code>배씩 축소시켜 가면서 피라미드를 생성합니다.</li>\n  <li><code class=\"highlighter-rouge\">가우시안 피라미드(Gaussian Pyramid)</code> : <code class=\"highlighter-rouge\">업 샘플링</code>을 통해 이미지를 <code class=\"highlighter-rouge\">2배</code>씩 확대 시켜가면서 피라미드를 생성합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">zoomin</span><span class=\"p\">;</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">zoomout</span><span class=\"p\">;</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">ZoomIn</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">zoomin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Size</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">*</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">*</span> <span class=\"m\">2</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">PyrUp</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">zoomin</span><span class=\"p\">,</span> <span class=\"n\">CvFilter</span><span class=\"p\">.</span><span class=\"n\">Gaussian5x5</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">zoomin</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">ZoomOut</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">zoomout</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Size</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">PyrDown</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">zoomout</span><span class=\"p\">,</span> <span class=\"n\">CvFilter</span><span class=\"p\">.</span><span class=\"n\">Gaussian5x5</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">zoomout</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">zoomin</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">zoomin</span><span class=\"p\">);</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">zoomout</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">zoomout</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>                    </code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">ZoomIn</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">))</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span> \n\n<span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">ZoomOut</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">))</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span> </code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">ZoomIn</code>, <code class=\"highlighter-rouge\">ZoomOut</code>에서 영상을 <code class=\"highlighter-rouge\">확대</code>, <code class=\"highlighter-rouge\">축소</code>하게 됩니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">zoomin</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Size</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">*</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">*</span> <span class=\"m\">2</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n\n<span class=\"p\">...</span>\n\n<span class=\"n\">zoomout</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Size</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">),</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">zoomin</code>, <code class=\"highlighter-rouge\">zoomout</code>에 메모리 확보를 위하여 선언합니다. <code class=\"highlighter-rouge\">IplImage(크기, 정밀도, 채널)</code>을 입력합니다. 단색일 경우 채널은 <code class=\"highlighter-rouge\">1</code>이며, 다색일 경우 채널은 <code class=\"highlighter-rouge\">3</code>입니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">Cv.Size()</code>를 이용하여 <code class=\"highlighter-rouge\">zoomin</code>, <code class=\"highlighter-rouge\">zoomout</code>의 크기를 설정합니다.</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">PyrUp</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">zoomin</span><span class=\"p\">,</span> <span class=\"n\">CvFilter</span><span class=\"p\">.</span><span class=\"n\">Gaussian5x5</span><span class=\"p\">);</span>\n<span class=\"k\">return</span> <span class=\"n\">zoomin</span><span class=\"p\">;</span>\n<span class=\"p\">...</span>\n\n<span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">PyrDown</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">zoomout</span><span class=\"p\">,</span> <span class=\"n\">CvFilter</span><span class=\"p\">.</span><span class=\"n\">Gaussian5x5</span><span class=\"p\">);</span>\n<span class=\"k\">return</span> <span class=\"n\">zoomout</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">PyrUp</code>, <code class=\"highlighter-rouge\">PyrDown</code>을 이용하여 화면을 <code class=\"highlighter-rouge\">확대</code>, <code class=\"highlighter-rouge\">축소</code>합니다. <code class=\"highlighter-rouge\">Cv.Pyr*(원본, 결과, 필터)</code>를 의미합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ZoomIn</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">//</span>\n\n<span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ZoomOut</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">ZoomIn</code>은 <code class=\"highlighter-rouge\">2배</code>의 이미지로 <code class=\"highlighter-rouge\">확대</code>하며, <code class=\"highlighter-rouge\">ZoomOut</code>은 <code class=\"highlighter-rouge\">1/2배</code>의 이미지로 <code class=\"highlighter-rouge\">축소</code>합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><br /></p>\n<h2 id=\"원본\">원본</h2>\n<p><a href=\"/assets/images/C/opencv/ch7/1.png\"><img src=\"/assets/images/C/opencv/ch7/1.png\" alt=\"1\" /></a></p>\n\n<p><br /></p>\n<h2 id=\"zoomin\">ZoomIn</h2>\n<p><a href=\"/assets/images/C/opencv/ch7/2.png\"><img src=\"/assets/images/C/opencv/ch7/2.png\" alt=\"2\" /></a></p>\n\n<p><br /></p>\n<h2 id=\"zoomout\">ZoomOut</h2>\n<p><a href=\"/assets/images/C/opencv/ch7/3.png\"><img src=\"/assets/images/C/opencv/ch7/3.png\" alt=\"3\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 6강 - 회전",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-6/",
      "date"     : "2017-10-13 00:00:00 +0900",
  "content"   : "<h3 id=\"회전-rotate\">회전 (Rotate)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch6/1.png\"><img src=\"/assets/images/C/opencv/ch6/1.png\" alt=\"0\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">회전</code>시켜 띄울 수 있습니다. <code class=\"highlighter-rouge\">90°</code>, <code class=\"highlighter-rouge\">45°</code>, <code class=\"highlighter-rouge\">-45°</code> 등 다양한 각도로 회전이 가능합니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">rotate</span><span class=\"p\">;</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Rotate</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">angle</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">rotate</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">CvMat</span> <span class=\"n\">matrix</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetRotationMatrix2D</span><span class=\"p\">(</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Point2D32f</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">),</span> <span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">WarpAffine</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">rotate</span><span class=\"p\">,</span> <span class=\"n\">matrix</span><span class=\"p\">,</span> <span class=\"n\">Interpolation</span><span class=\"p\">.</span><span class=\"n\">Linear</span><span class=\"p\">,</span> <span class=\"n\">CvScalar</span><span class=\"p\">.</span><span class=\"nf\">ScalarAll</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">));</span>\n            <span class=\"k\">return</span> <span class=\"n\">rotate</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">rotate</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">rotate</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>                    </code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Rotate</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">angle</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span> </code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Rotate()</code>에서 영상을 대칭하게 됩니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">rotate</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">rotate</code>에 메모리 확보를 위하여 선언합니다. <code class=\"highlighter-rouge\">IplImage(크기, 정밀도, 채널)</code>을 입력합니다. 단색일 경우 채널은 <code class=\"highlighter-rouge\">1</code>이며, 다색일 경우 채널은 <code class=\"highlighter-rouge\">3</code>입니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvMat</span> <span class=\"n\">matrix</span> <span class=\"p\">=</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">GetRotationMatrix2D</span><span class=\"p\">(</span><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Point2D32f</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Width</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Height</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">),</span> <span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.GetRotationMatrix2D()</code>을 이용하여 화면을 <code class=\"highlighter-rouge\">회전</code>합니다. <code class=\"highlighter-rouge\">Cv.GetRotationMatrix2D(중점(x, y), 각도, 스케일)</code>을 설정합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">중점</code>은 영상이나 이미지를 회전시킬 <code class=\"highlighter-rouge\">중심점</code>을 의미합니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">스케일</code>은 영상이나 이미지를 확대, 축소 시킬 <code class=\"highlighter-rouge\">크기</code>를 의미합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">WarpAffine</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">rotate</span><span class=\"p\">,</span> <span class=\"n\">matrix</span><span class=\"p\">,</span> <span class=\"n\">Interpolation</span><span class=\"p\">.</span><span class=\"n\">Linear</span><span class=\"p\">,</span> <span class=\"n\">CvScalar</span><span class=\"p\">.</span><span class=\"nf\">ScalarAll</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">));</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.WarpAffine()</code>을 이용하여 회전 결과를 생성합니다. <code class=\"highlighter-rouge\">Cv.WarpAffine(원본, 결과, 배열, 보간법, 여백색상)</code>을 의미합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">Interpolation.Linear</code>은 영상이나 이미지의 보간을 위해 보편적으로 사용되는 보간법입니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">CvScalar.ScalarAll(0)</code>는 여백을 검은색으로 채웁니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">Rotate</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"m\">90</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Rotate()</code>는 <code class=\"highlighter-rouge\">src</code> 이외에도 <code class=\"highlighter-rouge\">angle</code> 값을 추가로 받습니다. 영상이나 이미지를 회전시킬 <code class=\"highlighter-rouge\">각도</code>를 입력합니다.</p>\n\n<p><br /></p>\n\n<p>영상이나 이미지는 <code class=\"highlighter-rouge\">가로와 세로의 크기가 다른 경우</code>가 많습니다. 이 경우 회전시킬시에 생기는 <code class=\"highlighter-rouge\">공백</code>은 <code class=\"highlighter-rouge\">검은색</code>으로 처리됩니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><br /></p>\n<h2 id=\"원본\">원본</h2>\n<p><a href=\"/assets/images/C/opencv/ch6/1.png\"><img src=\"/assets/images/C/opencv/ch6/1.png\" alt=\"1\" /></a></p>\n\n<p><br /></p>\n<h2 id=\"45\">45°</h2>\n<p><a href=\"/assets/images/C/opencv/ch6/2.png\"><img src=\"/assets/images/C/opencv/ch6/2.png\" alt=\"2\" /></a></p>\n\n<p><br /></p>\n<h2 id=\"90\">90°</h2>\n<p><a href=\"/assets/images/C/opencv/ch6/3.png\"><img src=\"/assets/images/C/opencv/ch6/3.png\" alt=\"3\" /></a></p>\n\n<p><br /></p>\n<h2 id=\"-45\">-45°</h2>\n<p><a href=\"/assets/images/C/opencv/ch6/4.png\"><img src=\"/assets/images/C/opencv/ch6/4.png\" alt=\"4\" /></a></p>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 5강 - 대칭",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-5/",
      "date"     : "2017-10-12 00:00:00 +0900",
  "content"   : "<h3 id=\"대칭-flip-symmetry\">대칭 (Flip, Symmetry)</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch5/1.png\"><img src=\"/assets/images/C/opencv/ch5/1.png\" alt=\"0\" /></a>\n영상이나 이미지를 <code class=\"highlighter-rouge\">대칭</code>시켜 띄울 수 있습니다. <code class=\"highlighter-rouge\">상하대칭</code>, <code class=\"highlighter-rouge\">좌우대칭</code>, <code class=\"highlighter-rouge\">상하좌우대칭</code> 3 종류의 대칭된 영상이나 이미지로 변환합니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">원본(Source, src)</code>를 영상이나 이미지를 사용하면 됩니다.\n<br /></p>\n\n<p><code class=\"highlighter-rouge\">영상 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-3/\">3강 바로가기</a>\n<br />\n<code class=\"highlighter-rouge\">이미지 사용하기</code> : <a href=\"https://076923.github.io/posts/C-opencv-4/\">4강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"class\">Class</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">OpenCV</span> <span class=\"p\">:</span> <span class=\"n\">IDisposable</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">symm</span><span class=\"p\">;</span>\n            \n        <span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Symmetry</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">symm</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Flip</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">symm</span><span class=\"p\">,</span> <span class=\"n\">FlipMode</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">);</span>\n            <span class=\"k\">return</span> <span class=\"n\">symm</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span> \n        \n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Dispose</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">symm</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">symm</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>                    </code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">OpenCV</code>라는 <code class=\"highlighter-rouge\">클래스</code>를 생성하여 위와 같이 입력합니다. 영상처리에서는 <code class=\"highlighter-rouge\">메모리관리</code>가 중요하므로, 클래스에 <code class=\"highlighter-rouge\">IDisposable</code>에 추가합니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">IDisposable</code>란 <code class=\"highlighter-rouge\">관리되지 않은 메모리 해제</code>를 위해 사용됩니다. <code class=\"highlighter-rouge\">Dispose()</code>구문을 실행하게됩니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">Dispose()</code>에서 <code class=\"highlighter-rouge\">이미지의 메모리 할당을 해제</code>합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"class-code\">Class Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"n\">IplImage</span> <span class=\"nf\">Symmetry</span><span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span> </code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Symmetry()</code>에서 영상을 대칭하게 됩니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">symm</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">BitDepth</span><span class=\"p\">.</span><span class=\"n\">U8</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">symm</code>에 메모리 확보를 위하여 선언합니다. <code class=\"highlighter-rouge\">IplImage(크기, 정밀도, 채널)</code>을 입력합니다. 단색일 경우 채널은 <code class=\"highlighter-rouge\">1</code>이며, 다색일 경우 채널은 <code class=\"highlighter-rouge\">3</code>입니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Flip</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">symm</span><span class=\"p\">,</span> <span class=\"n\">FlipMode</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Cv.Flip()</code>을 이용하여 화면을 <code class=\"highlighter-rouge\">대칭</code>합니다. <code class=\"highlighter-rouge\">Cv.Flip(원본, 결과, 대칭방향)</code>을 설정합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">return</span> <span class=\"n\">symm</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>대칭된 결과인 <code class=\"highlighter-rouge\">symm</code>을 반환하여 출력하게 합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"main-code\">Main Code</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">OpenCV</span> <span class=\"n\">Convert</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">OpenCV</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">pictureBoxIpl2</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">Symmetry</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>클래스를 이용하기 위해 <code class=\"highlighter-rouge\">Convert</code>라는 생성자를 생성하고 <code class=\"highlighter-rouge\">using()</code>을 이용하여 메모리를 스스로 해제하게 만듭니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">using()</code>끼리 연결된 경우 마지막 using에만 <code class=\"highlighter-rouge\">;</code> 또는 <code class=\"highlighter-rouge\">{}</code>에만 사용하면 됩니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">OpenCV Convert = new OpenCV();</code>를 전역변수로 선언하여 사용해도 됩니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"result\">Result</h3>\n<hr />\n<p><br /></p>\n<h2 id=\"원본\">원본</h2>\n<p><a href=\"/assets/images/C/opencv/ch5/1.png\"><img src=\"/assets/images/C/opencv/ch5/1.png\" alt=\"1\" /></a>\n<br /></p>\n<h2 id=\"상하대칭\">상하대칭</h2>\n<p><a href=\"/assets/images/C/opencv/ch5/2.png\"><img src=\"/assets/images/C/opencv/ch5/2.png\" alt=\"2\" /></a></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Flip</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">symm</span><span class=\"p\">,</span> <span class=\"n\">FlipMode</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><br /></p>\n<h2 id=\"좌우대칭\">좌우대칭</h2>\n<p><a href=\"/assets/images/C/opencv/ch5/3.png\"><img src=\"/assets/images/C/opencv/ch5/3.png\" alt=\"3\" /></a></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Flip</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">symm</span><span class=\"p\">,</span> <span class=\"n\">FlipMode</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><br /></p>\n<h2 id=\"상하좌우대칭\">상하좌우대칭</h2>\n<p><a href=\"/assets/images/C/opencv/ch5/4.png\"><img src=\"/assets/images/C/opencv/ch5/4.png\" alt=\"4\" /></a></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">Flip</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">symm</span><span class=\"p\">,</span> <span class=\"n\">FlipMode</span><span class=\"p\">.</span><span class=\"n\">XY</span><span class=\"p\">);</span></code></pre></figure>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 23강 - 디자이너 오류 수정하기",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-23/",
      "date"     : "2017-10-12 00:00:00 +0900",
  "content"   : "<h3 id=\"디자이너-오류-designer-error\">디자이너 오류 (Designer Error)</h3>\n<hr />\n<p><a href=\"/assets/images/C/ch23/1.png\"><img src=\"/assets/images/C/ch23/1.png\" alt=\"1\" /></a>\n폼을 다룰 경우 실수로 <code class=\"highlighter-rouge\">Label</code>이나 <code class=\"highlighter-rouge\">PictureBox</code> 등을 더블 클릭하여 이벤트가 생성되는 경우가 빈번한데, <code class=\"highlighter-rouge\">코드창에서 이벤트를 강제로 지울 경우</code> 다음과 같은 오류가 발생합니다. <code class=\"highlighter-rouge\">디자이너를 로드하기 전에 데이터가 손실되지 않게 하려면 다음 오류를 해결해야 합니다.</code> 이를 해결하기 위하여 <code class=\"highlighter-rouge\">Designer</code>창에서 이벤트를 삭제합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/ch23/2.png\"><img src=\"/assets/images/C/ch23/2.png\" alt=\"2\" /></a>\n<code class=\"highlighter-rouge\">Label</code>에 관련된 불필요한 이벤트가 생성되고 이 이벤트를 지우게 됩니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/ch23/3.png\"><img src=\"/assets/images/C/ch23/3.png\" alt=\"3\" /></a>\n위와 같이 디자이너 오류가 뜨게 됩니다. 이럴 경우 <code class=\"highlighter-rouge\">무시 후 계속</code>을 폼이 파괴되게 됩니다.\n<code class=\"highlighter-rouge\">코드로 이동</code>을 클릭하여 <code class=\"highlighter-rouge\">Designerr</code>창으로 이동합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/ch23/4.png\"><img src=\"/assets/images/C/ch23/4.png\" alt=\"4\" /></a>\n<code class=\"highlighter-rouge\">Designer</code> 창에서 <code class=\"highlighter-rouge\">*.Click</code> 이벤트를 지우면 정상적으로 다시 프로그램을 작성할 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 컨트롤이 불필요한 경우 <code class=\"highlighter-rouge\">Delete</code>키를 이용하여 삭제하면 <code class=\"highlighter-rouge\">Designer</code>창에서 스스로 업데이트되어 따로 수정할 필요는 없습니다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 4강 - Image 불러오기",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-4/",
      "date"     : "2017-10-11 00:00:00 +0900",
  "content"   : "<h3 id=\"프로젝트-구성\">프로젝트 구성</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch4/1.png\"><img src=\"/assets/images/C/opencv/ch4/1.png\" alt=\"1\" /></a>\n도구상자에서 <code class=\"highlighter-rouge\">PictureBoxIpl</code>을 Form1에 생성합니다. 위의 이미지와 같이 배치합니다.</p>\n\n<p><br /></p>\n\n<p>속성을 아래와 같이 설정합니다.</p>\n\n<ol>\n  <li>\n    <p>PictureBoxIpl</p>\n\n    <ul>\n      <li>size : 300, 300</li>\n      <li>SizeMode : StretchImage</li>\n    </ul>\n  </li>\n</ol>\n\n<p><br /></p>\n\n<h3 id=\"image-출력\">Image 출력</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">namespace</code>에 <code class=\"highlighter-rouge\">OpenCV</code>를 사용할 수 있도록 선언합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">ipl</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"s\">\"../../opencv.png\"</span><span class=\"p\">,</span> <span class=\"n\">LoadMode</span><span class=\"p\">.</span><span class=\"n\">AnyColor</span><span class=\"p\">))</span>\n    <span class=\"p\">{</span> \n        <span class=\"n\">pictureBoxIpl1</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">ipl</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span> \n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">using(){}</code>을 이용하여 이미지를 띄웁니다. <code class=\"highlighter-rouge\">ipl</code> 생성자를 생성하여 이미지의 상대경로를 작성하고, 불러올 모드를 <code class=\"highlighter-rouge\">AnyColor</code>로 하여 원본과 동일한 이미지를 띄웁니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">using(){}</code>은 구문이 끝난 후 자동적으로 <code class=\"highlighter-rouge\">Dispose()</code>를 하여 메모리 할당을 해제 해줍니다.</li>\n</ul>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">절대경로</code>, <code class=\"highlighter-rouge\">상대경로</code>란? : <a href=\"https://076923.github.io/posts/C-22/\">22강 바로가기</a></p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/opencv/ch4/2.png\"><img src=\"/assets/images/C/opencv/ch4/2.png\" alt=\"2\" /></a>\n위와 같이 <code class=\"highlighter-rouge\">*png</code> 확장자의 이미지가 <code class=\"highlighter-rouge\">ipl</code> 형태로 표시되는 것을 확인할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"코드\">코드</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">IplImage</span> <span class=\"n\">ipl</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">IplImage</span><span class=\"p\">(</span><span class=\"s\">\"../../opencv.png\"</span><span class=\"p\">,</span> <span class=\"n\">LoadMode</span><span class=\"p\">.</span><span class=\"n\">AnyColor</span><span class=\"p\">))</span>\n            <span class=\"p\">{</span> \n                <span class=\"n\">pictureBoxIpl1</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">ipl</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span> \n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n                   </code></pre></figure>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 3강 - Camera 출력",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-3/",
      "date"     : "2017-10-08 00:00:00 +0900",
  "content"   : "<h3 id=\"프로젝트-구성\">프로젝트 구성</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch3/1.png\"><img src=\"/assets/images/C/opencv/ch3/1.png\" alt=\"1\" /></a>\n도구상자에서 <code class=\"highlighter-rouge\">PictureBoxIpl</code>, <code class=\"highlighter-rouge\">Timer</code>을 Form1에 생성합니다. 위의 이미지와 같이 배치합니다.</p>\n\n<p><br /></p>\n\n<p>속성을 아래와 같이 설정합니다.</p>\n\n<ol>\n  <li>\n    <p>PictureBoxIpl</p>\n\n    <ul>\n      <li>size : 640, 480</li>\n    </ul>\n  </li>\n  <li>\n    <p>Timer</p>\n\n    <ul>\n      <li>Enable : True</li>\n      <li>Interval : 33</li>\n    </ul>\n  </li>\n</ol>\n\n<p><br /></p>\n\n<h3 id=\"camera-출력\">Camera 출력</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">namespace</code>에 <code class=\"highlighter-rouge\">OpenCV</code>를 사용할 수 있도록 선언합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">CvCapture</span> <span class=\"n\">capture</span><span class=\"p\">;</span>\n<span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>카메라의 영상을 받아올 <code class=\"highlighter-rouge\">CvCapture</code>와 영상을 출력해 줄 <code class=\"highlighter-rouge\">IplImage</code>를 선언합니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">try</span>\n    <span class=\"p\">{</span> \n        <span class=\"n\">capture</span> <span class=\"p\">=</span> <span class=\"n\">CvCapture</span><span class=\"p\">.</span><span class=\"nf\">FromCamera</span><span class=\"p\">(</span><span class=\"n\">CaptureDevice</span><span class=\"p\">.</span><span class=\"n\">DShow</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n        <span class=\"n\">capture</span><span class=\"p\">.</span><span class=\"nf\">SetCaptureProperty</span><span class=\"p\">(</span><span class=\"n\">CaptureProperty</span><span class=\"p\">.</span><span class=\"n\">FrameWidth</span><span class=\"p\">,</span> <span class=\"m\">640</span><span class=\"p\">);</span>\n        <span class=\"n\">capture</span><span class=\"p\">.</span><span class=\"nf\">SetCaptureProperty</span><span class=\"p\">(</span><span class=\"n\">CaptureProperty</span><span class=\"p\">.</span><span class=\"n\">FrameHeight</span><span class=\"p\">,</span> <span class=\"m\">480</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">catch</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">timer1</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">try~catch</code>를 이용하여 카메라가 인식되지 않았을 때 오류가 발생하지 않도록 합니다. <code class=\"highlighter-rouge\">CvCapture.FromCamera(CaptureDevice.DShow, 0);</code>에서 <code class=\"highlighter-rouge\">0</code>은 카메라의 장치 번호입니다. 웹캠이 달려있는 노트북의 경우 <code class=\"highlighter-rouge\">0이 노트북 카메라</code> 입니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 카메라를 2개 이상 이용한다면 <code class=\"highlighter-rouge\">0</code>이 아닌 <code class=\"highlighter-rouge\">1</code>로 입력하면 <code class=\"highlighter-rouge\">외부 카메라로 인식</code>되어 출력됩니다.</li>\n  <li>Tip : 동영상 파일 사용시 <code class=\"highlighter-rouge\">CvCapture.FromFile(\"경로\")</code>를 사용하여 <code class=\"highlighter-rouge\">동영상</code>을 재생시킬 수 있습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">capture.SetCaptureProperty</code>는 영상의 <code class=\"highlighter-rouge\">너비</code>와 <code class=\"highlighter-rouge\">높이</code>를 설정합니다. 장치가 인식되지 않을 경우 <code class=\"highlighter-rouge\">catch</code>로 넘어가며 <code class=\"highlighter-rouge\">timer1</code>를 사용하지 않게됩니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">timer1_Tick</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">src</span> <span class=\"p\">=</span> <span class=\"n\">capture</span><span class=\"p\">.</span><span class=\"nf\">QueryFrame</span><span class=\"p\">();</span>\n    <span class=\"n\">pictureBoxIpl1</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">src</code>에 현재의 영상 프레임을 받아오게 되고 <code class=\"highlighter-rouge\">pictreuBoxIpl1</code>에 해당 영상을 출력하게 됩니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">timer1</code>은 33ms 마다 실행되며 그 때마다 영상을 출력합니다. <code class=\"highlighter-rouge\">Interval</code> 값을 수정하면 프레임의 수가 바뀌게 됩니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_FormClosing</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">FormClosingEventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">src</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Dispose</span><span class=\"p\">();</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">메모리 관리</code>를 위하여 폼이 닫힐 때 <code class=\"highlighter-rouge\">ReleaseImage()</code>와 <code class=\"highlighter-rouge\">Dispose()</code>를 이용하여 메모리 할당을 해제합니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">ReleaseImage()</code>는 <code class=\"highlighter-rouge\">이미지의 메모리 할당을 해제</code>합니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">Dispose()</code>는 <code class=\"highlighter-rouge\">클래스등의 메모리 할당을 해제</code>합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"코드\">코드</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">OpenCvSharp</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">CvCapture</span> <span class=\"n\">capture</span><span class=\"p\">;</span>\n        <span class=\"n\">IplImage</span> <span class=\"n\">src</span><span class=\"p\">;</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">try</span>\n            <span class=\"p\">{</span> \n                <span class=\"n\">capture</span> <span class=\"p\">=</span> <span class=\"n\">CvCapture</span><span class=\"p\">.</span><span class=\"nf\">FromCamera</span><span class=\"p\">(</span><span class=\"n\">CaptureDevice</span><span class=\"p\">.</span><span class=\"n\">DShow</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n                <span class=\"n\">capture</span><span class=\"p\">.</span><span class=\"nf\">SetCaptureProperty</span><span class=\"p\">(</span><span class=\"n\">CaptureProperty</span><span class=\"p\">.</span><span class=\"n\">FrameWidth</span><span class=\"p\">,</span> <span class=\"m\">640</span><span class=\"p\">);</span>\n                <span class=\"n\">capture</span><span class=\"p\">.</span><span class=\"nf\">SetCaptureProperty</span><span class=\"p\">(</span><span class=\"n\">CaptureProperty</span><span class=\"p\">.</span><span class=\"n\">FrameHeight</span><span class=\"p\">,</span> <span class=\"m\">480</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">catch</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">timer1</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">timer1_Tick</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">src</span> <span class=\"p\">=</span> <span class=\"n\">capture</span><span class=\"p\">.</span><span class=\"nf\">QueryFrame</span><span class=\"p\">();</span>\n            <span class=\"n\">pictureBoxIpl1</span><span class=\"p\">.</span><span class=\"n\">ImageIpl</span> <span class=\"p\">=</span> <span class=\"n\">src</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        \n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_FormClosing</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">FormClosingEventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">Cv</span><span class=\"p\">.</span><span class=\"nf\">ReleaseImage</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">);</span>\n <span class=\"err\"> </span> <span class=\"err\"> </span> <span class=\"err\"> </span> <span class=\"err\"> </span> <span class=\"err\"> </span> <span class=\"err\"> </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">src</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"n\">src</span><span class=\"p\">.</span><span class=\"nf\">Dispose</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>       \n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 2강 - PictureBoxIpl 도구 추가",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-2/",
      "date"     : "2017-10-07 00:00:00 +0900",
  "content"   : "<h3 id=\"pictureboxipl\">PictureBoxIpl</h3>\n<hr />\n<p>OpenCV를 정상적으로 설치했음에도 불구하고, <code class=\"highlighter-rouge\">도구 상자</code>에서 <code class=\"highlighter-rouge\">PictureBoxIpl</code>이 <strong>보이지 않거나 사라지는 경우</strong>가 있습니다. 이 때 도구상자에서만 사라진 것이므로 <strong>다시 등록</strong>할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"pictureboxipl-도구-추가\">PictureBoxIpl 도구 추가</h3>\n<hr />\n<p>먼저 프로그램을 <code class=\"highlighter-rouge\">빌드(Bulid)</code>하여 <code class=\"highlighter-rouge\">*.dll</code> 등 을 프로그램에 추가합니다. 즉, <code class=\"highlighter-rouge\">▶시작</code>을 클릭합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/opencv/ch2/1.png\"><img src=\"/assets/images/C/opencv/ch2/1.png\" alt=\"1\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">도구 상자</code>의 <strong>빈 여백에 우 클릭</strong>하여 <code class=\"highlighter-rouge\">항목 선택</code>을 클릭합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/opencv/ch2/2.png\"><img src=\"/assets/images/C/opencv/ch2/2.png\" alt=\"2\" /></a></p>\n\n<p>위와 같은 화면이 나오게 되고 우측의 <code class=\"highlighter-rouge\">찾아보기</code>를 클릭합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/opencv/ch2/3.png\"><img src=\"/assets/images/C/opencv/ch2/3.png\" alt=\"3\" /></a></p>\n\n<p>프로젝트의 경로를 따라간 후, <code class=\"highlighter-rouge\">bin</code> → <code class=\"highlighter-rouge\">Debug</code> 에서 <code class=\"highlighter-rouge\">OpenCvSharp.Userinterface.dll</code>을 선택합니다. <code class=\"highlighter-rouge\">구성 요소</code>에서 <code class=\"highlighter-rouge\">PictureBoxIpl</code>을 찾아 정상적으로 <code class=\"highlighter-rouge\">체크</code>되었는지 확인한 후, 확인 버튼을 클릭합니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">빌드(Bulid)</code>를 하지 않았다면 <code class=\"highlighter-rouge\">dll</code>이 보이지 않습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/opencv/ch2/4.png\"><img src=\"/assets/images/C/opencv/ch2/4.png\" alt=\"4\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">도구 상자</code>에서 <code class=\"highlighter-rouge\">PictureBoxIpl</code>을 검색하여 도구가 제대로 설치되었는지 확인합니다.\n도구가 제대로 보인다면 정상적으로 등록이 완료되었습니다.</p>\n"
    } ,
  
    {
      "title"    : "C# OpenCV 강좌 : 제 1강 - OpenCV 설치",
      "category" : "",
      "tags"     : "C#-OpenCV",
      "url"      : "/posts/C-opencv-1/",
      "date"     : "2017-10-04 00:00:00 +0900",
  "content"   : "<h3 id=\"opencv\">OpenCV</h3>\n<hr />\n<p>OpenCV (Open Source Computer Vision)은 <code class=\"highlighter-rouge\">오픈 소스 컴퓨터 비전 라이브러리</code>입니다. <code class=\"highlighter-rouge\">객체ㆍ얼굴ㆍ행동 인식</code>, <code class=\"highlighter-rouge\">독순</code>, <code class=\"highlighter-rouge\">모션 추적</code> 등의 응용 프로그램에서 사용합니다.</p>\n\n<p><br /></p>\n\n<p>본 강좌는 <code class=\"highlighter-rouge\">OpenCVSharp 2.4.10</code>에 맞추어져 있습니다. : <a href=\"#reference-1\">강좌와 동일한 버전 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"opencv-설치\">OpenCV 설치</h3>\n<hr />\n<p><a href=\"/assets/images/C/opencv/ch1/1.png\"><img src=\"/assets/images/C/opencv/ch1/1.png\" alt=\"1\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">프로젝트</code> → <code class=\"highlighter-rouge\">NuGet 패키지 관리(N)...</code>을 통하여 OpenCV를 쉽게 설치할 수 있습니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/opencv/ch1/2.png\"><img src=\"/assets/images/C/opencv/ch1/2.png\" alt=\"2\" /></a></p>\n\n<p>위와 같은 화면이 나오게 되고 <code class=\"highlighter-rouge\">찾아보기</code>를 눌러 <code class=\"highlighter-rouge\">검색창</code>에 <code class=\"highlighter-rouge\">opencv</code>를 검색합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>OpenCV 2.4</li>\n</ul>\n\n<p><a href=\"/assets/images/C/opencv/ch1/3.png\"><img src=\"/assets/images/C/opencv/ch1/3.png\" alt=\"3\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">OpenCV 2.4</code>는 <code class=\"highlighter-rouge\">OpenCVSharp-AnyCPU</code>를 찾아 우측의 <code class=\"highlighter-rouge\">설치</code> 버튼을 눌러 설치를 진행합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>OpenCV 3.2</li>\n</ul>\n\n<p><a href=\"/assets/images/C/opencv/ch1/4.png\"><img src=\"/assets/images/C/opencv/ch1/4.png\" alt=\"4\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">OpenCV 3.2</code>는 <code class=\"highlighter-rouge\">OpenCVSharp3-AnyCPU</code>를 찾아 우측의 <code class=\"highlighter-rouge\">설치</code> 버튼을 눌러 설치를 진행합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/opencv/ch1/5.png\"><img src=\"/assets/images/C/opencv/ch1/5.png\" alt=\"5\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">설치됨</code>을 눌러 OpenCV가 설치되었는지 확인합니다. <code class=\"highlighter-rouge\">체크</code>표시가 되어 있다면 정상적으로 설치된 상태입니다. 이후, 상단의 <code class=\"highlighter-rouge\">▶시작</code> 버튼을 눌러 <code class=\"highlighter-rouge\">OpenCVSharp</code>를 프로젝트에 등록합니다.</p>\n\n<p><br /></p>\n\n<p><a href=\"/assets/images/C/opencv/ch1/6.png\"><img src=\"/assets/images/C/opencv/ch1/6.png\" alt=\"6\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">도구 상자</code>에서 <code class=\"highlighter-rouge\">PictureBoxIpl</code>을 검색하여 도구가 제대로 설치되었는지 확인합니다.\n도구가 제대로 보인다면 정상적으로 설치가 완료되었습니다.</p>\n\n<p><a id=\"reference-1\"></a>\n<br /></p>\n<h3 id=\"opencv-dll-설치\">OpenCV DLL 설치</h3>\n<hr />\n<p>2017년 12월 2일 기준으로 <code class=\"highlighter-rouge\">OpenCVSharp-AnyCPU</code>가 지원되지 않는 것을 확인하였습니다. <code class=\"highlighter-rouge\">OpenCVSharp 2.4.10</code>을 <code class=\"highlighter-rouge\">DLL파일</code>을 직접 삽입하여 설치할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">OpenCVSharp 2.4.10 DLL 다운로드</code> : <a href=\"https://github.com/076923/076923.github.io/raw/master/download/OpenCVSharp2.4.10/OpenCVSharp%202.4.10.zip\">다운로드</a></p>\n\n<p><br />\n<a href=\"/assets/images/C/opencv/ch1/dll/0.PNG\"><img src=\"/assets/images/C/opencv/ch1/dll/0.PNG\" alt=\"dll-0\" /></a>\n프로젝트를 생성합니다. 위의 프로젝트의 이름은 <code class=\"highlighter-rouge\">OpenCVProjects</code>로 설정하였습니다. <code class=\"highlighter-rouge\">프로젝트이름\\프로젝트이름\\bin\\Debug</code>의 경로에 위의 파일을 받아 압출을 풀어 저장합니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/opencv/ch1/dll/1.PNG\"><img src=\"/assets/images/C/opencv/ch1/dll/1.PNG\" alt=\"dll-1\" /></a>\n우측의 <code class=\"highlighter-rouge\">솔루션 탐색기</code>에서 <code class=\"highlighter-rouge\">참조</code>탭에서 <code class=\"highlighter-rouge\">마우스 우클릭</code>을 하여 <code class=\"highlighter-rouge\">참조 추가(R)...</code>를 클릭합니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/opencv/ch1/dll/2.PNG\"><img src=\"/assets/images/C/opencv/ch1/dll/2.PNG\" alt=\"dll-2\" /></a>\n하단의 <code class=\"highlighter-rouge\">찾아보기 (B)...</code>를 클릭합니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/opencv/ch1/dll/3.PNG\"><img src=\"/assets/images/C/opencv/ch1/dll/3.PNG\" alt=\"dll-3\" /></a>\n5개의 <code class=\"highlighter-rouge\">*.dll</code> 파일을 모두 선택하고 <code class=\"highlighter-rouge\">추가</code>버튼을 눌러 DLL파일을 등록합니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/opencv/ch1/dll/4.PNG\"><img src=\"/assets/images/C/opencv/ch1/dll/4.PNG\" alt=\"dll-4\" /></a>\n<code class=\"highlighter-rouge\">*.dll</code>이 정상적으로 등록됐는지 확인 후, <code class=\"highlighter-rouge\">확인</code>버튼을 누릅니다.</p>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 22강 - 텍스트파일 읽기 쓰기",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-22/",
      "date"     : "2017-10-02 00:00:00 +0900",
  "content"   : "<h3 id=\"읽기-read-text\">읽기 (Read Text)</h3>\n<hr />\n<p><a href=\"/assets/images/C/ch22/1.png\"><img src=\"/assets/images/C/ch22/1.png\" alt=\"1\" /></a>\n<code class=\"highlighter-rouge\">*.txt</code>파일이나 <code class=\"highlighter-rouge\">*.dat</code>파일의 <code class=\"highlighter-rouge\">텍스트(Text)</code>를 읽어와 사용할 수 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Namespace 선언</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System.IO</span><span class=\"p\">;</span></code></pre></figure>\n\n<ul>\n  <li>모든 줄 읽기</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">string</span> <span class=\"err\">변수이름</span> <span class=\"p\">=</span> <span class=\"n\">File</span><span class=\"p\">.</span><span class=\"nf\">ReadAllText</span><span class=\"p\">(</span><span class=\"s\">@\"경로\"</span><span class=\"p\">);</span></code></pre></figure>\n\n<ul>\n  <li>한 줄 씩 읽기</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"err\">변수이름</span> <span class=\"p\">=</span> <span class=\"n\">File</span><span class=\"p\">.</span><span class=\"nf\">ReadAllLines</span><span class=\"p\">(</span><span class=\"s\">@\"경로\"</span><span class=\"p\">);</span></code></pre></figure>\n\n<ul>\n  <li>\n    <p>Tip : 경로 앞에 <code class=\"highlighter-rouge\">@</code>을 붙여야 하며, 한 줄 씩 읽을 경우 <code class=\"highlighter-rouge\">변수이름[index]</code>로 한 줄 씩 불러올 수 있습니다.</p>\n  </li>\n  <li>\n    <p>Tip : 변수로 지정된 경로를 추가할 경우 <code class=\"highlighter-rouge\">@</code> 앞에 추가해야합니다.</p>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"모든-줄-읽기-readalltext\">모든 줄 읽기 (ReadAllText)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">절대경로</code> 또는 <code class=\"highlighter-rouge\">상대경로</code>를 이용하여 텍스트 파일의 <code class=\"highlighter-rouge\">모든 텍스트</code>를 <code class=\"highlighter-rouge\">한 번에</code> 불러옵니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"c1\">//절대경로//</span>\n<span class=\"kt\">string</span> <span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"n\">File</span><span class=\"p\">.</span><span class=\"nf\">ReadAllText</span><span class=\"p\">(</span><span class=\"s\">@\"모든경로\\TEXT_File.txt\"</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"{0}\"</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">);</span>\n\n<span class=\"c1\">//상대경로//</span>\n<span class=\"kt\">string</span> <span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"n\">File</span><span class=\"p\">.</span><span class=\"nf\">ReadAllText</span><span class=\"p\">(</span><span class=\"s\">@\"..\\..\\TEXT_File.txt\"</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"{0}\"</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">);</span>\n\n<span class=\"c1\">//상대경로-내문서//</span>\n<span class=\"kt\">string</span> <span class=\"n\">mydoc</span> <span class=\"p\">=</span> <span class=\"n\">Environment</span><span class=\"p\">.</span><span class=\"nf\">GetFolderPath</span> <span class=\"p\">(</span><span class=\"n\">Environment</span><span class=\"p\">.</span><span class=\"n\">SpecialFolder</span><span class=\"p\">.</span><span class=\"n\">MyDocuments</span><span class=\"p\">);</span>\n<span class=\"kt\">string</span> <span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"n\">File</span><span class=\"p\">.</span><span class=\"nf\">ReadAllText</span><span class=\"p\">(</span><span class=\"n\">mydoc</span> <span class=\"p\">+</span> <span class=\"s\">@\"\\TEXT_File.txt\"</span><span class=\"p\">);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"{0}\"</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"한-줄-씩-읽기-readalllines\">한 줄 씩 읽기 (ReadAllLines)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">절대경로</code> 또는 <code class=\"highlighter-rouge\">상대경로</code>를 이용하여 텍스트 파일의 <code class=\"highlighter-rouge\">모든 텍스트</code>를 <code class=\"highlighter-rouge\">한 줄 씩</code> 불러옵니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"c1\">//절대경로//</span>\n<span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"n\">lines</span> <span class=\"p\">=</span> <span class=\"n\">File</span><span class=\"p\">.</span><span class=\"nf\">ReadAllLines</span><span class=\"p\">(</span><span class=\"s\">@\"모든경로\\TEXT_File.txt\"</span><span class=\"p\">);</span>\n<span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"kt\">string</span> <span class=\"n\">show</span> <span class=\"k\">in</span> <span class=\"n\">lines</span><span class=\"p\">)</span>\n<span class=\"p\">{</span> \n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"{0}\"</span><span class=\"p\">,</span> <span class=\"n\">show</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">//상대경로//</span>\n<span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"n\">lines</span> <span class=\"p\">=</span> <span class=\"n\">File</span><span class=\"p\">.</span><span class=\"nf\">ReadAllLines</span><span class=\"p\">(</span><span class=\"s\">@\"..\\..\\TEXT_File.txt\"</span><span class=\"p\">);</span>\n<span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"kt\">string</span> <span class=\"n\">show</span> <span class=\"k\">in</span> <span class=\"n\">lines</span><span class=\"p\">)</span>\n<span class=\"p\">{</span> \n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"{0}\"</span><span class=\"p\">,</span> <span class=\"n\">show</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">//상대경로-내문서//</span>\n<span class=\"kt\">string</span> <span class=\"n\">mydoc</span> <span class=\"p\">=</span> <span class=\"n\">Environment</span><span class=\"p\">.</span><span class=\"nf\">GetFolderPath</span> <span class=\"p\">(</span><span class=\"n\">Environment</span><span class=\"p\">.</span><span class=\"n\">SpecialFolder</span><span class=\"p\">.</span><span class=\"n\">MyDocuments</span><span class=\"p\">);</span>\n<span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"n\">lines</span> <span class=\"p\">=</span> <span class=\"n\">File</span><span class=\"p\">.</span><span class=\"nf\">ReadAllLines</span><span class=\"p\">(</span><span class=\"n\">mydoc</span> <span class=\"p\">+</span> <span class=\"s\">@\"\\TEXT_File.txt\"</span><span class=\"p\">);</span>\n<span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"kt\">string</span> <span class=\"n\">show</span> <span class=\"k\">in</span> <span class=\"n\">lines</span><span class=\"p\">)</span>\n<span class=\"p\">{</span> \n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"{0}\"</span><span class=\"p\">,</span> <span class=\"n\">show</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"쓰기write-text\">쓰기(Write Text)</h3>\n<hr />\n<p><a href=\"/assets/images/C/ch22/2.png\"><img src=\"/assets/images/C/ch22/2.png\" alt=\"2\" /></a>\n<code class=\"highlighter-rouge\">*.txt</code>파일이나 <code class=\"highlighter-rouge\">*.dat</code>파일의 <code class=\"highlighter-rouge\">텍스트(Text)</code>를 저장할 수 있습니다.</p>\n\n<ul>\n  <li>텍스트 쓰기</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">StreamWriter</span> <span class=\"err\">변수이름</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">StreamWriter</span><span class=\"p\">(</span><span class=\"s\">@\"경로\"</span><span class=\"p\">,</span> <span class=\"n\">Boolean</span><span class=\"p\">))</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"파일-쓰기-streamwriter\">파일 쓰기 (StreamWriter)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">절대경로</code> 또는 <code class=\"highlighter-rouge\">상대경로</code>를 이용하여 텍스트 파일의 <code class=\"highlighter-rouge\">텍스트</code>를 쓸 수 있습니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"c1\">//상대경로//</span>\n<span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"n\">lines</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"s\">\"First line\"</span><span class=\"p\">,</span> <span class=\"s\">\"Second line\"</span><span class=\"p\">,</span> <span class=\"s\">\"Third line\"</span> <span class=\"p\">};</span>\n\n<span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">StreamWriter</span> <span class=\"n\">outputFile</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">StreamWriter</span><span class=\"p\">(</span><span class=\"s\">@\"..\\..\\New_TEXT_File.txt\"</span><span class=\"p\">))</span>\n<span class=\"p\">{</span>    \n    <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"kt\">string</span> <span class=\"n\">line</span> <span class=\"k\">in</span> <span class=\"n\">lines</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">outputFile</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>New_TEXT_File.txt에 <code class=\"highlighter-rouge\">First line</code>, <code class=\"highlighter-rouge\">Second line</code>, <code class=\"highlighter-rouge\">Third line</code> 3줄의 구문을 만들어 생성합니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">절대경로</code> 및 <code class=\"highlighter-rouge\">상대경로</code> 이용법은 위와 동일합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"덧붙여-쓰기-added-write\">덧붙여 쓰기 (Added Write)</h3>\n<hr />\n<p>파일의 <code class=\"highlighter-rouge\">마지막 줄</code>에 구문을 추가하여 작성합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">StreamWriter</span> <span class=\"n\">outputFile</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">StreamWriter</span><span class=\"p\">(</span><span class=\"s\">@\"..\\..\\New_TEXT_File.txt\"</span><span class=\"p\">,</span> <span class=\"k\">true</span><span class=\"p\">))</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">outputFile</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"Fourth Line\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">true</code>를 추가하여 파일을 새로 덧씌우지 않고 이어서 작성할 수 있게 합니다.</p>\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 21강 - 델리게이트",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-21/",
      "date"     : "2017-09-28 00:00:00 +0900",
  "content"   : "<h3 id=\"델리게이트-delegate\">델리게이트 (Delegate)</h3>\n<hr />\n<p>델리게이트 (Delegate)란 <code class=\"highlighter-rouge\">메소드에 대한 참조</code>를 의미합니다. 델리게이트에 <code class=\"highlighter-rouge\">메소드의 주소를 할당한 후</code>에 델리게이트를 호출하면 <code class=\"highlighter-rouge\">이 델리게이트가 메소드를 호출</code>하게 됩니다. 델리게이트는 <code class=\"highlighter-rouge\">콜백 메소드 (CallBack Mehtod)</code>를 구현할 때 많이 사용합니다. 델리게이트가 호출할 때마다 원하는 메소드를 불러와 지정된 메소드를 실행할 수 있습니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"err\">한정자</span> <span class=\"k\">delegate</span> <span class=\"err\">반환형식</span> <span class=\"err\">델리게이트이름</span><span class=\"p\">(</span><span class=\"err\">매개변수목록</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"선언\">선언</h3>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">delegate</span> <span class=\"kt\">int</span> <span class=\"nf\">MyDelegate</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">b</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">MyDelegate</code>로 선언된 델리게이트에 <code class=\"highlighter-rouge\">매개변수 (int)</code>를 2개 받아 사용합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"nf\">Plus</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"p\">+</span> <span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">Minus</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"p\">-</span> <span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Plus</code>와 <code class=\"highlighter-rouge\">Minus</code> 메소드를 생성합니다. <code class=\"highlighter-rouge\">MyDelegate와 매개변수의 개수가 동일</code>해야 합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">MyDelegate</span> <span class=\"n\">function</span><span class=\"p\">;</span>\n\n    <span class=\"n\">function</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">MyDelegate</span><span class=\"p\">(</span><span class=\"n\">Plus</span><span class=\"p\">);</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"nf\">function</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">));</span>\n\n    <span class=\"n\">function</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">MyDelegate</span><span class=\"p\">(</span><span class=\"n\">Minus</span><span class=\"p\">);</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"nf\">function</span><span class=\"p\">(</span><span class=\"m\">7</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">));</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>위에서 선언된 MyDelegate를 <code class=\"highlighter-rouge\">function</code>으로 불러옵니다. 이 후, <code class=\"highlighter-rouge\">function</code>에 <code class=\"highlighter-rouge\">Plus</code>와 <code class=\"highlighter-rouge\">Minus</code>로 델리게이트가 참조할 메소드를 매개 변수로 넘깁니다. <code class=\"highlighter-rouge\">function(a, b)</code>로 델리게이트를 호출합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"델리게이트-일반화-delegate-generalization\">델리게이트 일반화 (Delegate Generalization)</h3>\n<hr />\n<p>델리게이트 일반화 (Delegate Generalization)란 <code class=\"highlighter-rouge\">일반화(Generalization)</code>와 마찬가지로 데이터 형식(Data Type)을 연관성이 있는 <code class=\"highlighter-rouge\">2개 이상의 개체 집합을 묶어내는것</code> 입니다. <code class=\"highlighter-rouge\">다른 형식의 메소드도 일반화 하여 참조</code>할 수 있습니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">delegate</span> <span class=\"n\">T</span> <span class=\"n\">MyDelegate</span><span class=\"p\">&lt;</span><span class=\"n\">T</span><span class=\"p\">&gt;(</span><span class=\"n\">T</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">T</span> <span class=\"n\">b</span><span class=\"p\">);</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">Plus</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"p\">+</span> <span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">Minus</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"p\">-</span> <span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">double</span> <span class=\"nf\">Multiply</span><span class=\"p\">(</span><span class=\"kt\">double</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"kt\">double</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"p\">*</span> <span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">double</span> <span class=\"nf\">Division</span><span class=\"p\">(</span><span class=\"kt\">double</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"kt\">double</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"p\">/</span> <span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">MyDelegate</span><span class=\"p\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">&gt;</span> <span class=\"n\">function1</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">MyDelegate</span><span class=\"p\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">&gt;(</span><span class=\"n\">Plus</span><span class=\"p\">);</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"nf\">function1</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">));</span>\n\n    <span class=\"n\">MyDelegate</span><span class=\"p\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">&gt;</span> <span class=\"n\">function2</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">MyDelegate</span><span class=\"p\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">&gt;(</span><span class=\"n\">Minus</span><span class=\"p\">);</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"nf\">function2</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">));</span>\n\n    <span class=\"n\">MyDelegate</span><span class=\"p\">&lt;</span><span class=\"kt\">double</span><span class=\"p\">&gt;</span> <span class=\"n\">function3</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">MyDelegate</span><span class=\"p\">&lt;</span><span class=\"kt\">double</span><span class=\"p\">&gt;(</span><span class=\"n\">Multiply</span><span class=\"p\">);</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"nf\">function3</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">));</span>\n\n    <span class=\"n\">MyDelegate</span><span class=\"p\">&lt;</span><span class=\"kt\">double</span><span class=\"p\">&gt;</span> <span class=\"n\">function4</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">MyDelegate</span><span class=\"p\">&lt;</span><span class=\"kt\">double</span><span class=\"p\">&gt;(</span><span class=\"n\">Division</span><span class=\"p\">);</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"nf\">function4</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">));</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>서로 다른 형식의 데이터 형식이라도 <code class=\"highlighter-rouge\">일반화를 통하여 델리게이트를 사용</code>할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"델리게이트-체인-delegate-chain\">델리게이트 체인 (Delegate Chain)</h3>\n<hr />\n<p>델리게이트 체인 (Delegate Chain)이란 <code class=\"highlighter-rouge\">여러 개의 메소드를 동시에 참조</code>하여 사용하는 방법입니다. 델리게이트를 호출할 때 <code class=\"highlighter-rouge\">델리게이트의 체인(+=, -=)에 따라 순서대로 호출</code>됩니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">delegate</span> <span class=\"k\">void</span> <span class=\"nf\">MyDelegate</span><span class=\"p\">(</span><span class=\"kt\">string</span> <span class=\"n\">text</span><span class=\"p\">);</span>\n\n<span class=\"k\">void</span> <span class=\"nf\">num_1</span> <span class=\"p\">(</span><span class=\"kt\">string</span> <span class=\"n\">text</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"1번 : {0}\"</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">void</span> <span class=\"nf\">num_2</span><span class=\"p\">(</span><span class=\"kt\">string</span> <span class=\"n\">text</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"2번 : {0}\"</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">void</span> <span class=\"nf\">num_3</span><span class=\"p\">(</span><span class=\"kt\">string</span> <span class=\"n\">text</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"3번 : {0}\"</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">MyDelegate</span> <span class=\"n\">dele</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">MyDelegate</span><span class=\"p\">(</span><span class=\"n\">num_1</span><span class=\"p\">);</span>\n    <span class=\"n\">dele</span> <span class=\"p\">+=</span> <span class=\"k\">new</span> <span class=\"nf\">MyDelegate</span><span class=\"p\">(</span><span class=\"n\">num_2</span><span class=\"p\">);</span>\n    <span class=\"n\">dele</span> <span class=\"p\">+=</span> <span class=\"k\">new</span> <span class=\"nf\">MyDelegate</span><span class=\"p\">(</span><span class=\"n\">num_3</span><span class=\"p\">);</span>\n\n    <span class=\"nf\">dele</span><span class=\"p\">(</span><span class=\"s\">\"사람\"</span><span class=\"p\">);</span>\n\n    <span class=\"n\">dele</span> <span class=\"p\">-=</span> <span class=\"k\">new</span> <span class=\"nf\">MyDelegate</span><span class=\"p\">(</span><span class=\"n\">num_2</span><span class=\"p\">);</span>\n\n    <span class=\"nf\">dele</span><span class=\"p\">(</span><span class=\"s\">\"인간\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>실제 출력 값 : 1번 : 사람 / 2번 : 사람 / 3번 : 사람 / 1번 : 인간 / 3번 : 인간</p>\n\n<p>산술기호를 이용하여 <code class=\"highlighter-rouge\">델리게이트끼리 연결시켜 사용</code>할 수 있습니다. 어떤 순서로 연결하느냐에 따라 <code class=\"highlighter-rouge\">출력 순서가 달라집니다.</code></p>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 20강 - 예외",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-20/",
      "date"     : "2017-09-25 00:00:00 +0900",
  "content"   : "<h3 id=\"예외-exception\">예외 (Exception)</h3>\n<hr />\n<p>예외 (Exception)란 프로그램을 실행할 때 나타나는 <code class=\"highlighter-rouge\">오류</code>를 나타냅니다. 오류가 발생할 경우 프로그램이 <code class=\"highlighter-rouge\">강제로 종료</code>되는데, 이를 방지하고자 사용합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">try</span>\n<span class=\"p\">{</span>\n    <span class=\"err\">코드</span> <span class=\"m\">1</span><span class=\"p\">;</span>\n    <span class=\"err\">코드</span> <span class=\"m\">2</span><span class=\"p\">;</span>\n    <span class=\"p\">...</span>\n    <span class=\"err\">코드</span> <span class=\"n\">n</span><span class=\"p\">;</span>   \n<span class=\"p\">}</span>\n<span class=\"k\">catch</span> <span class=\"p\">(</span> <span class=\"err\">예외</span> <span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"err\">코드</span> <span class=\"m\">1</span><span class=\"p\">;</span>\n    <span class=\"err\">코드</span> <span class=\"m\">2</span><span class=\"p\">;</span>\n    <span class=\"p\">...</span>\n    <span class=\"err\">코드</span> <span class=\"n\">n</span><span class=\"p\">;</span>   \n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"try-실행\">try 실행</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">try{}</code>를 이용하여 <code class=\"highlighter-rouge\">정상적으로 실행될 코드</code>를 작성합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"n\">array</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">3</span><span class=\"p\">]</span> <span class=\"p\">{</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">};</span>\n\n<span class=\"k\">try</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"m\">5</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>배열의 크기는 <code class=\"highlighter-rouge\">3</code>인 반면에, for문은 <code class=\"highlighter-rouge\">5</code>회를 실행하여 필연적으로 <code class=\"highlighter-rouge\">오류가 발생</code>합니다. 이로 인하여 프로그램이 <code class=\"highlighter-rouge\">비정상적</code>으로 종료가 됩니다. 이를 방지하기 위해 <code class=\"highlighter-rouge\">try</code> ~ <code class=\"highlighter-rouge\">catch</code>를 사용합니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"catch-예외\">catch 예외</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">catch(){}</code>를 이용하여 <code class=\"highlighter-rouge\">오류일 경우 실행될 코드</code>를 작성합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"n\">array</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">3</span><span class=\"p\">]</span> <span class=\"p\">{</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">};</span>\n\n<span class=\"k\">try</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"m\">5</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"k\">catch</span><span class=\"p\">(</span><span class=\"n\">IndexOutOfRangeException</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"범위 설정 오류\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>실제 출력 값 : 0 / 1 / 2 / 범위 설정 오류</p>\n\n<ul>\n  <li>Tip : 오류를 catch 구문으로 보내어 프로그램이 <code class=\"highlighter-rouge\">비정상적으로 종료되지 않습니다.</code></li>\n  <li>Tip : <code class=\"highlighter-rouge\">catch{}를 여러개 사용</code>하여 다른 여러 예외에 대하여 <code class=\"highlighter-rouge\">대응</code>할 수 있습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"finally-정리\">finally 정리</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">finally{}</code>를 이용하여 <code class=\"highlighter-rouge\">try</code>~<code class=\"highlighter-rouge\">catch</code>가 모두 실행 된 후 <code class=\"highlighter-rouge\">최종적으로 실행</code>합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"n\">array</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">3</span><span class=\"p\">]</span> <span class=\"p\">{</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">};</span>\n\n<span class=\"k\">try</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"m\">5</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"k\">catch</span><span class=\"p\">(</span><span class=\"n\">IndexOutOfRangeException</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"범위 설정 오류\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"k\">finally</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"s\">\"안전하게 종료\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>실제 출력 값 : 0 / 1 / 2 / 범위 설정 오류 / 안전하게 종료</p>\n\n<p><br /></p>\n\n<h3 id=\"throw-던지기\">throw 던지기</h3>\n<hr />\n<p>throw는 <code class=\"highlighter-rouge\">try{}</code>에서 정상적으로 동작 중 이더라도 <code class=\"highlighter-rouge\">예외구문</code>으로 보낼 수 있습니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nf\">IndexOutOfRangeException</span><span class=\"p\">();</span></code></pre></figure>\n\n<p>IndexOutOfRangeException로 된 <code class=\"highlighter-rouge\">catch 구문으로 에러를 보냅니다.</code></p>\n\n<p><br /></p>\n\n<h3 id=\"예외구문\">예외구문</h3>\n<hr />\n\n<ul>\n  <li><code class=\"highlighter-rouge\">Exception</code> : 모든 에러의 최상위 에러, 모든 에러와 호환됩니다.</li>\n  <li><code class=\"highlighter-rouge\">DivideByZeroException</code> : 정수 값 또는 소수 값을 0으로 나누려 할 때</li>\n  <li><code class=\"highlighter-rouge\">IndexOutOfRangeException</code> : 배열 범위 밖의 index를 엑세스 할 때</li>\n  <li><code class=\"highlighter-rouge\">FormatException</code> : 변수의 형식이 맞지 않을 때</li>\n  <li><code class=\"highlighter-rouge\">OverflowException</code> : 오버플로우가 발생할 때</li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : 이 외에도 수많은 에러 구문이 있고 그에 따른 에러를 적절하게 사용하면 됩니다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 19강 - 일반화",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-19/",
      "date"     : "2017-09-23 00:00:00 +0900",
  "content"   : "<h3 id=\"일반화-generalization\">일반화 (Generalization)</h3>\n<hr />\n<p>일반화 (Generalization) <code class=\"highlighter-rouge\">데이터 형식(Data Type)</code>을 <code class=\"highlighter-rouge\">연관성</code>이 있는 2개 이상의 개체 집합을 <code class=\"highlighter-rouge\">묶어내는 것</code> 입니다. 데이터 형식이 <code class=\"highlighter-rouge\">다른 변수들을 출력한다 가정</code>하면, 비슷하면서 다른 코드를 여러개 작성해야 합니다. <code class=\"highlighter-rouge\">이를 줄이기 위하여 사용</code>합니다.</p>\n\n<p><a href=\"/assets/images/C/ch19/1.png\"><img src=\"/assets/images/C/ch19/1.png\" alt=\"1\" /></a></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"err\">한정자</span> <span class=\"err\">반환형식</span> <span class=\"err\">일반화이름</span><span class=\"p\">&lt;</span><span class=\"n\">T</span><span class=\"p\">&gt;</span> <span class=\"p\">(</span><span class=\"n\">T</span> <span class=\"err\">매개변수</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"err\">코드</span> <span class=\"m\">1</span><span class=\"p\">;</span>\n    <span class=\"err\">코드</span> <span class=\"m\">2</span><span class=\"p\">;</span>\n    <span class=\"err\">코드</span> <span class=\"m\">3</span><span class=\"p\">;</span>\n    <span class=\"p\">...</span>\n    <span class=\"k\">return</span> <span class=\"err\">반환값</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h3 id=\"일반화-메소드-generalization-method\">일반화 메소드 (Generalization Method)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">T</code>를 이용하여 <code class=\"highlighter-rouge\">서로 다른 데이터 형식의 메소드를 일반화</code>할 수 있습니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"n\">general</span><span class=\"p\">&lt;</span><span class=\"n\">T</span><span class=\"p\">&gt;(</span><span class=\"n\">T</span> <span class=\"k\">value</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"k\">value</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"n\">one</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span> <span class=\"p\">};</span>\n    <span class=\"kt\">string</span> <span class=\"n\">two</span> <span class=\"p\">=</span> <span class=\"s\">\"일반화\"</span><span class=\"p\">;</span>\n    <span class=\"kt\">double</span> <span class=\"n\">three</span> <span class=\"p\">=</span> <span class=\"m\">45.6</span><span class=\"p\">;</span>\n    <span class=\"kt\">bool</span> <span class=\"n\">four</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n\n    <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">num</span> <span class=\"k\">in</span> <span class=\"n\">one</span><span class=\"p\">)</span> <span class=\"n\">general</span><span class=\"p\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">&gt;(</span><span class=\"n\">num</span><span class=\"p\">);</span>\n    <span class=\"n\">general</span><span class=\"p\">&lt;</span><span class=\"kt\">string</span><span class=\"p\">&gt;(</span><span class=\"n\">two</span><span class=\"p\">);</span>\n    <span class=\"n\">general</span><span class=\"p\">&lt;</span><span class=\"kt\">double</span><span class=\"p\">&gt;(</span><span class=\"n\">three</span><span class=\"p\">);</span>\n    <span class=\"n\">general</span><span class=\"p\">&lt;</span><span class=\"kt\">object</span><span class=\"p\">&gt;(</span><span class=\"n\">four</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>실제 출력 값 : 1 / 2 / 3 / 일반화 / 45.6 / True</p>\n\n<ul>\n  <li>Tip : 배열의 경우 각각의 원소를 출력해야합니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">object</code>는 모든 변수의 최상위 변수입니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"일반화-클래스-generalization-class\">일반화 클래스 (Generalization Class)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">T</code>를 이용하여 <code class=\"highlighter-rouge\">서로 다른 데이터 형식의 클래스를 일반화</code>할 수 있습니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">class</span> <span class=\"nc\">general</span><span class=\"p\">&lt;</span><span class=\"n\">T</span><span class=\"p\">&gt;</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"n\">T</span><span class=\"p\">[]</span> <span class=\"n\">array</span><span class=\"p\">;</span>\n    <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">size</span><span class=\"p\">;</span>\n\n    <span class=\"k\">public</span> <span class=\"nf\">general</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">size</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">array</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">T</span><span class=\"p\">[</span><span class=\"n\">size</span><span class=\"p\">];</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">general</span><span class=\"p\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">&gt;</span> <span class=\"n\">list1</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">general</span><span class=\"p\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">&gt;(</span><span class=\"m\">1</span><span class=\"p\">);</span>\n    <span class=\"n\">general</span><span class=\"p\">&lt;</span><span class=\"kt\">string</span><span class=\"p\">&gt;</span> <span class=\"n\">list2</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">general</span><span class=\"p\">&lt;</span><span class=\"kt\">string</span><span class=\"p\">&gt;(</span><span class=\"m\">2</span><span class=\"p\">);</span>\n    <span class=\"n\">general</span><span class=\"p\">&lt;</span><span class=\"kt\">object</span><span class=\"p\">&gt;</span> <span class=\"n\">list3</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">general</span><span class=\"p\">&lt;</span><span class=\"kt\">object</span><span class=\"p\">&gt;(</span><span class=\"m\">3</span><span class=\"p\">);</span>\n\n    <span class=\"n\">list1</span><span class=\"p\">.</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"m\">1</span><span class=\"p\">;</span>\n\n    <span class=\"n\">list2</span><span class=\"p\">.</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"s\">\"one\"</span><span class=\"p\">;</span>\n    <span class=\"n\">list2</span><span class=\"p\">.</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"s\">\"two\"</span><span class=\"p\">;</span>\n\n    <span class=\"n\">list3</span><span class=\"p\">.</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"m\">23.456</span><span class=\"p\">;</span>\n    <span class=\"n\">list3</span><span class=\"p\">.</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"s\">\"three\"</span><span class=\"p\">;</span>\n    <span class=\"n\">list3</span><span class=\"p\">.</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">list1</span><span class=\"p\">.</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]);</span>\n\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">list2</span><span class=\"p\">.</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]);</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">list2</span><span class=\"p\">.</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">]);</span>\n\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">list3</span><span class=\"p\">.</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]);</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">list3</span><span class=\"p\">.</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">]);</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">list3</span><span class=\"p\">.</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>실제 출력 값 : 1 / one / two / 23.456 / three / True</p>\n\n<p><br /></p>\n\n<h3 id=\"제약조건-where--t\">제약조건 where : T</h3>\n<hr />\n<p>모든 형식에 대하여 대응할 수 있지만, <code class=\"highlighter-rouge\">특정 조건에만 만족하는 경우에만 사용 할 수 있게 제한</code>할 수 있습니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">where</span> <span class=\"err\">형식매개변수</span> <span class=\"p\">:</span> <span class=\"err\">제약조건</span></code></pre></figure>\n\n<ol>\n  <li><code class=\"highlighter-rouge\">where T : struct</code> : T는 값 형식으로 제한</li>\n  <li><code class=\"highlighter-rouge\">where T : class</code> : T는 참조 형식으로 제한</li>\n  <li><code class=\"highlighter-rouge\">where T : new()</code> : 매개 변수가 없는 생성자로 제한</li>\n  <li><code class=\"highlighter-rouge\">where T : 기반 클래스 이름</code> : 기반 클래스의 파생 클래스로 제한</li>\n  <li><code class=\"highlighter-rouge\">where T : 인터페이스 이름</code> : 명시한 인터페이스로 제한</li>\n  <li><code class=\"highlighter-rouge\">where T : U</code> : 다른 형식 매개 변수 U로부터 상속받은 클래스로 제한</li>\n</ol>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"n\">general</span><span class=\"p\">&lt;</span><span class=\"n\">T</span><span class=\"p\">&gt;(</span><span class=\"n\">T</span> <span class=\"k\">value</span><span class=\"p\">)</span> <span class=\"k\">where</span> <span class=\"n\">T</span> <span class=\"p\">:</span> <span class=\"k\">struct</span>\n<span class=\"err\">{</span>\n    <span class=\"nc\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"k\">value</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"n\">one</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span> <span class=\"p\">};</span>\n    <span class=\"kt\">string</span> <span class=\"n\">two</span> <span class=\"p\">=</span> <span class=\"s\">\"일반화\"</span><span class=\"p\">;</span>\n    <span class=\"kt\">double</span> <span class=\"n\">three</span> <span class=\"p\">=</span> <span class=\"m\">45.6</span><span class=\"p\">;</span>\n    <span class=\"kt\">bool</span> <span class=\"n\">four</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n\n    <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">num</span> <span class=\"k\">in</span> <span class=\"n\">one</span><span class=\"p\">)</span> <span class=\"n\">general</span><span class=\"p\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">&gt;(</span><span class=\"n\">num</span><span class=\"p\">);</span>\n    <span class=\"c1\">//general&lt;string&gt;(two);</span>\n    <span class=\"n\">general</span><span class=\"p\">&lt;</span><span class=\"kt\">double</span><span class=\"p\">&gt;(</span><span class=\"n\">three</span><span class=\"p\">);</span>\n    <span class=\"c1\">//general&lt;object&gt;(four);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>실제 출력 값 : 1 / 2 / 3 / 45.6</p>\n\n<p><code class=\"highlighter-rouge\">값 형식으로 제한</code>하여 <code class=\"highlighter-rouge\">배열</code>과 <code class=\"highlighter-rouge\">double</code>만 출력이 가능합니다. <code class=\"highlighter-rouge\">string</code>, <code class=\"highlighter-rouge\">bool</code>은 <code class=\"highlighter-rouge\">CS0453</code> 에러를 일으킵니다.</p>\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 18강 - 컬렉션",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-18/",
      "date"     : "2017-09-22 00:00:00 +0900",
  "content"   : "<h3 id=\"컬렉션-collections\">컬렉션 (Collections)</h3>\n<hr />\n<p>컬렉션 (Collections)은 <code class=\"highlighter-rouge\">같은 성격</code>을 띄는 데이터의 집합을 담는 <code class=\"highlighter-rouge\">자료구조</code>입니다. 배열과 비슷하나 <code class=\"highlighter-rouge\">시작 위치나 중간에 삽입</code>하려는 경우에는 일반적으로 빠릅니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"arraylist\">ArrayList</h3>\n<hr />\n<p>ArrayList는 배열과 비슷하나 초기에 설정된 값 사이에도 값을 추가하거나 제거할 수 있습니다. 배열 속 값이 <code class=\"highlighter-rouge\">지속적으로 길이가 변하거나 내부의 값이 추가 및 삭제될 때 유용</code>합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">ArrayList</span> <span class=\"n\">list</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">ArrayList</span><span class=\"p\">();</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">list</code>라는 ArrayList 생성</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">list</span><span class=\"p\">.</span><span class=\"nf\">Add</span><span class=\"p\">(</span><span class=\"m\">10</span><span class=\"p\">);</span>\n<span class=\"n\">list</span><span class=\"p\">.</span><span class=\"nf\">Add</span><span class=\"p\">(</span><span class=\"m\">20</span><span class=\"p\">);</span>\n<span class=\"n\">list</span><span class=\"p\">.</span><span class=\"nf\">Add</span><span class=\"p\">(</span><span class=\"m\">30</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">list</code>에 <code class=\"highlighter-rouge\">10</code>, <code class=\"highlighter-rouge\">20</code>, <code class=\"highlighter-rouge\">30</code> 추가하고 index는 자동적으로 <code class=\"highlighter-rouge\">0</code>, <code class=\"highlighter-rouge\">1</code>, <code class=\"highlighter-rouge\">2</code> 부여</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">list</span><span class=\"p\">.</span><span class=\"nf\">RemoveAt</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">list</code>의 <code class=\"highlighter-rouge\">index-1</code> 제거</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">list</span><span class=\"p\">.</span><span class=\"nf\">Insert</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">15</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">list</code>의 <code class=\"highlighter-rouge\">index-1</code> 자리에 <code class=\"highlighter-rouge\">15</code> 삽입</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"s\">\"{0}\"</span><span class=\"p\">,</span> <span class=\"n\">list</span><span class=\"p\">.</span><span class=\"n\">Count</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">list</code>에 포함된 index의 개수 파악</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"s\">\"{0}, {1}, {2}\"</span><span class=\"p\">,</span> <span class=\"n\">list</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">],</span> <span class=\"n\">list</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">],</span> <span class=\"n\">list</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">list</code>의 <code class=\"highlighter-rouge\">index-1</code>, <code class=\"highlighter-rouge\">index-2</code>, <code class=\"highlighter-rouge\">index-3</code> 출력</p>\n\n<p><br /></p>\n\n<h3 id=\"queue--선입선출법-first-in-first-out\">Queue / 선입선출법 (First In First Out)</h3>\n<hr />\n\n<p><a href=\"/assets/images/C/ch18/2.png\"><img src=\"/assets/images/C/ch18/2.png\" alt=\"1\" /></a></p>\n\n<p>선입선출법 (First in First Out)이란 <code class=\"highlighter-rouge\">먼저 들어온 값이 먼저 나가는 방식</code>입니다. <code class=\"highlighter-rouge\">노란색&gt;주황색&gt;초록색</code> 순서로 들어가게 되면, 다시 <code class=\"highlighter-rouge\">노란색&gt;주황색&gt;초록색</code> 순서로 나가게 됩니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Queue</span> <span class=\"n\">que</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Queue</span><span class=\"p\">();</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">que</code>라는 Queue 생성</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">que</span><span class=\"p\">.</span><span class=\"nf\">Enqueue</span><span class=\"p\">(</span><span class=\"s\">\"green\"</span><span class=\"p\">);</span>\n<span class=\"n\">que</span><span class=\"p\">.</span><span class=\"nf\">Enqueue</span><span class=\"p\">(</span><span class=\"s\">\"orange\"</span><span class=\"p\">);</span>\n<span class=\"n\">que</span><span class=\"p\">.</span><span class=\"nf\">Enqueue</span><span class=\"p\">(</span><span class=\"s\">\"yellow\"</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Enqueue</code>를 사용하여 데이터 <code class=\"highlighter-rouge\">입력</code></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"{0}\"</span><span class=\"p\">,</span> <span class=\"n\">que</span><span class=\"p\">.</span><span class=\"nf\">Dequeue</span><span class=\"p\">());</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"{0}\"</span><span class=\"p\">,</span> <span class=\"n\">que</span><span class=\"p\">.</span><span class=\"nf\">Dequeue</span><span class=\"p\">());</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"{0}\"</span><span class=\"p\">,</span> <span class=\"n\">que</span><span class=\"p\">.</span><span class=\"nf\">Dequeue</span><span class=\"p\">());</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Dequeue</code>를 사용하여 데이터 <code class=\"highlighter-rouge\">출력</code></p>\n\n<p>실제 출력 값 : green / orange / yellow</p>\n\n<p><br /></p>\n\n<h3 id=\"stack--후입선출법-last-in-first-out\">Stack / 후입선출법 (Last In First Out)</h3>\n<hr />\n<p><a href=\"/assets/images/C/ch18/1.png\"><img src=\"/assets/images/C/ch18/1.png\" alt=\"2\" /></a></p>\n\n<p>후입선출법 (Last In First Out)이란 <code class=\"highlighter-rouge\">먼저 들어온 값이 나중에 나가는 방식</code>입니다. <code class=\"highlighter-rouge\">노란색&gt;주황색&gt;초록색</code> 순서로 들어가게 되면, 다시 <code class=\"highlighter-rouge\">초록색&gt;주황색&gt;주황색</code> 순서로 나가게 됩니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Stack</span> <span class=\"n\">stack</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Stack</span><span class=\"p\">();</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">stack</code>라는 Stack 생성</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">stack</span><span class=\"p\">.</span><span class=\"nf\">Push</span><span class=\"p\">(</span><span class=\"s\">\"green\"</span><span class=\"p\">);</span>\n<span class=\"n\">stack</span><span class=\"p\">.</span><span class=\"nf\">Push</span><span class=\"p\">(</span><span class=\"s\">\"orange\"</span><span class=\"p\">);</span>\n<span class=\"n\">stack</span><span class=\"p\">.</span><span class=\"nf\">Push</span><span class=\"p\">(</span><span class=\"s\">\"yellow\"</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Push</code>를 사용하여 데이터 <code class=\"highlighter-rouge\">입력</code></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"{0}\"</span><span class=\"p\">,</span> <span class=\"n\">stack</span><span class=\"p\">.</span><span class=\"nf\">Pop</span><span class=\"p\">());</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"{0}\"</span><span class=\"p\">,</span> <span class=\"n\">stack</span><span class=\"p\">.</span><span class=\"nf\">Pop</span><span class=\"p\">());</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"{0}\"</span><span class=\"p\">,</span> <span class=\"n\">stack</span><span class=\"p\">.</span><span class=\"nf\">Pop</span><span class=\"p\">());</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">Pop</code>를 사용하여 데이터 <code class=\"highlighter-rouge\">출력</code></p>\n\n<p>실제 출력 값 : yellow / orange / green</p>\n\n<p><br /></p>\n\n<h3 id=\"hashtable\">Hashtable</h3>\n<hr />\n<p>Hashtable 이란 <code class=\"highlighter-rouge\">키(Key)</code>와 <code class=\"highlighter-rouge\">값(Value)</code>으로 이루어진 데이터를 다룰 때 사용합니다. 키(Key)를 해싱(Hashing)을 통해 테이블 내의 주소를 계산합니다. 다루기 간편하고 탐색속도도 빠릅니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Hashtable</span> <span class=\"n\">ht</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Hashtable</span><span class=\"p\">();</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">ht</code>라는 Hashtable 생성</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">ht</span><span class=\"p\">[</span><span class=\"s\">\"green\"</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"s\">\"초록색\"</span><span class=\"p\">;</span>\n<span class=\"n\">ht</span><span class=\"p\">[</span><span class=\"s\">\"oragne\"</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"s\">\"주황색\"</span><span class=\"p\">;</span>\n<span class=\"n\">ht</span><span class=\"p\">[</span><span class=\"s\">\"yellow\"</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"s\">\"노란색\"</span><span class=\"p\">;</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">ht[]</code>를 사용하여 데이터 <code class=\"highlighter-rouge\">입력</code></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">ht</span><span class=\"p\">[</span><span class=\"s\">\"green\"</span><span class=\"p\">]);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">ht</span><span class=\"p\">[</span><span class=\"s\">\"oragne\"</span><span class=\"p\">]);</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">ht</span><span class=\"p\">[</span><span class=\"s\">\"yellow\"</span><span class=\"p\">]);</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">ht[]</code>를 사용하여 데이터 <code class=\"highlighter-rouge\">출력</code></p>\n\n<p>실제 출력 값 : 초록색 / 주황색 / 노란색</p>\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 17강 - 구조체",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-17/",
      "date"     : "2017-09-19 00:00:00 +0900",
  "content"   : "<h3 id=\"구조체-struct\">구조체 (Struct)</h3>\n<hr />\n<p>구조체 (Struct)는 클래스 (Class)와 <code class=\"highlighter-rouge\">비슷한</code> 부분이 많습니다. 클래스와 <code class=\"highlighter-rouge\">동일한 구조</code>로 사용할 수 있습니다. 하지만 구조체는 클래스와 다른점이 있는데, <code class=\"highlighter-rouge\">크기가 작으며 간단</code>합니다. 또한 <code class=\"highlighter-rouge\">상속이 필요가 없는 경우에 사용</code>합니다.</p>\n\n<p><br /></p>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">특징</th>\n      <th style=\"text-align: center\">클래스</th>\n      <th style=\"text-align: center\">구조체</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">선언</td>\n      <td style=\"text-align: center\">class</td>\n      <td style=\"text-align: center\">struct</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">형식</td>\n      <td style=\"text-align: center\">참조 형식</td>\n      <td style=\"text-align: center\">값 형식</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">복사</td>\n      <td style=\"text-align: center\">얕은 복사</td>\n      <td style=\"text-align: center\">깊은 복사</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">인스턴스 생성</td>\n      <td style=\"text-align: center\">new연산자, 생성자 필요</td>\n      <td style=\"text-align: center\">매개 변수가 없는 생성자 선언 불가</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">참조 형식</code>, <code class=\"highlighter-rouge\">값 형식</code>이란? : <a href=\"https://076923.github.io/posts/C-9/\">9강 바로가기</a></p>\n\n<p><br /></p>\n\n<h3 id=\"복사-copy\">복사 (Copy)</h3>\n<hr />\n<p>프로그래밍을 진행하다보면 같은 양식을 <code class=\"highlighter-rouge\">복사해서 사용</code>해야할 경우가 종종 있습니다. 복사에는 2 종류가 있으며 각각 <code class=\"highlighter-rouge\">큰 차이</code>를 보입니다.</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">얕은 복사 (Shallow Copy)</code> : 얕은 복사란 복사본의 값을 바꾸엇을 때 <code class=\"highlighter-rouge\">원본의 값도 바뀌는 형태</code>입니다. <code class=\"highlighter-rouge\">클래스</code>에서 얕은 복사가 사용됩니다. 쉽게 설명하자면 <code class=\"highlighter-rouge\">word 파일을 작성하였을 때, 바로가기 아이콘과 동일</code>합니다.</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">class</span> <span class=\"nc\">test_class</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">first</span><span class=\"p\">;</span>\n    <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">second</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">test_class</span> <span class=\"n\">original</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">test_class</span><span class=\"p\">();</span>\n\n    <span class=\"n\">original</span><span class=\"p\">.</span><span class=\"n\">first</span> <span class=\"p\">=</span> <span class=\"m\">10</span><span class=\"p\">;</span>\n    <span class=\"n\">original</span><span class=\"p\">.</span><span class=\"n\">second</span> <span class=\"p\">=</span> <span class=\"m\">20</span><span class=\"p\">;</span>\n\n    <span class=\"n\">test_class</span> <span class=\"n\">copy</span> <span class=\"p\">=</span> <span class=\"n\">original</span><span class=\"p\">;</span>\n    <span class=\"n\">copy</span><span class=\"p\">.</span><span class=\"n\">first</span> <span class=\"p\">=</span> <span class=\"m\">30</span><span class=\"p\">;</span>\n\n <span class=\"err\"> </span> <span class=\"err\"> </span><span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"{0}, {1}, {2}, {3}\"</span><span class=\"p\">,</span> <span class=\"n\">original</span><span class=\"p\">.</span><span class=\"n\">first</span><span class=\"p\">,</span> <span class=\"n\">original</span><span class=\"p\">.</span><span class=\"n\">second</span><span class=\"p\">,</span> <span class=\"n\">copy</span><span class=\"p\">.</span><span class=\"n\">first</span><span class=\"p\">,</span> <span class=\"n\">copy</span><span class=\"p\">.</span><span class=\"n\">second</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>실제 출력 값 : 30, 20, 30, 20</p>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">깊은 복사 (Deep Copy)</code> : 깊은 복사란 복사본의 값을 바꾸어도 <code class=\"highlighter-rouge\">원본의 값은 바뀌지 않는 형태</code>입니다. <code class=\"highlighter-rouge\">구조체</code>에서 깊은 복사가 사용됩니다. 쉽게 설명하자면 <code class=\"highlighter-rouge\">word 파일을 작성하였을 때, 복사ㆍ붙여넣기와 동일</code>합니다.</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">struct</span> <span class=\"nc\">test_struct</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">first</span><span class=\"p\">;</span>\n    <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">second</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">test_struct</span> <span class=\"n\">original</span><span class=\"p\">;</span>\n\n    <span class=\"n\">original</span><span class=\"p\">.</span><span class=\"n\">first</span> <span class=\"p\">=</span> <span class=\"m\">10</span><span class=\"p\">;</span>\n    <span class=\"n\">original</span><span class=\"p\">.</span><span class=\"n\">second</span> <span class=\"p\">=</span> <span class=\"m\">20</span><span class=\"p\">;</span>\n\n    <span class=\"n\">test_struct</span> <span class=\"n\">copy</span> <span class=\"p\">=</span> <span class=\"n\">original</span><span class=\"p\">;</span>\n    <span class=\"n\">copy</span><span class=\"p\">.</span><span class=\"n\">first</span> <span class=\"p\">=</span> <span class=\"m\">30</span><span class=\"p\">;</span>\n\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"{0}, {1}, {2}, {3}\"</span><span class=\"p\">,</span> <span class=\"n\">original</span><span class=\"p\">.</span><span class=\"n\">first</span><span class=\"p\">,</span> <span class=\"n\">original</span><span class=\"p\">.</span><span class=\"n\">second</span><span class=\"p\">,</span> <span class=\"n\">copy</span><span class=\"p\">.</span><span class=\"n\">first</span><span class=\"p\">,</span> <span class=\"n\">copy</span><span class=\"p\">.</span><span class=\"n\">second</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>실제 출력 값 : 10, 20, 30, 20</p>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 16강 - 배열",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-16/",
      "date"     : "2017-09-18 00:00:00 +0900",
  "content"   : "<h3 id=\"배열-array\">배열 (Array)</h3>\n<hr />\n<p>배열 (Array)란 동일한 특성을 가지며 일정한 규칙에 따라 몇몇 요소가 나열되어 있는 <code class=\"highlighter-rouge\">데이터 집합</code>입니다. 배열을 선언함으로써 <code class=\"highlighter-rouge\">다수의 데이터</code>를 처리할 수 있습니다. C#에서 배열은 다음과 같이 선언할 수 있습니다.\n<br /><br />\n<code class=\"highlighter-rouge\">데이터형식[ ] 배열이름 = new 데이터형식[ 용량 ];</code></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"n\">array</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">5</span><span class=\"p\">];</span></code></pre></figure>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"n\">array</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">5</span><span class=\"p\">]</span> <span class=\"p\">{</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">};</span></code></pre></figure>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"n\">array</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">5</span><span class=\"p\">];</span>\n<span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"m\">1</span><span class=\"p\">;</span>\n<span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"m\">2</span><span class=\"p\">;</span>\n<span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"m\">3</span><span class=\"p\">;</span>\n<span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">3</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"m\">4</span><span class=\"p\">;</span>\n<span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">4</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"m\">5</span><span class=\"p\">;</span></code></pre></figure>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">용량</code>을 지정하지 않으면 <code class=\"highlighter-rouge\">자동적으로 할당</code>됩니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"1-차원-배열-one-dimesion\">1 차원 배열 (One Dimesion)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">1 차원 배열</code>은 다음과 같이 표현 할 수 있습니다. <code class=\"highlighter-rouge\">index</code>는 1이 아닌 <code class=\"highlighter-rouge\">0부터 시작</code>하게 됩니다. 배열의 <code class=\"highlighter-rouge\">크기가 5</code>라면 <code class=\"highlighter-rouge\">index</code>는 <code class=\"highlighter-rouge\">0 ~ 4</code> 까지 입니다.</p>\n\n<p><a href=\"/assets/images/C/ch16/1.png\"><img src=\"/assets/images/C/ch16/1.png\" alt=\"1\" /></a></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"n\">one_dimension</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">5</span><span class=\"p\">]</span> <span class=\"p\">{</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"m\">5</span> <span class=\"p\">};</span>\n\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">one_dimension</span><span class=\"p\">.</span><span class=\"n\">Length</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"n\">one_dimension</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>실제 출력 값 : 12345\n<br />\n배열의 크기는 <code class=\"highlighter-rouge\">배열이름.Length</code>를 이용하여 알 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"2-차원-배열-two-dimesion\">2 차원 배열 (Two Dimesion)</h3>\n<hr />\n<p><code class=\"highlighter-rouge\">2 차원 배열</code>은 다음과 같이 표현 할 수 있습니다. <code class=\"highlighter-rouge\">index</code>는  <code class=\"highlighter-rouge\">0, 0</code> 에서 <code class=\"highlighter-rouge\">n-1, m-1</code> 까지 입니다.</p>\n\n<p><a href=\"/assets/images/C/ch16/2.png\"><img src=\"/assets/images/C/ch16/2.png\" alt=\"2\" /></a></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"n\">one_dimension</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">5</span><span class=\"p\">]</span> <span class=\"p\">{</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"m\">5</span> <span class=\"p\">};</span>\n\n<span class=\"kt\">int</span><span class=\"p\">[,]</span> <span class=\"n\">two</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"p\">{</span> <span class=\"p\">{</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span> <span class=\"p\">},</span> <span class=\"p\">{</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">4</span> <span class=\"p\">},</span> <span class=\"p\">{</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"m\">6</span> <span class=\"p\">}</span> <span class=\"p\">};</span>\n\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">two_dimension</span><span class=\"p\">.</span><span class=\"nf\">GetLength</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">);</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"p\">&lt;</span> <span class=\"n\">two_dimension</span><span class=\"p\">.</span><span class=\"nf\">GetLength</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">);</span> <span class=\"n\">j</span><span class=\"p\">++)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"n\">two_dimension</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]);</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">();</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>실제 출력 값 : 123 / 456</p>\n\n<p><br /></p>\n\n<p>배열의 크기는 <code class=\"highlighter-rouge\">배열이름.GetLength(차원)</code>를 이용하여 알 수 있습니다. <code class=\"highlighter-rouge\">배열이름.GetLength(0)</code> 은 <code class=\"highlighter-rouge\">n 방향</code>, <code class=\"highlighter-rouge\">배열이름.GetLength(1)</code> 은 <code class=\"highlighter-rouge\">m 방향</code> 입니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">배열이름.Length</code> 을 이용하면 <code class=\"highlighter-rouge\">n + m</code>의 크기로 판단합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">2 차원 이상</code>의 경우 <code class=\"highlighter-rouge\">,</code>을 추가함으로써 사용할 수 있습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"가변-배열-adjustable-array\">가변 배열 (Adjustable Array)</h3>\n<hr />\n<p>가변 배열 (Adjustable Array)은 <code class=\"highlighter-rouge\">배열을 요소로 갖는 배열</code>입니다. 첨자 하나만을 사용해서 <code class=\"highlighter-rouge\">1차원 배열</code>에 접근하는 일은 <code class=\"highlighter-rouge\">불가능</code>합니다. 가변 배열은 배열을 <code class=\"highlighter-rouge\">요소</code>로써 접근합니다. C#에서 가변 배열은 다음과 같이 선언할 수 있습니다.\n<br /><br /></p>\n\n<p><code class=\"highlighter-rouge\">데이터형식[ ][ ] 배열이름 = new 데이터형식[가변배열의 용량][ ];</code></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span><span class=\"p\">[][]</span> <span class=\"n\">Adjustable</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">3</span><span class=\"p\">][];</span>\n\n<span class=\"n\">Adjustable</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">5</span><span class=\"p\">]</span> <span class=\"p\">{</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"m\">5</span> <span class=\"p\">};</span>\n<span class=\"n\">Adjustable</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"p\">{</span> <span class=\"m\">6</span><span class=\"p\">,</span> <span class=\"m\">7</span><span class=\"p\">,</span> <span class=\"m\">8</span><span class=\"p\">};</span>\n<span class=\"n\">Adjustable</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"p\">{</span> <span class=\"m\">9</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">};</span>\n\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"n\">Adjustable</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">][</span><span class=\"m\">2</span><span class=\"p\">]);</span></code></pre></figure>\n\n<p>실제 출력 값 : 3</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span><span class=\"p\">[][]</span> <span class=\"n\">Adjustable</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">][]</span> <span class=\"p\">{</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"p\">{</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"m\">5</span> <span class=\"p\">},</span> \n                                    <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">4</span><span class=\"p\">]</span> <span class=\"p\">{</span> <span class=\"m\">6</span><span class=\"p\">,</span> <span class=\"m\">7</span><span class=\"p\">,</span> <span class=\"m\">8</span><span class=\"p\">,</span> <span class=\"m\">9</span> <span class=\"p\">}</span> <span class=\"p\">};</span>\n\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"n\">Adjustable</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">][</span><span class=\"m\">2</span><span class=\"p\">]);</span></code></pre></figure>\n\n<p>실제 출력 값 : 8</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">배열이름[n].GetLength(m)</code> 을 이용하면 <code class=\"highlighter-rouge\">가변 배열안에 있는 배열의 크기</code>를 판단할 수 있습니다.</li>\n  <li>Tip : <code class=\"highlighter-rouge\">배열이름.GetLength(n)</code> 을 이용하면 <code class=\"highlighter-rouge\">가변 배열의 크기</code>를 판단 할 수 있습니다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "C# 예제 : Input Box",
      "category" : "",
      "tags"     : "C# 예제",
      "url"      : "/exercise/C-inputbox/",
      "date"     : "2017-09-15 00:00:00 +0900",
  "content"   : "<h3 id=\"input-box\">Input Box</h3>\n<hr />\n<p><a href=\"/assets/images/C/ex1/1.png\"><img src=\"/assets/images/C/ex1/1.png\" alt=\"1\" /></a>\n이미지를 포함한 <code class=\"highlighter-rouge\">Input Box</code>를 구현할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"main\">Main</h2>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"k\">static</span> <span class=\"n\">DialogResult</span> <span class=\"nf\">InputBox</span><span class=\"p\">(</span><span class=\"kt\">string</span> <span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"kt\">string</span> <span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"k\">ref</span> <span class=\"kt\">string</span> <span class=\"k\">value</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Form</span> <span class=\"n\">form</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Form</span><span class=\"p\">();</span>\n    <span class=\"n\">PictureBox</span> <span class=\"n\">picture</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">PictureBox</span><span class=\"p\">();</span>\n    <span class=\"n\">Label</span> <span class=\"n\">label</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Label</span><span class=\"p\">();</span>\n    <span class=\"n\">TextBox</span> <span class=\"n\">textBox</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">TextBox</span><span class=\"p\">();</span>\n    <span class=\"n\">Button</span> <span class=\"n\">buttonOk</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Button</span><span class=\"p\">();</span>\n    <span class=\"n\">Button</span> <span class=\"n\">buttonCancel</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Button</span><span class=\"p\">();</span>\n\n    <span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">ClientSize</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Size</span><span class=\"p\">(</span><span class=\"m\">300</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">);</span>\n    <span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">Controls</span><span class=\"p\">.</span><span class=\"nf\">AddRange</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">Control</span><span class=\"p\">[]</span> <span class=\"p\">{</span> <span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"n\">picture</span><span class=\"p\">,</span> <span class=\"n\">textBox</span><span class=\"p\">,</span> <span class=\"n\">buttonOk</span><span class=\"p\">,</span> <span class=\"n\">buttonCancel</span> <span class=\"p\">});</span>\n    <span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">FormBorderStyle</span> <span class=\"p\">=</span> <span class=\"n\">FormBorderStyle</span><span class=\"p\">.</span><span class=\"n\">FixedDialog</span><span class=\"p\">;</span>\n    <span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">StartPosition</span> <span class=\"p\">=</span> <span class=\"n\">FormStartPosition</span><span class=\"p\">.</span><span class=\"n\">CenterScreen</span><span class=\"p\">;</span>\n    <span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">MaximizeBox</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n    <span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">MinimizeBox</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n    <span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">AcceptButton</span> <span class=\"p\">=</span> <span class=\"n\">buttonOk</span><span class=\"p\">;</span>\n    <span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">CancelButton</span> <span class=\"p\">=</span> <span class=\"n\">buttonCancel</span><span class=\"p\">;</span>\n\n    <span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">title</span><span class=\"p\">;</span>\n    <span class=\"n\">picture</span><span class=\"p\">.</span><span class=\"n\">Image</span> <span class=\"p\">=</span> <span class=\"n\">Properties</span><span class=\"p\">.</span><span class=\"n\">Resources</span><span class=\"p\">.</span><span class=\"n\">Clogo</span><span class=\"p\">;</span>\n    <span class=\"n\">picture</span><span class=\"p\">.</span><span class=\"n\">SizeMode</span> <span class=\"p\">=</span> <span class=\"n\">PictureBoxSizeMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">;</span>\n    <span class=\"n\">label</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">content</span><span class=\"p\">;</span>\n    <span class=\"n\">textBox</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"k\">value</span><span class=\"p\">;</span>\n    <span class=\"n\">buttonOk</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"확인\"</span><span class=\"p\">;</span>\n    <span class=\"n\">buttonCancel</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"취소\"</span><span class=\"p\">;</span>\n\n    <span class=\"n\">buttonOk</span><span class=\"p\">.</span><span class=\"n\">DialogResult</span> <span class=\"p\">=</span> <span class=\"n\">DialogResult</span><span class=\"p\">.</span><span class=\"n\">OK</span><span class=\"p\">;</span>\n    <span class=\"n\">buttonCancel</span><span class=\"p\">.</span><span class=\"n\">DialogResult</span> <span class=\"p\">=</span> <span class=\"n\">DialogResult</span><span class=\"p\">.</span><span class=\"n\">Cancel</span><span class=\"p\">;</span>\n\n    <span class=\"n\">picture</span><span class=\"p\">.</span><span class=\"nf\">SetBounds</span><span class=\"p\">(</span><span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">);</span>\n    <span class=\"n\">label</span><span class=\"p\">.</span><span class=\"nf\">SetBounds</span><span class=\"p\">(</span><span class=\"m\">65</span><span class=\"p\">,</span> <span class=\"m\">17</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">20</span><span class=\"p\">);</span>\n    <span class=\"n\">textBox</span><span class=\"p\">.</span><span class=\"nf\">SetBounds</span><span class=\"p\">(</span><span class=\"m\">65</span><span class=\"p\">,</span> <span class=\"m\">40</span><span class=\"p\">,</span> <span class=\"m\">220</span><span class=\"p\">,</span> <span class=\"m\">20</span><span class=\"p\">);</span>\n    <span class=\"n\">buttonOk</span><span class=\"p\">.</span><span class=\"nf\">SetBounds</span><span class=\"p\">(</span><span class=\"m\">135</span><span class=\"p\">,</span> <span class=\"m\">70</span><span class=\"p\">,</span> <span class=\"m\">70</span><span class=\"p\">,</span> <span class=\"m\">20</span><span class=\"p\">);</span>\n    <span class=\"n\">buttonCancel</span><span class=\"p\">.</span><span class=\"nf\">SetBounds</span><span class=\"p\">(</span><span class=\"m\">215</span><span class=\"p\">,</span> <span class=\"m\">70</span><span class=\"p\">,</span> <span class=\"m\">70</span><span class=\"p\">,</span> <span class=\"m\">20</span><span class=\"p\">);</span>\n\n    <span class=\"n\">DialogResult</span> <span class=\"n\">dialogResult</span> <span class=\"p\">=</span> <span class=\"n\">form</span><span class=\"p\">.</span><span class=\"nf\">ShowDialog</span><span class=\"p\">();</span>\n\n    <span class=\"k\">value</span> <span class=\"p\">=</span> <span class=\"n\">textBox</span><span class=\"p\">.</span><span class=\"n\">Text</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span> <span class=\"n\">dialogResult</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h2 id=\"use\">Use</h2>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">string</span> <span class=\"k\">value</span> <span class=\"p\">=</span> <span class=\"s\">\"반환값\"</span><span class=\"p\">;</span>\n<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nf\">InputBox</span><span class=\"p\">(</span><span class=\"s\">\"제목\"</span><span class=\"p\">,</span> <span class=\"s\">\"내용\"</span><span class=\"p\">,</span> <span class=\"k\">ref</span> <span class=\"k\">value</span><span class=\"p\">)</span> <span class=\"p\">==</span> <span class=\"n\">DialogResult</span><span class=\"p\">.</span><span class=\"n\">OK</span><span class=\"p\">)</span>\n<span class=\"p\">{</span> \n<span class=\"n\">MessageBox</span><span class=\"p\">.</span><span class=\"nf\">Show</span><span class=\"p\">(</span><span class=\"k\">value</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><br /></p>\n\n<h2 id=\"explain\">Explain</h2>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"k\">static</span> <span class=\"n\">DialogResult</span> <span class=\"nf\">InputBox</span><span class=\"p\">(</span><span class=\"kt\">string</span> <span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"kt\">string</span> <span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"k\">ref</span> <span class=\"kt\">string</span> <span class=\"k\">value</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><strong>제목</strong>, <strong>내용</strong>, <strong>표시</strong>될 값을 받아옵니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">Form</span> <span class=\"n\">form</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Form</span><span class=\"p\">();</span>\n<span class=\"n\">PictureBox</span> <span class=\"n\">picture</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">PictureBox</span><span class=\"p\">();</span>\n<span class=\"n\">Label</span> <span class=\"n\">label</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Label</span><span class=\"p\">();</span>\n<span class=\"n\">TextBox</span> <span class=\"n\">textBox</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">TextBox</span><span class=\"p\">();</span>\n<span class=\"n\">Button</span> <span class=\"n\">buttonOk</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Button</span><span class=\"p\">();</span>\n<span class=\"n\">Button</span> <span class=\"n\">buttonCancel</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Button</span><span class=\"p\">();</span></code></pre></figure>\n\n<p>사용될 컨트롤 <strong>개체를 생성</strong>합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">ClientSize</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Size</span><span class=\"p\">(</span><span class=\"m\">300</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">);</span>\n<span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">Controls</span><span class=\"p\">.</span><span class=\"nf\">AddRange</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">Control</span><span class=\"p\">[]</span> <span class=\"p\">{</span> <span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"n\">picture</span><span class=\"p\">,</span> <span class=\"n\">textBox</span><span class=\"p\">,</span> <span class=\"n\">buttonOk</span><span class=\"p\">,</span> <span class=\"n\">buttonCancel</span> <span class=\"p\">});</span>\n<span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">FormBorderStyle</span> <span class=\"p\">=</span> <span class=\"n\">FormBorderStyle</span><span class=\"p\">.</span><span class=\"n\">FixedDialog</span><span class=\"p\">;</span>\n<span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">StartPosition</span> <span class=\"p\">=</span> <span class=\"n\">FormStartPosition</span><span class=\"p\">.</span><span class=\"n\">CenterScreen</span><span class=\"p\">;</span>\n<span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">MaximizeBox</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n<span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">MinimizeBox</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n<span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">AcceptButton</span> <span class=\"p\">=</span> <span class=\"n\">buttonOk</span><span class=\"p\">;</span>\n<span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">CancelButton</span> <span class=\"p\">=</span> <span class=\"n\">buttonCancel</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>표시될 form의 <strong>상태를 설정</strong>합니다.</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">form.ClientSize</code> : 폼 크기를 설정합니다. (width, height)</li>\n  <li><code class=\"highlighter-rouge\">form.Controls.AddRange</code> : 사용되는 컨트롤 개체를 포함시킵니다.</li>\n  <li><code class=\"highlighter-rouge\">form.FormBorderStyle</code> : 폼의 테두리를 설정합니다.</li>\n  <li><code class=\"highlighter-rouge\">StartPosition</code> : 폼의 시작위치를 설정합니다.</li>\n  <li><code class=\"highlighter-rouge\">MaximizeBox</code> : 최대화 단추 유/무를 설정합니다.</li>\n  <li><code class=\"highlighter-rouge\">MinimizeBox</code> : 최소화 단추 유/무를 설정합니다.</li>\n  <li><code class=\"highlighter-rouge\">AcceptButton</code> : Enter 키를 눌렀을 때의 실행되는 버튼을 설정합니다.</li>\n  <li><code class=\"highlighter-rouge\">CancelButton</code> : ESC 키를 눌렀을 때의 실행되는 버튼을 설정합니다.</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">title</span><span class=\"p\">;</span>\n<span class=\"n\">picture</span><span class=\"p\">.</span><span class=\"n\">Image</span> <span class=\"p\">=</span> <span class=\"n\">Properties</span><span class=\"p\">.</span><span class=\"n\">Resources</span><span class=\"p\">.</span><span class=\"n\">Clogo</span><span class=\"p\">;</span>\n<span class=\"n\">picture</span><span class=\"p\">.</span><span class=\"n\">SizeMode</span> <span class=\"p\">=</span> <span class=\"n\">PictureBoxSizeMode</span><span class=\"p\">.</span><span class=\"n\">StretchImage</span><span class=\"p\">;</span>\n<span class=\"n\">label</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">content</span><span class=\"p\">;</span>\n<span class=\"n\">textBox</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"k\">value</span><span class=\"p\">;</span>\n<span class=\"n\">buttonOk</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"확인\"</span><span class=\"p\">;</span>\n<span class=\"n\">buttonCancel</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"취소\"</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>컨트롤 개체들의 <strong>기본값</strong>을 설정합니다.</p>\n\n<ul>\n  <li>Tip : 이미지의 경로는 Resources에 포함 시킨 후, 이미지의 파일명을 입력합니다.</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">buttonOk</span><span class=\"p\">.</span><span class=\"n\">DialogResult</span> <span class=\"p\">=</span> <span class=\"n\">DialogResult</span><span class=\"p\">.</span><span class=\"n\">OK</span><span class=\"p\">;</span>\n<span class=\"n\">buttonCancel</span><span class=\"p\">.</span><span class=\"n\">DialogResult</span> <span class=\"p\">=</span> <span class=\"n\">DialogResult</span><span class=\"p\">.</span><span class=\"n\">Cancel</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>버튼을 눌렀을 때의 <strong>설정값</strong>을 설정합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">picture</span><span class=\"p\">.</span><span class=\"nf\">SetBounds</span><span class=\"p\">(</span><span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">,</span> <span class=\"m\">50</span><span class=\"p\">);</span>\n<span class=\"n\">label</span><span class=\"p\">.</span><span class=\"nf\">SetBounds</span><span class=\"p\">(</span><span class=\"m\">65</span><span class=\"p\">,</span> <span class=\"m\">17</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">,</span> <span class=\"m\">20</span><span class=\"p\">);</span>\n<span class=\"n\">textBox</span><span class=\"p\">.</span><span class=\"nf\">SetBounds</span><span class=\"p\">(</span><span class=\"m\">65</span><span class=\"p\">,</span> <span class=\"m\">40</span><span class=\"p\">,</span> <span class=\"m\">220</span><span class=\"p\">,</span> <span class=\"m\">20</span><span class=\"p\">);</span>\n<span class=\"n\">buttonOk</span><span class=\"p\">.</span><span class=\"nf\">SetBounds</span><span class=\"p\">(</span><span class=\"m\">135</span><span class=\"p\">,</span> <span class=\"m\">70</span><span class=\"p\">,</span> <span class=\"m\">70</span><span class=\"p\">,</span> <span class=\"m\">20</span><span class=\"p\">);</span>\n<span class=\"n\">buttonCancel</span><span class=\"p\">.</span><span class=\"nf\">SetBounds</span><span class=\"p\">(</span><span class=\"m\">215</span><span class=\"p\">,</span> <span class=\"m\">70</span><span class=\"p\">,</span> <span class=\"m\">70</span><span class=\"p\">,</span> <span class=\"m\">20</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>컨트롤 개체의 <strong>위치와 크기</strong>를 설정합니다. <code class=\"highlighter-rouge\">(x, y, width, height)</code></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"n\">DialogResult</span> <span class=\"n\">dialogResult</span> <span class=\"p\">=</span> <span class=\"n\">form</span><span class=\"p\">.</span><span class=\"nf\">ShowDialog</span><span class=\"p\">();</span></code></pre></figure>\n\n<p>설정된 <strong>폼을 띄웁니다.</strong></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">value</span> <span class=\"p\">=</span> <span class=\"n\">textBox</span><span class=\"p\">.</span><span class=\"n\">Text</span><span class=\"p\">;</span>\n<span class=\"k\">return</span> <span class=\"n\">dialogResult</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>설정된 <strong>값들을 반환</strong>합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">string</span> <span class=\"k\">value</span> <span class=\"p\">=</span> <span class=\"s\">\"반환값\"</span><span class=\"p\">;</span>\n<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nf\">InputBox</span><span class=\"p\">(</span><span class=\"s\">\"제목\"</span><span class=\"p\">,</span> <span class=\"s\">\"내용\"</span><span class=\"p\">,</span> <span class=\"k\">ref</span> <span class=\"k\">value</span><span class=\"p\">)</span> <span class=\"p\">==</span> <span class=\"n\">DialogResult</span><span class=\"p\">.</span><span class=\"n\">OK</span><span class=\"p\">)</span>\n<span class=\"p\">{</span> \n    <span class=\"n\">MessageBox</span><span class=\"p\">.</span><span class=\"nf\">Show</span><span class=\"p\">(</span><span class=\"k\">value</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>Input Box를 <strong>사용</strong>합니다.</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">value</code> : 초기 TextBox에 띄워질 문구를 설정합니다.</li>\n  <li><code class=\"highlighter-rouge\">제목</code> : Form의 제목을 설정합니다.</li>\n  <li><code class=\"highlighter-rouge\">내용</code> : Label의 내용을 설정합니다.</li>\n  <li><code class=\"highlighter-rouge\">if</code> : <code class=\"highlighter-rouge\">확인</code> 또는 <code class=\"highlighter-rouge\">Enter</code>를 입력했을 때에만 작동하게 설정합니다.</li>\n  <li><code class=\"highlighter-rouge\">MessageBox</code> : 변환된 <code class=\"highlighter-rouge\">value</code>값을 확인 할 수 있습니다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 15강 - 생성자 &amp; 소멸자",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-15/",
      "date"     : "2017-09-10 00:00:00 +0900",
  "content"   : "<h3 id=\"생성자-constructor\">생성자 (Constructor)</h3>\n<hr />\n<p>생성자 (Constructor)란 <strong>클래스와 같은 이름을 갖는 함수</strong>를 의미합니다. 객체가 초기에 생성될 때 자동적으로 <strong>1회 호출</strong>되는 함수입니다. 주로 객체 내의 <strong>정보를 초기화 하는 수단</strong>이며, <code class=\"highlighter-rouge\">return</code> 값이 없습니다.</p>\n\n<ul>\n  <li>Tip : 명시적으로 생성자를 선언하지 않아도 <strong>컴파일러가 암시적으로 기본생성자를 생성</strong>합니다. 가비지</li>\n</ul>\n\n<p><br /></p>\n\n<h4 id=\"소멸자-destructor\">소멸자 (Destructor)</h4>\n<hr />\n<p>소멸자 (Destructor)란 객체가 <strong>메모리에서 제거될 때마다 실행되는 함수</strong>입니다. <code class=\"highlighter-rouge\">가비지 컬렉터(garbage collector)</code>가 객체의 소멸을 관리하기 때문에 언제 실행될지 예측할 수 없습니다.</p>\n\n<ul>\n  <li>Tip : 명시적으로 소멸자를 선언하지 않아도 <strong>컴파일러가 암시적으로 기본소멸자를 생성</strong>합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">ClassFile</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">ClassFile</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"생성\"</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">start</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"실행\"</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"p\">~</span><span class=\"nf\">ClassFile</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"소멸\"</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>위와 같은 클래스 파일을 만들고 생성자와 소멸자를 구성하였습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button1_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">ClassFile</span> <span class=\"n\">class_start</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">ClassFile</span><span class=\"p\">();</span>\n    <span class=\"n\">class_start</span><span class=\"p\">.</span><span class=\"nf\">start</span><span class=\"p\">();</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">button1</code>에 ClassFile을 불러오고 <code class=\"highlighter-rouge\">start()</code>를 실행할 경우 <code class=\"highlighter-rouge\">생성</code>, <code class=\"highlighter-rouge\">실행</code> 문구를 확인할 수 있습니다.</p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button2_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">GC</span><span class=\"p\">.</span><span class=\"nf\">Collect</span><span class=\"p\">();</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">button2</code>에 <code class=\"highlighter-rouge\">가비지 컬렉터(garbage collector)</code>를 호출하면 <code class=\"highlighter-rouge\">소멸</code>이라는 문구를 확인할 수 있습니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">GC.Collect();</code>  더 이상 활용되지 않는 자원(주로 메모리)을 검출하여 제거를 수행하는 모듈</li>\n</ul>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">class</code> 이용하여 객체를 만들 때 초기화해야하거나 1회 실행되어야 하는 코드가 있을때 <code class=\"highlighter-rouge\">생성자</code>를 이용하고, <code class=\"highlighter-rouge\">소멸자</code>는 언제 호출될지 모르기 때문에 구현하지 않는것이 좋습니다.</p>\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 14강 - 클래스 &amp; 메소드 (2)",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-14/",
      "date"     : "2017-09-07 00:00:00 +0900",
  "content"   : "<h3 id=\"클래스-파일class-file\">클래스 파일(Class File)</h3>\n<hr />\n<p>자주 사용되거나 프로그램이 커질수록 <strong>코드를 한눈에 알아보기가 매우 어려워집니다.</strong> 이를 해결하기 위해서 <code class=\"highlighter-rouge\">cs파일</code>을 추가하여 <code class=\"highlighter-rouge\">가독성</code>, <code class=\"highlighter-rouge\">확장성</code>, <code class=\"highlighter-rouge\">재사용성</code> 등을 높일 수 있습니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"항목-추가\">항목 추가</h4>\n<hr />\n<p><a href=\"/assets/images/C/ch14/1.png\"><img src=\"/assets/images/C/ch14/1.png\" alt=\"1\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">프로젝트(P) → 클래스 추가(C)</code> 또는 <code class=\"highlighter-rouge\">프로젝트(P) → 새 항목 추가(W)</code>를 눌러 클래스를 추가합니다.</p>\n\n<p><a href=\"/assets/images/C/ch14/2.png\"><img src=\"/assets/images/C/ch14/2.png\" alt=\"2\" /></a></p>\n\n<p><code class=\"highlighter-rouge\">클래스</code>를 선택하고 이름을 <code class=\"highlighter-rouge\">animal.cs</code>로 변경하고 추가합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">animal</span>\n    <span class=\"p\">{</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>새로운 cs창이 뜨게되며 여러다른 <code class=\"highlighter-rouge\">Form</code>에서도 <strong>불러와 사용할 수 있습니다.</strong> 이 새로운 클래스 창에서도 본래의 <code class=\"highlighter-rouge\">Form1</code>처럼 사용이 가능한데, 사용할 <code class=\"highlighter-rouge\">namespace</code> 를 <code class=\"highlighter-rouge\">using</code>란에 추가시켜주면 가능합니다. <br /></p>\n\n<ul>\n  <li>Tip : 클래스에서 <code class=\"highlighter-rouge\">MessageBox</code>를 사용하려면 <code class=\"highlighter-rouge\">using System.Windows.Forms;</code> 키워드를 상단에 추가시키면 됩니다.</li>\n</ul>\n\n<p><br /></p>\n\n<h4 id=\"프로젝트-구성\">프로젝트 구성</h4>\n<hr />\n<p><a href=\"/assets/images/C/ch14/3.png\"><img src=\"/assets/images/C/ch14/3.png\" alt=\"3\" /></a>\n도구상자에서 <code class=\"highlighter-rouge\">GroupBox</code>, <code class=\"highlighter-rouge\">VScrollBar</code>, <code class=\"highlighter-rouge\">Label</code>을 <code class=\"highlighter-rouge\">Form1</code>에 생성합니다. 위의 이미지와 같이 배치합니다.\n<br />\n속성을 다음과 같이 설정합니다.</p>\n\n<ol>\n  <li>\n    <p>GroupBox</p>\n\n    <ul>\n      <li>Text : 몸무게</li>\n    </ul>\n  </li>\n  <li>\n    <p>VScrollBar</p>\n\n    <ul>\n      <li>LargeChange : 1</li>\n      <li>Maximum : 30</li>\n      <li>Value : 30</li>\n    </ul>\n  </li>\n  <li>\n    <p>Label (1번)</p>\n\n    <ul>\n      <li>Text : 0kg</li>\n    </ul>\n  </li>\n  <li>\n    <p>Label (2번)</p>\n\n    <ul>\n      <li>Text : 크기 : -</li>\n      <li>Font : 크기 28</li>\n    </ul>\n  </li>\n</ol>\n\n<p><br /></p>\n\n<p>animal.cs 코드창을 열어 다음과 같이 입력합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">animal</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"nf\">size</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">weight</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">weight</span> <span class=\"p\">&gt;</span> <span class=\"m\">20</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"s\">\"대형\"</span><span class=\"p\">;</span>\n            <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">weight</span> <span class=\"p\">&gt;</span> <span class=\"m\">10</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"s\">\"중형\"</span><span class=\"p\">;</span>\n            <span class=\"k\">else</span> <span class=\"k\">return</span> <span class=\"s\">\"소형\"</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>외부에서 <code class=\"highlighter-rouge\">weight</code>라는 값을 받아 비교하여 <code class=\"highlighter-rouge\">string(문자열)값</code>으로 반환하는 형식의 코드입니다. <code class=\"highlighter-rouge\">weight</code>가 <strong>20보다 크면 대형, 10보다 크면 중형, 위의 조건에 만족하지 않는 경우 소형</strong>으로 <code class=\"highlighter-rouge\">반환</code>합니다.</p>\n\n<p><br /></p>\n\n<p><code class=\"highlighter-rouge\">vScrollBar1</code>를 더블클릭하여 <code class=\"highlighter-rouge\">이벤트</code>를 활성화시키고 다음과 같이 입력합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">vScrollBar1_Scroll</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">ScrollEventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">weight</span> <span class=\"p\">=</span> <span class=\"n\">vScrollBar1</span><span class=\"p\">.</span><span class=\"n\">Maximum</span> <span class=\"p\">-</span> <span class=\"n\">vScrollBar1</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">;</span>\n    <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">weight</span> <span class=\"p\">+</span> <span class=\"s\">\"kg\"</span><span class=\"p\">;</span>\n\n    <span class=\"n\">animal</span> <span class=\"n\">ani</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">animal</span><span class=\"p\">();</span>\n    <span class=\"n\">label2</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"크기 : \"</span> <span class=\"p\">+</span> <span class=\"n\">ani</span><span class=\"p\">.</span><span class=\"nf\">size</span><span class=\"p\">(</span><span class=\"n\">weight</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>여기서 <code class=\"highlighter-rouge\">weight</code>라는 변수를 <code class=\"highlighter-rouge\">vScrollBar</code>의 값을 받아와 적용시키는것을 알 수 있는데, 여기서 <code class=\"highlighter-rouge\">Maximum</code>값을 빼주는 이유는 <strong>상단이 최고점, 하단이 최하점으로 위치를 바꿔주기 위해서</strong>입니다.\n<br />\nlabel1에 몸무게를 표시하고, <code class=\"highlighter-rouge\">animal</code>의 클래스를 <code class=\"highlighter-rouge\">ani</code>로 불러온 후, <code class=\"highlighter-rouge\">ani.size(weight)</code>를 통하여 계산 후, 바로 표시합니다.\n<br />\n클래스를 이용하여 <code class=\"highlighter-rouge\">메인 폼</code>의 코드량이 매우 줄어들며, 가독성이 늘어나고 재사용성을 키우는 것을 한 눈에 확인 할 수 있습니다.</p>\n\n<h2 id=\"코드\">코드</h2>\n\n<h4 id=\"form1\">Form1</h4>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">vScrollBar1_Scroll</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">ScrollEventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"kt\">int</span> <span class=\"n\">weight</span> <span class=\"p\">=</span> <span class=\"n\">vScrollBar1</span><span class=\"p\">.</span><span class=\"n\">Maximum</span> <span class=\"p\">-</span> <span class=\"n\">vScrollBar1</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">;</span>\n            <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">weight</span> <span class=\"p\">+</span> <span class=\"s\">\"kg\"</span><span class=\"p\">;</span>\n\n            <span class=\"n\">animal</span> <span class=\"n\">ani</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">animal</span><span class=\"p\">();</span>\n            <span class=\"n\">label2</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"크기 : \"</span> <span class=\"p\">+</span> <span class=\"n\">ani</span><span class=\"p\">.</span><span class=\"nf\">size</span><span class=\"p\">(</span><span class=\"n\">weight</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<h4 id=\"animalcs\">animal.cs</h4>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">animal</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"nf\">size</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">weight</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">weight</span> <span class=\"p\">&gt;</span> <span class=\"m\">20</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"s\">\"대형\"</span><span class=\"p\">;</span>\n            <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">weight</span> <span class=\"p\">&gt;</span> <span class=\"m\">10</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"s\">\"중형\"</span><span class=\"p\">;</span>\n            <span class=\"k\">else</span> <span class=\"k\">return</span> <span class=\"s\">\"소형\"</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 13강 - 클래스 &amp; 메소드 (1)",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-13/",
      "date"     : "2017-09-06 00:00:00 +0900",
  "content"   : "<h3 id=\"클래스class\">클래스(Class)</h3>\n<hr />\n<p>클래스(Class)는 <strong>객체 지향 프로그래밍(OOP)</strong>에서 특정한 객체를 생성하기 위해서 <code class=\"highlighter-rouge\">필드</code>, <code class=\"highlighter-rouge\">속성</code>, <code class=\"highlighter-rouge\">메소드</code> 및 <code class=\"highlighter-rouge\">이벤트</code> 등을 정의하는 <strong>틀</strong>입니다. <strong>그룹화하여 자체 사용자 지정 형식</strong>을 만들 수 있는 구문입니다. 클래스는 <strong>참조 형식</strong>입니다.</p>\n\n<p><br /></p>\n\n<p>객체 지향 프로그래밍이란? : <a href=\"https://076923.github.io/posts/C-1/\">1강 바로가기</a></p>\n\n<p>참조 형식이란? : <a href=\"https://076923.github.io/posts/C-9/\">9강 바로가기</a></p>\n\n<p><br /></p>\n\n<h4 id=\"메소드-method\">메소드 (Method)</h4>\n<hr />\n<p>메소드 (Method)는 <strong>일련의 코드를 하나의 그룹으로 묶은 것</strong>입니다. OOP적 의미에서는 객체의 데이터 처리 방법을 <strong>추상화</strong>한 것입니다. 그룹화된 코드는 메소드의 이름을 호출하는 것으로도 실행됩니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"클래스와-메소드-형식\">클래스와 메소드 형식</h4>\n<hr />\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">class</span> <span class=\"err\">클래스이름</span>\n<span class=\"err\">{</span>\n    <span class=\"err\">필드</span> <span class=\"err\">&amp;</span> <span class=\"err\">속성</span>\n    \n    <span class=\"err\">한정자</span> <span class=\"err\">반환형식</span> <span class=\"err\">메소드이름(사용될</span> <span class=\"err\">매개변수</span> <span class=\"err\">목록)</span>\n    <span class=\"err\">{</span>\n        <span class=\"err\">코드</span> <span class=\"err\">1;</span>\n        <span class=\"err\">코드</span> <span class=\"err\">2;</span>\n        <span class=\"err\">코드</span> <span class=\"err\">3;</span>\n        <span class=\"err\">...</span>\n        <span class=\"nc\">return</span> <span class=\"err\">반환값</span>                \n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>한정자, 반환형식이란? : <a href=\"https://076923.github.io/posts/C-3/\">3강 바로가기</a></p>\n\n<p><br /></p>\n\n<h4 id=\"클래스와-메소드\">클래스와 메소드</h4>\n<hr />\n\n<p>animal이라는 클래스를 생성하여 select라는 메소드를 만들어보겠습니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">class</span> <span class=\"nc\">animal</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"n\">color</span><span class=\"p\">;</span>\n    <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"n\">name</span><span class=\"p\">;</span>\n    \n    <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"k\">select</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"동물 : {0}{1}\"</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>출력 창에 <code class=\"highlighter-rouge\">동물 : {색상}{이름}</code>으로 된 문구가 출력된다는걸 알 수 있습니다. 하지만 color와 name 필드에는 아무것도 선언되어 있지않습니다. 이를 생성자를 이용하여 설정할 수 있습니다. 생성자는 아래와 같이 설정할 수 있습니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">animal</span> <span class=\"n\">ani</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">animal</span><span class=\"p\">();</span>\n\n    <span class=\"n\">ani</span><span class=\"p\">.</span><span class=\"n\">color</span> <span class=\"p\">=</span> <span class=\"s\">\"검은\"</span><span class=\"p\">;</span>\n    <span class=\"n\">ani</span><span class=\"p\">.</span><span class=\"n\">name</span> <span class=\"p\">=</span> <span class=\"s\">\"고양이\"</span><span class=\"p\">;</span>\n    <span class=\"n\">ani</span><span class=\"p\">.</span><span class=\"k\">select</span><span class=\"p\">();</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : 동물 : 검은고양이</strong><br /></p>\n\n<p>생성자는 <code class=\"highlighter-rouge\">클래스이름 객체이름 = new 생성자;</code>로 구성되어 있습니다. <code class=\"highlighter-rouge\">ani</code>라는 객체를 생성하며 ani는 animal 클래스와 연결되어 있습니다. <strong>필드를 수정하거나 메소드를 불러올 수 있습니다.</strong></p>\n\n<p><br /></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">ani</span><span class=\"p\">.</span><span class=\"nf\">showing</span><span class=\"p\">(</span><span class=\"m\">40</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"k\">class</span> <span class=\"nc\">animal</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">size</span><span class=\"p\">;</span>\n    <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"p\">;</span>\n\n    <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">showing</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">order_Size</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">order_Age</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">size</span> <span class=\"p\">=</span> <span class=\"n\">order_Size</span><span class=\"p\">;</span>\n        <span class=\"n\">age</span> <span class=\"p\">=</span> <span class=\"n\">order_Age</span><span class=\"p\">;</span>\n\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">size</span> <span class=\"p\">&gt;</span> <span class=\"m\">50</span><span class=\"p\">)</span> <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"무거운 {0} 살\"</span><span class=\"p\">,</span><span class=\"n\">age</span><span class=\"p\">);</span>\n        <span class=\"k\">else</span> <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"가벼운 {0} 살\"</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : 가벼운 2살</strong><br /></p>\n\n<p>위와 같이 반환 형식없이 매개변수만을 이용하여 출력값을 바꿔서 출력할 수 있습니다. <code class=\"highlighter-rouge\">order_Size</code>와 <code class=\"highlighter-rouge\">order_Age</code>를 불러와 <code class=\"highlighter-rouge\">size</code>와 <code class=\"highlighter-rouge\">age</code>라는 변수에 값을 넣어줍니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">size</span><span class=\"p\">;</span>\n<span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"p\">;</span>\n<span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">showing2</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"n\">size</span> <span class=\"p\">=</span> <span class=\"n\">size</span><span class=\"p\">;</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"n\">age</span> <span class=\"p\">=</span> <span class=\"n\">age</span><span class=\"p\">;</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">size</span> <span class=\"p\">&gt;</span> <span class=\"m\">50</span><span class=\"p\">)</span> <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"무거운 {0} 살\"</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">);</span>\n    <span class=\"k\">else</span> <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"가벼운 {0} 살\"</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">매개변수</code>와 <code class=\"highlighter-rouge\">필드</code>의 <strong>이름을 같게 해도 사용할 수 있습니다.</strong> 단, <code class=\"highlighter-rouge\">this</code>라는 키워드를 이용해야합니다. <code class=\"highlighter-rouge\">this</code> 키워드를 이용하게되면 동일한 개체의 다른 생성자를 호출 할 수도 있습니다. <code class=\"highlighter-rouge\">this.size</code>, <code class=\"highlighter-rouge\">this.age</code> 뿐만 아니라 <code class=\"highlighter-rouge\">this.select()</code>도 호출 할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"코드\">코드</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Form1_Load</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">animal</span> <span class=\"n\">ani</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">animal</span><span class=\"p\">();</span>\n\n            <span class=\"n\">ani</span><span class=\"p\">.</span><span class=\"n\">color</span> <span class=\"p\">=</span> <span class=\"s\">\"검은\"</span><span class=\"p\">;</span>\n            <span class=\"n\">ani</span><span class=\"p\">.</span><span class=\"n\">name</span> <span class=\"p\">=</span> <span class=\"s\">\"고양이\"</span><span class=\"p\">;</span>\n            <span class=\"n\">ani</span><span class=\"p\">.</span><span class=\"k\">select</span><span class=\"p\">();</span>\n\n            <span class=\"n\">ani</span><span class=\"p\">.</span><span class=\"n\">color</span> <span class=\"p\">=</span> <span class=\"s\">\"빨간\"</span><span class=\"p\">;</span>\n            <span class=\"n\">ani</span><span class=\"p\">.</span><span class=\"k\">select</span><span class=\"p\">();</span>\n\n            <span class=\"n\">ani</span><span class=\"p\">.</span><span class=\"nf\">showing</span><span class=\"p\">(</span><span class=\"m\">40</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">);</span>\n            <span class=\"n\">ani</span><span class=\"p\">.</span><span class=\"nf\">showing2</span><span class=\"p\">(</span><span class=\"m\">60</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n        \n        <span class=\"k\">class</span> <span class=\"nc\">animal</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"n\">color</span><span class=\"p\">;</span>\n            <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"n\">name</span><span class=\"p\">;</span>\n            \n            <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"k\">select</span><span class=\"p\">()</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"동물 : {0}{1}\"</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">size</span><span class=\"p\">;</span>\n            <span class=\"k\">public</span> <span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"p\">;</span>\n\n            <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">showing</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">order_Size</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">order_Age</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">size</span> <span class=\"p\">=</span> <span class=\"n\">order_Size</span><span class=\"p\">;</span>\n                <span class=\"n\">age</span> <span class=\"p\">=</span> <span class=\"n\">order_Age</span><span class=\"p\">;</span>\n\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">size</span> <span class=\"p\">&gt;</span> <span class=\"m\">50</span><span class=\"p\">)</span> <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"무거운 {0} 살\"</span><span class=\"p\">,</span><span class=\"n\">age</span><span class=\"p\">);</span>\n                <span class=\"k\">else</span> <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"가벼운 {0} 살\"</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">showing2</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"n\">size</span> <span class=\"p\">=</span> <span class=\"n\">size</span><span class=\"p\">;</span>\n                <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"n\">age</span> <span class=\"p\">=</span> <span class=\"n\">age</span><span class=\"p\">;</span>\n                \n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">size</span> <span class=\"p\">&gt;</span> <span class=\"m\">50</span><span class=\"p\">)</span> <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"무거운 {0} 살\"</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">);</span>\n                <span class=\"k\">else</span> <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"가벼운 {0} 살\"</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 12강 - 점프문",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-12/",
      "date"     : "2017-09-03 00:00:00 +0900",
  "content"   : "<h3 id=\"점프문jump-statement\">점프문(Jump Statement)</h3>\n<hr />\n<p>점프문(Jump Statement)은 <strong>특정 부분에서 건너뛰어</strong> 실행하는 제어 구문입니다. 점프문은 3가지가 있으며 <code class=\"highlighter-rouge\">break</code>, <code class=\"highlighter-rouge\">continue</code>, <code class=\"highlighter-rouge\">goto</code>가 있습니다.</p>\n\n<h4 id=\"break\">break</h4>\n<hr />\n<p>break 문은 실행중인 <strong>분기문(switch)이나 반복문을 중지</strong>하는 역할을 합니다. 해당 구문의 반복을 중지하고자 할때 사용합니다.\n<br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">break</code></li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">numb</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n<span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">=</span><span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">&lt;</span><span class=\"m\">10</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">==</span> <span class=\"m\">5</span><span class=\"p\">)</span> <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"n\">numb</span><span class=\"p\">++;</span>\n<span class=\"p\">}</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"n\">numb</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : 5</strong></p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : break 문이 실행되는 순간 <strong>구문({})을 뛰어넘습니다.</strong>\n<br /></li>\n</ul>\n\n<h4 id=\"continue\">continue</h4>\n<hr />\n\n<p>continue 문은 실행되는 순간에 <strong>반복문에서 1 회만 건너 뛰어 반복을 계속 수행</strong>합니다.</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">continue</code></li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">numb</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"m\">10</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">==</span> <span class=\"m\">5</span><span class=\"p\">)</span> <span class=\"k\">continue</span><span class=\"p\">;</span>\n    <span class=\"n\">numb</span><span class=\"p\">++;</span>\n<span class=\"p\">}</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"n\">numb</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : 9</strong><br /></p>\n\n<ul>\n  <li>Tip : i가 5가 되었을 때 <strong>구문({})을 1회만 뛰어넘습니다.</strong></li>\n</ul>\n\n<p><br /></p>\n\n<h4 id=\"goto\">goto</h4>\n<hr />\n\n<p>goto 문은 <strong>조건에 상관없이</strong> 해당 레이블로 코드를 바로 이동시킵니다.</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">goto</code> : goto 레이블; / 레이블:</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span><span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">&lt;</span><span class=\"m\">10</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">==</span><span class=\"m\">3</span><span class=\"p\">)</span> <span class=\"k\">goto</span> <span class=\"n\">jump</span><span class=\"p\">;</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"{0} 회\"</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">jump</span><span class=\"p\">:</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"마지막 회\"</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : 0 회 1 회 2 회 마지막 회</strong><br /></p>\n\n<ul>\n  <li>Tip : 지정된 레이블 아래의 구문부터 순서를 진행합니다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 11강 - 반복문",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-11/",
      "date"     : "2017-09-02 00:00:00 +0900",
  "content"   : "<h3 id=\"반복문repetitive-statement\">반복문(Repetitive Statement)</h3>\n<hr />\n<p><a href=\"/assets/images/C/ch11/1.png\"><img src=\"/assets/images/C/ch11/1.png\" alt=\"1\" /></a>\n반복문 (Repetitive Statement)은 <strong>특정 부분을 반복</strong>해서 실행하는 제어 구문입니다. 반복문은 크게 4가지가 있으며 <code class=\"highlighter-rouge\">for문</code>, <code class=\"highlighter-rouge\">foreach문</code>, <code class=\"highlighter-rouge\">while문</code>, <code class=\"highlighter-rouge\">do-while문</code>이 있습니다.</p>\n\n<h4 id=\"for\">for</h4>\n<hr />\n<p>for 문은 <strong>초기식</strong>에 따라 <strong>조건식을 판단</strong>하여 실행하고 <strong>변환식을 계산</strong>합니다. 그 후, 다시 조건식을 검사하며 <strong>참이면 계속 검사를 진행</strong>하고 <strong>거짓일 경우 for문을 종료</strong>합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">for</code> : for(초기식; 조건식; 변환식)</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">=</span><span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">&lt;</span><span class=\"m\">3</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : 0, 1, 2</strong></p>\n\n<p><br /></p>\n\n<ul>\n  <li>Tip : Console.WriteLine() 값은 프로그램 실행 후, 하단의 <strong>출력 탭</strong>에서 확인할 수 있습니다.</li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">이중 for</code> : for문 안에 for문을 중첩시키는 방법, n*n배열을 모두 검사하거나 만들 때 주로 사용</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">=</span><span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">&lt;</span><span class=\"m\">3</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"s\">\"+\"</span><span class=\"p\">);</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span><span class=\"p\">=</span><span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span><span class=\"p\">&lt;</span><span class=\"m\">4</span><span class=\"p\">;</span> <span class=\"n\">j</span><span class=\"p\">++)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"s\">\"-\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : +0123-+0123-+0123-</strong></p>\n\n<p><br /></p>\n\n<h4 id=\"foreach\">foreach</h4>\n<hr />\n\n<p>foreach 문은 <strong>집합 안의 모든 값에</strong>대하여 실행합니다. foreach 문은 명시적인 카운터가 필요하지 않을 때 사용합니다.</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">foreach 1차원</code> : 데이터형식[] 변수명 = new 데이터형식[] { 원소0, 원소1, 원소2, … };</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"n\">Fibonacci</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"p\">{</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"m\">8</span><span class=\"p\">,</span> <span class=\"m\">13</span> <span class=\"p\">};</span>\n<span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">element</span> <span class=\"k\">in</span> <span class=\"n\">Fibonacci</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"n\">element</span> <span class=\"p\">+</span> <span class=\"s\">\"-\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"s\">\"end\"</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : 0-1-1-2-3-5-8-13-end</strong><br /></p>\n\n<ul>\n  <li>Tip : <strong>+</strong>를 통하여 추가적인 문구 삽입 가능합니다.</li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">foreach 2차원</code> : 데이터형식[,] 변수명 = new 데이터형식[n,m] { {0, 0}, …, {n,m} };</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span><span class=\"p\">[,]</span> <span class=\"n\">numbers2D</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"p\">[</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">]</span> <span class=\"p\">{</span> <span class=\"p\">{</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">22</span> <span class=\"p\">},</span> <span class=\"p\">{</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">44</span> <span class=\"p\">},</span> <span class=\"p\">{</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"m\">66</span> <span class=\"p\">}</span> <span class=\"p\">};</span>\n<span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">numbers2D</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"s\">\"{0}#{1}::\"</span><span class=\"p\">,</span> <span class=\"s\">\"값\"</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : 값#1::값#22::값#3::값#44::값#5::값#66::</strong><br /></p>\n\n<ul>\n  <li>Tip : <strong>{0}, {1}, {2} …</strong>을 이용하여 변수처럼 문구를 삽입 가능합니다.</li>\n</ul>\n\n<h4 id=\"while\">while</h4>\n<hr />\n\n<p>while 문은 <strong>조건식을 검사</strong>하여 참, 거짓을 판단하고 <strong>실행을 반복</strong>합니다. 그 후, 다시 조건식을 검사하며 <strong>참이면 계속 검사를 진행</strong>하고 <strong>거짓일 경우 while문을 종료</strong>합니다.</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">while</code> :  while(조건식){…} 또는 while(Boolean){…}</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">&lt;</span><span class=\"m\">10</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">i</span><span class=\"p\">++;</span>\n<span class=\"p\">}</span>\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : 10</strong><br /></p>\n\n<ul>\n  <li>Tip : 조건에 따라 실행하지 않을 수 있습니다.</li>\n</ul>\n\n<h4 id=\"do-while\">do-while</h4>\n<hr />\n\n<p>do-while문은 <strong>조건식을 마지막에 검사</strong>하여 참, 거짓 유/무와 관계 없이 <strong>1회를 무조건 실행</strong>합니다.</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">do-while</code> : do{…} while(Boolean);</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n<span class=\"k\">do</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">i</span><span class=\"p\">++;</span>\n<span class=\"p\">}</span> <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n\n<span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">Write</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : 1</strong><br /></p>\n\n<ul>\n  <li>Tip : 조건을 고려하지 않고 무조건 1회 실행합니다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 10강 - 분기문",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-10/",
      "date"     : "2017-08-27 00:00:00 +0900",
  "content"   : "<h3 id=\"분기문branching-statement\">분기문(Branching Statement)</h3>\n<hr />\n<p><a href=\"/assets/images/C/ch10/1.png\"><img src=\"/assets/images/C/ch10/1.png\" alt=\"1\" /></a>\n분기문 (Branching Statement)은 조건에 따라 <strong>다음에 실행할 흐름을 결정 및 수행</strong>하는 제어 구문입니다. 분기문은 크게 두 가지가 있으며 <code class=\"highlighter-rouge\">if</code>문과 <code class=\"highlighter-rouge\">switch</code>문이 있습니다.</p>\n\n<h4 id=\"if\">if</h4>\n<hr />\n<p>if 문은 <code class=\"highlighter-rouge\">Boolean</code> 값에 따라 <strong>하나의 조건(true or false)만 판단</strong>하여 실행할 <strong>구문(<code class=\"highlighter-rouge\">{}</code>)을 식별</strong>합니다. if문은 참과 거짓을 구별하여 사용할 때 사용합니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">if</code> : 참, 거짓 판단</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">bool</span> <span class=\"n\">check</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"참\"</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : 참</strong></p>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">if-else</code> : if의 조건이 맞지 않을 경우 else 수행</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">bool</span> <span class=\"n\">check</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"참\"</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"k\">else</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"거짓\"</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : 거짓</strong></p>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">else if</code> : if의 조건이 맞지 않을 경우 else if 판단</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">number</span> <span class=\"p\">=</span> <span class=\"m\">2</span><span class=\"p\">;</span>\n<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">number</span> <span class=\"p\">==</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"영\"</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">number</span> <span class=\"p\">==</span> <span class=\"m\">1</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"일\"</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">number</span> <span class=\"p\">==</span> <span class=\"m\">2</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span>  <span class=\"p\">==</span> <span class=\"s\">\"이\"</span>\n<span class=\"p\">}</span>\n<span class=\"k\">else</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">==</span> <span class=\"s\">\"알 수 없음\"</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : 이</strong><br />\n만약 변수 number가 0, 1, 2 가 아닐 경우 알 수 없음 출력</p>\n\n<p><br /></p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">if-if</code> : 두 단계에 걸쳐 판단</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">string</span> <span class=\"n\">Color</span> <span class=\"p\">=</span> <span class=\"s\">\"빨강\"</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">size</span> <span class=\"p\">=</span> <span class=\"m\">40</span><span class=\"p\">;</span>\n<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">size</span> <span class=\"p\">&gt;</span> <span class=\"m\">30</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">Color</span> <span class=\"p\">==</span> <span class=\"s\">\"빨강\"</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span> \n        <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"큰 빨강\"</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>    \n    <span class=\"k\">else</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"색상이 다릅니다.\"</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"k\">else</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"크기가 작습니다.\"</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : 큰 빨강</strong><br />\n첫 번째로 size 변수를 비교 후, Color 변수를 비교</p>\n\n<p><br /></p>\n\n<h4 id=\"switch\">switch</h4>\n<hr />\n\n<p>switch 문은 <code class=\"highlighter-rouge\">int</code> 값에 따라 <strong>일치를 판단(0, 1, 2, …)</strong>하여 실행할 <code class=\"highlighter-rouge\">구역(case)</code>을 식별합니다. switch 문은 조건이 같고 값이 세 가지 이상일때 사용합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"kt\">int</span> <span class=\"n\">number</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n<span class=\"k\">switch</span> <span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"m\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"영\"</span><span class=\"p\">;</span>\n        <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"k\">case</span> <span class=\"m\">1</span><span class=\"p\">:</span>\n        <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"일\"</span><span class=\"p\">;</span>\n        <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"k\">case</span> <span class=\"m\">2</span><span class=\"p\">:</span>\n        <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"이\"</span><span class=\"p\">;</span>\n        <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"k\">default</span><span class=\"p\">:</span>\n        <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"s\">\"none\"</span><span class=\"p\">;</span>\n        <span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><strong>실제 출력 값 : 영</strong><br />\ncase에 포함되지 않은 경우에는 default 값을 출력</p>\n\n<p>switch 구문은 아래와 같다. <code class=\"highlighter-rouge\">int</code> 값을 가지는 변수를 사용하며 <code class=\"highlighter-rouge\">case</code>에 따라 아래의 구문을 실행한다. <code class=\"highlighter-rouge\">break</code> 구문을 넣지 않으면 <code class=\"highlighter-rouge\">에러(CS8070)</code>가 뜨며, case안에 포함되지 않은 경우는 <code class=\"highlighter-rouge\">dafaul</code>t를 실행시킨다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">switch</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"err\">변수</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">case</span> <span class=\"err\">상수</span><span class=\"p\">{</span><span class=\"m\">0</span><span class=\"p\">}:</span>\n        <span class=\"c1\">//사용될 명령어//</span>\n        <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"k\">case</span> <span class=\"err\">상수</span><span class=\"p\">{</span><span class=\"m\">1</span><span class=\"p\">}:</span>\n        <span class=\"c1\">//사용될 명령어//</span>\n        <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"k\">case</span> <span class=\"err\">상수</span><span class=\"p\">{</span><span class=\"m\">2</span><span class=\"p\">}:</span>\n        <span class=\"c1\">//사용될 명령어//</span>\n        <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"k\">default</span><span class=\"p\">:</span>\n        <span class=\"c1\">//사용될 명령어//</span>\n        <span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<ul>\n  <li>Tip : break는 중괄호 <code class=\"highlighter-rouge\">{}</code> 구문을 나가게 다. 즉, case 안에서 실행될 경우 switch의 중괄호를 나가게 됩니다.</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 9강 - 데이터 형식",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-9/",
      "date"     : "2017-08-22 00:00:00 +0900",
  "content"   : "<h3 id=\"데이터-형식\">데이터 형식</h3>\n<hr />\n<p>데이터 형식에는 <code class=\"highlighter-rouge\">기본 데이터 형식(Primitive Data Type)</code>과 복합 <code class=\"highlighter-rouge\">데이터 형식(Complex Data Type)</code>이 있습니다. 또한 이 데이터 형식은 <code class=\"highlighter-rouge\">값 형식(Value Types)</code>과 <code class=\"highlighter-rouge\">참조 형식(Reference Types)</code>으로 나뉩니다. 즉, 기본 데이터 형식에 값 형식과 참조 형식이 되며 복합 데이터 형식에도 값 형식과 참조 형식이 되는 부분이 있습니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"변수variable\">변수(Variable)</h4>\n<hr />\n\n<p>변수란 데이터를 저장하는 공간입니다. 저장하는 공간의 크기는 <strong>데이터 형식에 따라 결정</strong>됩니다. 변수는 다음과 같이 선언합니다.</p>\n\n<pre><code class=\"language-c#:\">int x = 100;\n</code></pre>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">int</code> : 데이터 형식</li>\n  <li><code class=\"highlighter-rouge\">x</code> : 식별자 (변수)</li>\n  <li><code class=\"highlighter-rouge\">=</code> : 대입 연산자</li>\n  <li><code class=\"highlighter-rouge\">100</code> : 데이터</li>\n  <li><code class=\"highlighter-rouge\">;</code> : 세미콜론</li>\n</ul>\n\n<p><code class=\"highlighter-rouge\">데이터 형식</code>, <code class=\"highlighter-rouge\">식별자</code>, <code class=\"highlighter-rouge\">연산자</code>, <code class=\"highlighter-rouge\">데이터</code>, <code class=\"highlighter-rouge\">세미콜론</code> 5가지의 구성요소로 변수를 할당 할 수 있습니다.\n또한 다음과 같이 선언할 수도 있습니다.</p>\n\n<pre><code class=\"language-c#:\">int x;\nx = 100;\n</code></pre>\n\n<p>첫 번째 방법은 <strong>선언 및 초기화를 한 번에</strong> 한 방법이며, 두 번째 방법은 <strong>선언과 데이터 할당을 별도</strong>로 한 방법입니다.</p>\n\n<pre><code class=\"language-c#:\">int x, y, z;\nint a = 100, b = 200, c = 300;\n</code></pre>\n\n<p>위와 같이 <strong>여러 개의 변수를 동시에 선언</strong>할 수 있습니다. 단, 동시에 선언하는 변수들은 <strong>데이터 형식이 같아야 하며 각각 <code class=\"highlighter-rouge\">콤마(,)</code>를 이용하여 구분</strong>해야합니다.\n<br /></p>\n\n<h4 id=\"초기화initialization\">초기화(Initialization)</h4>\n<hr />\n\n<p>초기화(Initialization)이란 변수가 선언된 <strong>최초에 데이터를 할당</strong>하는 것을 의미합니다.</p>\n\n<p>int = x; 이후 x의 값에 아무 데이터도 입력하지 않으면 x 변수에는 <strong>쓰레기 값</strong>이 들어가게 됩니다.  C#에서는 할당되지 않은 변수가 사용될 경우 오류 (CS0165)가 발생하여 문제발생을 억제합니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"기본-데이터-형식primitive-data-type\">기본 데이터 형식(Primitive Data Type)</h4>\n<hr />\n<p><br />\n기본 데이터 형식(Primitive Data Type)은 숫자 형식, 문자열 형식, 논리 형식, 오브젝트 형식으로 나누어집니다. 숫자 형식과 논리 형식은 <strong>값 형식(Value Types)</strong>에 해당하며, 문자열 형식과 오브젝트 형식은 <strong>참조 형식(Reference Types)</strong>에 해당합니다.</p>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: left\">데이터 형식</th>\n      <th style=\"text-align: center\">NET 클래스</th>\n      <th style=\"text-align: right\">형식</th>\n      <th style=\"text-align: right\">비트</th>\n      <th style=\"text-align: right\">범위</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: left\">byte</td>\n      <td style=\"text-align: center\"><strong>Byte</strong></td>\n      <td style=\"text-align: right\">부호 없는 정수</td>\n      <td style=\"text-align: right\">8</td>\n      <td style=\"text-align: right\">0 ~ 255</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">sbyte</td>\n      <td style=\"text-align: center\"><strong>SByte</strong></td>\n      <td style=\"text-align: right\">부호 있는 정수</td>\n      <td style=\"text-align: right\">8</td>\n      <td style=\"text-align: right\">-128 ~ 127</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">short</td>\n      <td style=\"text-align: center\"><strong>Int16</strong></td>\n      <td style=\"text-align: right\">부호 있는 정수</td>\n      <td style=\"text-align: right\">16</td>\n      <td style=\"text-align: right\">-32,768 ~ 32,767</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">ushort</td>\n      <td style=\"text-align: center\"><strong>UInt16</strong></td>\n      <td style=\"text-align: right\">부호 없는 정수</td>\n      <td style=\"text-align: right\">16</td>\n      <td style=\"text-align: right\">0 ~ 65,535</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">int</td>\n      <td style=\"text-align: center\"><strong>Int32</strong></td>\n      <td style=\"text-align: right\">부호 있는 정수</td>\n      <td style=\"text-align: right\">32</td>\n      <td style=\"text-align: right\">-2,147,483,648 ~ 2,147,483,647</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">uint</td>\n      <td style=\"text-align: center\"><strong>UInt32</strong></td>\n      <td style=\"text-align: right\">부호 없는 정수</td>\n      <td style=\"text-align: right\">32</td>\n      <td style=\"text-align: right\">0 ~ 4,294,967,295</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">long</td>\n      <td style=\"text-align: center\"><strong>Int64</strong></td>\n      <td style=\"text-align: right\">부호 있는 정수</td>\n      <td style=\"text-align: right\">64</td>\n      <td style=\"text-align: right\">-922,337,203,685,477,508 ~ 922,337,203,685,477,507</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">ulong</td>\n      <td style=\"text-align: center\"><strong>UInt64</strong></td>\n      <td style=\"text-align: right\">부호 없는 정수</td>\n      <td style=\"text-align: right\">64</td>\n      <td style=\"text-align: right\">0 ~ 18,446,744,073,709,551,615</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">float</td>\n      <td style=\"text-align: center\"><strong>Single</strong></td>\n      <td style=\"text-align: right\">단정밀도 부동 소수점 형식</td>\n      <td style=\"text-align: right\">32</td>\n      <td style=\"text-align: right\">-3.402823e38 ~ 3.402823e38</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">double</td>\n      <td style=\"text-align: center\"><strong>Double</strong></td>\n      <td style=\"text-align: right\">배정밀도 부동 소수점 형식</td>\n      <td style=\"text-align: right\">64</td>\n      <td style=\"text-align: right\">-1.79769313486232e308 ~ 1.79769313486232e308</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">decimal</td>\n      <td style=\"text-align: center\"><strong>Decimal</strong></td>\n      <td style=\"text-align: right\">29자리 데이터를 표현하는 소수 형식</td>\n      <td style=\"text-align: right\">128</td>\n      <td style=\"text-align: right\">-3.402823e38 ~ 3.402823e38</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">char</td>\n      <td style=\"text-align: center\"><strong>Char</strong></td>\n      <td style=\"text-align: right\">단일 유니코드 문자</td>\n      <td style=\"text-align: right\">16</td>\n      <td style=\"text-align: right\">유니코드 기호</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">string</td>\n      <td style=\"text-align: center\"><strong>String</strong></td>\n      <td style=\"text-align: right\">문자 시퀀스</td>\n      <td style=\"text-align: right\">-</td>\n      <td style=\"text-align: right\">-</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">bool</td>\n      <td style=\"text-align: center\"><strong>Boolean</strong></td>\n      <td style=\"text-align: right\">논리 형식</td>\n      <td style=\"text-align: right\">8</td>\n      <td style=\"text-align: right\">true 또는 false</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">object</td>\n      <td style=\"text-align: center\"><strong>Object</strong></td>\n      <td style=\"text-align: right\">모든 형식의 기본 형식</td>\n      <td style=\"text-align: right\">-</td>\n      <td style=\"text-align: right\">-</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"값-형식primitive-data-type과-참조-형식reference-types\">값 형식(Primitive Data Type)과 참조 형식(Reference Types)</h4>\n<hr />\n<p><br />\n값 형식은 <strong>변수가 값을 담는</strong> 데이터 형식입니다. <code class=\"highlighter-rouge\">스택(Stack)</code>에 할당되고 변수 생성 코드 <strong>범위를 벗어나면 해제</strong>됩니다.<br />\n참조 형식은 변수가 값 대신에 <strong>값이 있는 곳의 위치를 담는</strong> 데이터 형식입니다. <code class=\"highlighter-rouge\">힙(Heap)</code>에 할당되고 <strong>가비지 컬렉터에 의해 해제</strong>됩니다.<br />\n즉, 데이터를 스택(Stack)에 저장하느냐, 힙(Heap)에 저장하느냐의 차이를 보입니다. 메소드를 통해 생성된 변수는 스택(Stack)에 저장되며 new 한정자를 이용한 변수는 힙(Heap)에 저장됩니다.</p>\n\n<h4 id=\"상수constants--열거-형식enumerator\">상수(Constants) &amp; 열거 형식(Enumerator)</h4>\n<hr />\n<p><br />\n상수(Constants)는 <strong>변하지 않는 값</strong>을 의미합니다. 데이터 형식 앞에 const 를 입력합니다. const 를 입력한 데이터는 변경할 수 없습니다.</p>\n\n<pre><code class=\"language-c#:\">const int x = 100;\nconst string name = \"daehee\";\n</code></pre>\n\n<p>열거 형식(Enumerator)은 <strong>여러개의 상수를 선언</strong>할 때 한번에 묶어서 선언해주는 방법입니다. const 를 사용하지 않고 enum 을 이용합니다.</p>\n\n<pre><code class=\"language-c#:\">enum x : int {영, 일, two, _3}\nlabel1.Text = Convert.ToString(x.일 + 1);\n</code></pre>\n\n<p>위와 같이 선언하며 불러올 수 있습니다. ‘enum 열거 형식 : 데이터 형식 { 상수1, 상수2, 상수3, … }’ 형태입니다. <br />\nlabel1에 출력되는 값은 two가 됩니다. 데이터 형식 안에 들어가는 요소에는 0 부터 시작합니다. <br />\n만약, x.일 + 1이 아니라 x.일 - 2일 경우에는 -1이 출력되게 됩니다. x.일의 요소 값은 1이며 1-2 = -1 이므로, -1이 출력됩니다.</p>\n\n<h4 id=\"nullable-형식\">Nullable 형식</h4>\n<hr />\n<p><br />\nNullable 형식은 값 형식에서만 사용되며, 해당 <strong>변수를 비우는 의미</strong>입니다. <br />\n프로그램 실행 시 null 값일 경우 에러가 발생하게되므로 비어있는 값일 경우 return하는 용도로 많이 사용됩니다.</p>\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 8강 - Timer",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-8/",
      "date"     : "2017-08-20 00:00:00 +0900",
  "content"   : "<h4 id=\"프로젝트-구성\">프로젝트 구성</h4>\n<p><a href=\"/assets/images/C/ch8/1.png\"><img src=\"/assets/images/C/ch8/1.png\" alt=\"1\" /></a>\n도구상자에서 <code class=\"highlighter-rouge\">Timer</code>, <code class=\"highlighter-rouge\">TextBox</code>, <code class=\"highlighter-rouge\">Button</code>, <code class=\"highlighter-rouge\">Label</code>, <code class=\"highlighter-rouge\">ProgressBar</code>을 <code class=\"highlighter-rouge\">Form1</code>에 생성합니다. 위의 이미지와 같이 배치합니다.</p>\n\n<p><a href=\"/assets/images/C/ch8/2.png\"><img src=\"/assets/images/C/ch8/2.png\" alt=\"2\" /></a>\n속성을 다음과 같이 설정합니다.</p>\n\n<ol>\n  <li>\n    <p>Button (1번)</p>\n\n    <ul>\n      <li>Text : Send</li>\n    </ul>\n  </li>\n  <li>\n    <p>Button (2번)</p>\n\n    <ul>\n      <li>Text :  Reset</li>\n    </ul>\n  </li>\n  <li>\n    <p>Label (1번)</p>\n\n    <ul>\n      <li>Text : 현재시간</li>\n    </ul>\n  </li>\n  <li>\n    <p>Label (2번)</p>\n\n    <ul>\n      <li>Text : 0</li>\n    </ul>\n  </li>\n</ol>\n\n<p><code class=\"highlighter-rouge\">timer1</code>을 더블클릭하여 이벤트를 활성화시킵니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">timer1_Tick</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">progressBar1</span><span class=\"p\">.</span><span class=\"n\">Value</span> <span class=\"p\">&gt;=</span> <span class=\"n\">progressBar1</span><span class=\"p\">.</span><span class=\"n\">Maximum</span><span class=\"p\">)</span> <span class=\"k\">return</span><span class=\"p\">;</span>\n    <span class=\"n\">progressBar1</span><span class=\"p\">.</span><span class=\"n\">Value</span> <span class=\"p\">+=</span> <span class=\"m\">1</span><span class=\"p\">;</span>\n    <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">DateTime</span><span class=\"p\">.</span><span class=\"n\">Now</span><span class=\"p\">.</span><span class=\"nf\">ToLongTimeString</span><span class=\"p\">();</span>\n    <span class=\"n\">label2</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">(</span><span class=\"n\">progressBar1</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>if (progressBar1.Value &gt;= progressBar1.Maximum) return;\n</code></pre></div></div>\n\n<p><code class=\"highlighter-rouge\">progressBar</code>의 값이 설정된 최댓값 보다 클 경우 return하여 아래의 명령문을 실행시키지 않게합니다.</p>\n\n<ul>\n  <li>Tip : 최대값을 넘겨서 값이 누적될 경우 <strong>프로그램의 오류</strong>를 발생시킵니다.</li>\n</ul>\n\n<p><br />\n    progressBar1.Value += 1;</p>\n\n<p>그 후, progressBar의 값을 1씩 누적하여 증가시킵니다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>label1.Text = DateTime.Now.ToLongTimeString();\nlabel2.Text = Convert.ToString(progressBar1.Value);\n</code></pre></div></div>\n\n<p>label1에 현재 시간을 띄웁니다. label2에는 progressBar의 값을 표시합니다.</p>\n\n<ul>\n  <li>Tip : DateTime.Now.ToLongTimeString()는 현재 시간을 표시해줍니다.</li>\n</ul>\n\n<p><code class=\"highlighter-rouge\">Button1</code>을 더블클릭하여 이벤트를 활성화 시킵니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button1_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">textBox1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">==</span> <span class=\"s\">\"\"</span><span class=\"p\">)</span> <span class=\"k\">return</span><span class=\"p\">;</span>\n    <span class=\"n\">timer1</span><span class=\"p\">.</span><span class=\"n\">Interval</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToInt32</span><span class=\"p\">(</span><span class=\"n\">textBox1</span><span class=\"p\">.</span><span class=\"n\">Text</span><span class=\"p\">);</span>\n    <span class=\"n\">timer1</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>if (textBox1.Text == \"\") return;\n</code></pre></div></div>\n\n<p>이 구문 또한 위처럼 <code class=\"highlighter-rouge\">null</code>값일 경우 아래의 명령문을 실행시키지 않게합니다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>timer1.Interval = Convert.ToInt32(textBox1.Text);\ntimer1.Enabled = true;\n</code></pre></div></div>\n\n<p>timer1의 이벤트의 빈도를 설정합니다. 단위는 밀리초입니다. 빈도를 설정 후에 타이머를 사용가능하게 바꿔줍니다.</p>\n\n<ul>\n  <li>Tip : Timer는 지정된 시간마다 <strong>timer 이벤트 안의 명령문을 반복해 실행</strong>시킵니다.</li>\n</ul>\n\n<p>다음은 <code class=\"highlighter-rouge\">Button2</code>를 더블클릭하여 이벤트를 활성화시킵니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button2_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">timer1</span><span class=\"p\">.</span><span class=\"n\">Interval</span> <span class=\"p\">=</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n    <span class=\"n\">timer1</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n    <span class=\"n\">progressBar1</span><span class=\"p\">.</span><span class=\"n\">Value</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>timer1의 빈도를 초기값인 100으로 초기화 시키고, 사용가능하지 않게 만듭니다. 또한 progressBar의 값을 0으로 바꿔줍니다.</p>\n\n<p><a href=\"/assets/images/C/ch8/3.png\"><img src=\"/assets/images/C/ch8/3.png\" alt=\"3\" /></a></p>\n\n<p>다음과 같이 프로그램이 실행되게 됩니다.</p>\n\n<h2 id=\"코드\">코드</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">timer1_Tick</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">progressBar1</span><span class=\"p\">.</span><span class=\"n\">Value</span> <span class=\"p\">&gt;=</span> <span class=\"n\">progressBar1</span><span class=\"p\">.</span><span class=\"n\">Maximum</span><span class=\"p\">)</span> <span class=\"k\">return</span><span class=\"p\">;</span>\n            <span class=\"n\">progressBar1</span><span class=\"p\">.</span><span class=\"n\">Value</span> <span class=\"p\">+=</span> <span class=\"m\">1</span><span class=\"p\">;</span>\n            <span class=\"n\">label1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">DateTime</span><span class=\"p\">.</span><span class=\"n\">Now</span><span class=\"p\">.</span><span class=\"nf\">ToLongTimeString</span><span class=\"p\">();</span>\n            <span class=\"n\">label2</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">(</span><span class=\"n\">progressBar1</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button1_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">textBox1</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">==</span> <span class=\"s\">\"\"</span><span class=\"p\">)</span> <span class=\"k\">return</span><span class=\"p\">;</span>\n            <span class=\"n\">timer1</span><span class=\"p\">.</span><span class=\"n\">Interval</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToInt32</span><span class=\"p\">(</span><span class=\"n\">textBox1</span><span class=\"p\">.</span><span class=\"n\">Text</span><span class=\"p\">);</span>\n            <span class=\"n\">timer1</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button2_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">timer1</span><span class=\"p\">.</span><span class=\"n\">Interval</span> <span class=\"p\">=</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n            <span class=\"n\">timer1</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n            <span class=\"n\">progressBar1</span><span class=\"p\">.</span><span class=\"n\">Value</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 7강 - SaveFileDialog &amp; OpenFileDialog",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-7/",
      "date"     : "2017-08-11 00:00:00 +0900",
  "content"   : "<h4 id=\"프로젝트-구성\">프로젝트 구성</h4>\n<p><a href=\"/assets/images/C/ch7/1.png\"><img src=\"/assets/images/C/ch7/1.png\" alt=\"1\" /></a>\n도구상자에서 <code class=\"highlighter-rouge\">SaveFileDialog</code>, <code class=\"highlighter-rouge\">OpenFileDialog</code>, <code class=\"highlighter-rouge\">PictureBox</code>, <code class=\"highlighter-rouge\">MenuStrip</code>을 <code class=\"highlighter-rouge\">Form1</code>에 생성합니다. 위의 이미지와 같이 배치합니다.</p>\n\n<p><a href=\"/assets/images/C/ch6/test.png\"><img src=\"/assets/images/C/ch6/test.png\" alt=\"test\" /></a>\n<a href=\"https://drive.google.com/file/d/0B4mfyOc47NkcQTFaQU5JRll1YUk/view?usp=sharing\" target=\"_blank\"><strong><center>이미지 다운로드</center></strong></a></p>\n\n<p><a href=\"/assets/images/C/ch7/2.png\"><img src=\"/assets/images/C/ch7/2.png\" alt=\"2\" /></a>\n속성을 다음과 같이 설정합니다.</p>\n\n<ol>\n  <li>\n    <p>PictureBox</p>\n\n    <ul>\n      <li>Size : 200, 200</li>\n      <li>SizeMode : StretchImage</li>\n    </ul>\n  </li>\n  <li>\n    <p>MenuStrip</p>\n\n    <ul>\n      <li>Text : 파일</li>\n      <li>Text : 열기</li>\n      <li>Text : 저장</li>\n    </ul>\n  </li>\n</ol>\n\n<ul>\n  <li>Tip : MenuStrip을 이용하여 프로그램의 메뉴바를 만들 수 있습니다. <strong>Button과 동일한 기능</strong>을 낼 수 있습니다.</li>\n</ul>\n\n<p>MenuStrip에서 열기 메뉴를 더블클릭하여 이미지 파일을 불러올 수 있게 합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"err\">열기</span><span class=\"nf\">ToolStripMenuItem_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">openFileDialog1</span><span class=\"p\">.</span><span class=\"nf\">ShowDialog</span><span class=\"p\">()</span> <span class=\"p\">==</span> <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Windows</span><span class=\"p\">.</span><span class=\"n\">Forms</span><span class=\"p\">.</span><span class=\"n\">DialogResult</span><span class=\"p\">.</span><span class=\"n\">OK</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">pictureBox1</span><span class=\"p\">.</span><span class=\"nf\">Load</span><span class=\"p\">(</span><span class=\"n\">openFileDialog1</span><span class=\"p\">.</span><span class=\"n\">FileName</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>openFileDialog1.ShowDialog() == System.Windows.Forms.DialogResult.OK\n</code></pre></div></div>\n\n<p><code class=\"highlighter-rouge\">openFileDialog</code>에서 OK버튼을 누를경우 실행됩니다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pictureBox1.Load(openFileDialog1.FileName);\n</code></pre></div></div>\n\n<p>그 후, pictureBox1에 openFileDialog를 통해 불러온 파일 이름으로 불러옵니다.</p>\n\n<p><a href=\"/assets/images/C/ch7/3.png\"><img src=\"/assets/images/C/ch7/3.png\" alt=\"3\" /></a></p>\n\n<p>다음과 같이 이미지가 불러오게 됩니다. 그 다음, 저장 메뉴를 더블클릭합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"err\">저장</span><span class=\"nf\">ToolStripMenuItem_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">DialogResult</span> <span class=\"n\">result</span> <span class=\"p\">=</span> <span class=\"n\">saveFileDialog1</span><span class=\"p\">.</span><span class=\"nf\">ShowDialog</span><span class=\"p\">();</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">result</span> <span class=\"p\">==</span> <span class=\"n\">DialogResult</span><span class=\"p\">.</span><span class=\"n\">OK</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">pictureBox1</span><span class=\"p\">.</span><span class=\"n\">Image</span><span class=\"p\">.</span><span class=\"nf\">Save</span><span class=\"p\">(</span><span class=\"n\">saveFileDialog1</span><span class=\"p\">.</span><span class=\"n\">FileName</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">ShowDialog()</code>를 변수형태로 저장할 수 있으며 이미지를 불러오는 방식과 동일하게 이미지를 저장할 수 있습니다.</p>\n\n<h2 id=\"코드\">코드</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"err\">열기</span><span class=\"nf\">ToolStripMenuItem_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">openFileDialog1</span><span class=\"p\">.</span><span class=\"nf\">ShowDialog</span><span class=\"p\">()</span> <span class=\"p\">==</span> <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Windows</span><span class=\"p\">.</span><span class=\"n\">Forms</span><span class=\"p\">.</span><span class=\"n\">DialogResult</span><span class=\"p\">.</span><span class=\"n\">OK</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">pictureBox1</span><span class=\"p\">.</span><span class=\"nf\">Load</span><span class=\"p\">(</span><span class=\"n\">openFileDialog1</span><span class=\"p\">.</span><span class=\"n\">FileName</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"err\">저장</span><span class=\"nf\">ToolStripMenuItem_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">DialogResult</span> <span class=\"n\">result</span> <span class=\"p\">=</span> <span class=\"n\">saveFileDialog1</span><span class=\"p\">.</span><span class=\"nf\">ShowDialog</span><span class=\"p\">();</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">result</span> <span class=\"p\">==</span> <span class=\"n\">DialogResult</span><span class=\"p\">.</span><span class=\"n\">OK</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">pictureBox1</span><span class=\"p\">.</span><span class=\"n\">Image</span><span class=\"p\">.</span><span class=\"nf\">Save</span><span class=\"p\">(</span><span class=\"n\">saveFileDialog1</span><span class=\"p\">.</span><span class=\"n\">FileName</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 6강 - PictureBox &amp; Graphics",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-6/",
      "date"     : "2017-08-03 00:00:00 +0900",
  "content"   : "<h4 id=\"프로젝트-구성\">프로젝트 구성</h4>\n<p><a href=\"/assets/images/C/ch6/1.png\"><img src=\"/assets/images/C/ch6/1.png\" alt=\"1\" /></a>\n도구상자에서 <code class=\"highlighter-rouge\">PictureBox</code>, <code class=\"highlighter-rouge\">RadioButton</code>을 <code class=\"highlighter-rouge\">Form1</code>에 생성합니다. 위의 이미지와 같이 배치합니다.</p>\n\n<p><a href=\"/assets/images/C/ch6/test.png\"><img src=\"/assets/images/C/ch6/test.png\" alt=\"test\" /></a>\n<a href=\"https://drive.google.com/file/d/0B4mfyOc47NkcQTFaQU5JRll1YUk/view?usp=sharing\" target=\"_blank\"><strong><center>이미지 다운로드</center></strong></a></p>\n\n<p><a href=\"/assets/images/C/ch6/2.png\"><img src=\"/assets/images/C/ch6/2.png\" alt=\"2\" /></a>\n속성을 다음과 같이 설정합니다.</p>\n\n<ol>\n  <li>\n    <p>PictureBox (1번)</p>\n\n    <ul>\n      <li>Size : 300, 300</li>\n      <li>SizeMode : StretchImage</li>\n      <li>image : test.png</li>\n    </ul>\n  </li>\n  <li>\n    <p>PictureBox (2번)</p>\n\n    <ul>\n      <li>Size : 300, 300</li>\n      <li>SizeMode : StretchImage</li>\n    </ul>\n  </li>\n  <li>\n    <p>RadioButton (1번)</p>\n\n    <ul>\n      <li>Text : 제거</li>\n    </ul>\n  </li>\n  <li>\n    <p>RadioButton (2번)</p>\n\n    <ul>\n      <li>Text : 복사</li>\n    </ul>\n  </li>\n</ol>\n\n<ul>\n  <li>Tip\n    <ul>\n      <li>Normal : Image 크기에 맞춰 PictureBox에 출력</li>\n      <li>StretchImage : Image를 PictureBox 크기에 맞춰 늘림</li>\n      <li>AutoSize : PictureBox의 크기를 Image 크기에 맞춤</li>\n      <li>CenterImage : PictureBox 중간에 Image를 배치</li>\n      <li>Zoom : Image의 크기를 PictureBox에 비율에 맞게 늘림</li>\n    </ul>\n  </li>\n</ul>\n\n<p><a href=\"/assets/images/C/ch5/3.png\"><img src=\"/assets/images/C/ch6/3.png\" alt=\"3\" /></a></p>\n\n<p>로컬 리소스에서 가져오기 버튼을 눌러 저장된 이미지를 불러옵니다.</p>\n\n<ul>\n  <li>Tip\n    <ul>\n      <li>\n        <p><strong>로컬 리소스</strong> : 파일의 경로를 참조 형식으로 출력하는 방법입니다. 다른 PC에서 사용시 경로가 다르다면 해당 파일이 출력되지 않습니다.</p>\n      </li>\n      <li>\n        <p><strong>프로젝트 리소스</strong> : Resources 폴더에 파일이 복사되어 다른 PC에서 작업을 하여도 동일하게 출력됩니다. <strong>(프로그램 내에 내장)</strong></p>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">radioButton1_CheckedChanged</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n\t<span class=\"n\">pictureBox2</span><span class=\"p\">.</span><span class=\"n\">Image</span> <span class=\"p\">=</span> <span class=\"k\">null</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">radioButton2_CheckedChanged</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n\t<span class=\"n\">pictureBox2</span><span class=\"p\">.</span><span class=\"n\">Image</span> <span class=\"p\">=</span> <span class=\"n\">pictureBox1</span><span class=\"p\">.</span><span class=\"n\">Image</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pictureBox2.Image = null;\npictureBox2.Image = pictureBox1.Image;\n</code></pre></div></div>\n\n<p>pictureBox2의 이미지를 <code class=\"highlighter-rouge\">null</code>로 변경시킵니다.</p>\n\n<p>pictureBox2의 이미지를 pictureBox1의 이미지로 변경합니다. 복사 붙여넣기와 같습니다.</p>\n\n<ul>\n  <li>Tip : null이란 아무 것도 가리키고 있지 않다는 것을 나타내기 위해 사용하는 값입니다.</li>\n</ul>\n\n<p><a href=\"/assets/images/C/ch5/4.png\"><img src=\"/assets/images/C/ch6/4.png\" alt=\"4\" /></a></p>\n\n<p>pictureBox2의 속성-이벤트에서 <code class=\"highlighter-rouge\">MouseDown 이벤트</code>를 활성화 시킵니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">pictureBox2_MouseDown</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">MouseEventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Button</span> <span class=\"p\">==</span> <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Windows</span><span class=\"p\">.</span><span class=\"n\">Forms</span><span class=\"p\">.</span><span class=\"n\">MouseButtons</span><span class=\"p\">.</span><span class=\"n\">Right</span><span class=\"p\">)</span>\n\t<span class=\"p\">{</span>\n\t\t<span class=\"n\">Graphics</span> <span class=\"n\">grp</span> <span class=\"p\">=</span> <span class=\"n\">pictureBox2</span><span class=\"p\">.</span><span class=\"nf\">CreateGraphics</span><span class=\"p\">();</span>\n\t\t<span class=\"n\">Pen</span> <span class=\"n\">pen</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Pen</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">.</span><span class=\"n\">SteelBlue</span><span class=\"p\">);</span>\n\t\t<span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">pen</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">-</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">-</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"m\">6</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span> <span class=\"c1\">//  ↘</span>\n\t\t<span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">pen</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">-</span> <span class=\"m\">14</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"m\">6</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span>     <span class=\"c1\">// --→</span>\n\t\t<span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">pen</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">-</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">+</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"m\">6</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span> <span class=\"c1\">//  ↗</span>\n\t<span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>MouseDown 이벤트는 마우스의 단추를 누르면 발생합니다. <strong>좌, 우 클릭 상관없이</strong> 이벤트가 발생합니다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>if (e.Button == System.Windows.Forms.MouseButtons.Right)\n</code></pre></div></div>\n\n<p>위와 같은 if문을 추가해주면 <strong>우 클릭에서만</strong> 이벤트가 발생합니다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\tGraphics grp = pictureBox2.CreateGraphics();\n\tPen pen = new Pen(Color.SteelBlue);\n\tgrp.DrawLine(pen, e.X - 3, e.Y - 10, e.X + 6, e.Y); //  ↘\n\tgrp.DrawLine(pen, e.X - 14, e.Y, e.X + 6, e.Y);     // --→\n\tgrp.DrawLine(pen, e.X - 3, e.Y + 10, e.X + 6, e.Y); //  ↗\n</code></pre></div></div>\n\n<p>grp라는 그래픽스를 pictureBox2에 생성시킵니다. 그 후, pen을 생성하여 색상을 선택합니다.\nDrawLine을 이용하여 직선을 그릴 수 있습니다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\tgrp.DrawLine(pen, X좌표 시작점, Y좌표 시작점, X좌표 도착점, Y좌표 도착점);\n</code></pre></div></div>\n\n<p>e.X, e.Y는 마우스 포인터의 위치입니다. e.X는 X좌표, e.Y는 Y좌표입니다.\n<strong>pictureBox의 좌표는 왼측 상단이 (0, 0)이며 우측 하단이 (max, max)입니다.</strong> 보통 사용하는 좌표계와 약간 다르니 주의하시기 바랍니다.</p>\n\n<p>pictureBox2의 속성-이벤트에서 <code class=\"highlighter-rouge\">MouseMove 이벤트</code>를 활성화 시킵니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">pictureBox2_MouseMove</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">MouseEventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Button</span> <span class=\"p\">==</span> <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Windows</span><span class=\"p\">.</span><span class=\"n\">Forms</span><span class=\"p\">.</span><span class=\"n\">MouseButtons</span><span class=\"p\">.</span><span class=\"n\">Left</span><span class=\"p\">)</span>\n\t<span class=\"p\">{</span>\n\t\t<span class=\"n\">Graphics</span> <span class=\"n\">grp</span> <span class=\"p\">=</span> <span class=\"n\">pictureBox2</span><span class=\"p\">.</span><span class=\"nf\">CreateGraphics</span><span class=\"p\">();</span>\n\t\t<span class=\"n\">Pen</span> <span class=\"n\">pen</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Pen</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">.</span><span class=\"n\">SteelBlue</span><span class=\"p\">);</span>\n\t\t<span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">pen</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">-</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">-</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"m\">6</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span> <span class=\"c1\">//  ↘</span>\n\t\t<span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">pen</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">-</span> <span class=\"m\">14</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"m\">6</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span>     <span class=\"c1\">// --→</span>\n\t\t<span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">pen</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">-</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">+</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"m\">6</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span> <span class=\"c1\">//  ↗</span>\n\t<span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>if문에서 Right를 Left로 대체하였습니다. MouseMove 이벤트는 pictureBox2 위에서 마우스 포인터를 움직일 때마다 발생합니다. if문을 생략한다면, 마우스를 움직이는 것만으로도 화살표들이 생성됩니다. 마우스 좌 클릭 상태로 움직이면 화살표들이 연속적으로 생성됩니다.</p>\n\n<p><a href=\"/assets/images/C/ch5/5.png\"><img src=\"/assets/images/C/ch6/5.png\" alt=\"5\" /></a></p>\n\n<p>마우스 좌, 우 클릭을 통하여 화살표들을 생성할 수 있습니다. <code class=\"highlighter-rouge\">DrawLine</code>이나 <code class=\"highlighter-rouge\">DrawEllipse</code> 등을 이용하여 다양한 모양도 그릴 수 있습니다.</p>\n\n<h2 id=\"코드\">코드</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">radioButton1_CheckedChanged</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">pictureBox2</span><span class=\"p\">.</span><span class=\"n\">Image</span> <span class=\"p\">=</span> <span class=\"k\">null</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">radioButton2_CheckedChanged</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">pictureBox2</span><span class=\"p\">.</span><span class=\"n\">Image</span> <span class=\"p\">=</span> <span class=\"n\">pictureBox1</span><span class=\"p\">.</span><span class=\"n\">Image</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">pictureBox2_MouseDown</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">MouseEventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Button</span> <span class=\"p\">==</span> <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Windows</span><span class=\"p\">.</span><span class=\"n\">Forms</span><span class=\"p\">.</span><span class=\"n\">MouseButtons</span><span class=\"p\">.</span><span class=\"n\">Right</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">Graphics</span> <span class=\"n\">grp</span> <span class=\"p\">=</span> <span class=\"n\">pictureBox2</span><span class=\"p\">.</span><span class=\"nf\">CreateGraphics</span><span class=\"p\">();</span>\n                <span class=\"n\">Pen</span> <span class=\"n\">pen</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Pen</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">.</span><span class=\"n\">SteelBlue</span><span class=\"p\">);</span>\n                <span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">pen</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">-</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">-</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"m\">6</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span> <span class=\"c1\">//  ↘</span>\n                <span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">pen</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">-</span> <span class=\"m\">14</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"m\">6</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span>     <span class=\"c1\">// --→</span>\n                <span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">pen</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">-</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">+</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"m\">6</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span> <span class=\"c1\">//  ↗</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">pictureBox2_MouseMove</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">MouseEventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Button</span> <span class=\"p\">==</span> <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Windows</span><span class=\"p\">.</span><span class=\"n\">Forms</span><span class=\"p\">.</span><span class=\"n\">MouseButtons</span><span class=\"p\">.</span><span class=\"n\">Left</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">Graphics</span> <span class=\"n\">grp</span> <span class=\"p\">=</span> <span class=\"n\">pictureBox2</span><span class=\"p\">.</span><span class=\"nf\">CreateGraphics</span><span class=\"p\">();</span>\n                <span class=\"n\">Pen</span> <span class=\"n\">pen</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Pen</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">.</span><span class=\"n\">SteelBlue</span><span class=\"p\">);</span>\n                <span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">pen</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">-</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">-</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"m\">6</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span> <span class=\"c1\">//  ↘</span>\n                <span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">pen</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">-</span> <span class=\"m\">14</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"m\">6</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span>     <span class=\"c1\">// --→</span>\n                <span class=\"n\">grp</span><span class=\"p\">.</span><span class=\"nf\">DrawLine</span><span class=\"p\">(</span><span class=\"n\">pen</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">-</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span> <span class=\"p\">+</span> <span class=\"m\">10</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">X</span> <span class=\"p\">+</span> <span class=\"m\">6</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">);</span> <span class=\"c1\">//  ↗</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 5강 - RadioButton &amp; CheckBox",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-5/",
      "date"     : "2017-07-30 00:00:00 +0900",
  "content"   : "<h4 id=\"프로젝트-구성\">프로젝트 구성</h4>\n<p><a href=\"/assets/images/C/ch5/1.png\"><img src=\"/assets/images/C/ch5/1.png\" alt=\"1\" /></a>\n도구상자에서 <code class=\"highlighter-rouge\">Group Box</code>, <code class=\"highlighter-rouge\">RadioButton</code>, <code class=\"highlighter-rouge\">CheckBox</code>, <code class=\"highlighter-rouge\">Button</code>을 <code class=\"highlighter-rouge\">Form1</code>에 생성합니다. 위의 이미지와 같이 배치합니다.</p>\n\n<p><a href=\"/assets/images/C/ch5/2.png\"><img src=\"/assets/images/C/ch5/2.png\" alt=\"2\" /></a>\n속성을 다음과 같이 설정합니다.</p>\n<ol>\n  <li>\n    <p>GroupBox (1번)</p>\n\n    <ul>\n      <li>Text : 결제방식</li>\n    </ul>\n  </li>\n  <li>\n    <p>RadioButton (1번)</p>\n\n    <ul>\n      <li>Text : 현금</li>\n    </ul>\n  </li>\n  <li>\n    <p>RadioButton (2번)</p>\n\n    <ul>\n      <li>Text : 카드</li>\n    </ul>\n  </li>\n  <li>\n    <p>RadioButton (3번)</p>\n\n    <ul>\n      <li>Text : 쿠폰</li>\n    </ul>\n  </li>\n  <li>\n    <p>GroupBox (1번)</p>\n\n    <ul>\n      <li>Text : 현금</li>\n    </ul>\n  </li>\n  <li>\n    <p>CheckBox (1번)</p>\n\n    <ul>\n      <li>Text : 짜장</li>\n    </ul>\n  </li>\n  <li>\n    <p>CheckBox (2번)</p>\n\n    <ul>\n      <li>Text : 짬뽕</li>\n    </ul>\n  </li>\n  <li>\n    <p>CheckBox (3번)</p>\n\n    <ul>\n      <li>Text : 탕수육</li>\n    </ul>\n  </li>\n  <li>\n    <p>RadioButton (4번)</p>\n\n    <ul>\n      <li>Text : 상태</li>\n      <li>AutoCheck : False</li>\n    </ul>\n  </li>\n  <li>\n    <p>Check (4번)</p>\n\n    <ul>\n      <li>Text : 활성화</li>\n    </ul>\n  </li>\n  <li>\n    <p>Button</p>\n\n    <ul>\n      <li>Text : 제출</li>\n    </ul>\n  </li>\n</ol>\n\n<ul>\n  <li>Tip : RadioButton의 AutoCheck는 클릭으로 단추의 상태가 변경되지 않습니다.</li>\n</ul>\n\n<p><a href=\"/assets/images/C/ch5/3.png\"><img src=\"/assets/images/C/ch5/3.png\" alt=\"3\" /></a>\ncheckBox4를 더블클릭하여 <strong>이벤트</strong>를 생성합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">checkBox4_CheckedChanged</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">checkBox4</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">==</span> <span class=\"k\">true</span><span class=\"p\">)</span>\n\t<span class=\"p\">{</span>\n\t\t<span class=\"n\">radioButton4</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n\t\t<span class=\"n\">groupBox1</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n\t\t<span class=\"n\">groupBox2</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n\t<span class=\"p\">}</span>\n\t<span class=\"k\">else</span>\n\t<span class=\"p\">{</span>\n\t\t<span class=\"n\">radioButton4</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n\t\t<span class=\"n\">groupBox1</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n\t\t<span class=\"n\">groupBox2</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n\t<span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>if (checkBox4.Checked == true)\n</code></pre></div></div>\n\n<p>CheckBox4가 활성화 되었을 때 아래의 문장을 실행시킵니다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>radioButton4.Checked = true;\ngroupBox1.Enabled = true;\ngroupBox2.Enabled = true;\n</code></pre></div></div>\n\n<p>radioButton4의 체크 상태를 활성화 시킵니다.\ngroupBox1, groupBox2 컨트롤을 사용 가능상태로 만듭니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">Visible</code>은 컨트롤의 표시 여부입니다. False시 Form에 보여지지 않습니다.</li>\n</ul>\n\n<p><a href=\"/assets/images/C/ch5/4.png\"><img src=\"/assets/images/C/ch5/4.png\" alt=\"4\" /></a></p>\n\n<p>위의 코드를 입력 시, 다음과 같은 형태가 됩니다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>string rad =\"미선택\";\nint cost = 0;\n</code></pre></div></div>\n\n<p>상단에 rad 변수와 cost라는 변수를 생성하고 초기값을 부여합니다.</p>\n\n<ul>\n  <li>Tip : 상단의 변수는 같은 폼 안에서 변수가 변경되도 계속 업데이트됩니다.</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button1_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">radioButton1</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">==</span> <span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"n\">rad</span> <span class=\"p\">=</span> <span class=\"s\">\"결제:현금\"</span><span class=\"p\">;</span>\n\t<span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">radioButton2</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">==</span> <span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"n\">rad</span> <span class=\"p\">=</span> <span class=\"s\">\"결제:카드\"</span><span class=\"p\">;</span>\n\t<span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">radioButton3</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">==</span> <span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"n\">rad</span> <span class=\"p\">=</span> <span class=\"s\">\"결제:쿠폰\"</span><span class=\"p\">;</span>\n\t<span class=\"k\">else</span> <span class=\"n\">rad</span> <span class=\"p\">=</span> <span class=\"s\">\"미선택\"</span><span class=\"p\">;</span>\n\n\t<span class=\"n\">cost</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">checkBox1</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">==</span> <span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"n\">cost</span> <span class=\"p\">+=</span> <span class=\"m\">3500</span><span class=\"p\">;</span>\n\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">checkBox2</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">==</span> <span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"n\">cost</span> <span class=\"p\">+=</span> <span class=\"m\">4000</span><span class=\"p\">;</span>\n\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">checkBox3</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">==</span> <span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"n\">cost</span> <span class=\"p\">+=</span> <span class=\"m\">10000</span><span class=\"p\">;</span>\n\n\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">rad</span> <span class=\"p\">==</span> <span class=\"s\">\"미선택\"</span> <span class=\"p\">||</span> <span class=\"n\">cost</span> <span class=\"p\">==</span> <span class=\"m\">0</span><span class=\"p\">)</span> <span class=\"k\">return</span><span class=\"p\">;</span>\n\t<span class=\"n\">MessageBox</span><span class=\"p\">.</span><span class=\"nf\">Show</span><span class=\"p\">(</span><span class=\"n\">rad</span> <span class=\"p\">+</span> <span class=\"s\">\" 가격:\"</span> <span class=\"p\">+</span> <span class=\"n\">cost</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>radioButton이 체크될 때마다, rad라는 변수에 값을 변경하여 저장합니다.\nelse if는 맨 위의 if가 true값이 아닐 때 실행합니다. else는 모든 값이 true가 아닐 때 실행됩니다. checkBox 또한 같습니다. \n+= 는 <strong>누적적으로 연산</strong>합니다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>if (rad == \"미선택\" || cost == 0) return;\nMessageBox.Show(rad + \" 가격:\" + cost);\n</code></pre></div></div>\n\n<p>rad가 미선택이거나 cost가 0일 경우 return하여 마지막 문장까지 진행하지 않고 도중에 종료합니다.</p>\n\n<ul>\n  <li>Tip : <code class=\"highlighter-rouge\">or (||)</code>는 둘 중 하나만 참 값이여도 true로 반환하며, <code class=\"highlighter-rouge\">and (&amp;&amp;)</code>는 둘 다 참 값이여야 true로 반환합니다.</li>\n</ul>\n\n<p><code class=\"highlighter-rouge\">MessageBox.Show</code>는 메세지 박스를 띄웁니다. 소괄호 안에 들어갈 문구가 입력됩니다.</p>\n\n<p><a href=\"/assets/images/C/ch5/5.png\"><img src=\"/assets/images/C/ch5/5.png\" alt=\"5\" /></a></p>\n\n<h2 id=\"코드\">코드</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.ComponentModel</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Data</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Drawing</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Threading.Tasks</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Windows.Forms</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"kt\">string</span> <span class=\"n\">rad</span> <span class=\"p\">=</span><span class=\"s\">\"미선택\"</span><span class=\"p\">;</span>\n        <span class=\"kt\">int</span> <span class=\"n\">cost</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">checkBox4_CheckedChanged</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">checkBox4</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">==</span> <span class=\"k\">true</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">radioButton4</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n                <span class=\"n\">groupBox1</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n                <span class=\"n\">groupBox2</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">else</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">radioButton4</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n                <span class=\"n\">groupBox1</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n                <span class=\"n\">groupBox2</span><span class=\"p\">.</span><span class=\"n\">Enabled</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n            \n        <span class=\"p\">}</span>\n\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">button1_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">radioButton1</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">==</span> <span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"n\">rad</span> <span class=\"p\">=</span> <span class=\"s\">\"결제:현금\"</span><span class=\"p\">;</span>\n            <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">radioButton2</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">==</span> <span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"n\">rad</span> <span class=\"p\">=</span> <span class=\"s\">\"결제:카드\"</span><span class=\"p\">;</span>\n            <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">radioButton3</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">==</span> <span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"n\">rad</span> <span class=\"p\">=</span> <span class=\"s\">\"결제:쿠폰\"</span><span class=\"p\">;</span>\n            <span class=\"k\">else</span> <span class=\"n\">rad</span> <span class=\"p\">=</span> <span class=\"s\">\"미선택\"</span><span class=\"p\">;</span>\n\n            <span class=\"n\">cost</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">checkBox1</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">==</span> <span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"n\">cost</span> <span class=\"p\">+=</span> <span class=\"m\">3500</span><span class=\"p\">;</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">checkBox2</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">==</span> <span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"n\">cost</span> <span class=\"p\">+=</span> <span class=\"m\">4000</span><span class=\"p\">;</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">checkBox3</span><span class=\"p\">.</span><span class=\"n\">Checked</span> <span class=\"p\">==</span> <span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"n\">cost</span> <span class=\"p\">+=</span> <span class=\"m\">10000</span><span class=\"p\">;</span>\n\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">rad</span> <span class=\"p\">==</span> <span class=\"s\">\"미선택\"</span> <span class=\"p\">||</span> <span class=\"n\">cost</span> <span class=\"p\">==</span> <span class=\"m\">0</span><span class=\"p\">)</span> <span class=\"k\">return</span><span class=\"p\">;</span>\n            <span class=\"n\">MessageBox</span><span class=\"p\">.</span><span class=\"nf\">Show</span><span class=\"p\">(</span><span class=\"n\">rad</span> <span class=\"p\">+</span> <span class=\"s\">\" 가격:\"</span> <span class=\"p\">+</span> <span class=\"n\">cost</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 4강 - ComboBox &amp; ListBox",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-4/",
      "date"     : "2017-07-25 00:00:00 +0900",
  "content"   : "<h4 id=\"프로젝트-구성\">프로젝트 구성</h4>\n<p><a href=\"/assets/images/C/ch4/1.png\"><img src=\"/assets/images/C/ch4/1.png\" alt=\"1\" /></a>\n도구상자에서 <code class=\"highlighter-rouge\">ComboBox</code>, <code class=\"highlighter-rouge\">ListBox</code>, <code class=\"highlighter-rouge\">Label</code>을 <code class=\"highlighter-rouge\">Form1</code>에 생성합니다. 위의 이미지와 같이 배치합니다.</p>\n\n<p><a href=\"/assets/images/C/ch4/2.png\"><img src=\"/assets/images/C/ch4/2.png\" alt=\"2\" /></a>\n속성을 다음과 같이 설정합니다.</p>\n<ol>\n  <li>\n    <p>ComboBox</p>\n\n    <ul>\n      <li>(name) : cmbx</li>\n      <li>Text : 선택하세요.</li>\n      <li>Items : 1번 목록, 2번 목록, 3번 목록, 4번 목록</li>\n    </ul>\n  </li>\n  <li>\n    <p>ListBox</p>\n\n    <ul>\n      <li>(name) : ltbx</li>\n    </ul>\n  </li>\n  <li>\n    <p>Label (1번)</p>\n\n    <ul>\n      <li>(name) : lbl_select</li>\n      <li>Text : 선택 :</li>\n    </ul>\n  </li>\n  <li>\n    <p>Label (2번)</p>\n\n    <ul>\n      <li>(name) : lbl_info</li>\n      <li>Text : -</li>\n    </ul>\n  </li>\n</ol>\n\n<ul>\n  <li>Tip : ListBox의 Items는 한 줄에 하나씩 입력해야 목록으로 저장됩니다.</li>\n</ul>\n\n<p><a href=\"/assets/images/C/ch4/3.png\"><img src=\"/assets/images/C/ch4/3.png\" alt=\"3\" /></a>\nComboBox를 더블클릭하여 <strong>이벤트</strong>를 생성합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">cmbx_SelectedIndexChanged</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n\t<span class=\"n\">ltbx</span><span class=\"p\">.</span><span class=\"n\">Items</span><span class=\"p\">.</span><span class=\"nf\">Clear</span><span class=\"p\">();</span>\n\t\n\t<span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"n\">lst1</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"s\">\"1-1번\"</span><span class=\"p\">,</span> <span class=\"s\">\"1-2번\"</span><span class=\"p\">,</span> <span class=\"s\">\"1-3번\"</span> <span class=\"p\">};</span>\n\t<span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"n\">lst2</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"s\">\"2-1번\"</span><span class=\"p\">,</span> <span class=\"s\">\"2-2번\"</span><span class=\"p\">,</span> <span class=\"s\">\"2-3번\"</span> <span class=\"p\">};</span>\t\n\t<span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"n\">lst3</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"s\">\"3-1번\"</span><span class=\"p\">,</span> <span class=\"s\">\"3-2번\"</span><span class=\"p\">,</span> <span class=\"s\">\"3-3번\"</span> <span class=\"p\">};</span>\n\t<span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"n\">lst4</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"s\">\"4-1번\"</span><span class=\"p\">,</span> <span class=\"s\">\"4-2번\"</span><span class=\"p\">,</span> <span class=\"s\">\"4-3번\"</span> <span class=\"p\">};</span>\n\n\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">cmbx</span><span class=\"p\">.</span><span class=\"n\">SelectedIndex</span> <span class=\"p\">==</span> <span class=\"m\">0</span><span class=\"p\">)</span> <span class=\"n\">ltbx</span><span class=\"p\">.</span><span class=\"n\">Items</span><span class=\"p\">.</span><span class=\"nf\">AddRange</span><span class=\"p\">(</span><span class=\"n\">lst1</span><span class=\"p\">);</span>\n\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">cmbx</span><span class=\"p\">.</span><span class=\"n\">SelectedIndex</span> <span class=\"p\">==</span> <span class=\"m\">1</span><span class=\"p\">)</span> <span class=\"n\">ltbx</span><span class=\"p\">.</span><span class=\"n\">Items</span><span class=\"p\">.</span><span class=\"nf\">AddRange</span><span class=\"p\">(</span><span class=\"n\">lst2</span><span class=\"p\">);</span>\n\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">cmbx</span><span class=\"p\">.</span><span class=\"n\">SelectedItem</span> <span class=\"p\">==</span> <span class=\"s\">\"3번 목록\"</span><span class=\"p\">)</span> <span class=\"n\">ltbx</span><span class=\"p\">.</span><span class=\"n\">Items</span><span class=\"p\">.</span><span class=\"nf\">AddRange</span><span class=\"p\">(</span><span class=\"n\">lst3</span><span class=\"p\">);</span>\n\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">cmbx</span><span class=\"p\">.</span><span class=\"n\">SelectedIndex</span> <span class=\"p\">==</span> <span class=\"m\">3</span><span class=\"p\">)</span> <span class=\"n\">ltbx</span><span class=\"p\">.</span><span class=\"n\">Items</span><span class=\"p\">.</span><span class=\"nf\">AddRange</span><span class=\"p\">(</span><span class=\"n\">lst4</span><span class=\"p\">);</span>\n\n<span class=\"p\">}</span></code></pre></figure>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ltbx.Items.Clear();\n</code></pre></div></div>\n\n<p>ListBox의 목록을 초기화 시키는 코드입니다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>string[] lst1 = { \"1-1번\", \"1-2번\", \"1-3번\" };\nstring[] lst2 = { \"2-1번\", \"2-2번\", \"2-3번\" };\nstring[] lst3 = { \"3-1번\", \"3-2번\", \"3-3번\" };\nstring[] lst4 = { \"4-1번\", \"4-2번\", \"4-3번\" };\n</code></pre></div></div>\n\n<p>lst라는 배열을 생성하여 ListBox에 들어갈 목록을 만듭니다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>if(cmbx.SelectedIndex == 0) ltbx.Items.AddRange(lst1);\n</code></pre></div></div>\n\n<p>선택된 Index를 비교하여 ListBox의 목록에 한 번에 저장합니다.\n여기서 Index의 번호는 1번이 아니라 0번부터 시작합니다. 즉, 맨 위 목록이 0번 입니다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>if(cmbx.SelectedItem == \"3번 목록\") ltbx.Items.AddRange(lst3);\n</code></pre></div></div>\n\n<p>Index의 값으로 비교가 아닌 선택된 <strong>Item의 이름으로 비교하는 방법</strong>입니다. 목록이 너무 많은 경우 직관적으로 코딩할 수 있습니다.</p>\n\n<ul>\n  <li>Tip : 목록의 이름이 일치하지 않으면 생성되지 않습니다.</li>\n</ul>\n\n<p><a href=\"/assets/images/C/ch4/4.png\"><img src=\"/assets/images/C/ch4/4.png\" alt=\"4\" /></a>\nListBox에서 선택된 Item을 Label에 띄우는 작업입니다. ListBox를 더블클릭하여 <strong>이벤트</strong>를 생성합니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">ltbx_SelectedIndexChanged</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n\t<span class=\"n\">lbl_info</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">Convert</span><span class=\"p\">.</span><span class=\"nf\">ToString</span><span class=\"p\">(</span><span class=\"n\">ltbx</span><span class=\"p\">.</span><span class=\"n\">SelectedItem</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>ListBox에서 선택된 Item의 Index가 바뀔 때 마다 실행되는 이벤트입니다.\n그 때 마다, lbl_info의 Text를 ListBox에서 선택된 Item의 이름으로 변합니다.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Convert.ToString(ltbx.SelectedItem);\n</code></pre></div></div>\n\n<p>Convert.ToString()은 문자열(string) 형식으로 변환해줍니다. 변환해주지 않으면 작동되지 않습니다.</p>\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 3강 - 프로젝트 구성",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-3/",
      "date"     : "2017-07-23 00:00:00 +0900",
  "content"   : "<h4 id=\"프로젝트-구성\">프로젝트 구성</h4>\n<p><a href=\"/assets/images/C/ch3/1.png\"><img src=\"/assets/images/C/ch3/1.png\" alt=\"1\" /></a>\n도구상자에서 <code class=\"highlighter-rouge\">Label</code>, <code class=\"highlighter-rouge\">TextBox</code>, <code class=\"highlighter-rouge\">Button</code>을 <code class=\"highlighter-rouge\">Form1</code>에 끌어 놓습니다. (drag-and-drop) 또는 <strong>더블클릭</strong>을 하여 Form1에 생성시킬 수 있습니다.</p>\n\n<ul>\n  <li>Tip : 검색 도구 상자 창에서 <strong>검색</strong>하여 찾을 수 있습니다.</li>\n</ul>\n\n<p><a href=\"/assets/images/C/ch3/2.png\"><img src=\"/assets/images/C/ch3/2.png\" alt=\"2\" /></a>\nLabel, TextBox, Button을 다음과 같이 배치합니다. TextBox의 우측 모서리의 화살표를 눌러 탭을 확장시키고 <code class=\"highlighter-rouge\">MutltiLine</code>을 <strong>활성화</strong>시킵니다. TextBox의 크기는 속성에서 바꾸어 주거나, 마우스를 이용하여 크기를 바꿀 수 있습니다.</p>\n\n<ul>\n  <li>Tip : MultiLine은 TextBox 컨트롤의 텍스트를 <strong>두 줄 이상</strong>으로 확장 할 수 있게합니다.</li>\n</ul>\n\n<p><a href=\"/assets/images/C/ch3/3.png\"><img src=\"/assets/images/C/ch3/3.png\" alt=\"3\" /></a>\nLabel의 속성에서 (NAME)을 <code class=\"highlighter-rouge\">lbl_show</code>로 바꾸어 줍니다. 또한 TextBox와 Button의 이름을 각각 <code class=\"highlighter-rouge\">txt</code>, <code class=\"highlighter-rouge\">btn_show</code>로, Button의 Text는 <code class=\"highlighter-rouge\">Send</code>로 바꾸어 줍니다.</p>\n\n<ul>\n  <li>\n    <p>Tip : 컨트롤의 이름을 바꾸는 이유는 같은 컨트롤을 여러개 사용할 경우, <strong>가독성</strong>을 높이기 위해서 바꾸어줍니다. 만약, Label을 여러개 사용할 경우 Label1, Label2, Label3 … 으로 구별이 어려워집니다. 각각의 이름을 부여하여 <strong>구별하기 쉽게 합니다.</strong></p>\n  </li>\n  <li>\n    <p>Tip : <strong>컨트롤의 이름은 중복할 수 없으며, 대소문자를 구별합니다.</strong></p>\n  </li>\n</ul>\n\n<p><a href=\"/assets/images/C/ch3/4.png\"><img src=\"/assets/images/C/ch3/4.png\" alt=\"4\" /></a>\nbtn_show Button을 더블 클릭합니다. 더블 클릭 할 경우 자동적으로 btn_show에 <strong>이벤트</strong>가 <strong>적용</strong>되며 코드창으로 이동됩니다.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">btn_show_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">lbl_show</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">txt</span><span class=\"p\">.</span><span class=\"n\">Text</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p><a href=\"/assets/images/C/ch3/5.png\"><img src=\"/assets/images/C/ch3/5.png\" alt=\"5\" /></a>\nTextBox에 글을 쓰고 Send Button을 누르면 Label에 입력이 됩니다. Multiline을 활성화 시켜서 2줄 이상도 원활하게 입력됩니다.</p>\n\n<hr />\n<h4 id=\"프로그램-알아보기\">프로그램 알아보기</h4>\n<h3 id=\"using-system\">using System</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span></code></pre></figure>\n\n<ul>\n  <li>\n    <p>using : namespace 사용 선언 키워드</p>\n  </li>\n  <li>\n    <p>System : C#에서 기본적으로 필요한 Class를 담고있는 namespace</p>\n  </li>\n  <li>\n    <p>세미콜론(;) : 문장의 끝을 알리는 기호</p>\n  </li>\n</ul>\n\n<h3 id=\"namespace\">namespace</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n\n<span class=\"p\">}</span></code></pre></figure>\n\n<ul>\n  <li>\n    <p>namespace는 성격이 비슷한 <code class=\"highlighter-rouge\">class(클래스)</code>, <code class=\"highlighter-rouge\">struct(구조체)</code>, <code class=\"highlighter-rouge\">interface(인터페이스)</code>, <code class=\"highlighter-rouge\">delegate(델리게이트)</code>, <code class=\"highlighter-rouge\">열거 형식</code> 등을 묶는 역할</p>\n  </li>\n  <li>\n    <p>소리를 재생시키고 싶다면, namespace에 <code class=\"highlighter-rouge\">using System.Media;</code>가 추가되어야 합니다.</p>\n  </li>\n</ul>\n\n<h3 id=\"class--initializecomponent\">Class &amp; InitializeComponent</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">namespace</span> <span class=\"nn\">test</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">partial</span> <span class=\"k\">class</span> <span class=\"nc\">Form1</span> <span class=\"p\">:</span> <span class=\"n\">Form</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"nf\">Form1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"nf\">InitializeComponent</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">btn_show_Click</span><span class=\"p\">(</span><span class=\"kt\">object</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">EventArgs</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">lbl_show</span><span class=\"p\">.</span><span class=\"n\">Text</span> <span class=\"p\">=</span> <span class=\"n\">txt</span><span class=\"p\">.</span><span class=\"n\">Text</span><span class=\"p\">;</span>\n\t<span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<ul>\n  <li>\n    <p>class는 <strong>‘data + method’</strong>로 이루어져 있으며, C#을 구성하는 기본 단위</p>\n  </li>\n  <li>\n    <p>InitializeComponent는 디자이너에 정의된 구성 요소를 적용시키는 method이다. 이 method가 없다면 Form에 <strong>컨트롤이 적용되지 않는다.</strong></p>\n  </li>\n</ul>\n\n<h3 id=\"진입점-entry-point\">진입점 (Entry Point)</h3>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\" data-lang=\"c#\"><span class=\"k\">static</span> <span class=\"k\">void</span> <span class=\"nf\">Main</span> <span class=\"p\">(</span> <span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"n\">args</span> <span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    \n<span class=\"p\">}</span></code></pre></figure>\n\n<ul>\n  <li>\n    <p><code class=\"highlighter-rouge\">static 자리</code> : 한정자</p>\n\n    <ol>\n      <li>\n        <p><code class=\"highlighter-rouge\">public</code> : 부모 클래스, 자식클래스에서 모두 접근 가능</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">private</code> : 부모 클래스에서만 접근 가능, 자식 클래스는 접근 불가</p>\n      </li>\n      <li>\n        <p><code class=\"highlighter-rouge\">protected</code> : 부모 클래스는 private 형태, 자식 클래스에서는 public 형태, 그 이외에는 private 형태</p>\n      </li>\n    </ol>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">void 자리</code> : 반환 형식, void는 반환하지 않음, int 정수 등</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">Main 자리</code> : 메소드 이름</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">string[] args 자리</code> : 매개 변수, 사용될 외부의 변수</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">{ } 자리</code> : 코드 블록</p>\n  </li>\n</ul>\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 2강 - 프로젝트 생성",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-2/",
      "date"     : "2017-07-21 00:00:00 +0900",
  "content"   : "<h4 id=\"프로젝트-생성\">프로젝트 생성</h4>\n<p><a href=\"/assets/images/C/ch2/1.PNG\"><img src=\"/assets/images/C/ch2/1.PNG\" alt=\"1\" /></a>\nC#을 사용하기 위해서는 ‘Visual Studio 2017’을 실행시킵니다.\n그 후, <strong>파일(F) → 새로 만들기(N) → 프로젝트(P)</strong> 를 통하여 새로운 프로젝트를 생성할 수 있습니다.</p>\n\n<p><br />\n<a href=\"/assets/images/C/ch2/2.png\"><img src=\"/assets/images/C/ch2/2.png\" alt=\"2\" /></a>\n현재 사용하려는 템플릿은 C#이기 때문에 <strong>템플릿 → Visual C# → Windows Forms 앱(.NET Framework)</strong>을 선택해주고 이름과 저장경로를 설정합니다.\n<br /><br /></p>\n\n<hr />\n<h4 id=\"프로젝트-알아보기\">프로젝트 알아보기</h4>\n\n<p><a href=\"/assets/images/C/ch2/3.png\"><img src=\"/assets/images/C/ch2/3.png\" alt=\"3\" /></a></p>\n\n<ol>\n  <li>\n    <p>메뉴창</p>\n\n    <ul>\n      <li>프로젝트를 저장, 클래스 추가, 솔루션, 디버깅 등을 할 수 있는 메뉴창입니다. 주로 <strong>파일(F), 프로젝트(P), 디버그(D)</strong> 정도만 익히고 계셔도 무방합니다. <strong>시작 버튼 또는 F5 키로 프로그램을 실행</strong>시킬 수 있습니다.</li>\n    </ul>\n  </li>\n  <li>\n    <p>탭</p>\n\n    <ul>\n      <li>코드, 디자이너, program.cs 등을 작업하는 <strong>메인 작업 창</strong>입니다. 이 탭에서 옮겨가며 작업을 편하게 할 수 있습니다.</li>\n    </ul>\n  </li>\n  <li>\n    <p>도구상자</p>\n\n    <ul>\n      <li>버튼, 체크박스, 라벨 등의 <strong>도구가 담겨져 있는 창</strong>입니다. 이곳에서 프로그램 생성에 필요한 도구들을 찾아 사용합니다.</li>\n    </ul>\n  </li>\n  <li>\n    <p>디자이너</p>\n\n    <ul>\n      <li>폼의 디자인 등을 설정 할 수 있는 <strong>디자인 창</strong>입니다. 메인 화면이며 <strong>코드 창</strong>으로도 바뀌기도 합니다. 프로젝트의 속성 또한 이 창에서 보여집니다.</li>\n    </ul>\n  </li>\n  <li>\n    <p>솔루션 탐색기</p>\n\n    <ul>\n      <li>외부에서 추가한 이미지, 재생 파일 등을 <strong>프로그램에 등록</strong>할 수 있으며 폼이나 클래스 창을 열 수 있는 창입니다.</li>\n    </ul>\n  </li>\n  <li>\n    <p>속성</p>\n\n    <ul>\n      <li>폼이나 도구상자에서 생성된 도구 등의 <strong>속성이나 이벤트</strong> 등을 부여할 수 있습니다. 색상이나 폰트, 크기 등을 변경 가능하며 이벤트는 클릭되었을 때, 폼이 로드되었을 때 등 다양한 조건의 이벤트를 부여할 수 있습니다.</li>\n    </ul>\n  </li>\n</ol>\n\n<p>이외에도 출력탭, 오류 목록 탭등이 있습니다. 코드 실행시 <code class=\"highlighter-rouge\">console.write()</code>를 활용하거나 코드 작성 시 <strong>컴파일러 오류</strong> 등을 확인할 수 있습니다.</p>\n\n"
    } ,
  
    {
      "title"    : "C# 강좌 : 제 1강 - 소개 및 설치",
      "category" : "",
      "tags"     : "C#",
      "url"      : "/posts/C-1/",
      "date"     : "2017-07-20 00:00:00 +0900",
  "content"   : "<h4 id=\"c-이란\">C# 이란?</h4>\n<p><code class=\"highlighter-rouge\">객체 지향 프로그래밍(OOP)</code>이 가능하도록 C를 개선한 프로그래밍 언어입니다. 간단히 말한다면, C++와 visual basic 을 결합하여 만든 프로그래밍언어입니다. 기존의 C 코드를 그대로 사용할 수 있는데다 객체 지향 프로그래밍의 <strong>생산성</strong>을 얻을 수 있다는 장점이 있습니다.\n<br /><br /></p>\n\n<p><code class=\"highlighter-rouge\">객체 지향 프로그래밍(Object Oriented Programming)</code> : 코드 내의 모든 것을 객체(Object)로 표현하고자 하는 프로그래밍 패러다임</p>\n\n<p><code class=\"highlighter-rouge\">객체(Object)</code> : 세상의 모든 것(사람, 사물, 정보 등)을 지칭하는 단어</p>\n\n<p><br /><br />\nMicrosoft Visual Studio를 통하여 C#을 사용하실 수 있습니다. 현재 강좌는 Visual Studio 2017을 기반으로 진행하겠습니다.\n<br /><br /></p>\n\n<hr />\n<h4 id=\"c-설치\">C# 설치</h4>\n\n<p>Microsoft의 <a href=\"https://www.visualstudio.com/ko/\">Visual Studio</a>에서 무료로 다운받으실 수 있습니다.\n<a href=\"/assets/images/C/ch1/1.png\"><img src=\"/assets/images/C/ch1/1.png\" alt=\"visual\" /></a>\nVisual Studio Community 2017 : 학생, 오픈 소스 및 개인 개발자를 위한 모든 기능을 갖춘 IDE를 설치하시면 됩니다.</p>\n\n"
    } 
  
  ,
  
   {
     
        "title"    : "404",
        "category" : "",
        "tags"     : "",
        "url"      : "/404.html",
        "date"     : "",
  "content"   : null
     
   } ,
  
   {
     
        "title"    : "Search",
        "category" : "",
        "tags"     : "",
        "url"      : "/search/",
        "date"     : "11/20/2017 3:37:34 PM",
  "content"   : null
     
   } ,
  
   {
     
        "title"    : "About",
        "category" : "",
        "tags"     : "",
        "url"      : "/about",
        "date"     : "7/20/2017 3:37:34 PM",
  "content"   : null
     
   } ,
  
   {
     
        "title"    : "Category",
        "category" : "",
        "tags"     : "",
        "url"      : "/posts/",
        "date"     : "",
  "content"   : null
     
   } ,
  
   {
     
        "title"    : "Exercise",
        "category" : "",
        "tags"     : "",
        "url"      : "/exercise/",
        "date"     : "9/12/2017 3:37:34 PM",
  "content"   : null
     
   } ,
  
   {
     
   } ,
  
   {
     
        "title"    : "YUN DAE HEE",
        "category" : "",
        "tags"     : "",
        "url"      : "/",
        "date"     : "",
  "content"   : null
     
   } ,
  
   {
     
   } ,
  
   {
     
   } 
  
]

